/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../dist/mage.js":
/*!*********************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/dist/mage.js ***!
  \*********************************************************/
/*! exports provided: AmbientLight, AmbientSound, Atmosphere, Audio, BackgroundSound, BaseScript, Box, Camera, Color, Config, Controls, Cube, CurveLine, Cylinder, DirectionalSound, Element, EventDispatcher, FEATURES, Features, GameRunner, Grid, HemisphereLight, Images, Input, Level, LightLoader, Line, MeshLoader, Mirror, Models, Ocean, PARTICLES, ParticlEmitter, Particles, Partykals, Physics, Plane, PointLight, PostProcessing, Provider, Router, Scene, Scripts, Shader, Skybox, Sound, Sphere, SpotLight, Sprite, Stats, SunLight, Universe, Vector3, author, connect, constants, functions, math, store, strings, uuid, workers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global, process, module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AmbientLight", function() { return LightAmbient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AmbientSound", function() { return AmbientSound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Atmosphere", function() { return Atmosphere; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Audio", function() { return Audio$2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BackgroundSound", function() { return BackgroundSound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseScript", function() { return BaseScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Box", function() { return Box; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Camera", function() { return Camera$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return Color$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Config", function() { return Config$2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Controls", function() { return Controls$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cube", function() { return Cube; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurveLine", function() { return CurveLine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cylinder", function() { return Cylinder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DirectionalSound", function() { return DirectionalSound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Element", function() { return Element; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventDispatcher", function() { return EventDispatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FEATURES", function() { return FEATURES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Features", function() { return Features$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GameRunner", function() { return GameRunner$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HemisphereLight", function() { return HemisphereLight$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Images", function() { return Images$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Input", function() { return Input$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Level", function() { return Level; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LightLoader", function() { return LightLoader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Line", function() { return Line$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeshLoader", function() { return MeshLoader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mirror", function() { return Mirror; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Models", function() { return Models$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ocean", function() { return Ocean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PARTICLES", function() { return PARTICLES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParticlEmitter", function() { return ParticleEmitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Particles", function() { return Particles$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Partykals", function() { return index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Physics", function() { return Physics$2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Plane", function() { return Plane$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointLight", function() { return PointLight$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostProcessing", function() { return PostProcessing$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Provider", function() { return Provider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return Router$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scene", function() { return Scene$2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scripts", function() { return Scripts$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Shader", function() { return Shader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Skybox", function() { return Skybox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sound", function() { return Sound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sphere", function() { return Sphere$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpotLight", function() { return SpotLight$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sprite", function() { return Sprite$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Stats", function() { return Stats$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SunLight", function() { return SunLight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Universe", function() { return Universe$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Vector3", function() { return Vector3$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "author", function() { return author$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connect", function() { return connect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "constants", function() { return constants; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "functions", function() { return functions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "math", function() { return math; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "store", function() { return index$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "strings", function() { return strings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uuid", function() { return uuid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "workers", function() { return workers; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6__);
function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _typeof(obj){if(typeof Symbol==="function"&&_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(Symbol.iterator)==="symbol"){_typeof=function _typeof(obj){return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(obj);};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(obj);};}return _typeof(obj);}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _possibleConstructorReturn(self,call){if(call&&(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(call)==="object"||typeof call==="function")){return call;}return _assertThisInitialized(self);}function _superPropBase(object,property){while(!Object.prototype.hasOwnProperty.call(object,property)){object=_getPrototypeOf(object);if(object===null)break;}return object;}function _get(target,property,receiver){if(typeof Reflect!=="undefined"&&Reflect.get){_get=Reflect.get;}else{_get=function _get(target,property,receiver){var base=_superPropBase(target,property);if(!base)return;var desc=Object.getOwnPropertyDescriptor(base,property);if(desc.get){return desc.get.call(receiver);}return desc.value;};}return _get(target,property,receiver||target);}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance");}var commonjsGlobal=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var between=createCommonjsModule(function(module,exports){/* Between.js v0.1.2-fix.2 */!function(t,n){module.exports=n();}(commonjsGlobal,function(){function O(t){return(O="function"==typeof Symbol&&"symbol"==_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(Symbol.iterator)?function(t){return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(t);}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(t);})(t);}function r(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r);}}function n(t,n,e){return n&&r(t.prototype,n),e&&r(t,e),t;}function M(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t;}function I(t){return(I=Object.getPrototypeOf||function(t){return t.__proto__;})(t);}function o(t,n){return(o=Object.setPrototypeOf||function(t,n){return t.__proto__=n,t;})(t,n);}function u(t,n,e){return(u="undefined"!=typeof Reflect&&Reflect.construct?Reflect.construct:function(t,n,e){var r=[null];r.push.apply(r,n);var u=new(t.bind.apply(t,r))();return e&&o(u,e.prototype),u;}).apply(null,arguments);}function _(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t;}var t=function t(o){var a={},i=[];(o=o||this).on=function(t,n,e){return(a[t]=a[t]||[]).push([n,e]),o;},o.off=function(t,n){t||(a={});for(var e=a[t]||i,r=e.length=n?e.length:0;r--;){n==e[r][0]&&e.splice(r,1);}return o;},o.emit=function(t){for(var n,e=a[t]||i,r=0<e.length?e.slice(0,e.length):e,u=0;n=r[u++];){n[0].apply(n[1],i.slice.call(arguments,1));}return o;};};var V=function V(t,n,e){return t*(1-e)+n*e;},e="undefined"!=typeof window?window:"undefined"!=typeof commonjsGlobal?commonjsGlobal:"undefined"!=typeof self?self:{};function a(t,n){return t(n={exports:{}},n.exports),n.exports;}for(var i=a(function(t){var n=t.exports={Linear:{None:function None(t){return t;}},Quadratic:{In:function In(t){return t*t;},Out:function Out(t){return t*(2-t);},InOut:function InOut(t){return(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1);}},Cubic:{In:function In(t){return t*t*t;},Out:function Out(t){return--t*t*t+1;},InOut:function InOut(t){return(t*=2)<1?.5*t*t*t:.5*((t-=2)*t*t+2);}},Quartic:{In:function In(t){return t*t*t*t;},Out:function Out(t){return 1- --t*t*t*t;},InOut:function InOut(t){return(t*=2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2);}},Quintic:{In:function In(t){return t*t*t*t*t;},Out:function Out(t){return--t*t*t*t*t+1;},InOut:function InOut(t){return(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2);}},Sinusoidal:{In:function In(t){return 1-Math.cos(t*Math.PI/2);},Out:function Out(t){return Math.sin(t*Math.PI/2);},InOut:function InOut(t){return .5*(1-Math.cos(Math.PI*t));}},Exponential:{In:function In(t){return 0===t?0:Math.pow(1024,t-1);},Out:function Out(t){return 1===t?1:1-Math.pow(2,-10*t);},InOut:function InOut(t){return 0===t?0:1===t?1:(t*=2)<1?.5*Math.pow(1024,t-1):.5*(2-Math.pow(2,-10*(t-1)));}},Circular:{In:function In(t){return 1-Math.sqrt(1-t*t);},Out:function Out(t){return Math.sqrt(1- --t*t);},InOut:function InOut(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1);}},Elastic:{In:function In(t){var n,e=.1;return 0===t?0:1===t?1:(!e||e<1?(e=1,n=.1):n=.4*Math.asin(1/e)/(2*Math.PI),-e*Math.pow(2,10*(t-=1))*Math.sin((t-n)*(2*Math.PI)/.4));},Out:function Out(t){var n,e=.1;return 0===t?0:1===t?1:(!e||e<1?(e=1,n=.1):n=.4*Math.asin(1/e)/(2*Math.PI),e*Math.pow(2,-10*t)*Math.sin((t-n)*(2*Math.PI)/.4)+1);},InOut:function InOut(t){var n,e=.1;return 0===t?0:1===t?1:(!e||e<1?(e=1,n=.1):n=.4*Math.asin(1/e)/(2*Math.PI),(t*=2)<1?e*Math.pow(2,10*(t-=1))*Math.sin((t-n)*(2*Math.PI)/.4)*-.5:e*Math.pow(2,-10*(t-=1))*Math.sin((t-n)*(2*Math.PI)/.4)*.5+1);}},Back:{In:function In(t){return t*t*(2.70158*t-1.70158);},Out:function Out(t){return--t*t*(2.70158*t+1.70158)+1;},InOut:function InOut(t){var n=2.5949095;return(t*=2)<1?t*t*((n+1)*t-n)*.5:.5*((t-=2)*t*((n+1)*t+n)+2);}},Bounce:{In:function In(t){return 1-n.Bounce.Out(1-t);},Out:function Out(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375;},InOut:function InOut(t){return t<.5?.5*n.Bounce.In(2*t):.5*n.Bounce.Out(2*t-1)+.5;}}};}),c=(i.Linear,i.Quadratic,i.Cubic,i.Quartic,i.Quintic,i.Sinusoidal,i.Exponential,i.Circular,i.Elastic,i.Back,i.Bounce,a(function(a){(function(){var t,n,e,r,u,o;"undefined"!=typeof performance&&null!==performance&&performance.now?a.exports=function(){return performance.now();}:"undefined"!=typeof process&&null!==process&&process.hrtime?(a.exports=function(){return(t()-u)/1e6;},n=process.hrtime,r=(t=function t(){var t;return 1e9*(t=n())[0]+t[1];})(),o=1e9*process.uptime(),u=r-o):Date.now?(a.exports=function(){return Date.now()-e;},e=Date.now()):(a.exports=function(){return new Date().getTime()-e;},e=new Date().getTime());}).call(e);})),l="undefined"==typeof window?e:window,f=["moz","webkit"],s="AnimationFrame",p=l["request"+s],h=l["cancel"+s]||l["cancelRequest"+s],m=0;!p&&m<f.length;m++){p=l[f[m]+"Request"+s],h=l[f[m]+"Cancel"+s]||l[f[m]+"CancelRequest"+s];}if(!p||!h){var d=0,y=0,v=[];p=function p(t){if(0===v.length){var n=c(),e=Math.max(0,1e3/60-(n-d));d=e+n,setTimeout(function(){for(var t=v.slice(0),n=v.length=0;n<t.length;n++){if(!t[n].cancelled)try{t[n].callback(d);}catch(t){setTimeout(function(){throw t;},0);}}},Math.round(e));}return v.push({handle:++y,callback:t,cancelled:!1}),y;},h=function h(t){for(var n=0;n<v.length;n++){v[n].handle===t&&(v[n].cancelled=!0);}};}var b=function b(t){return p.call(l,t);};b.cancel=function(){h.apply(l,arguments);},b.polyfill=function(t){t||(t=l),t.requestAnimationFrame=p,t.cancelAnimationFrame=h;};var w,k,P=[],T=Symbol("type"),j=Symbol("start_time"),x=Symbol("completed"),D=Symbol("paused"),g=requestAnimationFrame||b,A=Date.now();!function t(){g(t),w=Date.now(),k=w-A;for(var n=0;n<P.length;n++){P[n][x]||P[n](k,Date.now()-P[n][j]);}A=w;}();var E=function(t){function g(e,t){var n,r,u,o;!function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function");}(this,g),u=this,o=I(g).call(this),M(_(_(r=!o||"object"!=_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(o)&&"function"!=typeof o?_(u):o)),"update",function(){var e=_(_(r))._updateValue;return function(t,n){r[x]||r[D]||(0===r.localTime&&r.emit("start",r.value,_(_(r))),e(r.ease(r.loopFunction.progress(Math.min(1,(n||r.localTime)/r.duration)))),r.emit("update",r.value,_(_(r)),t),r.localTime>=r.duration&&r.loopFunction.complete(function(){r[x]=!0,r.emit("complete",r.value,_(_(r)));}),r.localTime+=t);};});var a=r.plugin=Object.values(g._plugins).reduce(function(t,n){return t||n&&n.test&&n.test(e)&&n;},!1),i=a&&a.name||("object"===O(e)?Array.isArray(e)?"array":"object":"number");if(a){var c=a.initialize(e,t);e=c.startValue,t=c.destValue,r.data=c.data;}switch(Object.assign(_(_(r)),(M(n={duration:1e3,localTime:0,startValue:e,destValue:t,loopMode:"once",loopFunction:g.DEFAULT_LOOP,ease:function ease(t){return t;},value:"array"===i?[].concat(e):"object"===i?Object.assign({},e):e},x,!1),M(n,T,i),M(n,j,Date.now()),M(n,D,!1),n)),r[T]){case"number":r._updateValue=function(t){r.value=V(r.startValue,r.destValue,t);};break;case"array":var l=r.value.length,f=_(_(r)),s=f.startValue,p=f.destValue,h=f.value;r._updateValue=function(t){for(var n=0;n<l;n++){h[n]=V(s[n],p[n],t);}};break;case"object":var m=Object.keys(r.startValue),d=m.length,y=_(_(r)),v=y.startValue,b=y.destValue,w=y.value;r._updateValue=function(t){for(var n=0;n<d;n++){var e=m[n];w[e]=V(v[e],b[e],t);}};break;default:r.plugin?r._updateValue=function(t){r.value=r.plugin.interpolate(r.startValue,r.destValue,t,r.data);}:(console.warn("Between: startValue type was unrecognized."),r._updateValue=function(){return null;});}return P.push(r.update()),r;}return n(g,null,[{key:"between",value:function value(){for(var t=arguments.length,n=new Array(t),e=0;e<t;e++){n[e]=arguments[e];}return u(g,n);}}]),n(g,[{key:"pause",value:function value(){return this[D]=!0,this.emit("pause",this.value,this,k),this;}},{key:"play",value:function value(){return this[D]=!1,this.emit("play",this.value,this,k),this;}},{key:"easing",value:function value(t){return this.ease=t,this;}},{key:"time",value:function value(t){return this.duration=t,this;}},{key:"loop",value:function value(){for(var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"once",n="__loop_".concat(t),e=arguments.length,r=new Array(1<e?e-1:0),u=1;u<e;u++){r[u-1]=arguments[u];}return this.loopFunction=n in this?Object.assign({},g.DEFAULT_LOOP,this[n].apply(this,r)):g.DEFAULT_LOOP,this;}},{key:"__loop_repeat",value:function value(t){var n=this,e=t;return this.times=0,{complete:function complete(t){n.localTime=0,Number.isInteger(e)&&++n.times===e?t():Number.isInteger(e)||++n.times;}};}},{key:"__loop_bounce",value:function value(t){var n=this,e=t,r=1;return this.times=0,{complete:function complete(t){n.localTime=0,r=-r,Number.isInteger(e)&&++n.times===e?t():Number.isInteger(e)||++n.times;},progress:function progress(t){return 0<r?t:1-t;}};}},{key:"isPaused",get:function get(){return this[D];}}]),function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");o(t.prototype,n&&n.prototype),n&&o(t,n);}(g,t),g;}(t);return M(E,"DEFAULT_LOOP",{complete:function complete(t){return t();},progress:function progress(t){return t;}}),E.Easing=i,E._plugins={},E;});});/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */var _assign=function __assign(){_assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __values(o){var m=typeof Symbol==="function"&&o[Symbol.iterator],i=0;if(m)return m.call(o);return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}var STATE_DELIMITER='.';var EMPTY_ACTIVITY_MAP={};var DEFAULT_GUARD_TYPE='xstate.guard';var TARGETLESS_KEY='';var IS_PRODUCTION="development"==='production';function keys(value){return Object.keys(value);}function matchesState(parentStateId,childStateId,delimiter){if(delimiter===void 0){delimiter=STATE_DELIMITER;}var parentStateValue=toStateValue(parentStateId,delimiter);var childStateValue=toStateValue(childStateId,delimiter);if(isString(childStateValue)){if(isString(parentStateValue)){return childStateValue===parentStateValue;}// Parent more specific than child
return false;}if(isString(parentStateValue)){return parentStateValue in childStateValue;}return keys(parentStateValue).every(function(key){if(!(key in childStateValue)){return false;}return matchesState(parentStateValue[key],childStateValue[key]);});}function getEventType(event){try{return isString(event)||typeof event==='number'?""+event:event.type;}catch(e){throw new Error('Events must be strings or objects with a string event.type property.');}}function toStatePath(stateId,delimiter){try{if(isArray(stateId)){return stateId;}return stateId.toString().split(delimiter);}catch(e){throw new Error("'"+stateId+"' is not a valid state path.");}}function isStateLike(state){return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(state)==='object'&&'value'in state&&'context'in state&&'event'in state&&'_event'in state;}function toStateValue(stateValue,delimiter){if(isStateLike(stateValue)){return stateValue.value;}if(isArray(stateValue)){return pathToStateValue(stateValue);}if(typeof stateValue!=='string'){return stateValue;}var statePath=toStatePath(stateValue,delimiter);return pathToStateValue(statePath);}function pathToStateValue(statePath){if(statePath.length===1){return statePath[0];}var value={};var marker=value;for(var i=0;i<statePath.length-1;i++){if(i===statePath.length-2){marker[statePath[i]]=statePath[i+1];}else{marker[statePath[i]]={};marker=marker[statePath[i]];}}return value;}function mapValues(collection,iteratee){var result={};var collectionKeys=keys(collection);for(var i=0;i<collectionKeys.length;i++){var key=collectionKeys[i];result[key]=iteratee(collection[key],key,collection,i);}return result;}function mapFilterValues(collection,iteratee,predicate){var e_1,_a;var result={};try{for(var _b=__values(keys(collection)),_c=_b.next();!_c.done;_c=_b.next()){var key=_c.value;var item=collection[key];if(!predicate(item)){continue;}result[key]=iteratee(item,key,collection);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return result;}/**
 * Retrieves a value at the given path.
 * @param props The deep path to the prop of the desired value
 */var path=function path(props){return function(object){var e_2,_a;var result=object;try{for(var props_1=__values(props),props_1_1=props_1.next();!props_1_1.done;props_1_1=props_1.next()){var prop=props_1_1.value;result=result[prop];}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(props_1_1&&!props_1_1.done&&(_a=props_1.return))_a.call(props_1);}finally{if(e_2)throw e_2.error;}}return result;};};/**
 * Retrieves a value at the given path via the nested accessor prop.
 * @param props The deep path to the prop of the desired value
 */function nestedPath(props,accessorProp){return function(object){var e_3,_a;var result=object;try{for(var props_2=__values(props),props_2_1=props_2.next();!props_2_1.done;props_2_1=props_2.next()){var prop=props_2_1.value;result=result[accessorProp][prop];}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(props_2_1&&!props_2_1.done&&(_a=props_2.return))_a.call(props_2);}finally{if(e_3)throw e_3.error;}}return result;};}function toStatePaths(stateValue){if(!stateValue){return[[]];}if(isString(stateValue)){return[[stateValue]];}var result=flatten(keys(stateValue).map(function(key){var subStateValue=stateValue[key];if(typeof subStateValue!=='string'&&(!subStateValue||!Object.keys(subStateValue).length)){return[[key]];}return toStatePaths(stateValue[key]).map(function(subPath){return[key].concat(subPath);});}));return result;}function flatten(array){var _a;return(_a=[]).concat.apply(_a,__spread(array));}function toArrayStrict(value){if(isArray(value)){return value;}return[value];}function toArray(value){if(value===undefined){return[];}return toArrayStrict(value);}function mapContext(mapper,context,_event){var e_5,_a;if(isFunction(mapper)){return mapper(context,_event.data);}var result={};try{for(var _b=__values(keys(mapper)),_c=_b.next();!_c.done;_c=_b.next()){var key=_c.value;var subMapper=mapper[key];if(isFunction(subMapper)){result[key]=subMapper(context,_event.data);}else{result[key]=subMapper;}}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_5)throw e_5.error;}}return result;}function isBuiltInEvent(eventType){return /^(done|error)\./.test(eventType);}function isPromiseLike(value){if(value instanceof Promise){return true;}// Check if shape matches the Promise/A+ specification for a "thenable".
if(value!==null&&(isFunction(value)||_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(value)==='object')&&isFunction(value.then)){return true;}return false;}function partition(items,predicate){var e_6,_a;var _b=__read([[],[]],2),truthy=_b[0],falsy=_b[1];try{for(var items_1=__values(items),items_1_1=items_1.next();!items_1_1.done;items_1_1=items_1.next()){var item=items_1_1.value;if(predicate(item)){truthy.push(item);}else{falsy.push(item);}}}catch(e_6_1){e_6={error:e_6_1};}finally{try{if(items_1_1&&!items_1_1.done&&(_a=items_1.return))_a.call(items_1);}finally{if(e_6)throw e_6.error;}}return[truthy,falsy];}function updateHistoryStates(hist,stateValue){return mapValues(hist.states,function(subHist,key){if(!subHist){return undefined;}var subStateValue=(isString(stateValue)?undefined:stateValue[key])||(subHist?subHist.current:undefined);if(!subStateValue){return undefined;}return{current:subStateValue,states:updateHistoryStates(subHist,subStateValue)};});}function updateHistoryValue(hist,stateValue){return{current:stateValue,states:updateHistoryStates(hist,stateValue)};}function updateContext(context,_event,assignActions,state){if(!IS_PRODUCTION){warn(!!context,'Attempting to update undefined context');}var updatedContext=context?assignActions.reduce(function(acc,assignAction){var e_7,_a;var assignment=assignAction.assignment;var meta={state:state,action:assignAction,_event:_event};var partialUpdate={};if(isFunction(assignment)){partialUpdate=assignment(acc,_event.data,meta);}else{try{for(var _b=__values(keys(assignment)),_c=_b.next();!_c.done;_c=_b.next()){var key=_c.value;var propAssignment=assignment[key];partialUpdate[key]=isFunction(propAssignment)?propAssignment(acc,_event.data,meta):propAssignment;}}catch(e_7_1){e_7={error:e_7_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_7)throw e_7.error;}}}return Object.assign({},acc,partialUpdate);},context):context;return updatedContext;}// tslint:disable-next-line:no-empty
var warn=function warn(){};if(!IS_PRODUCTION){warn=function warn(condition,message){var error=condition instanceof Error?condition:undefined;if(!error&&condition){return;}if(console!==undefined){var args=["Warning: "+message];if(error){args.push(error);}// tslint:disable-next-line:no-console
console.warn.apply(console,args);}};}function isArray(value){return Array.isArray(value);}// tslint:disable-next-line:ban-types
function isFunction(value){return typeof value==='function';}function isString(value){return typeof value==='string';}// export function memoizedGetter<T, TP extends { prototype: object }>(
//   o: TP,
//   property: string,
//   getter: () => T
// ): void {
//   Object.defineProperty(o.prototype, property, {
//     get: getter,
//     enumerable: false,
//     configurable: false
//   });
// }
function toGuard(condition,guardMap){if(!condition){return undefined;}if(isString(condition)){return{type:DEFAULT_GUARD_TYPE,name:condition,predicate:guardMap?guardMap[condition]:undefined};}if(isFunction(condition)){return{type:DEFAULT_GUARD_TYPE,name:condition.name,predicate:condition};}return condition;}function isObservable(value){try{return'subscribe'in value&&isFunction(value.subscribe);}catch(e){return false;}}var symbolObservable=/*#__PURE__*/function(){return typeof Symbol==='function'&&Symbol.observable||'@@observable';}();function isMachine(value){try{return'__xstatenode'in value;}catch(e){return false;}}function toEventObject(event,payload// id?: TEvent['type']
){if(isString(event)||typeof event==='number'){return _assign({type:event},payload);}return event;}function toSCXMLEvent(event,scxmlEvent){if(!isString(event)&&'$$type'in event&&event.$$type==='scxml'){return event;}var eventObject=toEventObject(event);return _assign({name:eventObject.type,data:eventObject,$$type:'scxml',type:'external'},scxmlEvent);}function toTransitionConfigArray(event,configLike){var transitions=toArrayStrict(configLike).map(function(transitionLike){if(typeof transitionLike==='undefined'||typeof transitionLike==='string'||isMachine(transitionLike)){// @ts-ignore until Type instantiation is excessively deep and possibly infinite bug is fixed
return{target:transitionLike,event:event};}return _assign(_assign({},transitionLike),{event:event});});return transitions;}function normalizeTarget(target){if(target===undefined||target===TARGETLESS_KEY){return undefined;}return toArray(target);}function reportUnhandledExceptionOnInvocation(originalError,currentError,id){if(!IS_PRODUCTION){var originalStackTrace=originalError.stack?" Stacktrace was '"+originalError.stack+"'":'';if(originalError===currentError){// tslint:disable-next-line:no-console
console.error("Missing onError handler for invocation '"+id+"', error was '"+originalError+"'."+originalStackTrace);}else{var stackTrace=currentError.stack?" Stacktrace was '"+currentError.stack+"'":'';// tslint:disable-next-line:no-console
console.error("Missing onError handler and/or unhandled exception/promise rejection for invocation '"+id+"'. "+("Original error: '"+originalError+"'. "+originalStackTrace+" Current error is '"+currentError+"'."+stackTrace));}}}var ActionTypes;(function(ActionTypes){ActionTypes["Start"]="xstate.start";ActionTypes["Stop"]="xstate.stop";ActionTypes["Raise"]="xstate.raise";ActionTypes["Send"]="xstate.send";ActionTypes["Cancel"]="xstate.cancel";ActionTypes["NullEvent"]="";ActionTypes["Assign"]="xstate.assign";ActionTypes["After"]="xstate.after";ActionTypes["DoneState"]="done.state";ActionTypes["DoneInvoke"]="done.invoke";ActionTypes["Log"]="xstate.log";ActionTypes["Init"]="xstate.init";ActionTypes["Invoke"]="xstate.invoke";ActionTypes["ErrorExecution"]="error.execution";ActionTypes["ErrorCommunication"]="error.communication";ActionTypes["ErrorPlatform"]="error.platform";ActionTypes["ErrorCustom"]="xstate.error";ActionTypes["Update"]="xstate.update";ActionTypes["Pure"]="xstate.pure";})(ActionTypes||(ActionTypes={}));var SpecialTargets;(function(SpecialTargets){SpecialTargets["Parent"]="#_parent";SpecialTargets["Internal"]="#_internal";})(SpecialTargets||(SpecialTargets={}));var start=ActionTypes.Start;var stop=ActionTypes.Stop;var raise=ActionTypes.Raise;var send=ActionTypes.Send;var cancel=ActionTypes.Cancel;var nullEvent=ActionTypes.NullEvent;var assign=ActionTypes.Assign;var after=ActionTypes.After;var doneState=ActionTypes.DoneState;var log=ActionTypes.Log;var init=ActionTypes.Init;var invoke=ActionTypes.Invoke;var errorExecution=ActionTypes.ErrorExecution;var errorPlatform=ActionTypes.ErrorPlatform;var error=ActionTypes.ErrorCustom;var update=ActionTypes.Update;var pure=ActionTypes.Pure;var initEvent=/*#__PURE__*/toSCXMLEvent({type:init});function getActionFunction(actionType,actionFunctionMap){return actionFunctionMap?actionFunctionMap[actionType]||undefined:undefined;}function toActionObject(action,actionFunctionMap){var actionObject;if(isString(action)||typeof action==='number'){var exec=getActionFunction(action,actionFunctionMap);if(isFunction(exec)){actionObject={type:action,exec:exec};}else if(exec){actionObject=exec;}else{actionObject={type:action,exec:undefined};}}else if(isFunction(action)){actionObject={// Convert action to string if unnamed
type:action.name||action.toString(),exec:action};}else{var exec=getActionFunction(action.type,actionFunctionMap);if(isFunction(exec)){actionObject=_assign(_assign({},action),{exec:exec});}else if(exec){var type=action.type,other=__rest(action,["type"]);actionObject=_assign(_assign({type:type},exec),other);}else{actionObject=action;}}Object.defineProperty(actionObject,'toString',{value:function value(){return actionObject.type;},enumerable:false,configurable:true});return actionObject;}var toActionObjects=function toActionObjects(action,actionFunctionMap){if(!action){return[];}var actions=isArray(action)?action:[action];return actions.map(function(subAction){return toActionObject(subAction,actionFunctionMap);});};function toActivityDefinition(action){var actionObject=toActionObject(action);return _assign(_assign({id:isString(action)?action:actionObject.id},actionObject),{type:actionObject.type});}/**
 * Raises an event. This places the event in the internal event queue, so that
 * the event is immediately consumed by the machine in the current step.
 *
 * @param eventType The event to raise.
 */function raise$1(event){if(!isString(event)){return send$1(event,{to:SpecialTargets.Internal});}return{type:raise,event:event};}function resolveRaise(action){return{type:raise,_event:toSCXMLEvent(action.event)};}/**
 * Sends an event. This returns an action that will be read by an interpreter to
 * send the event in the next step, after the current step is finished executing.
 *
 * @param event The event to send.
 * @param options Options to pass into the send event:
 *  - `id` - The unique send event identifier (used with `cancel()`).
 *  - `delay` - The number of milliseconds to delay the sending of the event.
 *  - `to` - The target of this event (by default, the machine the event was sent from).
 */function send$1(event,options){return{to:options?options.to:undefined,type:send,event:isFunction(event)?event:toEventObject(event),delay:options?options.delay:undefined,id:options&&options.id!==undefined?options.id:isFunction(event)?event.name:getEventType(event)};}function resolveSend(action,ctx,_event,delaysMap){var meta={_event:_event};// TODO: helper function for resolving Expr
var resolvedEvent=toSCXMLEvent(isFunction(action.event)?action.event(ctx,_event.data,meta):action.event);var resolvedDelay;if(isString(action.delay)){var configDelay=delaysMap&&delaysMap[action.delay];resolvedDelay=isFunction(configDelay)?configDelay(ctx,_event.data,meta):configDelay;}else{resolvedDelay=isFunction(action.delay)?action.delay(ctx,_event.data,meta):action.delay;}var resolvedTarget=isFunction(action.to)?action.to(ctx,_event.data,meta):action.to;return _assign(_assign({},action),{to:resolvedTarget,_event:resolvedEvent,event:resolvedEvent.data,delay:resolvedDelay});}var resolveLog=function resolveLog(action,ctx,_event){return _assign(_assign({},action),{value:isString(action.expr)?action.expr:action.expr(ctx,_event.data,{_event:_event})});};/**
 * Cancels an in-flight `send(...)` action. A canceled sent action will not
 * be executed, nor will its event be sent, unless it has already been sent
 * (e.g., if `cancel(...)` is called after the `send(...)` action's `delay`).
 *
 * @param sendId The `id` of the `send(...)` action to cancel.
 */var cancel$1=function cancel$1(sendId){return{type:cancel,sendId:sendId};};/**
 * Starts an activity.
 *
 * @param activity The activity to start.
 */function start$1(activity){var activityDef=toActivityDefinition(activity);return{type:ActionTypes.Start,activity:activityDef,exec:undefined};}/**
 * Stops an activity.
 *
 * @param activity The activity to stop.
 */function stop$1(activity){var activityDef=toActivityDefinition(activity);return{type:ActionTypes.Stop,activity:activityDef,exec:undefined};}/**
 * Returns an event type that represents an implicit event that
 * is sent after the specified `delay`.
 *
 * @param delayRef The delay in milliseconds
 * @param id The state node ID where this event is handled
 */function after$1(delayRef,id){var idSuffix=id?"#"+id:'';return ActionTypes.After+"("+delayRef+")"+idSuffix;}/**
 * Returns an event that represents that a final state node
 * has been reached in the parent state node.
 *
 * @param id The final state node's parent state node `id`
 * @param data The data to pass into the event
 */function done(id,data){var type=ActionTypes.DoneState+"."+id;var eventObject={type:type,data:data};eventObject.toString=function(){return type;};return eventObject;}/**
 * Returns an event that represents that an invoked service has terminated.
 *
 * An invoked service is terminated when it has reached a top-level final state node,
 * but not when it is canceled.
 *
 * @param id The final state node ID
 * @param data The data to pass into the event
 */function doneInvoke(id,data){var type=ActionTypes.DoneInvoke+"."+id;var eventObject={type:type,data:data};eventObject.toString=function(){return type;};return eventObject;}function error$1(id,data){var type=ActionTypes.ErrorPlatform+"."+id;var eventObject={type:type,data:data};eventObject.toString=function(){return type;};return eventObject;}var isLeafNode=function isLeafNode(stateNode){return stateNode.type==='atomic'||stateNode.type==='final';};function getChildren(stateNode){return keys(stateNode.states).map(function(key){return stateNode.states[key];});}function getAllStateNodes(stateNode){var stateNodes=[stateNode];if(isLeafNode(stateNode)){return stateNodes;}return stateNodes.concat(flatten(getChildren(stateNode).map(getAllStateNodes)));}function getConfiguration(prevStateNodes,stateNodes){var e_1,_a,e_2,_b,e_3,_c,e_4,_d;var prevConfiguration=new Set(prevStateNodes);var prevAdjList=getAdjList(prevConfiguration);var configuration=new Set(stateNodes);try{// add all ancestors
for(var configuration_1=__values(configuration),configuration_1_1=configuration_1.next();!configuration_1_1.done;configuration_1_1=configuration_1.next()){var s=configuration_1_1.value;var m=s.parent;while(m&&!configuration.has(m)){configuration.add(m);m=m.parent;}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(configuration_1_1&&!configuration_1_1.done&&(_a=configuration_1.return))_a.call(configuration_1);}finally{if(e_1)throw e_1.error;}}var adjList=getAdjList(configuration);try{// add descendants
for(var configuration_2=__values(configuration),configuration_2_1=configuration_2.next();!configuration_2_1.done;configuration_2_1=configuration_2.next()){var s=configuration_2_1.value;// if previously active, add existing child nodes
if(s.type==='compound'&&(!adjList.get(s)||!adjList.get(s).length)){if(prevAdjList.get(s)){prevAdjList.get(s).forEach(function(sn){return configuration.add(sn);});}else{s.initialStateNodes.forEach(function(sn){return configuration.add(sn);});}}else{if(s.type==='parallel'){try{for(var _e=(e_3=void 0,__values(getChildren(s))),_f=_e.next();!_f.done;_f=_e.next()){var child=_f.value;if(child.type==='history'){continue;}if(!configuration.has(child)){configuration.add(child);if(prevAdjList.get(child)){prevAdjList.get(child).forEach(function(sn){return configuration.add(sn);});}else{child.initialStateNodes.forEach(function(sn){return configuration.add(sn);});}}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_f&&!_f.done&&(_c=_e.return))_c.call(_e);}finally{if(e_3)throw e_3.error;}}}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(configuration_2_1&&!configuration_2_1.done&&(_b=configuration_2.return))_b.call(configuration_2);}finally{if(e_2)throw e_2.error;}}try{// add all ancestors
for(var configuration_3=__values(configuration),configuration_3_1=configuration_3.next();!configuration_3_1.done;configuration_3_1=configuration_3.next()){var s=configuration_3_1.value;var m=s.parent;while(m&&!configuration.has(m)){configuration.add(m);m=m.parent;}}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(configuration_3_1&&!configuration_3_1.done&&(_d=configuration_3.return))_d.call(configuration_3);}finally{if(e_4)throw e_4.error;}}return configuration;}function getValueFromAdj(baseNode,adjList){var childStateNodes=adjList.get(baseNode);if(!childStateNodes){return{};// todo: fix?
}if(baseNode.type==='compound'){var childStateNode=childStateNodes[0];if(childStateNode){if(isLeafNode(childStateNode)){return childStateNode.key;}}else{return{};}}var stateValue={};childStateNodes.forEach(function(csn){stateValue[csn.key]=getValueFromAdj(csn,adjList);});return stateValue;}function getAdjList(configuration){var e_5,_a;var adjList=new Map();try{for(var configuration_4=__values(configuration),configuration_4_1=configuration_4.next();!configuration_4_1.done;configuration_4_1=configuration_4.next()){var s=configuration_4_1.value;if(!adjList.has(s)){adjList.set(s,[]);}if(s.parent){if(!adjList.has(s.parent)){adjList.set(s.parent,[]);}adjList.get(s.parent).push(s);}}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(configuration_4_1&&!configuration_4_1.done&&(_a=configuration_4.return))_a.call(configuration_4);}finally{if(e_5)throw e_5.error;}}return adjList;}function getValue(rootNode,configuration){var config=getConfiguration([rootNode],configuration);return getValueFromAdj(rootNode,getAdjList(config));}function has(iterable,item){if(Array.isArray(iterable)){return iterable.some(function(member){return member===item;});}if(iterable instanceof Set){return iterable.has(item);}return false;// TODO: fix
}function nextEvents(configuration){return flatten(__spread(new Set(configuration.map(function(sn){return sn.ownEvents;}))));}function isInFinalState(configuration,stateNode){if(stateNode.type==='compound'){return getChildren(stateNode).some(function(s){return s.type==='final'&&has(configuration,s);});}if(stateNode.type==='parallel'){return getChildren(stateNode).every(function(sn){return isInFinalState(configuration,sn);});}return false;}function stateValuesEqual(a,b){if(a===b){return true;}if(a===undefined||b===undefined){return false;}if(isString(a)||isString(b)){return a===b;}var aKeys=keys(a);var bKeys=keys(b);return aKeys.length===bKeys.length&&aKeys.every(function(key){return stateValuesEqual(a[key],b[key]);});}function isState(state){if(isString(state)){return false;}return'value'in state&&'history'in state;}function bindActionToState(action,state){var exec=action.exec;var boundAction=_assign(_assign({},action),{exec:exec!==undefined?function(){return exec(state.context,state.event,{action:action,state:state,_event:state._event});}:undefined});return boundAction;}var State=/*#__PURE__*/ /** @class */function(){/**
   * Creates a new State instance.
   * @param value The state value
   * @param context The extended state
   * @param historyValue The tree representing historical values of the state nodes
   * @param history The previous state
   * @param actions An array of action objects to execute as side-effects
   * @param activities A mapping of activities and whether they are started (`true`) or stopped (`false`).
   * @param meta
   * @param events Internal event queue. Should be empty with run-to-completion semantics.
   * @param configuration
   */function State(config){var _this=this;this.actions=[];this.activities=EMPTY_ACTIVITY_MAP;this.meta={};this.events=[];this.value=config.value;this.context=config.context;this._event=config._event;this._sessionid=config._sessionid;this.event=this._event.data;this.historyValue=config.historyValue;this.history=config.history;this.actions=config.actions||[];this.activities=config.activities||EMPTY_ACTIVITY_MAP;this.meta=config.meta||{};this.events=config.events||[];this.matches=this.matches.bind(this);this.toStrings=this.toStrings.bind(this);this.configuration=config.configuration;this.transitions=config.transitions;this.children=config.children;this.done=!!config.done;Object.defineProperty(this,'nextEvents',{get:function get(){return nextEvents(_this.configuration);}});}/**
   * Creates a new State instance for the given `stateValue` and `context`.
   * @param stateValue
   * @param context
   */State.from=function(stateValue,context){if(stateValue instanceof State){if(stateValue.context!==context){return new State({value:stateValue.value,context:context,_event:stateValue._event,_sessionid:null,historyValue:stateValue.historyValue,history:stateValue.history,actions:[],activities:stateValue.activities,meta:{},events:[],configuration:[],transitions:[],children:{}});}return stateValue;}var _event=initEvent;return new State({value:stateValue,context:context,_event:_event,_sessionid:null,historyValue:undefined,history:undefined,actions:[],activities:undefined,meta:undefined,events:[],configuration:[],transitions:[],children:{}});};/**
   * Creates a new State instance for the given `config`.
   * @param config The state config
   */State.create=function(config){return new State(config);};/**
   * Creates a new `State` instance for the given `stateValue` and `context` with no actions (side-effects).
   * @param stateValue
   * @param context
   */State.inert=function(stateValue,context){if(stateValue instanceof State){if(!stateValue.actions.length){return stateValue;}var _event=initEvent;return new State({value:stateValue.value,context:context,_event:_event,_sessionid:null,historyValue:stateValue.historyValue,history:stateValue.history,activities:stateValue.activities,configuration:stateValue.configuration,transitions:[],children:{}});}return State.from(stateValue,context);};/**
   * Returns an array of all the string leaf state node paths.
   * @param stateValue
   * @param delimiter The character(s) that separate each subpath in the string state node path.
   */State.prototype.toStrings=function(stateValue,delimiter){var _this=this;if(stateValue===void 0){stateValue=this.value;}if(delimiter===void 0){delimiter='.';}if(isString(stateValue)){return[stateValue];}var valueKeys=keys(stateValue);return valueKeys.concat.apply(valueKeys,__spread(valueKeys.map(function(key){return _this.toStrings(stateValue[key],delimiter).map(function(s){return key+delimiter+s;});})));};State.prototype.toJSON=function(){var _a=this,configuration=_a.configuration,transitions=_a.transitions,jsonValues=__rest(_a,["configuration","transitions"]);return jsonValues;};/**
   * Whether the current state value is a subset of the given parent state value.
   * @param parentStateValue
   */State.prototype.matches=function(parentStateValue){return matchesState(parentStateValue,this.value);};return State;}();function createNullActor(id){return{id:id,send:function send(){return void 0;},subscribe:function subscribe(){return{unsubscribe:function unsubscribe(){return void 0;}};},toJSON:function toJSON(){return{id:id};}};}/**
 * Creates a null actor that is able to be invoked given the provided
 * invocation information in its `.meta` value.
 *
 * @param invokeDefinition The meta information needed to invoke the actor.
 */function createInvocableActor(invokeDefinition){var tempActor=createNullActor(invokeDefinition.id);tempActor.meta=invokeDefinition;return tempActor;}function isActor(item){try{return typeof item.send==='function';}catch(e){return false;}}var NULL_EVENT='';var STATE_IDENTIFIER='#';var WILDCARD='*';var EMPTY_OBJECT={};var isStateId=function isStateId(str){return str[0]===STATE_IDENTIFIER;};var createDefaultOptions=function createDefaultOptions(){return{actions:{},guards:{},services:{},activities:{},delays:{}};};var validateArrayifiedTransitions=function validateArrayifiedTransitions(stateNode,event,transitions){var hasNonLastUnguardedTarget=transitions.slice(0,-1).some(function(transition){return!('cond'in transition)&&!('in'in transition)&&(isString(transition.target)||isMachine(transition.target));});var eventText=event===NULL_EVENT?'the transient event':"event '"+event+"'";warn(!hasNonLastUnguardedTarget,"One or more transitions for "+eventText+" on state '"+stateNode.id+"' are unreachable. "+"Make sure that the default transition is the last one defined.");};var StateNode=/*#__PURE__*/ /** @class */function(){function StateNode(/**
   * The raw config used to create the machine.
   */config,options,/**
   * The initial extended state
   */context){var _this=this;this.config=config;this.context=context;/**
     * The order this state node appears. Corresponds to the implicit SCXML document order.
     */this.order=-1;this.__xstatenode=true;this.__cache={events:undefined,relativeValue:new Map(),initialStateValue:undefined,initialState:undefined,on:undefined,transitions:undefined,candidates:{},delayedTransitions:undefined};this.idMap={};this.options=Object.assign(createDefaultOptions(),options);this.parent=this.options._parent;this.key=this.config.key||this.options._key||this.config.id||'(machine)';this.machine=this.parent?this.parent.machine:this;this.path=this.parent?this.parent.path.concat(this.key):[];this.delimiter=this.config.delimiter||(this.parent?this.parent.delimiter:STATE_DELIMITER);this.id=this.config.id||__spread([this.machine.key],this.path).join(this.delimiter);this.version=this.parent?this.parent.version:this.config.version;this.type=this.config.type||(this.config.parallel?'parallel':this.config.states&&keys(this.config.states).length?'compound':this.config.history?'history':'atomic');if(!IS_PRODUCTION){warn(!('parallel'in this.config),"The \"parallel\" property is deprecated and will be removed in version 4.1. "+(this.config.parallel?"Replace with `type: 'parallel'`":"Use `type: '"+this.type+"'`")+" in the config for state node '"+this.id+"' instead.");}this.initial=this.config.initial;this.states=this.config.states?mapValues(this.config.states,function(stateConfig,key){var _a;var stateNode=new StateNode(stateConfig,{_parent:_this,_key:key});Object.assign(_this.idMap,_assign((_a={},_a[stateNode.id]=stateNode,_a),stateNode.idMap));return stateNode;}):EMPTY_OBJECT;// Document order
var order=0;function dfs(stateNode){var e_1,_a;stateNode.order=order++;try{for(var _b=__values(getChildren(stateNode)),_c=_b.next();!_c.done;_c=_b.next()){var child=_c.value;dfs(child);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}}dfs(this);// History config
this.history=this.config.history===true?'shallow':this.config.history||false;this._transient=!this.config.on?false:Array.isArray(this.config.on)?this.config.on.some(function(_a){var event=_a.event;return event===NULL_EVENT;}):NULL_EVENT in this.config.on;this.strict=!!this.config.strict;// TODO: deprecate (entry)
this.onEntry=toArray(this.config.entry||this.config.onEntry).map(function(action){return toActionObject(action);});// TODO: deprecate (exit)
this.onExit=toArray(this.config.exit||this.config.onExit).map(function(action){return toActionObject(action);});this.meta=this.config.meta;this.data=this.type==='final'?this.config.data:undefined;this.invoke=toArray(this.config.invoke).map(function(invokeConfig,i){var _a,_b;if(isMachine(invokeConfig)){_this.machine.options.services=_assign((_a={},_a[invokeConfig.id]=invokeConfig,_a),_this.machine.options.services);return{type:invoke,src:invokeConfig.id,id:invokeConfig.id};}else if(typeof invokeConfig.src!=='string'){var invokeSrc=_this.id+":invocation["+i+"]";// TODO: util function
_this.machine.options.services=_assign((_b={},_b[invokeSrc]=invokeConfig.src,_b),_this.machine.options.services);return _assign(_assign({type:invoke,id:invokeSrc},invokeConfig),{src:invokeSrc});}else{return _assign(_assign({},invokeConfig),{type:invoke,id:invokeConfig.id||invokeConfig.src,src:invokeConfig.src});}});this.activities=toArray(this.config.activities).concat(this.invoke).map(function(activity){return toActivityDefinition(activity);});this.transition=this.transition.bind(this);}StateNode.prototype._init=function(){if(this.__cache.transitions){return;}getAllStateNodes(this).forEach(function(stateNode){return stateNode.on;});};/**
   * Clones this state machine with custom options and context.
   *
   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.
   * @param context Custom context (will override predefined context)
   */StateNode.prototype.withConfig=function(options,context){if(context===void 0){context=this.context;}var _a=this.options,actions=_a.actions,activities=_a.activities,guards=_a.guards,services=_a.services,delays=_a.delays;return new StateNode(this.config,{actions:_assign(_assign({},actions),options.actions),activities:_assign(_assign({},activities),options.activities),guards:_assign(_assign({},guards),options.guards),services:_assign(_assign({},services),options.services),delays:_assign(_assign({},delays),options.delays)},context);};/**
   * Clones this state machine with custom context.
   *
   * @param context Custom context (will override predefined context, not recursive)
   */StateNode.prototype.withContext=function(context){return new StateNode(this.config,this.options,context);};Object.defineProperty(StateNode.prototype,"definition",{/**
     * The well-structured state node definition.
     */get:function get(){return{id:this.id,key:this.key,version:this.version,context:this.context,type:this.type,initial:this.initial,history:this.history,states:mapValues(this.states,function(state){return state.definition;}),on:this.on,transitions:this.transitions,entry:this.onEntry,exit:this.onExit,activities:this.activities||[],meta:this.meta,order:this.order||-1,data:this.data,invoke:this.invoke};},enumerable:true,configurable:true});StateNode.prototype.toJSON=function(){return this.definition;};Object.defineProperty(StateNode.prototype,"on",{/**
     * The mapping of events to transitions.
     */get:function get(){if(this.__cache.on){return this.__cache.on;}var transitions=this.transitions;return this.__cache.on=transitions.reduce(function(map,transition){map[transition.eventType]=map[transition.eventType]||[];map[transition.eventType].push(transition);return map;},{});},enumerable:true,configurable:true});Object.defineProperty(StateNode.prototype,"after",{get:function get(){return this.__cache.delayedTransitions||(this.__cache.delayedTransitions=this.getDelayedTransitions(),this.__cache.delayedTransitions);},enumerable:true,configurable:true});Object.defineProperty(StateNode.prototype,"transitions",{/**
     * All the transitions that can be taken from this state node.
     */get:function get(){return this.__cache.transitions||(this.__cache.transitions=this.formatTransitions(),this.__cache.transitions);},enumerable:true,configurable:true});StateNode.prototype.getCandidates=function(eventName){if(this.__cache.candidates[eventName]){return this.__cache.candidates[eventName];}var transient=eventName===NULL_EVENT;var candidates=this.transitions.filter(function(transition){var sameEventType=transition.eventType===eventName;// null events should only match against eventless transitions
return transient?sameEventType:sameEventType||transition.eventType===WILDCARD;});this.__cache.candidates[eventName]=candidates;return candidates;};/**
   * All delayed transitions from the config.
   */StateNode.prototype.getDelayedTransitions=function(){var _this=this;var afterConfig=this.config.after;if(!afterConfig){return[];}var mutateEntryExit=function mutateEntryExit(delay,i){var delayRef=isFunction(delay)?_this.id+":delay["+i+"]":delay;var eventType=after$1(delayRef,_this.id);_this.onEntry.push(send$1(eventType,{delay:delay}));_this.onExit.push(cancel$1(eventType));return eventType;};var delayedTransitions=isArray(afterConfig)?afterConfig.map(function(transition,i){var eventType=mutateEntryExit(transition.delay,i);return _assign(_assign({},transition),{event:eventType});}):flatten(keys(afterConfig).map(function(delay,i){var configTransition=afterConfig[delay];var resolvedTransition=isString(configTransition)?{target:configTransition}:configTransition;var resolvedDelay=!isNaN(+delay)?+delay:delay;var eventType=mutateEntryExit(resolvedDelay,i);return toArray(resolvedTransition).map(function(transition){return _assign(_assign({},transition),{event:eventType,delay:resolvedDelay});});}));return delayedTransitions.map(function(delayedTransition){var delay=delayedTransition.delay;return _assign(_assign({},_this.formatTransition(delayedTransition)),{delay:delay});});};/**
   * Returns the state nodes represented by the current state value.
   *
   * @param state The state value or State instance
   */StateNode.prototype.getStateNodes=function(state){var _a;var _this=this;if(!state){return[];}var stateValue=state instanceof State?state.value:toStateValue(state,this.delimiter);if(isString(stateValue)){var initialStateValue=this.getStateNode(stateValue).initial;return initialStateValue!==undefined?this.getStateNodes((_a={},_a[stateValue]=initialStateValue,_a)):[this.states[stateValue]];}var subStateKeys=keys(stateValue);var subStateNodes=subStateKeys.map(function(subStateKey){return _this.getStateNode(subStateKey);});return subStateNodes.concat(subStateKeys.reduce(function(allSubStateNodes,subStateKey){var subStateNode=_this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);return allSubStateNodes.concat(subStateNode);},[]));};/**
   * Returns `true` if this state node explicitly handles the given event.
   *
   * @param event The event in question
   */StateNode.prototype.handles=function(event){var eventType=getEventType(event);return this.events.includes(eventType);};/**
   * Resolves the given `state` to a new `State` instance relative to this machine.
   *
   * This ensures that `.events` and `.nextEvents` represent the correct values.
   *
   * @param state The state to resolve
   */StateNode.prototype.resolveState=function(state){var configuration=Array.from(getConfiguration([],this.getStateNodes(state.value)));return new State(_assign(_assign({},state),{value:this.resolve(state.value),configuration:configuration}));};StateNode.prototype.transitionLeafNode=function(stateValue,state,_event){var stateNode=this.getStateNode(stateValue);var next=stateNode.next(state,_event);if(!next||!next.transitions.length){return this.next(state,_event);}return next;};StateNode.prototype.transitionCompoundNode=function(stateValue,state,_event){var subStateKeys=keys(stateValue);var stateNode=this.getStateNode(subStateKeys[0]);var next=stateNode._transition(stateValue[subStateKeys[0]],state,_event);if(!next||!next.transitions.length){return this.next(state,_event);}return next;};StateNode.prototype.transitionParallelNode=function(stateValue,state,_event){var e_2,_a;var transitionMap={};try{for(var _b=__values(keys(stateValue)),_c=_b.next();!_c.done;_c=_b.next()){var subStateKey=_c.value;var subStateValue=stateValue[subStateKey];if(!subStateValue){continue;}var subStateNode=this.getStateNode(subStateKey);var next=subStateNode._transition(subStateValue,state,_event);if(next){transitionMap[subStateKey]=next;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_2)throw e_2.error;}}var stateTransitions=keys(transitionMap).map(function(key){return transitionMap[key];});var enabledTransitions=flatten(stateTransitions.map(function(st){return st.transitions;}));var willTransition=stateTransitions.some(function(st){return st.transitions.length>0;});if(!willTransition){return this.next(state,_event);}var entryNodes=flatten(stateTransitions.map(function(t){return t.entrySet;}));var configuration=flatten(keys(transitionMap).map(function(key){return transitionMap[key].configuration;}));return{transitions:enabledTransitions,entrySet:entryNodes,exitSet:flatten(stateTransitions.map(function(t){return t.exitSet;})),configuration:configuration,source:state,actions:flatten(keys(transitionMap).map(function(key){return transitionMap[key].actions;}))};};StateNode.prototype._transition=function(stateValue,state,_event){// leaf node
if(isString(stateValue)){return this.transitionLeafNode(stateValue,state,_event);}// hierarchical node
if(keys(stateValue).length===1){return this.transitionCompoundNode(stateValue,state,_event);}// orthogonal node
return this.transitionParallelNode(stateValue,state,_event);};StateNode.prototype.next=function(state,_event){var e_3,_a;var _this=this;var eventName=_event.name;var actions=[];var nextStateNodes=[];var selectedTransition;try{for(var _b=__values(this.getCandidates(eventName)),_c=_b.next();!_c.done;_c=_b.next()){var candidate=_c.value;var cond=candidate.cond,stateIn=candidate.in;var resolvedContext=state.context;var isInState=stateIn?isString(stateIn)&&isStateId(stateIn)?// Check if in state by ID
state.matches(toStateValue(this.getStateNodeById(stateIn).path,this.delimiter)):// Check if in state by relative grandparent
matchesState(toStateValue(stateIn,this.delimiter),path(this.path.slice(0,-2))(state.value)):true;var guardPassed=false;try{guardPassed=!cond||this.evaluateGuard(cond,resolvedContext,_event,state);}catch(err){throw new Error("Unable to evaluate guard '"+(cond.name||cond.type)+"' in transition for event '"+eventName+"' in state node '"+this.id+"':\n"+err.message);}if(guardPassed&&isInState){if(candidate.target!==undefined){nextStateNodes=candidate.target;}actions.push.apply(actions,__spread(candidate.actions));selectedTransition=candidate;break;}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_3)throw e_3.error;}}if(!selectedTransition){return undefined;}if(!nextStateNodes.length){return{transitions:[selectedTransition],entrySet:[],exitSet:[],configuration:state.value?[this]:[],source:state,actions:actions};}var allNextStateNodes=flatten(nextStateNodes.map(function(stateNode){return _this.getRelativeStateNodes(stateNode,state.historyValue);}));var isInternal=!!selectedTransition.internal;var reentryNodes=isInternal?[]:flatten(allNextStateNodes.map(function(n){return _this.nodesFromChild(n);}));return{transitions:[selectedTransition],entrySet:reentryNodes,exitSet:isInternal?[]:[this],configuration:allNextStateNodes,source:state,actions:actions};};StateNode.prototype.nodesFromChild=function(childStateNode){if(childStateNode.escapes(this)){return[];}var nodes=[];var marker=childStateNode;while(marker&&marker!==this){nodes.push(marker);marker=marker.parent;}nodes.push(this);// inclusive
return nodes;};/**
   * Whether the given state node "escapes" this state node. If the `stateNode` is equal to or the parent of
   * this state node, it does not escape.
   */StateNode.prototype.escapes=function(stateNode){if(this===stateNode){return false;}var parent=this.parent;while(parent){if(parent===stateNode){return false;}parent=parent.parent;}return true;};StateNode.prototype.evaluateGuard=function(guard,context,_event,state){var guards=this.machine.options.guards;var guardMeta={state:state,cond:guard,_event:_event};// TODO: do not hardcode!
if(guard.type===DEFAULT_GUARD_TYPE){return guard.predicate(context,_event.data,guardMeta);}var condFn=guards[guard.type];if(!condFn){throw new Error("Guard '"+guard.type+"' is not implemented on machine '"+this.machine.id+"'.");}return condFn(context,_event.data,guardMeta);};StateNode.prototype.getActions=function(transition,currentContext,_event,prevState){var e_4,_a,e_5,_b;var prevConfig=getConfiguration([],prevState?this.getStateNodes(prevState.value):[this]);var resolvedConfig=transition.configuration.length?getConfiguration(prevConfig,transition.configuration):prevConfig;try{for(var resolvedConfig_1=__values(resolvedConfig),resolvedConfig_1_1=resolvedConfig_1.next();!resolvedConfig_1_1.done;resolvedConfig_1_1=resolvedConfig_1.next()){var sn=resolvedConfig_1_1.value;if(!has(prevConfig,sn)){transition.entrySet.push(sn);}}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(resolvedConfig_1_1&&!resolvedConfig_1_1.done&&(_a=resolvedConfig_1.return))_a.call(resolvedConfig_1);}finally{if(e_4)throw e_4.error;}}try{for(var prevConfig_1=__values(prevConfig),prevConfig_1_1=prevConfig_1.next();!prevConfig_1_1.done;prevConfig_1_1=prevConfig_1.next()){var sn=prevConfig_1_1.value;if(!has(resolvedConfig,sn)||has(transition.exitSet,sn.parent)){transition.exitSet.push(sn);}}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(prevConfig_1_1&&!prevConfig_1_1.done&&(_b=prevConfig_1.return))_b.call(prevConfig_1);}finally{if(e_5)throw e_5.error;}}if(!transition.source){transition.exitSet=[];// Ensure that root StateNode (machine) is entered
transition.entrySet.push(this);}var doneEvents=flatten(transition.entrySet.map(function(sn){var events=[];if(sn.type!=='final'){return events;}var parent=sn.parent;events.push(done(sn.id,sn.data),// TODO: deprecate - final states should not emit done events for their own state.
done(parent.id,sn.data?mapContext(sn.data,currentContext,_event):undefined));if(parent.parent){var grandparent=parent.parent;if(grandparent.type==='parallel'){if(getChildren(grandparent).every(function(parentNode){return isInFinalState(transition.configuration,parentNode);})){events.push(done(grandparent.id,grandparent.data));}}}return events;}));transition.exitSet.sort(function(a,b){return b.order-a.order;});transition.entrySet.sort(function(a,b){return a.order-b.order;});var entryStates=new Set(transition.entrySet);var exitStates=new Set(transition.exitSet);var _c=__read([flatten(Array.from(entryStates).map(function(stateNode){return __spread(stateNode.activities.map(function(activity){return start$1(activity);}),stateNode.onEntry);})).concat(doneEvents.map(raise$1)),flatten(Array.from(exitStates).map(function(stateNode){return __spread(stateNode.onExit,stateNode.activities.map(function(activity){return stop$1(activity);}));}))],2),entryActions=_c[0],exitActions=_c[1];var actions=toActionObjects(exitActions.concat(transition.actions).concat(entryActions),this.machine.options.actions);return actions;};/**
   * Determines the next state given the current `state` and sent `event`.
   *
   * @param state The current State instance or state value
   * @param event The event that was sent at the current state
   * @param context The current context (extended state) of the current state
   */StateNode.prototype.transition=function(state,event,context){if(state===void 0){state=this.initialState;}var _event=toSCXMLEvent(event);var currentState;if(state instanceof State){currentState=context===undefined?state:this.resolveState(State.from(state,context));}else{var resolvedStateValue=isString(state)?this.resolve(pathToStateValue(this.getResolvedPath(state))):this.resolve(state);var resolvedContext=context?context:this.machine.context;currentState=this.resolveState(State.from(resolvedStateValue,resolvedContext));}if(!IS_PRODUCTION&&_event.name===WILDCARD){throw new Error("An event cannot have the wildcard type ('"+WILDCARD+"')");}if(this.strict){if(!this.events.includes(_event.name)&&!isBuiltInEvent(_event.name)){throw new Error("Machine '"+this.id+"' does not accept event '"+_event.name+"'");}}var stateTransition=this._transition(currentState.value,currentState,_event)||{transitions:[],configuration:[],entrySet:[],exitSet:[],source:currentState,actions:[]};var prevConfig=getConfiguration([],this.getStateNodes(currentState.value));var resolvedConfig=stateTransition.configuration.length?getConfiguration(prevConfig,stateTransition.configuration):prevConfig;stateTransition.configuration=__spread(resolvedConfig);return this.resolveTransition(stateTransition,currentState,_event);};StateNode.prototype.resolveRaisedTransition=function(state,_event,originalEvent){var _a;var currentActions=state.actions;state=this.transition(state,_event);// Save original event to state
state._event=originalEvent;state.event=originalEvent.data;(_a=state.actions).unshift.apply(_a,__spread(currentActions));return state;};StateNode.prototype.resolveTransition=function(stateTransition,currentState,_event,context){var e_6,_a;var _this=this;if(_event===void 0){_event=initEvent;}if(context===void 0){context=this.machine.context;}var configuration=stateTransition.configuration;// Transition will "apply" if:
// - this is the initial state (there is no current state)
// - OR there are transitions
var willTransition=!currentState||stateTransition.transitions.length>0;var resolvedStateValue=willTransition?getValue(this.machine,configuration):undefined;var historyValue=currentState?currentState.historyValue?currentState.historyValue:stateTransition.source?this.machine.historyValue(currentState.value):undefined:undefined;var currentContext=currentState?currentState.context:context;var actions=this.getActions(stateTransition,currentContext,_event,currentState);var activities=currentState?_assign({},currentState.activities):{};try{for(var actions_1=__values(actions),actions_1_1=actions_1.next();!actions_1_1.done;actions_1_1=actions_1.next()){var action=actions_1_1.value;if(action.type===start){activities[action.activity.type]=action;}else if(action.type===stop){activities[action.activity.type]=false;}}}catch(e_6_1){e_6={error:e_6_1};}finally{try{if(actions_1_1&&!actions_1_1.done&&(_a=actions_1.return))_a.call(actions_1);}finally{if(e_6)throw e_6.error;}}var _b=__read(partition(actions,function(action){return action.type===assign;}),2),assignActions=_b[0],otherActions=_b[1];var updatedContext=assignActions.length?updateContext(currentContext,_event,assignActions,currentState):currentContext;var resolvedActions=flatten(otherActions.map(function(actionObject){switch(actionObject.type){case raise:return resolveRaise(actionObject);case send:var sendAction=resolveSend(actionObject,updatedContext,_event,_this.machine.options.delays);// TODO: fix ActionTypes.Init
if(!IS_PRODUCTION){// warn after resolving as we can create better contextual message here
warn(!isString(actionObject.delay)||typeof sendAction.delay==='number',// tslint:disable-next-line:max-line-length
"No delay reference for delay expression '"+actionObject.delay+"' was found on machine '"+_this.machine.id+"'");}return sendAction;case log:return resolveLog(actionObject,updatedContext,_event);case pure:return actionObject.get(updatedContext,_event.data)||[];default:return toActionObject(actionObject,_this.options.actions);}}));var _c=__read(partition(resolvedActions,function(action){return action.type===raise||action.type===send&&action.to===SpecialTargets.Internal;}),2),raisedEvents=_c[0],nonRaisedActions=_c[1];var invokeActions=resolvedActions.filter(function(action){return action.type===start&&action.activity.type===invoke;});var children=invokeActions.reduce(function(acc,action){acc[action.activity.id]=createInvocableActor(action.activity);return acc;},currentState?_assign({},currentState.children):{});var resolvedConfiguration=resolvedStateValue?stateTransition.configuration:currentState?currentState.configuration:[];var meta=resolvedConfiguration.reduce(function(acc,stateNode){if(stateNode.meta!==undefined){acc[stateNode.id]=stateNode.meta;}return acc;},{});var isDone=isInFinalState(resolvedConfiguration,this);var nextState=new State({value:resolvedStateValue||currentState.value,context:updatedContext,_event:_event,// Persist _sessionid between states
_sessionid:currentState?currentState._sessionid:null,historyValue:resolvedStateValue?historyValue?updateHistoryValue(historyValue,resolvedStateValue):undefined:currentState?currentState.historyValue:undefined,history:!resolvedStateValue||stateTransition.source?currentState:undefined,actions:resolvedStateValue?nonRaisedActions:[],activities:resolvedStateValue?activities:currentState?currentState.activities:{},meta:resolvedStateValue?meta:currentState?currentState.meta:undefined,events:[],configuration:resolvedConfiguration,transitions:stateTransition.transitions,children:children,done:isDone});nextState.changed=_event.name===update||!!assignActions.length;// Dispose of penultimate histories to prevent memory leaks
var history=nextState.history;if(history){delete history.history;}if(!resolvedStateValue){return nextState;}var maybeNextState=nextState;if(!isDone){var isTransient=this._transient||configuration.some(function(stateNode){return stateNode._transient;});if(isTransient){maybeNextState=this.resolveRaisedTransition(maybeNextState,{type:nullEvent},_event);}while(raisedEvents.length){var raisedEvent=raisedEvents.shift();maybeNextState=this.resolveRaisedTransition(maybeNextState,raisedEvent._event,_event);}}// Detect if state changed
var changed=maybeNextState.changed||(history?!!maybeNextState.actions.length||!!assignActions.length||_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(history.value)!==_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(maybeNextState.value)||!stateValuesEqual(maybeNextState.value,history.value):undefined);maybeNextState.changed=changed;// Preserve original history after raised events
maybeNextState.historyValue=nextState.historyValue;maybeNextState.history=history;return maybeNextState;};/**
   * Returns the child state node from its relative `stateKey`, or throws.
   */StateNode.prototype.getStateNode=function(stateKey){if(isStateId(stateKey)){return this.machine.getStateNodeById(stateKey);}if(!this.states){throw new Error("Unable to retrieve child state '"+stateKey+"' from '"+this.id+"'; no child states exist.");}var result=this.states[stateKey];if(!result){throw new Error("Child state '"+stateKey+"' does not exist on '"+this.id+"'");}return result;};/**
   * Returns the state node with the given `stateId`, or throws.
   *
   * @param stateId The state ID. The prefix "#" is removed.
   */StateNode.prototype.getStateNodeById=function(stateId){var resolvedStateId=isStateId(stateId)?stateId.slice(STATE_IDENTIFIER.length):stateId;if(resolvedStateId===this.id){return this;}var stateNode=this.machine.idMap[resolvedStateId];if(!stateNode){throw new Error("Child state node '#"+resolvedStateId+"' does not exist on machine '"+this.id+"'");}return stateNode;};/**
   * Returns the relative state node from the given `statePath`, or throws.
   *
   * @param statePath The string or string array relative path to the state node.
   */StateNode.prototype.getStateNodeByPath=function(statePath){if(typeof statePath==='string'&&isStateId(statePath)){try{return this.getStateNodeById(statePath.slice(1));}catch(e){// try individual paths
// throw e;
}}var arrayStatePath=toStatePath(statePath,this.delimiter).slice();var currentStateNode=this;while(arrayStatePath.length){var key=arrayStatePath.shift();if(!key.length){break;}currentStateNode=currentStateNode.getStateNode(key);}return currentStateNode;};/**
   * Resolves a partial state value with its full representation in this machine.
   *
   * @param stateValue The partial state value to resolve.
   */StateNode.prototype.resolve=function(stateValue){var _a;var _this=this;if(!stateValue){return this.initialStateValue||EMPTY_OBJECT;// TODO: type-specific properties
}switch(this.type){case'parallel':return mapValues(this.initialStateValue,function(subStateValue,subStateKey){return subStateValue?_this.getStateNode(subStateKey).resolve(stateValue[subStateKey]||subStateValue):EMPTY_OBJECT;});case'compound':if(isString(stateValue)){var subStateNode=this.getStateNode(stateValue);if(subStateNode.type==='parallel'||subStateNode.type==='compound'){return _a={},_a[stateValue]=subStateNode.initialStateValue,_a;}return stateValue;}if(!keys(stateValue).length){return this.initialStateValue||{};}return mapValues(stateValue,function(subStateValue,subStateKey){return subStateValue?_this.getStateNode(subStateKey).resolve(subStateValue):EMPTY_OBJECT;});default:return stateValue||EMPTY_OBJECT;}};StateNode.prototype.getResolvedPath=function(stateIdentifier){if(isStateId(stateIdentifier)){var stateNode=this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];if(!stateNode){throw new Error("Unable to find state node '"+stateIdentifier+"'");}return stateNode.path;}return toStatePath(stateIdentifier,this.delimiter);};Object.defineProperty(StateNode.prototype,"initialStateValue",{get:function get(){var _a;if(this.__cache.initialStateValue){return this.__cache.initialStateValue;}var initialStateValue;if(this.type==='parallel'){initialStateValue=mapFilterValues(this.states,function(state){return state.initialStateValue||EMPTY_OBJECT;},function(stateNode){return!(stateNode.type==='history');});}else if(this.initial!==undefined){if(!this.states[this.initial]){throw new Error("Initial state '"+this.initial+"' not found on '"+this.key+"'");}initialStateValue=isLeafNode(this.states[this.initial])?this.initial:(_a={},_a[this.initial]=this.states[this.initial].initialStateValue,_a);}this.__cache.initialStateValue=initialStateValue;return this.__cache.initialStateValue;},enumerable:true,configurable:true});StateNode.prototype.getInitialState=function(stateValue,context){var configuration=this.getStateNodes(stateValue);return this.resolveTransition({configuration:configuration,entrySet:configuration,exitSet:[],transitions:[],source:undefined,actions:[]},undefined,undefined,context);};Object.defineProperty(StateNode.prototype,"initialState",{/**
     * The initial State instance, which includes all actions to be executed from
     * entering the initial state.
     */get:function get(){this._init();var initialStateValue=this.initialStateValue;if(!initialStateValue){throw new Error("Cannot retrieve initial state from simple state '"+this.id+"'.");}return this.getInitialState(initialStateValue);},enumerable:true,configurable:true});Object.defineProperty(StateNode.prototype,"target",{/**
     * The target state value of the history state node, if it exists. This represents the
     * default state value to transition to if no history value exists yet.
     */get:function get(){var target;if(this.type==='history'){var historyConfig=this.config;if(isString(historyConfig.target)){target=isStateId(historyConfig.target)?pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length-1)):historyConfig.target;}else{target=historyConfig.target;}}return target;},enumerable:true,configurable:true});/**
   * Returns the leaf nodes from a state path relative to this state node.
   *
   * @param relativeStateId The relative state path to retrieve the state nodes
   * @param history The previous state to retrieve history
   * @param resolve Whether state nodes should resolve to initial child state nodes
   */StateNode.prototype.getRelativeStateNodes=function(relativeStateId,historyValue,resolve){if(resolve===void 0){resolve=true;}return resolve?relativeStateId.type==='history'?relativeStateId.resolveHistory(historyValue):relativeStateId.initialStateNodes:[relativeStateId];};Object.defineProperty(StateNode.prototype,"initialStateNodes",{get:function get(){var _this=this;if(isLeafNode(this)){return[this];}// Case when state node is compound but no initial state is defined
if(this.type==='compound'&&!this.initial){if(!IS_PRODUCTION){warn(false,"Compound state node '"+this.id+"' has no initial state.");}return[this];}var initialStateNodePaths=toStatePaths(this.initialStateValue);return flatten(initialStateNodePaths.map(function(initialPath){return _this.getFromRelativePath(initialPath);}));},enumerable:true,configurable:true});/**
   * Retrieves state nodes from a relative path to this state node.
   *
   * @param relativePath The relative path from this state node
   * @param historyValue
   */StateNode.prototype.getFromRelativePath=function(relativePath){if(!relativePath.length){return[this];}var _a=__read(relativePath),stateKey=_a[0],childStatePath=_a.slice(1);if(!this.states){throw new Error("Cannot retrieve subPath '"+stateKey+"' from node with no states");}var childStateNode=this.getStateNode(stateKey);if(childStateNode.type==='history'){return childStateNode.resolveHistory();}if(!this.states[stateKey]){throw new Error("Child state '"+stateKey+"' does not exist on '"+this.id+"'");}return this.states[stateKey].getFromRelativePath(childStatePath);};StateNode.prototype.historyValue=function(relativeStateValue){if(!keys(this.states).length){return undefined;}return{current:relativeStateValue||this.initialStateValue,states:mapFilterValues(this.states,function(stateNode,key){if(!relativeStateValue){return stateNode.historyValue();}var subStateValue=isString(relativeStateValue)?undefined:relativeStateValue[key];return stateNode.historyValue(subStateValue||stateNode.initialStateValue);},function(stateNode){return!stateNode.history;})};};/**
   * Resolves to the historical value(s) of the parent state node,
   * represented by state nodes.
   *
   * @param historyValue
   */StateNode.prototype.resolveHistory=function(historyValue){var _this=this;if(this.type!=='history'){return[this];}var parent=this.parent;if(!historyValue){var historyTarget=this.target;return historyTarget?flatten(toStatePaths(historyTarget).map(function(relativeChildPath){return parent.getFromRelativePath(relativeChildPath);})):parent.initialStateNodes;}var subHistoryValue=nestedPath(parent.path,'states')(historyValue).current;if(isString(subHistoryValue)){return[parent.getStateNode(subHistoryValue)];}return flatten(toStatePaths(subHistoryValue).map(function(subStatePath){return _this.history==='deep'?parent.getFromRelativePath(subStatePath):[parent.states[subStatePath[0]]];}));};Object.defineProperty(StateNode.prototype,"stateIds",{/**
     * All the state node IDs of this state node and its descendant state nodes.
     */get:function get(){var _this=this;var childStateIds=flatten(keys(this.states).map(function(stateKey){return _this.states[stateKey].stateIds;}));return[this.id].concat(childStateIds);},enumerable:true,configurable:true});Object.defineProperty(StateNode.prototype,"events",{/**
     * All the event types accepted by this state node and its descendants.
     */get:function get(){var e_7,_a,e_8,_b;if(this.__cache.events){return this.__cache.events;}var states=this.states;var events=new Set(this.ownEvents);if(states){try{for(var _c=__values(keys(states)),_d=_c.next();!_d.done;_d=_c.next()){var stateId=_d.value;var state=states[stateId];if(state.states){try{for(var _e=(e_8=void 0,__values(state.events)),_f=_e.next();!_f.done;_f=_e.next()){var event_1=_f.value;events.add(""+event_1);}}catch(e_8_1){e_8={error:e_8_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_8)throw e_8.error;}}}}}catch(e_7_1){e_7={error:e_7_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_7)throw e_7.error;}}}return this.__cache.events=Array.from(events);},enumerable:true,configurable:true});Object.defineProperty(StateNode.prototype,"ownEvents",{/**
     * All the events that have transitions directly from this state node.
     *
     * Excludes any inert events.
     */get:function get(){var events=new Set(this.transitions.filter(function(transition){return!(!transition.target&&!transition.actions.length&&transition.internal);}).map(function(transition){return transition.eventType;}));return Array.from(events);},enumerable:true,configurable:true});StateNode.prototype.resolveTarget=function(_target){var _this=this;if(_target===undefined){// an undefined target signals that the state node should not transition from that state when receiving that event
return undefined;}return _target.map(function(target){if(!isString(target)){return target;}var isInternalTarget=target[0]===_this.delimiter;// If internal target is defined on machine,
// do not include machine key on target
if(isInternalTarget&&!_this.parent){return _this.getStateNodeByPath(target.slice(1));}var resolvedTarget=isInternalTarget?_this.key+target:target;if(_this.parent){try{var targetStateNode=_this.parent.getStateNodeByPath(resolvedTarget);return targetStateNode;}catch(err){throw new Error("Invalid transition definition for state node '"+_this.id+"':\n"+err.message);}}else{return _this.getStateNodeByPath(resolvedTarget);}});};StateNode.prototype.formatTransition=function(transitionConfig){var _this=this;var normalizedTarget=normalizeTarget(transitionConfig.target);var internal='internal'in transitionConfig?transitionConfig.internal:normalizedTarget?normalizedTarget.some(function(_target){return isString(_target)&&_target[0]===_this.delimiter;}):true;var guards=this.machine.options.guards;var target=this.resolveTarget(normalizedTarget);var transition=_assign(_assign({},transitionConfig),{actions:toActionObjects(toArray(transitionConfig.actions)),cond:toGuard(transitionConfig.cond,guards),target:target,source:this,internal:internal,eventType:transitionConfig.event});Object.defineProperty(transition,'toJSON',{value:function value(){return _assign(_assign({},transition),{target:transition.target?transition.target.map(function(t){return"#"+t.id;}):undefined,source:"#{this.id}"});}});return transition;};StateNode.prototype.formatTransitions=function(){var e_9,_a;var _this=this;var onConfig;if(!this.config.on){onConfig=[];}else if(Array.isArray(this.config.on)){onConfig=this.config.on;}else{var _b=this.config.on,_c=WILDCARD,_d=_b[_c],wildcardConfigs=_d===void 0?[]:_d,strictOnConfigs_1=__rest(_b,[_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(_c)==="symbol"?_c:_c+""]);onConfig=flatten(keys(strictOnConfigs_1).map(function(key){var arrayified=toTransitionConfigArray(key,strictOnConfigs_1[key]);if(!IS_PRODUCTION){validateArrayifiedTransitions(_this,key,arrayified);}return arrayified;}).concat(toTransitionConfigArray(WILDCARD,wildcardConfigs)));}var doneConfig=this.config.onDone?toTransitionConfigArray(String(done(this.id)),this.config.onDone):[];var invokeConfig=flatten(this.invoke.map(function(invokeDef){var settleTransitions=[];if(invokeDef.onDone){settleTransitions.push.apply(settleTransitions,__spread(toTransitionConfigArray(String(doneInvoke(invokeDef.id)),invokeDef.onDone)));}if(invokeDef.onError){settleTransitions.push.apply(settleTransitions,__spread(toTransitionConfigArray(String(error$1(invokeDef.id)),invokeDef.onError)));}return settleTransitions;}));var delayedTransitions=this.after;var formattedTransitions=flatten(__spread(doneConfig,invokeConfig,onConfig).map(function(transitionConfig){return toArray(transitionConfig).map(function(transition){return _this.formatTransition(transition);});}));try{for(var delayedTransitions_1=__values(delayedTransitions),delayedTransitions_1_1=delayedTransitions_1.next();!delayedTransitions_1_1.done;delayedTransitions_1_1=delayedTransitions_1.next()){var delayedTransition=delayedTransitions_1_1.value;formattedTransitions.push(delayedTransition);}}catch(e_9_1){e_9={error:e_9_1};}finally{try{if(delayedTransitions_1_1&&!delayedTransitions_1_1.done&&(_a=delayedTransitions_1.return))_a.call(delayedTransitions_1);}finally{if(e_9)throw e_9.error;}}return formattedTransitions;};return StateNode;}();function createMachine(config,options){var resolvedInitialContext=typeof config.context==='function'?config.context():config.context;return new StateNode(config,options,resolvedInitialContext);}var defaultOptions={deferEvents:false};var Scheduler=/*#__PURE__*/ /** @class */function(){function Scheduler(options){this.processingEvent=false;this.queue=[];this.initialized=false;this.options=_assign(_assign({},defaultOptions),options);}Scheduler.prototype.initialize=function(callback){this.initialized=true;if(callback){if(!this.options.deferEvents){this.schedule(callback);return;}this.process(callback);}this.flushEvents();};Scheduler.prototype.schedule=function(task){if(!this.initialized||this.processingEvent){this.queue.push(task);return;}if(this.queue.length!==0){throw new Error('Event queue should be empty when it is not processing events');}this.process(task);this.flushEvents();};Scheduler.prototype.clear=function(){this.queue=[];};Scheduler.prototype.flushEvents=function(){var nextCallback=this.queue.shift();while(nextCallback){this.process(nextCallback);nextCallback=this.queue.shift();}};Scheduler.prototype.process=function(callback){this.processingEvent=true;try{callback();}catch(e){// there is no use to keep the future events
// as the situation is not anymore the same
this.clear();throw e;}finally{this.processingEvent=false;}};return Scheduler;}();var children=/*#__PURE__*/new Map();var sessionIdIndex=0;var registry={bookId:function bookId(){return"x:"+sessionIdIndex++;},register:function register(id,actor){children.set(id,actor);return id;},get:function get(id){return children.get(id);},free:function free(id){children.delete(id);}};function getDevTools(){var w=window;if(!!w.__xstate__){return w.__xstate__;}return undefined;}function registerService(service){if(IS_PRODUCTION||typeof window==='undefined'){return;}var devTools=getDevTools();if(devTools){devTools.register(service);}}var DEFAULT_SPAWN_OPTIONS={sync:false,autoForward:false};/**
 * Maintains a stack of the current service in scope.
 * This is used to provide the correct service to spawn().
 *
 * @private
 */var withServiceScope=/*#__PURE__*/function(){var serviceStack=[];return function(service,fn){service&&serviceStack.push(service);var result=fn(service||serviceStack[serviceStack.length-1]);service&&serviceStack.pop();return result;};}();var InterpreterStatus;(function(InterpreterStatus){InterpreterStatus[InterpreterStatus["NotStarted"]=0]="NotStarted";InterpreterStatus[InterpreterStatus["Running"]=1]="Running";InterpreterStatus[InterpreterStatus["Stopped"]=2]="Stopped";})(InterpreterStatus||(InterpreterStatus={}));var Interpreter=/*#__PURE__*/ /** @class */function(){/**
   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.
   *
   * @param machine The machine to be interpreted
   * @param options Interpreter options
   */function Interpreter(machine,options){var _this=this;if(options===void 0){options=Interpreter.defaultOptions;}this.machine=machine;this.scheduler=new Scheduler();this.delayedEventsMap={};this.listeners=new Set();this.contextListeners=new Set();this.stopListeners=new Set();this.doneListeners=new Set();this.eventListeners=new Set();this.sendListeners=new Set();/**
     * Whether the service is started.
     */this.initialized=false;this._status=InterpreterStatus.NotStarted;this.children=new Map();this.forwardTo=new Set();/**
     * Alias for Interpreter.prototype.start
     */this.init=this.start;/**
     * Sends an event to the running interpreter to trigger a transition.
     *
     * An array of events (batched) can be sent as well, which will send all
     * batched events to the running interpreter. The listeners will be
     * notified only **once** when all events are processed.
     *
     * @param event The event(s) to send
     */this.send=function(event,payload){if(isArray(event)){_this.batch(event);return _this.state;}var _event=toSCXMLEvent(toEventObject(event,payload));if(_this._status===InterpreterStatus.Stopped){// do nothing
if(!IS_PRODUCTION){warn(false,"Event \""+_event.name+"\" was sent to stopped service \""+_this.machine.id+"\". This service has already reached its final state, and will not transition.\nEvent: "+JSON.stringify(_event.data));}return _this.state;}if(_this._status===InterpreterStatus.NotStarted&&_this.options.deferEvents){// tslint:disable-next-line:no-console
if(!IS_PRODUCTION){warn(false,"Event \""+_event.name+"\" was sent to uninitialized service \""+_this.machine.id+"\" and is deferred. Make sure .start() is called for this service.\nEvent: "+JSON.stringify(_event.data));}}else if(_this._status!==InterpreterStatus.Running){throw new Error("Event \""+_event.name+"\" was sent to uninitialized service \""+_this.machine.id+"\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\nEvent: "+JSON.stringify(_event.data));}_this.scheduler.schedule(function(){// Forward copy of event to child actors
_this.forward(_event);var nextState=_this.nextState(_event);_this.update(nextState,_event);});return _this._state;// TODO: deprecate (should return void)
// tslint:disable-next-line:semicolon
};this.sendTo=function(event,to){var isParent=_this.parent&&(to===SpecialTargets.Parent||_this.parent.id===to);var target=isParent?_this.parent:isActor(to)?to:_this.children.get(to)||registry.get(to);if(!target){if(!isParent){throw new Error("Unable to send event to child '"+to+"' from service '"+_this.id+"'.");}// tslint:disable-next-line:no-console
if(!IS_PRODUCTION){warn(false,"Service '"+_this.id+"' has no parent: unable to send event "+event.type);}return;}if('machine'in target){// Send SCXML events to machines
target.send(_assign(_assign({},event),{name:event.name===error?""+error$1(_this.id):event.name,origin:_this.sessionId}));}else{// Send normal events to other targets
target.send(event.data);}};var resolvedOptions=_assign(_assign({},Interpreter.defaultOptions),options);var clock=resolvedOptions.clock,logger=resolvedOptions.logger,parent=resolvedOptions.parent,id=resolvedOptions.id;var resolvedId=id!==undefined?id:machine.id;this.id=resolvedId;this.logger=logger;this.clock=clock;this.parent=parent;this.options=resolvedOptions;this.scheduler=new Scheduler({deferEvents:this.options.deferEvents});this.sessionId=registry.bookId();}Object.defineProperty(Interpreter.prototype,"initialState",{get:function get(){var _this=this;if(this._initialState){return this._initialState;}return withServiceScope(this,function(){_this._initialState=_this.machine.initialState;return _this._initialState;});},enumerable:true,configurable:true});Object.defineProperty(Interpreter.prototype,"state",{get:function get(){if(!IS_PRODUCTION){warn(this._status!==InterpreterStatus.NotStarted,"Attempted to read state from uninitialized service '"+this.id+"'. Make sure the service is started first.");}return this._state;},enumerable:true,configurable:true});/**
   * Executes the actions of the given state, with that state's `context` and `event`.
   *
   * @param state The state whose actions will be executed
   * @param actionsConfig The action implementations to use
   */Interpreter.prototype.execute=function(state,actionsConfig){var e_1,_a;try{for(var _b=__values(state.actions),_c=_b.next();!_c.done;_c=_b.next()){var action=_c.value;this.exec(action,state,actionsConfig);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}};Interpreter.prototype.update=function(state,_event){var e_2,_a,e_3,_b,e_4,_c,e_5,_d;var _this=this;// Attach session ID to state
state._sessionid=this.sessionId;// Update state
this._state=state;// Execute actions
if(this.options.execute){this.execute(this.state);}// Dev tools
if(this.devTools){this.devTools.send(_event.data,state);}// Execute listeners
if(state.event){try{for(var _e=__values(this.eventListeners),_f=_e.next();!_f.done;_f=_e.next()){var listener=_f.value;listener(state.event);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_a=_e.return))_a.call(_e);}finally{if(e_2)throw e_2.error;}}}try{for(var _g=__values(this.listeners),_h=_g.next();!_h.done;_h=_g.next()){var listener=_h.value;listener(state,state.event);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_h&&!_h.done&&(_b=_g.return))_b.call(_g);}finally{if(e_3)throw e_3.error;}}try{for(var _j=__values(this.contextListeners),_k=_j.next();!_k.done;_k=_j.next()){var contextListener=_k.value;contextListener(this.state.context,this.state.history?this.state.history.context:undefined);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(_k&&!_k.done&&(_c=_j.return))_c.call(_j);}finally{if(e_4)throw e_4.error;}}var isDone=isInFinalState(state.configuration||[],this.machine);if(this.state.configuration&&isDone){// get final child state node
var finalChildStateNode=state.configuration.find(function(sn){return sn.type==='final'&&sn.parent===_this.machine;});var doneData=finalChildStateNode&&finalChildStateNode.data?mapContext(finalChildStateNode.data,state.context,_event):undefined;try{for(var _l=__values(this.doneListeners),_m=_l.next();!_m.done;_m=_l.next()){var listener=_m.value;listener(doneInvoke(this.id,doneData));}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(_m&&!_m.done&&(_d=_l.return))_d.call(_l);}finally{if(e_5)throw e_5.error;}}this.stop();}};/*
   * Adds a listener that is notified whenever a state transition happens. The listener is called with
   * the next state and the event object that caused the state transition.
   *
   * @param listener The state listener
   */Interpreter.prototype.onTransition=function(listener){this.listeners.add(listener);// Send current state to listener
if(this._status===InterpreterStatus.Running){listener(this.state,this.state.event);}return this;};Interpreter.prototype.subscribe=function(nextListenerOrObserver,// @ts-ignore
errorListener,completeListener){var _this=this;if(!nextListenerOrObserver){return{unsubscribe:function unsubscribe(){return void 0;}};}var listener;var resolvedCompleteListener=completeListener;if(typeof nextListenerOrObserver==='function'){listener=nextListenerOrObserver;}else{listener=nextListenerOrObserver.next.bind(nextListenerOrObserver);resolvedCompleteListener=nextListenerOrObserver.complete.bind(nextListenerOrObserver);}this.listeners.add(listener);// Send current state to listener
if(this._status===InterpreterStatus.Running){listener(this.state);}if(resolvedCompleteListener){this.onDone(resolvedCompleteListener);}return{unsubscribe:function unsubscribe(){listener&&_this.listeners.delete(listener);resolvedCompleteListener&&_this.doneListeners.delete(resolvedCompleteListener);}};};/**
   * Adds an event listener that is notified whenever an event is sent to the running interpreter.
   * @param listener The event listener
   */Interpreter.prototype.onEvent=function(listener){this.eventListeners.add(listener);return this;};/**
   * Adds an event listener that is notified whenever a `send` event occurs.
   * @param listener The event listener
   */Interpreter.prototype.onSend=function(listener){this.sendListeners.add(listener);return this;};/**
   * Adds a context listener that is notified whenever the state context changes.
   * @param listener The context listener
   */Interpreter.prototype.onChange=function(listener){this.contextListeners.add(listener);return this;};/**
   * Adds a listener that is notified when the machine is stopped.
   * @param listener The listener
   */Interpreter.prototype.onStop=function(listener){this.stopListeners.add(listener);return this;};/**
   * Adds a state listener that is notified when the statechart has reached its final state.
   * @param listener The state listener
   */Interpreter.prototype.onDone=function(listener){this.doneListeners.add(listener);return this;};/**
   * Removes a listener.
   * @param listener The listener to remove
   */Interpreter.prototype.off=function(listener){this.listeners.delete(listener);this.eventListeners.delete(listener);this.sendListeners.delete(listener);this.stopListeners.delete(listener);this.doneListeners.delete(listener);this.contextListeners.delete(listener);return this;};/**
   * Starts the interpreter from the given state, or the initial state.
   * @param initialState The state to start the statechart from
   */Interpreter.prototype.start=function(initialState){var _this=this;if(this._status===InterpreterStatus.Running){// Do not restart the service if it is already started
return this;}registry.register(this.sessionId,this);this.initialized=true;this._status=InterpreterStatus.Running;var resolvedState=initialState===undefined?this.initialState:withServiceScope(this,function(){return isState(initialState)?_this.machine.resolveState(initialState):_this.machine.resolveState(State.from(initialState,_this.machine.context));});if(this.options.devTools){this.attachDev();}this.scheduler.initialize(function(){_this.update(resolvedState,initEvent);});return this;};/**
   * Stops the interpreter and unsubscribe all listeners.
   *
   * This will also notify the `onStop` listeners.
   */Interpreter.prototype.stop=function(){var e_6,_a,e_7,_b,e_8,_c,e_9,_d,e_10,_e;try{for(var _f=__values(this.listeners),_g=_f.next();!_g.done;_g=_f.next()){var listener=_g.value;this.listeners.delete(listener);}}catch(e_6_1){e_6={error:e_6_1};}finally{try{if(_g&&!_g.done&&(_a=_f.return))_a.call(_f);}finally{if(e_6)throw e_6.error;}}try{for(var _h=__values(this.stopListeners),_j=_h.next();!_j.done;_j=_h.next()){var listener=_j.value;// call listener, then remove
listener();this.stopListeners.delete(listener);}}catch(e_7_1){e_7={error:e_7_1};}finally{try{if(_j&&!_j.done&&(_b=_h.return))_b.call(_h);}finally{if(e_7)throw e_7.error;}}try{for(var _k=__values(this.contextListeners),_l=_k.next();!_l.done;_l=_k.next()){var listener=_l.value;this.contextListeners.delete(listener);}}catch(e_8_1){e_8={error:e_8_1};}finally{try{if(_l&&!_l.done&&(_c=_k.return))_c.call(_k);}finally{if(e_8)throw e_8.error;}}try{for(var _m=__values(this.doneListeners),_o=_m.next();!_o.done;_o=_m.next()){var listener=_o.value;this.doneListeners.delete(listener);}}catch(e_9_1){e_9={error:e_9_1};}finally{try{if(_o&&!_o.done&&(_d=_m.return))_d.call(_m);}finally{if(e_9)throw e_9.error;}}// Stop all children
this.children.forEach(function(child){if(isFunction(child.stop)){child.stop();}});try{// Cancel all delayed events
for(var _p=__values(keys(this.delayedEventsMap)),_q=_p.next();!_q.done;_q=_p.next()){var key=_q.value;this.clock.clearTimeout(this.delayedEventsMap[key]);}}catch(e_10_1){e_10={error:e_10_1};}finally{try{if(_q&&!_q.done&&(_e=_p.return))_e.call(_p);}finally{if(e_10)throw e_10.error;}}this.scheduler.clear();this.initialized=false;this._status=InterpreterStatus.Stopped;registry.free(this.sessionId);return this;};Interpreter.prototype.batch=function(events){var _this=this;if(this._status===InterpreterStatus.NotStarted&&this.options.deferEvents){// tslint:disable-next-line:no-console
if(!IS_PRODUCTION){warn(false,events.length+" event(s) were sent to uninitialized service \""+this.machine.id+"\" and are deferred. Make sure .start() is called for this service.\nEvent: "+JSON.stringify(event));}}else if(this._status!==InterpreterStatus.Running){throw new Error(// tslint:disable-next-line:max-line-length
events.length+" event(s) were sent to uninitialized service \""+this.machine.id+"\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.");}this.scheduler.schedule(function(){var e_11,_a;var nextState=_this.state;var batchChanged=false;var batchedActions=[];var _loop_1=function _loop_1(event_1){var _event=toSCXMLEvent(event_1);_this.forward(_event);nextState=withServiceScope(_this,function(){return _this.machine.transition(nextState,_event);});batchedActions.push.apply(batchedActions,__spread(nextState.actions.map(function(a){return bindActionToState(a,nextState);})));batchChanged=batchChanged||!!nextState.changed;};try{for(var events_1=__values(events),events_1_1=events_1.next();!events_1_1.done;events_1_1=events_1.next()){var event_1=events_1_1.value;_loop_1(event_1);}}catch(e_11_1){e_11={error:e_11_1};}finally{try{if(events_1_1&&!events_1_1.done&&(_a=events_1.return))_a.call(events_1);}finally{if(e_11)throw e_11.error;}}nextState.changed=batchChanged;nextState.actions=batchedActions;_this.update(nextState,toSCXMLEvent(events[events.length-1]));});};/**
   * Returns a send function bound to this interpreter instance.
   *
   * @param event The event to be sent by the sender.
   */Interpreter.prototype.sender=function(event){return this.send.bind(this,event);};/**
   * Returns the next state given the interpreter's current state and the event.
   *
   * This is a pure method that does _not_ update the interpreter's state.
   *
   * @param event The event to determine the next state
   */Interpreter.prototype.nextState=function(event){var _this=this;var _event=toSCXMLEvent(event);if(_event.name.indexOf(errorPlatform)===0&&!this.state.nextEvents.some(function(nextEvent){return nextEvent.indexOf(errorPlatform)===0;})){throw _event.data.data;}var nextState=withServiceScope(this,function(){return _this.machine.transition(_this.state,_event);});return nextState;};Interpreter.prototype.forward=function(event){var e_12,_a;try{for(var _b=__values(this.forwardTo),_c=_b.next();!_c.done;_c=_b.next()){var id=_c.value;var child=this.children.get(id);if(!child){throw new Error("Unable to forward event '"+event+"' from interpreter '"+this.id+"' to nonexistant child '"+id+"'.");}child.send(event);}}catch(e_12_1){e_12={error:e_12_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_12)throw e_12.error;}}};Interpreter.prototype.defer=function(sendAction){var _this=this;this.delayedEventsMap[sendAction.id]=this.clock.setTimeout(function(){if(sendAction.to){_this.sendTo(sendAction._event,sendAction.to);}else{_this.send(sendAction._event);}},sendAction.delay);};Interpreter.prototype.cancel=function(sendId){this.clock.clearTimeout(this.delayedEventsMap[sendId]);delete this.delayedEventsMap[sendId];};Interpreter.prototype.exec=function(action,state,actionFunctionMap){var context=state.context,_event=state._event;var actionOrExec=getActionFunction(action.type,actionFunctionMap)||action.exec;var exec=isFunction(actionOrExec)?actionOrExec:actionOrExec?actionOrExec.exec:action.exec;if(exec){try{return exec(context,_event.data,{action:action,state:this.state,_event:_event});}catch(err){if(this.parent){this.parent.send({type:'xstate.error',data:err});}throw err;}}switch(action.type){case send:var sendAction=action;if(typeof sendAction.delay==='number'){this.defer(sendAction);return;}else{if(sendAction.to){this.sendTo(sendAction._event,sendAction.to);}else{this.send(sendAction._event);}}break;case cancel:this.cancel(action.sendId);break;case start:{var activity=action.activity;// If the activity will be stopped right after it's started
// (such as in transient states)
// don't bother starting the activity.
if(!this.state.activities[activity.type]){break;}// Invoked services
if(activity.type===ActionTypes.Invoke){var serviceCreator=this.machine.options.services?this.machine.options.services[activity.src]:undefined;var id=activity.id,data=activity.data;if(!IS_PRODUCTION){warn(!('forward'in activity),// tslint:disable-next-line:max-line-length
"`forward` property is deprecated (found in invocation of '"+activity.src+"' in in machine '"+this.machine.id+"'). "+"Please use `autoForward` instead.");}var autoForward='autoForward'in activity?activity.autoForward:!!activity.forward;if(!serviceCreator){// tslint:disable-next-line:no-console
if(!IS_PRODUCTION){warn(false,"No service found for invocation '"+activity.src+"' in machine '"+this.machine.id+"'.");}return;}var source=isFunction(serviceCreator)?serviceCreator(context,_event.data):serviceCreator;if(isPromiseLike(source)){this.state.children[id]=this.spawnPromise(Promise.resolve(source),id);}else if(isFunction(source)){this.state.children[id]=this.spawnCallback(source,id);}else if(isObservable(source)){this.state.children[id]=this.spawnObservable(source,id);}else if(isMachine(source)){// TODO: try/catch here
this.state.children[id]=this.spawnMachine(data?source.withContext(mapContext(data,context,_event)):source,{id:id,autoForward:autoForward});}}else{this.spawnActivity(activity);}break;}case stop:{this.stopChild(action.activity.id);break;}case log:var label=action.label,value=action.value;if(label){this.logger(label,value);}else{this.logger(value);}break;default:if(!IS_PRODUCTION){warn(false,"No implementation found for action type '"+action.type+"'");}break;}return undefined;};Interpreter.prototype.stopChild=function(childId){var child=this.children.get(childId);if(!child){return;}this.children.delete(childId);this.forwardTo.delete(childId);delete this.state.children[childId];if(isFunction(child.stop)){child.stop();}};Interpreter.prototype.spawn=function(entity,name,options){if(isPromiseLike(entity)){return this.spawnPromise(Promise.resolve(entity),name);}else if(isFunction(entity)){return this.spawnCallback(entity,name);}else if(isActor(entity)){return this.spawnActor(entity);}else if(isObservable(entity)){return this.spawnObservable(entity,name);}else if(isMachine(entity)){return this.spawnMachine(entity,_assign(_assign({},options),{id:name}));}else{throw new Error("Unable to spawn entity \""+name+"\" of type \""+_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(entity)+"\".");}};Interpreter.prototype.spawnMachine=function(machine,options){var _this=this;if(options===void 0){options={};}var childService=new Interpreter(machine,_assign(_assign({},this.options),{parent:this,id:options.id||machine.id}));var resolvedOptions=_assign(_assign({},DEFAULT_SPAWN_OPTIONS),options);if(resolvedOptions.sync){childService.onTransition(function(state){_this.send(update,{state:state,id:childService.id});});}childService.onDone(function(doneEvent){_this.send(toSCXMLEvent(doneEvent,{origin:childService.id}));}).start();var actor=childService;this.children.set(childService.id,actor);if(resolvedOptions.autoForward){this.forwardTo.add(childService.id);}return actor;};Interpreter.prototype.spawnPromise=function(promise,id){var _this=this;var canceled=false;promise.then(function(response){if(!canceled){_this.send(toSCXMLEvent(doneInvoke(id,response),{origin:id}));}},function(errorData){if(!canceled){var errorEvent=error$1(id,errorData);try{// Send "error.platform.id" to this (parent).
_this.send(toSCXMLEvent(errorEvent,{origin:id}));}catch(error){reportUnhandledExceptionOnInvocation(errorData,error,id);if(_this.devTools){_this.devTools.send(errorEvent,_this.state);}if(_this.machine.strict){// it would be better to always stop the state machine if unhandled
// exception/promise rejection happens but because we don't want to
// break existing code so enforce it on strict mode only especially so
// because documentation says that onError is optional
_this.stop();}}}});var actor={id:id,send:function send(){return void 0;},subscribe:function subscribe(next,handleError,complete){var unsubscribed=false;promise.then(function(response){if(unsubscribed){return;}next&&next(response);if(unsubscribed){return;}complete&&complete();},function(err){if(unsubscribed){return;}handleError(err);});return{unsubscribe:function unsubscribe(){return unsubscribed=true;}};},stop:function stop(){canceled=true;},toJSON:function toJSON(){return{id:id};}};this.children.set(id,actor);return actor;};Interpreter.prototype.spawnCallback=function(callback,id){var _this=this;var canceled=false;var receivers=new Set();var listeners=new Set();var receive=function receive(e){listeners.forEach(function(listener){return listener(e);});if(canceled){return;}_this.send(e);};var callbackStop;try{callbackStop=callback(receive,function(newListener){receivers.add(newListener);});}catch(err){this.send(error$1(id,err));}if(isPromiseLike(callbackStop)){// it turned out to be an async function, can't reliably check this before calling `callback`
// because transpiled async functions are not recognizable
return this.spawnPromise(callbackStop,id);}var actor={id:id,send:function send(event){return receivers.forEach(function(receiver){return receiver(event);});},subscribe:function subscribe(next){listeners.add(next);return{unsubscribe:function unsubscribe(){listeners.delete(next);}};},stop:function stop(){canceled=true;if(isFunction(callbackStop)){callbackStop();}},toJSON:function toJSON(){return{id:id};}};this.children.set(id,actor);return actor;};Interpreter.prototype.spawnObservable=function(source,id){var _this=this;var subscription=source.subscribe(function(value){_this.send(toSCXMLEvent(value,{origin:id}));},function(err){_this.send(toSCXMLEvent(error$1(id,err),{origin:id}));},function(){_this.send(toSCXMLEvent(doneInvoke(id),{origin:id}));});var actor={id:id,send:function send(){return void 0;},subscribe:function subscribe(next,handleError,complete){return source.subscribe(next,handleError,complete);},stop:function stop(){return subscription.unsubscribe();},toJSON:function toJSON(){return{id:id};}};this.children.set(id,actor);return actor;};Interpreter.prototype.spawnActor=function(actor){this.children.set(actor.id,actor);return actor;};Interpreter.prototype.spawnActivity=function(activity){var implementation=this.machine.options&&this.machine.options.activities?this.machine.options.activities[activity.type]:undefined;if(!implementation){if(!IS_PRODUCTION){warn(false,"No implementation found for activity '"+activity.type+"'");}// tslint:disable-next-line:no-console
return;}// Start implementation
var dispose=implementation(this.state.context,activity);this.spawnEffect(activity.id,dispose);};Interpreter.prototype.spawnEffect=function(id,dispose){this.children.set(id,{id:id,send:function send(){return void 0;},subscribe:function subscribe(){return{unsubscribe:function unsubscribe(){return void 0;}};},stop:dispose||undefined,toJSON:function toJSON(){return{id:id};}});};Interpreter.prototype.attachDev=function(){if(this.options.devTools&&typeof window!=='undefined'){if(window.__REDUX_DEVTOOLS_EXTENSION__){var devToolsOptions=_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(this.options.devTools)==='object'?this.options.devTools:undefined;this.devTools=window.__REDUX_DEVTOOLS_EXTENSION__.connect(_assign(_assign({name:this.id,autoPause:true,stateSanitizer:function stateSanitizer(state){return{value:state.value,context:state.context,actions:state.actions};}},devToolsOptions),{features:_assign({jump:false,skip:false},devToolsOptions?devToolsOptions.features:undefined)}),this.machine);this.devTools.init(this.state);}// add XState-specific dev tooling hook
registerService(this);}};Interpreter.prototype.toJSON=function(){return{id:this.id};};Interpreter.prototype[symbolObservable]=function(){return this;};/**
   * The default interpreter options:
   *
   * - `clock` uses the global `setTimeout` and `clearTimeout` functions
   * - `logger` uses the global `console.log()` method
   */Interpreter.defaultOptions=/*#__PURE__*/function(global){return{execute:true,deferEvents:true,clock:{setTimeout:function setTimeout(fn,ms){return global.setTimeout.call(null,fn,ms);},clearTimeout:function clearTimeout(id){return global.clearTimeout.call(null,id);}},logger:global.console.log.bind(console),devTools:false};}(typeof window==='undefined'?global:window);Interpreter.interpret=interpret;return Interpreter;}();/**
 * Creates a new Interpreter instance for the given machine with the provided options, if any.
 *
 * @param machine The machine to interpret
 * @param options Interpreter options
 */function interpret(machine,options){var interpreter=new Interpreter(machine,options);return interpreter;}// Polyfills
if(Number.EPSILON===undefined){Number.EPSILON=Math.pow(2,-52);}if(Number.isInteger===undefined){// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger
Number.isInteger=function(value){return typeof value==='number'&&isFinite(value)&&Math.floor(value)===value;};}//
if(Math.sign===undefined){// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign
Math.sign=function(x){return x<0?-1:x>0?1:+x;};}if('name'in Function.prototype===false){// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name
Object.defineProperty(Function.prototype,'name',{get:function get(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];}});}if(Object.assign===undefined){// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
Object.assign=function(target){if(target===undefined||target===null){throw new TypeError('Cannot convert undefined or null to object');}var output=Object(target);for(var _index=1;_index<arguments.length;_index++){var source=arguments[_index];if(source!==undefined&&source!==null){for(var nextKey in source){if(Object.prototype.hasOwnProperty.call(source,nextKey)){output[nextKey]=source[nextKey];}}}}return output;};}var REVISION='117';var MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};var CullFaceNone=0;var CullFaceBack=1;var CullFaceFront=2;var BasicShadowMap=0;var PCFShadowMap=1;var PCFSoftShadowMap=2;var VSMShadowMap=3;var FrontSide=0;var BackSide=1;var DoubleSide=2;var FlatShading=1;var NoBlending=0;var NormalBlending=1;var AdditiveBlending=2;var SubtractiveBlending=3;var MultiplyBlending=4;var CustomBlending=5;var AddEquation=100;var SubtractEquation=101;var ReverseSubtractEquation=102;var MinEquation=103;var MaxEquation=104;var ZeroFactor=200;var OneFactor=201;var SrcColorFactor=202;var OneMinusSrcColorFactor=203;var SrcAlphaFactor=204;var OneMinusSrcAlphaFactor=205;var DstAlphaFactor=206;var OneMinusDstAlphaFactor=207;var DstColorFactor=208;var OneMinusDstColorFactor=209;var SrcAlphaSaturateFactor=210;var NeverDepth=0;var AlwaysDepth=1;var LessDepth=2;var LessEqualDepth=3;var EqualDepth=4;var GreaterEqualDepth=5;var GreaterDepth=6;var NotEqualDepth=7;var MultiplyOperation=0;var MixOperation=1;var AddOperation=2;var NoToneMapping=0;var LinearToneMapping=1;var ReinhardToneMapping=2;var Uncharted2ToneMapping=3;var CineonToneMapping=4;var ACESFilmicToneMapping=5;var UVMapping=300;var CubeReflectionMapping=301;var CubeRefractionMapping=302;var EquirectangularReflectionMapping=303;var EquirectangularRefractionMapping=304;var SphericalReflectionMapping=305;var CubeUVReflectionMapping=306;var CubeUVRefractionMapping=307;var RepeatWrapping$1=1000;var ClampToEdgeWrapping=1001;var MirroredRepeatWrapping=1002;var NearestFilter=1003;var NearestMipmapNearestFilter=1004;var NearestMipmapLinearFilter=1005;var LinearFilter=1006;var LinearMipmapNearestFilter=1007;var LinearMipmapLinearFilter=1008;var UnsignedByteType=1009;var ByteType=1010;var ShortType=1011;var UnsignedShortType=1012;var IntType=1013;var UnsignedIntType=1014;var FloatType$1=1015;var HalfFloatType=1016;var UnsignedShort4444Type=1017;var UnsignedShort5551Type=1018;var UnsignedShort565Type=1019;var UnsignedInt248Type=1020;var AlphaFormat=1021;var RGBFormat=1022;var RGBAFormat=1023;var LuminanceFormat=1024;var LuminanceAlphaFormat=1025;var DepthFormat=1026;var DepthStencilFormat=1027;var RedFormat=1028;var RedIntegerFormat=1029;var RGFormat=1030;var RGIntegerFormat=1031;var RGBIntegerFormat=1032;var RGBAIntegerFormat=1033;var RGB_S3TC_DXT1_Format=33776;var RGBA_S3TC_DXT1_Format=33777;var RGBA_S3TC_DXT3_Format=33778;var RGBA_S3TC_DXT5_Format=33779;var RGB_PVRTC_4BPPV1_Format=35840;var RGB_PVRTC_2BPPV1_Format=35841;var RGBA_PVRTC_4BPPV1_Format=35842;var RGBA_PVRTC_2BPPV1_Format=35843;var RGB_ETC1_Format=36196;var RGB_ETC2_Format=37492;var RGBA_ETC2_EAC_Format=37496;var RGBA_ASTC_4x4_Format=37808;var RGBA_ASTC_5x4_Format=37809;var RGBA_ASTC_5x5_Format=37810;var RGBA_ASTC_6x5_Format=37811;var RGBA_ASTC_6x6_Format=37812;var RGBA_ASTC_8x5_Format=37813;var RGBA_ASTC_8x6_Format=37814;var RGBA_ASTC_8x8_Format=37815;var RGBA_ASTC_10x5_Format=37816;var RGBA_ASTC_10x6_Format=37817;var RGBA_ASTC_10x8_Format=37818;var RGBA_ASTC_10x10_Format=37819;var RGBA_ASTC_12x10_Format=37820;var RGBA_ASTC_12x12_Format=37821;var RGBA_BPTC_Format=36492;var SRGB8_ALPHA8_ASTC_4x4_Format=37840;var SRGB8_ALPHA8_ASTC_5x4_Format=37841;var SRGB8_ALPHA8_ASTC_5x5_Format=37842;var SRGB8_ALPHA8_ASTC_6x5_Format=37843;var SRGB8_ALPHA8_ASTC_6x6_Format=37844;var SRGB8_ALPHA8_ASTC_8x5_Format=37845;var SRGB8_ALPHA8_ASTC_8x6_Format=37846;var SRGB8_ALPHA8_ASTC_8x8_Format=37847;var SRGB8_ALPHA8_ASTC_10x5_Format=37848;var SRGB8_ALPHA8_ASTC_10x6_Format=37849;var SRGB8_ALPHA8_ASTC_10x8_Format=37850;var SRGB8_ALPHA8_ASTC_10x10_Format=37851;var SRGB8_ALPHA8_ASTC_12x10_Format=37852;var SRGB8_ALPHA8_ASTC_12x12_Format=37853;var LoopOnce=2200;var LoopRepeat=2201;var LoopPingPong=2202;var InterpolateDiscrete=2300;var InterpolateLinear=2301;var InterpolateSmooth=2302;var ZeroCurvatureEnding=2400;var ZeroSlopeEnding=2401;var WrapAroundEnding=2402;var NormalAnimationBlendMode=2500;var AdditiveAnimationBlendMode=2501;var TrianglesDrawMode=0;var TriangleStripDrawMode=1;var TriangleFanDrawMode=2;var LinearEncoding=3000;var sRGBEncoding=3001;var GammaEncoding=3007;var RGBEEncoding=3002;var LogLuvEncoding=3003;var RGBM7Encoding=3004;var RGBM16Encoding=3005;var RGBDEncoding=3006;var BasicDepthPacking=3200;var RGBADepthPacking=3201;var TangentSpaceNormalMap=0;var ObjectSpaceNormalMap=1;var KeepStencilOp=7680;var AlwaysStencilFunc=519;var StaticDrawUsage=35044;var DynamicDrawUsage=35048;/**
 * https://github.com/mrdoob/eventdispatcher.js/
 */function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function addEventListener(type,listener){if(this._listeners===undefined)this._listeners={};var listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[];}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener);}},hasEventListener:function hasEventListener(type,listener){if(this._listeners===undefined)return false;var listeners=this._listeners;return listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1;},removeEventListener:function removeEventListener(type,listener){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[type];if(listenerArray!==undefined){var index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1);}}},dispatchEvent:function dispatchEvent(event){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;// Make a copy, in case listeners are removed while iterating.
var array=listenerArray.slice(0);for(var i=0,l=array.length;i<l;i++){array[i].call(this,event);}}}});/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author thezwap
 */var _lut=[];for(var i=0;i<256;i++){_lut[i]=(i<16?'0':'')+i.toString(16);}var MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function generateUUID(){// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
var d0=Math.random()*0xffffffff|0;var d1=Math.random()*0xffffffff|0;var d2=Math.random()*0xffffffff|0;var d3=Math.random()*0xffffffff|0;var uuid=_lut[d0&0xff]+_lut[d0>>8&0xff]+_lut[d0>>16&0xff]+_lut[d0>>24&0xff]+'-'+_lut[d1&0xff]+_lut[d1>>8&0xff]+'-'+_lut[d1>>16&0x0f|0x40]+_lut[d1>>24&0xff]+'-'+_lut[d2&0x3f|0x80]+_lut[d2>>8&0xff]+'-'+_lut[d2>>16&0xff]+_lut[d2>>24&0xff]+_lut[d3&0xff]+_lut[d3>>8&0xff]+_lut[d3>>16&0xff]+_lut[d3>>24&0xff];// .toUpperCase() here flattens concatenated strings to save heap memory space.
return uuid.toUpperCase();},clamp:function clamp(value,min,max){return Math.max(min,Math.min(max,value));},// compute euclidian modulo of m % n
// https://en.wikipedia.org/wiki/Modulo_operation
euclideanModulo:function euclideanModulo(n,m){return(n%m+m)%m;},// Linear mapping from range <a1, a2> to range <b1, b2>
mapLinear:function mapLinear(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1);},// https://en.wikipedia.org/wiki/Linear_interpolation
lerp:function lerp(x,y,t){return(1-t)*x+t*y;},// http://en.wikipedia.org/wiki/Smoothstep
smoothstep:function smoothstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x);},smootherstep:function smootherstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10);},// Random integer from <low, high> interval
randInt:function randInt(low,high){return low+Math.floor(Math.random()*(high-low+1));},// Random float from <low, high> interval
randFloat:function randFloat(low,high){return low+Math.random()*(high-low);},// Random float from <-range/2, range/2> interval
randFloatSpread:function randFloatSpread(range){return range*(0.5-Math.random());},degToRad:function degToRad(degrees){return degrees*MathUtils.DEG2RAD;},radToDeg:function radToDeg(radians){return radians*MathUtils.RAD2DEG;},isPowerOfTwo:function isPowerOfTwo(value){return(value&value-1)===0&&value!==0;},ceilPowerOfTwo:function ceilPowerOfTwo(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2));},floorPowerOfTwo:function floorPowerOfTwo(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2));},setQuaternionFromProperEuler:function setQuaternionFromProperEuler(q,a,b,c,order){// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles
// rotations are applied to the axes in the order specified by 'order'
// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'
// angles are in radians
var cos=Math.cos;var sin=Math.sin;var c2=cos(b/2);var s2=sin(b/2);var c13=cos((a+c)/2);var s13=sin((a+c)/2);var c1_3=cos((a-c)/2);var s1_3=sin((a-c)/2);var c3_1=cos((c-a)/2);var s3_1=sin((c-a)/2);switch(order){case'XYX':q.set(c2*s13,s2*c1_3,s2*s1_3,c2*c13);break;case'YZY':q.set(s2*s1_3,c2*s13,s2*c1_3,c2*c13);break;case'ZXZ':q.set(s2*c1_3,s2*s1_3,c2*s13,c2*c13);break;case'XZX':q.set(c2*s13,s2*s3_1,s2*c3_1,c2*c13);break;case'YXY':q.set(s2*c3_1,c2*s13,s2*s3_1,c2*c13);break;case'ZYZ':q.set(s2*s3_1,s2*c3_1,c2*s13,c2*c13);break;default:console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: '+order);}}};/**
 * @author mrdoob / http://mrdoob.com/
 * @author philogb / http://blog.thejit.org/
 * @author egraether / http://egraether.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */function Vector2(x,y){this.x=x||0;this.y=y||0;}Object.defineProperties(Vector2.prototype,{"width":{get:function get(){return this.x;},set:function set(value){this.x=value;}},"height":{get:function get(){return this.y;},set:function set(value){this.y=value;}}});Object.assign(Vector2.prototype,{isVector2:true,set:function set(x,y){this.x=x;this.y=y;return this;},setScalar:function setScalar(scalar){this.x=scalar;this.y=scalar;return this;},setX:function setX(x){this.x=x;return this;},setY:function setY(y){this.y=y;return this;},setComponent:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error('index is out of range: '+index);}return this;},getComponent:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+index);}},clone:function clone(){return new this.constructor(this.x,this.y);},copy:function copy(v){this.x=v.x;this.y=v.y;return this;},add:function add(v,w){if(w!==undefined){console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;return this;},addScalar:function addScalar(s){this.x+=s;this.y+=s;return this;},addVectors:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;},addScaledVector:function addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;return this;},sub:function sub(v,w){if(w!==undefined){console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;return this;},subScalar:function subScalar(s){this.x-=s;this.y-=s;return this;},subVectors:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;},multiply:function multiply(v){this.x*=v.x;this.y*=v.y;return this;},multiplyScalar:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;return this;},divide:function divide(v){this.x/=v.x;this.y/=v.y;return this;},divideScalar:function divideScalar(scalar){return this.multiplyScalar(1/scalar);},applyMatrix3:function applyMatrix3(m){var x=this.x,y=this.y;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6];this.y=e[1]*x+e[4]*y+e[7];return this;},min:function min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this;},max:function max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this;},clamp:function clamp(min,max){// assumes min < max, componentwise
this.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this;},clampScalar:function clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));return this;},clampLength:function clampLength(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));},floor:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;},ceil:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;},round:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;},roundToZero:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this;},negate:function negate(){this.x=-this.x;this.y=-this.y;return this;},dot:function dot(v){return this.x*v.x+this.y*v.y;},cross:function cross(v){return this.x*v.y-this.y*v.x;},lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y;},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y);},manhattanLength:function manhattanLength(){return Math.abs(this.x)+Math.abs(this.y);},normalize:function normalize(){return this.divideScalar(this.length()||1);},angle:function angle(){// computes the angle in radians with respect to the positive x-axis
var angle=Math.atan2(-this.y,-this.x)+Math.PI;return angle;},distanceTo:function distanceTo(v){return Math.sqrt(this.distanceToSquared(v));},distanceToSquared:function distanceToSquared(v){var dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy;},manhattanDistanceTo:function manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y);},setLength:function setLength(length){return this.normalize().multiplyScalar(length);},lerp:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this;},lerpVectors:function lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;return this;},equals:function equals(v){return v.x===this.x&&v.y===this.y;},fromArray:function fromArray(array,offset){if(offset===undefined)offset=0;this.x=array[offset];this.y=array[offset+1];return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this.x;array[offset+1]=this.y;return array;},fromBufferAttribute:function fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);return this;},rotateAround:function rotateAround(center,angle){var c=Math.cos(angle),s=Math.sin(angle);var x=this.x-center.x;var y=this.y-center.y;this.x=x*c-y*s+center.x;this.y=x*s+y*c+center.y;return this;},random:function random(){this.x=Math.random();this.y=Math.random();return this;}});/**
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 * @author tschw
 */function Matrix3(){this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');}}Object.assign(Matrix3.prototype,{isMatrix3:true,set:function set(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this;},identity:function identity(){this.set(1,0,0,0,1,0,0,0,1);return this;},clone:function clone(){return new this.constructor().fromArray(this.elements);},copy:function copy(m){var te=this.elements;var me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this;},extractBasis:function extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrix3Column(this,0);yAxis.setFromMatrix3Column(this,1);zAxis.setFromMatrix3Column(this,2);return this;},setFromMatrix4:function setFromMatrix4(m){var me=m.elements;this.set(me[0],me[4],me[8],me[1],me[5],me[9],me[2],me[6],me[10]);return this;},multiply:function multiply(m){return this.multiplyMatrices(this,m);},premultiply:function premultiply(m){return this.multiplyMatrices(m,this);},multiplyMatrices:function multiplyMatrices(a,b){var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[3],a13=ae[6];var a21=ae[1],a22=ae[4],a23=ae[7];var a31=ae[2],a32=ae[5],a33=ae[8];var b11=be[0],b12=be[3],b13=be[6];var b21=be[1],b22=be[4],b23=be[7];var b31=be[2],b32=be[5],b33=be[8];te[0]=a11*b11+a12*b21+a13*b31;te[3]=a11*b12+a12*b22+a13*b32;te[6]=a11*b13+a12*b23+a13*b33;te[1]=a21*b11+a22*b21+a23*b31;te[4]=a21*b12+a22*b22+a23*b32;te[7]=a21*b13+a22*b23+a23*b33;te[2]=a31*b11+a32*b21+a33*b31;te[5]=a31*b12+a32*b22+a33*b32;te[8]=a31*b13+a32*b23+a33*b33;return this;},multiplyScalar:function multiplyScalar(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;},determinant:function determinant(){var te=this.elements;var a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;},getInverse:function getInverse(matrix,throwOnDegenerate){if(throwOnDegenerate!==undefined){console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");}var me=matrix.elements,te=this.elements,n11=me[0],n21=me[1],n31=me[2],n12=me[3],n22=me[4],n32=me[5],n13=me[6],n23=me[7],n33=me[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(det===0)return this.set(0,0,0,0,0,0,0,0,0);var detInv=1/det;te[0]=t11*detInv;te[1]=(n31*n23-n33*n21)*detInv;te[2]=(n32*n21-n31*n22)*detInv;te[3]=t12*detInv;te[4]=(n33*n11-n31*n13)*detInv;te[5]=(n31*n12-n32*n11)*detInv;te[6]=t13*detInv;te[7]=(n21*n13-n23*n11)*detInv;te[8]=(n22*n11-n21*n12)*detInv;return this;},transpose:function transpose(){var tmp,m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;},getNormalMatrix:function getNormalMatrix(matrix4){return this.setFromMatrix4(matrix4).getInverse(this).transpose();},transposeIntoArray:function transposeIntoArray(r){var m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this;},setUvTransform:function setUvTransform(tx,ty,sx,sy,rotation,cx,cy){var c=Math.cos(rotation);var s=Math.sin(rotation);this.set(sx*c,sx*s,-sx*(c*cx+s*cy)+cx+tx,-sy*s,sy*c,-sy*(-s*cx+c*cy)+cy+ty,0,0,1);},scale:function scale(sx,sy){var te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this;},rotate:function rotate(theta){var c=Math.cos(theta);var s=Math.sin(theta);var te=this.elements;var a11=te[0],a12=te[3],a13=te[6];var a21=te[1],a22=te[4],a23=te[7];te[0]=c*a11+s*a21;te[3]=c*a12+s*a22;te[6]=c*a13+s*a23;te[1]=-s*a11+c*a21;te[4]=-s*a12+c*a22;te[7]=-s*a13+c*a23;return this;},translate:function translate(tx,ty){var te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this;},equals:function equals(matrix){var te=this.elements;var me=matrix.elements;for(var i=0;i<9;i++){if(te[i]!==me[i])return false;}return true;},fromArray:function fromArray(array,offset){if(offset===undefined)offset=0;for(var i=0;i<9;i++){this.elements[i]=array[i+offset];}return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array;}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 */var _canvas;var ImageUtils={getDataURL:function getDataURL(image){var canvas;if(typeof HTMLCanvasElement=='undefined'){return image.src;}else if(image instanceof HTMLCanvasElement){canvas=image;}else{if(_canvas===undefined)_canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');_canvas.width=image.width;_canvas.height=image.height;var context=_canvas.getContext('2d');if(image instanceof ImageData){context.putImageData(image,0,0);}else{context.drawImage(image,0,0,image.width,image.height);}canvas=_canvas;}if(canvas.width>2048||canvas.height>2048){return canvas.toDataURL('image/jpeg',0.6);}else{return canvas.toDataURL('image/png');}}};/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 */var textureId=0;function Texture(image,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){Object.defineProperty(this,'id',{value:textureId++});this.uuid=MathUtils.generateUUID();this.name='';this.image=image!==undefined?image:Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=mapping!==undefined?mapping:Texture.DEFAULT_MAPPING;this.wrapS=wrapS!==undefined?wrapS:ClampToEdgeWrapping;this.wrapT=wrapT!==undefined?wrapT:ClampToEdgeWrapping;this.magFilter=magFilter!==undefined?magFilter:LinearFilter;this.minFilter=minFilter!==undefined?minFilter:LinearMipmapLinearFilter;this.anisotropy=anisotropy!==undefined?anisotropy:1;this.format=format!==undefined?format:RGBAFormat;this.internalFormat=null;this.type=type!==undefined?type:UnsignedByteType;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,1);this.center=new Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new Matrix3();this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)
// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
//
// Also changing the encoding after already used by a Material will not automatically make the Material
// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.
this.encoding=encoding!==undefined?encoding:LinearEncoding;this.version=0;this.onUpdate=null;}Texture.DEFAULT_IMAGE=undefined;Texture.DEFAULT_MAPPING=UVMapping;Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:true,updateMatrix:function updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y);},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this;},toJSON:function toJSON(meta){var isRootObject=meta===undefined||typeof meta==='string';if(!isRootObject&&meta.textures[this.uuid]!==undefined){return meta.textures[this.uuid];}var output={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){// TODO: Move to THREE.Image
var image=this.image;if(image.uuid===undefined){image.uuid=MathUtils.generateUUID();// UGH
}if(!isRootObject&&meta.images[image.uuid]===undefined){var url;if(Array.isArray(image)){// process array of images e.g. CubeTexture
url=[];for(var i=0,l=image.length;i<l;i++){url.push(ImageUtils.getDataURL(image[i]));}}else{// process single image
url=ImageUtils.getDataURL(image);}meta.images[image.uuid]={uuid:image.uuid,url:url};}output.image=image.uuid;}if(!isRootObject){meta.textures[this.uuid]=output;}return output;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});},transformUv:function transformUv(uv){if(this.mapping!==UVMapping)return uv;uv.applyMatrix3(this.matrix);if(uv.x<0||uv.x>1){switch(this.wrapS){case RepeatWrapping$1:uv.x=uv.x-Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=uv.x<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.x)%2)===1){uv.x=Math.ceil(uv.x)-uv.x;}else{uv.x=uv.x-Math.floor(uv.x);}break;}}if(uv.y<0||uv.y>1){switch(this.wrapT){case RepeatWrapping$1:uv.y=uv.y-Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=uv.y<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.y)%2)===1){uv.y=Math.ceil(uv.y)-uv.y;}else{uv.y=uv.y-Math.floor(uv.y);}break;}}if(this.flipY){uv.y=1-uv.y;}return uv;}});Object.defineProperty(Texture.prototype,"needsUpdate",{set:function set(value){if(value===true)this.version++;}});/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */function Vector4(x,y,z,w){this.x=x||0;this.y=y||0;this.z=z||0;this.w=w!==undefined?w:1;}Object.defineProperties(Vector4.prototype,{"width":{get:function get(){return this.z;},set:function set(value){this.z=value;}},"height":{get:function get(){return this.w;},set:function set(value){this.w=value;}}});Object.assign(Vector4.prototype,{isVector4:true,set:function set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;},setScalar:function setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;this.w=scalar;return this;},setX:function setX(x){this.x=x;return this;},setY:function setY(y){this.y=y;return this;},setZ:function setZ(z){this.z=z;return this;},setW:function setW(w){this.w=w;return this;},setComponent:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error('index is out of range: '+index);}return this;},getComponent:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+index);}},clone:function clone(){return new this.constructor(this.x,this.y,this.z,this.w);},copy:function copy(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this;},add:function add(v,w){if(w!==undefined){console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this;},addScalar:function addScalar(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this;},addVectors:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;},addScaledVector:function addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this;},sub:function sub(v,w){if(w!==undefined){console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this;},subScalar:function subScalar(s){this.x-=s;this.y-=s;this.z-=s;this.w-=s;return this;},subVectors:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;},multiplyScalar:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this;},applyMatrix4:function applyMatrix4(m){var x=this.x,y=this.y,z=this.z,w=this.w;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this;},divideScalar:function divideScalar(scalar){return this.multiplyScalar(1/scalar);},setAxisAngleFromQuaternion:function setAxisAngleFromQuaternion(q){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm
// q is assumed to be normalized
this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);if(s<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s;}return this;},setAxisAngleFromRotationMatrix:function setAxisAngleFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var angle,x,y,z,// variables for result
epsilon=0.01,// margin to allow for rounding errors
epsilon2=0.1,// margin to distinguish between 0 and 180 degrees
te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){// singularity found
// first check for identity matrix which must have +1 for all terms
// in leading diagonal and zero in other terms
if(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){// this singularity is identity matrix so angle = 0
this.set(1,0,0,0);return this;// zero angle, arbitrary axis
}// otherwise this singularity is angle = 180
angle=Math.PI;var xx=(m11+1)/2;var yy=(m22+1)/2;var zz=(m33+1)/2;var xy=(m12+m21)/4;var xz=(m13+m31)/4;var yz=(m23+m32)/4;if(xx>yy&&xx>zz){// m11 is the largest diagonal term
if(xx<epsilon){x=0;y=0.707106781;z=0.707106781;}else{x=Math.sqrt(xx);y=xy/x;z=xz/x;}}else if(yy>zz){// m22 is the largest diagonal term
if(yy<epsilon){x=0.707106781;y=0;z=0.707106781;}else{y=Math.sqrt(yy);x=xy/y;z=yz/y;}}else{// m33 is the largest diagonal term so base result on this
if(zz<epsilon){x=0.707106781;y=0.707106781;z=0;}else{z=Math.sqrt(zz);x=xz/z;y=yz/z;}}this.set(x,y,z,angle);return this;// return 180 deg rotation
}// as we have reached here there are no singularities so we can handle normally
var s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));// used to normalize
if(Math.abs(s)<0.001)s=1;// prevent divide by zero, should not happen if matrix is orthogonal and should be
// caught by singularity test above, but I've left it in just in case
this.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this;},min:function min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this;},max:function max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this;},clamp:function clamp(min,max){// assumes min < max, componentwise
this.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,Math.min(max.w,this.w));return this;},clampScalar:function clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));this.w=Math.max(minVal,Math.min(maxVal,this.w));return this;},clampLength:function clampLength(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));},floor:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;},ceil:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;},round:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;},roundToZero:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this;},negate:function negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this;},dot:function dot(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w;},lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);},manhattanLength:function manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);},normalize:function normalize(){return this.divideScalar(this.length()||1);},setLength:function setLength(length){return this.normalize().multiplyScalar(length);},lerp:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this;},lerpVectors:function lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;this.w=v1.w+(v2.w-v1.w)*alpha;return this;},equals:function equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w;},fromArray:function fromArray(array,offset){if(offset===undefined)offset=0;this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array;},fromBufferAttribute:function fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this;},random:function random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this;}});/**
 * @author szimek / https://github.com/szimek/
 * @author alteredq / http://alteredqualia.com/
 * @author Marius Kintel / https://github.com/kintel
 */ /*
 In options, we can specify:
 * Texture parameters for an auto-generated target texture
 * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
*/function WebGLRenderTarget(width,height,options){this.width=width;this.height=height;this.scissor=new Vector4(0,0,width,height);this.scissorTest=false;this.viewport=new Vector4(0,0,width,height);options=options||{};this.texture=new Texture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.image={};this.texture.image.width=width;this.texture.image.height=height;this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;this.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:true;this.depthTexture=options.depthTexture!==undefined?options.depthTexture:null;}WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:true,setSize:function setSize(width,height){if(this.width!==width||this.height!==height){this.width=width;this.height=height;this.texture.image.width=width;this.texture.image.height=height;this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(source){this.width=source.width;this.height=source.height;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}});/**
 * @author Mugen87 / https://github.com/Mugen87
 * @author Matt DesLauriers / @mattdesl
 */function WebGLMultisampleRenderTarget(width,height,options){WebGLRenderTarget.call(this,width,height,options);this.samples=4;}WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:true,copy:function copy(source){WebGLRenderTarget.prototype.copy.call(this,source);this.samples=source.samples;return this;}});/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */function Quaternion(x,y,z,w){this._x=x||0;this._y=y||0;this._z=z||0;this._w=w!==undefined?w:1;}Object.assign(Quaternion,{slerp:function slerp(qa,qb,qm,t){return qm.copy(qa).slerp(qb,t);},slerpFlat:function slerpFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){// fuzz-free, array-based Quaternion SLERP operation
var x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3],x1=src1[srcOffset1+0],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];if(w0!==w1||x0!==x1||y0!==y1||z0!==z1){var s=1-t,cos=x0*x1+y0*y1+z0*z1+w0*w1,dir=cos>=0?1:-1,sqrSin=1-cos*cos;// Skip the Slerp for tiny steps to avoid numeric problems:
if(sqrSin>Number.EPSILON){var sin=Math.sqrt(sqrSin),len=Math.atan2(sin,cos*dir);s=Math.sin(s*len)/sin;t=Math.sin(t*len)/sin;}var tDir=t*dir;x0=x0*s+x1*tDir;y0=y0*s+y1*tDir;z0=z0*s+z1*tDir;w0=w0*s+w1*tDir;// Normalize in case we just did a lerp:
if(s===1-t){var f=1/Math.sqrt(x0*x0+y0*y0+z0*z0+w0*w0);x0*=f;y0*=f;z0*=f;w0*=f;}}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;},multiplyQuaternionsFlat:function multiplyQuaternionsFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){var x0=src0[srcOffset0];var y0=src0[srcOffset0+1];var z0=src0[srcOffset0+2];var w0=src0[srcOffset0+3];var x1=src1[srcOffset1];var y1=src1[srcOffset1+1];var z1=src1[srcOffset1+2];var w1=src1[srcOffset1+3];dst[dstOffset]=x0*w1+w0*x1+y0*z1-z0*y1;dst[dstOffset+1]=y0*w1+w0*y1+z0*x1-x0*z1;dst[dstOffset+2]=z0*w1+w0*z1+x0*y1-y0*x1;dst[dstOffset+3]=w0*w1-x0*x1-y0*y1-z0*z1;return dst;}});Object.defineProperties(Quaternion.prototype,{x:{get:function get(){return this._x;},set:function set(value){this._x=value;this._onChangeCallback();}},y:{get:function get(){return this._y;},set:function set(value){this._y=value;this._onChangeCallback();}},z:{get:function get(){return this._z;},set:function set(value){this._z=value;this._onChangeCallback();}},w:{get:function get(){return this._w;},set:function set(value){this._w=value;this._onChangeCallback();}}});Object.assign(Quaternion.prototype,{isQuaternion:true,set:function set(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._onChangeCallback();return this;},clone:function clone(){return new this.constructor(this._x,this._y,this._z,this._w);},copy:function copy(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this._onChangeCallback();return this;},setFromEuler:function setFromEuler(euler,update){if(!(euler&&euler.isEuler)){throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');}var x=euler._x,y=euler._y,z=euler._z,order=euler.order;// http://www.mathworks.com/matlabcentral/fileexchange/
// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
//	content/SpinCalc.m
var cos=Math.cos;var sin=Math.sin;var c1=cos(x/2);var c2=cos(y/2);var c3=cos(z/2);var s1=sin(x/2);var s2=sin(y/2);var s3=sin(z/2);switch(order){case'XYZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'YXZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'ZXY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'ZYX':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'YZX':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'XZY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;default:console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: '+order);}if(update!==false)this._onChangeCallback();return this;},setFromAxisAngle:function setFromAxisAngle(axis,angle){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm
// assumes axis is normalized
var halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this._onChangeCallback();return this;},setFromRotationMatrix:function setFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33,s;if(trace>0){s=0.5/Math.sqrt(trace+1.0);this._w=0.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s;}else if(m11>m22&&m11>m33){s=2.0*Math.sqrt(1.0+m11-m22-m33);this._w=(m32-m23)/s;this._x=0.25*s;this._y=(m12+m21)/s;this._z=(m13+m31)/s;}else if(m22>m33){s=2.0*Math.sqrt(1.0+m22-m11-m33);this._w=(m13-m31)/s;this._x=(m12+m21)/s;this._y=0.25*s;this._z=(m23+m32)/s;}else{s=2.0*Math.sqrt(1.0+m33-m11-m22);this._w=(m21-m12)/s;this._x=(m13+m31)/s;this._y=(m23+m32)/s;this._z=0.25*s;}this._onChangeCallback();return this;},setFromUnitVectors:function setFromUnitVectors(vFrom,vTo){// assumes direction vectors vFrom and vTo are normalized
var EPS=0.000001;var r=vFrom.dot(vTo)+1;if(r<EPS){r=0;if(Math.abs(vFrom.x)>Math.abs(vFrom.z)){this._x=-vFrom.y;this._y=vFrom.x;this._z=0;this._w=r;}else{this._x=0;this._y=-vFrom.z;this._z=vFrom.y;this._w=r;}}else{// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3
this._x=vFrom.y*vTo.z-vFrom.z*vTo.y;this._y=vFrom.z*vTo.x-vFrom.x*vTo.z;this._z=vFrom.x*vTo.y-vFrom.y*vTo.x;this._w=r;}return this.normalize();},angleTo:function angleTo(q){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(q),-1,1)));},rotateTowards:function rotateTowards(q,step){var angle=this.angleTo(q);if(angle===0)return this;var t=Math.min(1,step/angle);this.slerp(q,t);return this;},inverse:function inverse(){// quaternion is assumed to have unit length
return this.conjugate();},conjugate:function conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this;},dot:function dot(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w;},lengthSq:function lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;},length:function length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);},normalize:function normalize(){var l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l;}this._onChangeCallback();return this;},multiply:function multiply(q,p){if(p!==undefined){console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(q,p);}return this.multiplyQuaternions(this,q);},premultiply:function premultiply(q){return this.multiplyQuaternions(q,this);},multiplyQuaternions:function multiplyQuaternions(a,b){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm
var qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;var qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this._onChangeCallback();return this;},slerp:function slerp(qb,t){if(t===0)return this;if(t===1)return this.copy(qb);var x=this._x,y=this._y,z=this._z,w=this._w;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/
var cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this._w=w;this._x=x;this._y=y;this._z=z;return this;}var sqrSinHalfTheta=1.0-cosHalfTheta*cosHalfTheta;if(sqrSinHalfTheta<=Number.EPSILON){var s=1-t;this._w=s*w+t*this._w;this._x=s*x+t*this._x;this._y=s*y+t*this._y;this._z=s*z+t*this._z;this.normalize();this._onChangeCallback();return this;}var sinHalfTheta=Math.sqrt(sqrSinHalfTheta);var halfTheta=Math.atan2(sinHalfTheta,cosHalfTheta);var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this._onChangeCallback();return this;},equals:function equals(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w;},fromArray:function fromArray(array,offset){if(offset===undefined)offset=0;this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this._onChangeCallback();return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array;},fromBufferAttribute:function fromBufferAttribute(attribute,index){this._x=attribute.getX(index);this._y=attribute.getY(index);this._z=attribute.getZ(index);this._w=attribute.getW(index);return this;},_onChange:function _onChange(callback){this._onChangeCallback=callback;return this;},_onChangeCallback:function _onChangeCallback(){}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */var _vector=new Vector3$1();var _quaternion=new Quaternion();function Vector3$1(x,y,z){this.x=x||0;this.y=y||0;this.z=z||0;}Object.assign(Vector3$1.prototype,{isVector3:true,set:function set(x,y,z){this.x=x;this.y=y;this.z=z;return this;},setScalar:function setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;return this;},setX:function setX(x){this.x=x;return this;},setY:function setY(y){this.y=y;return this;},setZ:function setZ(z){this.z=z;return this;},setComponent:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error('index is out of range: '+index);}return this;},getComponent:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+index);}},clone:function clone(){return new this.constructor(this.x,this.y,this.z);},copy:function copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;},add:function add(v,w){if(w!==undefined){console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;},addScalar:function addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this;},addVectors:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;},addScaledVector:function addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this;},sub:function sub(v,w){if(w!==undefined){console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;},subScalar:function subScalar(s){this.x-=s;this.y-=s;this.z-=s;return this;},subVectors:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;},multiply:function multiply(v,w){if(w!==undefined){console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(v,w);}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this;},multiplyScalar:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this;},multiplyVectors:function multiplyVectors(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;},applyEuler:function applyEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');}return this.applyQuaternion(_quaternion.setFromEuler(euler));},applyAxisAngle:function applyAxisAngle(axis,angle){return this.applyQuaternion(_quaternion.setFromAxisAngle(axis,angle));},applyMatrix3:function applyMatrix3(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this;},applyNormalMatrix:function applyNormalMatrix(m){return this.applyMatrix3(m).normalize();},applyMatrix4:function applyMatrix4(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;var w=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*w;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*w;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*w;return this;},applyQuaternion:function applyQuaternion(q){var x=this.x,y=this.y,z=this.z;var qx=q.x,qy=q.y,qz=q.z,qw=q.w;// calculate quat * vector
var ix=qw*x+qy*z-qz*y;var iy=qw*y+qz*x-qx*z;var iz=qw*z+qx*y-qy*x;var iw=-qx*x-qy*y-qz*z;// calculate result * inverse quat
this.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;},project:function project(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);},unproject:function unproject(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);},transformDirection:function transformDirection(m){// input: THREE.Matrix4 affine matrix
// vector interpreted as a direction
var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;return this.normalize();},divide:function divide(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this;},divideScalar:function divideScalar(scalar){return this.multiplyScalar(1/scalar);},min:function min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this;},max:function max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this;},clamp:function clamp(min,max){// assumes min < max, componentwise
this.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this;},clampScalar:function clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));return this;},clampLength:function clampLength(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));},floor:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;},ceil:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;},round:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;},roundToZero:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this;},negate:function negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this;},dot:function dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;},// TODO lengthSquared?
lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z;},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);},manhattanLength:function manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);},normalize:function normalize(){return this.divideScalar(this.length()||1);},setLength:function setLength(length){return this.normalize().multiplyScalar(length);},lerp:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this;},lerpVectors:function lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;return this;},cross:function cross(v,w){if(w!==undefined){console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(v,w);}return this.crossVectors(this,v);},crossVectors:function crossVectors(a,b){var ax=a.x,ay=a.y,az=a.z;var bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;},projectOnVector:function projectOnVector(v){var denominator=v.lengthSq();if(denominator===0)return this.set(0,0,0);var scalar=v.dot(this)/denominator;return this.copy(v).multiplyScalar(scalar);},projectOnPlane:function projectOnPlane(planeNormal){_vector.copy(this).projectOnVector(planeNormal);return this.sub(_vector);},reflect:function reflect(normal){// reflect incident vector off plane orthogonal to normal
// normal is assumed to have unit length
return this.sub(_vector.copy(normal).multiplyScalar(2*this.dot(normal)));},angleTo:function angleTo(v){var denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(denominator===0)return Math.PI/2;var theta=this.dot(v)/denominator;// clamp, to handle numerical problems
return Math.acos(MathUtils.clamp(theta,-1,1));},distanceTo:function distanceTo(v){return Math.sqrt(this.distanceToSquared(v));},distanceToSquared:function distanceToSquared(v){var dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;},manhattanDistanceTo:function manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z);},setFromSpherical:function setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta);},setFromSphericalCoords:function setFromSphericalCoords(radius,phi,theta){var sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this;},setFromCylindrical:function setFromCylindrical(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y);},setFromCylindricalCoords:function setFromCylindricalCoords(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this;},setFromMatrixPosition:function setFromMatrixPosition(m){var e=m.elements;this.x=e[12];this.y=e[13];this.z=e[14];return this;},setFromMatrixScale:function setFromMatrixScale(m){var sx=this.setFromMatrixColumn(m,0).length();var sy=this.setFromMatrixColumn(m,1).length();var sz=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=sz;return this;},setFromMatrixColumn:function setFromMatrixColumn(m,index){return this.fromArray(m.elements,index*4);},setFromMatrix3Column:function setFromMatrix3Column(m,index){return this.fromArray(m.elements,index*3);},equals:function equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z;},fromArray:function fromArray(array,offset){if(offset===undefined)offset=0;this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array;},fromBufferAttribute:function fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this;},random:function random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this;}});var _v1=new Vector3$1();var _m1=new Matrix4();var _zero=new Vector3$1(0,0,0);var _one=new Vector3$1(1,1,1);var _x=new Vector3$1();var _y=new Vector3$1();var _z=new Vector3$1();/**
 * @author mrdoob / http://mrdoob.com/
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author jordi_ros / http://plattsoft.com
 * @author D1plo1d / http://github.com/D1plo1d
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author timknip / http://www.floorplanner.com/
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');}}Object.assign(Matrix4.prototype,{isMatrix4:true,set:function set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;},identity:function identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;},clone:function clone(){return new Matrix4().fromArray(this.elements);},copy:function copy(m){var te=this.elements;var me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];te[9]=me[9];te[10]=me[10];te[11]=me[11];te[12]=me[12];te[13]=me[13];te[14]=me[14];te[15]=me[15];return this;},copyPosition:function copyPosition(m){var te=this.elements,me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this;},extractBasis:function extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this;},makeBasis:function makeBasis(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this;},extractRotation:function extractRotation(m){// this method does not support reflection matrices
var te=this.elements;var me=m.elements;var scaleX=1/_v1.setFromMatrixColumn(m,0).length();var scaleY=1/_v1.setFromMatrixColumn(m,1).length();var scaleZ=1/_v1.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;},makeRotationFromEuler:function makeRotationFromEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');}var te=this.elements;var x=euler.x,y=euler.y,z=euler.z;var a=Math.cos(x),b=Math.sin(x);var c=Math.cos(y),d=Math.sin(y);var e=Math.cos(z),f=Math.sin(z);if(euler.order==='XYZ'){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else if(euler.order==='YXZ'){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c;}else if(euler.order==='ZXY'){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b;te[4]=-a*f;te[8]=de+cf*b;te[1]=cf+de*b;te[5]=a*e;te[9]=df-ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c;}else if(euler.order==='ZYX'){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=be*d-af;te[8]=ae*d+bf;te[1]=c*f;te[5]=bf*d+ae;te[9]=af*d-be;te[2]=-d;te[6]=b*c;te[10]=a*c;}else if(euler.order==='YZX'){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f;}else if(euler.order==='XZY'){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=ac*f+bd;te[5]=a*e;te[9]=ad*f-bc;te[2]=bc*f-ad;te[6]=b*e;te[10]=bd*f+ac;}// bottom row
te[3]=0;te[7]=0;te[11]=0;// last column
te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;},makeRotationFromQuaternion:function makeRotationFromQuaternion(q){return this.compose(_zero,q,_one);},lookAt:function lookAt(eye,target,up){var te=this.elements;_z.subVectors(eye,target);if(_z.lengthSq()===0){// eye and target are in the same position
_z.z=1;}_z.normalize();_x.crossVectors(up,_z);if(_x.lengthSq()===0){// up and z are parallel
if(Math.abs(up.z)===1){_z.x+=0.0001;}else{_z.z+=0.0001;}_z.normalize();_x.crossVectors(up,_z);}_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this;},multiply:function multiply(m,n){if(n!==undefined){console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(m,n);}return this.multiplyMatrices(this,m);},premultiply:function premultiply(m){return this.multiplyMatrices(m,this);},multiplyMatrices:function multiplyMatrices(a,b){var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];var a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];var a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];var a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12];var b21=be[1],b22=be[5],b23=be[9],b24=be[13];var b31=be[2],b32=be[6],b33=be[10],b34=be[14];var b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;},multiplyScalar:function multiplyScalar(s){var te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;},determinant:function determinant(){var te=this.elements;var n11=te[0],n12=te[4],n13=te[8],n14=te[12];var n21=te[1],n22=te[5],n23=te[9],n24=te[13];var n31=te[2],n32=te[6],n33=te[10],n34=te[14];var n41=te[3],n42=te[7],n43=te[11],n44=te[15];//TODO: make this more efficient
//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )
return n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31);},transpose:function transpose(){var te=this.elements;var tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;},setPosition:function setPosition(x,y,z){var te=this.elements;if(x.isVector3){te[12]=x.x;te[13]=x.y;te[14]=x.z;}else{te[12]=x;te[13]=y;te[14]=z;}return this;},getInverse:function getInverse(m,throwOnDegenerate){if(throwOnDegenerate!==undefined){console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");}// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
var te=this.elements,me=m.elements,n11=me[0],n21=me[1],n31=me[2],n41=me[3],n12=me[4],n22=me[5],n32=me[6],n42=me[7],n13=me[8],n23=me[9],n33=me[10],n43=me[11],n14=me[12],n24=me[13],n34=me[14],n44=me[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;var det=n11*t11+n21*t12+n31*t13+n41*t14;if(det===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var detInv=1/det;te[0]=t11*detInv;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*detInv;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*detInv;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*detInv;te[4]=t12*detInv;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*detInv;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*detInv;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*detInv;te[8]=t13*detInv;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*detInv;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*detInv;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*detInv;te[12]=t14*detInv;te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*detInv;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*detInv;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*detInv;return this;},scale:function scale(v){var te=this.elements;var x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;},getMaxScaleOnAxis:function getMaxScaleOnAxis(){var te=this.elements;var scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];var scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];var scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,scaleYSq,scaleZSq));},makeTranslation:function makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;},makeRotationX:function makeRotationX(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this;},makeRotationY:function makeRotationY(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this;},makeRotationZ:function makeRotationZ(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this;},makeRotationAxis:function makeRotationAxis(axis,angle){// Based on http://www.gamedev.net/reference/articles/article1199.asp
var c=Math.cos(angle);var s=Math.sin(angle);var t=1-c;var x=axis.x,y=axis.y,z=axis.z;var tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this;},makeScale:function makeScale(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this;},makeShear:function makeShear(x,y,z){this.set(1,y,z,0,x,1,z,0,x,y,1,0,0,0,0,1);return this;},compose:function compose(position,quaternion,scale){var te=this.elements;var x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w;var x2=x+x,y2=y+y,z2=z+z;var xx=x*x2,xy=x*y2,xz=x*z2;var yy=y*y2,yz=y*z2,zz=z*z2;var wx=w*x2,wy=w*y2,wz=w*z2;var sx=scale.x,sy=scale.y,sz=scale.z;te[0]=(1-(yy+zz))*sx;te[1]=(xy+wz)*sx;te[2]=(xz-wy)*sx;te[3]=0;te[4]=(xy-wz)*sy;te[5]=(1-(xx+zz))*sy;te[6]=(yz+wx)*sy;te[7]=0;te[8]=(xz+wy)*sz;te[9]=(yz-wx)*sz;te[10]=(1-(xx+yy))*sz;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this;},decompose:function decompose(position,quaternion,scale){var te=this.elements;var sx=_v1.set(te[0],te[1],te[2]).length();var sy=_v1.set(te[4],te[5],te[6]).length();var sz=_v1.set(te[8],te[9],te[10]).length();// if determine is negative, we need to invert one scale
var det=this.determinant();if(det<0)sx=-sx;position.x=te[12];position.y=te[13];position.z=te[14];// scale the rotation part
_m1.copy(this);var invSX=1/sx;var invSY=1/sy;var invSZ=1/sz;_m1.elements[0]*=invSX;_m1.elements[1]*=invSX;_m1.elements[2]*=invSX;_m1.elements[4]*=invSY;_m1.elements[5]*=invSY;_m1.elements[6]*=invSY;_m1.elements[8]*=invSZ;_m1.elements[9]*=invSZ;_m1.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1);scale.x=sx;scale.y=sy;scale.z=sz;return this;},makePerspective:function makePerspective(left,right,top,bottom,near,far){if(far===undefined){console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');}var te=this.elements;var x=2*near/(right-left);var y=2*near/(top-bottom);var a=(right+left)/(right-left);var b=(top+bottom)/(top-bottom);var c=-(far+near)/(far-near);var d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this;},makeOrthographic:function makeOrthographic(left,right,top,bottom,near,far){var te=this.elements;var w=1.0/(right-left);var h=1.0/(top-bottom);var p=1.0/(far-near);var x=(right+left)*w;var y=(top+bottom)*h;var z=(far+near)*p;te[0]=2*w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2*h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;},equals:function equals(matrix){var te=this.elements;var me=matrix.elements;for(var i=0;i<16;i++){if(te[i]!==me[i])return false;}return true;},fromArray:function fromArray(array,offset){if(offset===undefined)offset=0;for(var i=0;i<16;i++){this.elements[i]=array[i+offset];}return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array;}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */var _matrix=new Matrix4();var _quaternion$1=new Quaternion();function Euler(x,y,z,order){this._x=x||0;this._y=y||0;this._z=z||0;this._order=order||Euler.DefaultOrder;}Euler.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];Euler.DefaultOrder='XYZ';Object.defineProperties(Euler.prototype,{x:{get:function get(){return this._x;},set:function set(value){this._x=value;this._onChangeCallback();}},y:{get:function get(){return this._y;},set:function set(value){this._y=value;this._onChangeCallback();}},z:{get:function get(){return this._z;},set:function set(value){this._z=value;this._onChangeCallback();}},order:{get:function get(){return this._order;},set:function set(value){this._order=value;this._onChangeCallback();}}});Object.assign(Euler.prototype,{isEuler:true,set:function set(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this._onChangeCallback();return this;},clone:function clone(){return new this.constructor(this._x,this._y,this._z,this._order);},copy:function copy(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._onChangeCallback();return this;},setFromRotationMatrix:function setFromRotationMatrix(m,order,update){var clamp=MathUtils.clamp;// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var te=m.elements;var m11=te[0],m12=te[4],m13=te[8];var m21=te[1],m22=te[5],m23=te[9];var m31=te[2],m32=te[6],m33=te[10];order=order||this._order;switch(order){case'XYZ':this._y=Math.asin(clamp(m13,-1,1));if(Math.abs(m13)<0.9999999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11);}else{this._x=Math.atan2(m32,m22);this._z=0;}break;case'YXZ':this._x=Math.asin(-clamp(m23,-1,1));if(Math.abs(m23)<0.9999999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22);}else{this._y=Math.atan2(-m31,m11);this._z=0;}break;case'ZXY':this._x=Math.asin(clamp(m32,-1,1));if(Math.abs(m32)<0.9999999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22);}else{this._y=0;this._z=Math.atan2(m21,m11);}break;case'ZYX':this._y=Math.asin(-clamp(m31,-1,1));if(Math.abs(m31)<0.9999999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11);}else{this._x=0;this._z=Math.atan2(-m12,m22);}break;case'YZX':this._z=Math.asin(clamp(m21,-1,1));if(Math.abs(m21)<0.9999999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11);}else{this._x=0;this._y=Math.atan2(m13,m33);}break;case'XZY':this._z=Math.asin(-clamp(m12,-1,1));if(Math.abs(m12)<0.9999999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11);}else{this._x=Math.atan2(-m23,m33);this._y=0;}break;default:console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: '+order);}this._order=order;if(update!==false)this._onChangeCallback();return this;},setFromQuaternion:function setFromQuaternion(q,order,update){_matrix.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(_matrix,order,update);},setFromVector3:function setFromVector3(v,order){return this.set(v.x,v.y,v.z,order||this._order);},reorder:function reorder(newOrder){// WARNING: this discards revolution information -bhouston
_quaternion$1.setFromEuler(this);return this.setFromQuaternion(_quaternion$1,newOrder);},equals:function equals(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order;},fromArray:function fromArray(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this._onChangeCallback();return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array;},toVector3:function toVector3(optionalResult){if(optionalResult){return optionalResult.set(this._x,this._y,this._z);}else{return new Vector3$1(this._x,this._y,this._z);}},_onChange:function _onChange(callback){this._onChangeCallback=callback;return this;},_onChangeCallback:function _onChangeCallback(){}});/**
 * @author mrdoob / http://mrdoob.com/
 */function Layers(){this.mask=1|0;}Object.assign(Layers.prototype,{set:function set(channel){this.mask=1<<channel|0;},enable:function enable(channel){this.mask|=1<<channel|0;},enableAll:function enableAll(){this.mask=0xffffffff|0;},toggle:function toggle(channel){this.mask^=1<<channel|0;},disable:function disable(channel){this.mask&=~(1<<channel|0);},disableAll:function disableAll(){this.mask=0;},test:function test(layers){return(this.mask&layers.mask)!==0;}});var _object3DId=0;var _v1$1=new Vector3$1();var _q1=new Quaternion();var _m1$1=new Matrix4();var _target=new Vector3$1();var _position=new Vector3$1();var _scale=new Vector3$1();var _quaternion$2=new Quaternion();var _xAxis=new Vector3$1(1,0,0);var _yAxis=new Vector3$1(0,1,0);var _zAxis=new Vector3$1(0,0,1);var _addedEvent={type:'added'};var _removedEvent={type:'removed'};/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author elephantatwork / www.elephantatwork.ch
 */function Object3D(){Object.defineProperty(this,'id',{value:_object3DId++});this.uuid=MathUtils.generateUUID();this.name='';this.type='Object3D';this.parent=null;this.children=[];this.up=Object3D.DefaultUp.clone();var position=new Vector3$1();var rotation=new Euler();var quaternion=new Quaternion();var scale=new Vector3$1(1,1,1);function onRotationChange(){quaternion.setFromEuler(rotation,false);}function onQuaternionChange(){rotation.setFromQuaternion(quaternion,undefined,false);}rotation._onChange(onRotationChange);quaternion._onChange(onQuaternionChange);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:position},rotation:{configurable:true,enumerable:true,value:rotation},quaternion:{configurable:true,enumerable:true,value:quaternion},scale:{configurable:true,enumerable:true,value:scale},modelViewMatrix:{value:new Matrix4()},normalMatrix:{value:new Matrix3()}});this.matrix=new Matrix4();this.matrixWorld=new Matrix4();this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new Layers();this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.userData={};}Object3D.DefaultUp=new Vector3$1(0,1,0);Object3D.DefaultMatrixAutoUpdate=true;Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:true,onBeforeRender:function onBeforeRender(){},onAfterRender:function onAfterRender(){},applyMatrix4:function applyMatrix4(matrix){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);},applyQuaternion:function applyQuaternion(q){this.quaternion.premultiply(q);return this;},setRotationFromAxisAngle:function setRotationFromAxisAngle(axis,angle){// assumes axis is normalized
this.quaternion.setFromAxisAngle(axis,angle);},setRotationFromEuler:function setRotationFromEuler(euler){this.quaternion.setFromEuler(euler,true);},setRotationFromMatrix:function setRotationFromMatrix(m){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
this.quaternion.setFromRotationMatrix(m);},setRotationFromQuaternion:function setRotationFromQuaternion(q){// assumes q is normalized
this.quaternion.copy(q);},rotateOnAxis:function rotateOnAxis(axis,angle){// rotate object on axis in object space
// axis is assumed to be normalized
_q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(_q1);return this;},rotateOnWorldAxis:function rotateOnWorldAxis(axis,angle){// rotate object on axis in world space
// axis is assumed to be normalized
// method assumes no rotated parent
_q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(_q1);return this;},rotateX:function rotateX(angle){return this.rotateOnAxis(_xAxis,angle);},rotateY:function rotateY(angle){return this.rotateOnAxis(_yAxis,angle);},rotateZ:function rotateZ(angle){return this.rotateOnAxis(_zAxis,angle);},translateOnAxis:function translateOnAxis(axis,distance){// translate object by distance along axis in object space
// axis is assumed to be normalized
_v1$1.copy(axis).applyQuaternion(this.quaternion);this.position.add(_v1$1.multiplyScalar(distance));return this;},translateX:function translateX(distance){return this.translateOnAxis(_xAxis,distance);},translateY:function translateY(distance){return this.translateOnAxis(_yAxis,distance);},translateZ:function translateZ(distance){return this.translateOnAxis(_zAxis,distance);},localToWorld:function localToWorld(vector){return vector.applyMatrix4(this.matrixWorld);},worldToLocal:function worldToLocal(vector){return vector.applyMatrix4(_m1$1.getInverse(this.matrixWorld));},lookAt:function lookAt(x,y,z){// This method does not support objects having non-uniformly-scaled parent(s)
if(x.isVector3){_target.copy(x);}else{_target.set(x,y,z);}var parent=this.parent;this.updateWorldMatrix(true,false);_position.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){_m1$1.lookAt(_position,_target,this.up);}else{_m1$1.lookAt(_target,_position,this.up);}this.quaternion.setFromRotationMatrix(_m1$1);if(parent){_m1$1.extractRotation(parent.matrixWorld);_q1.setFromRotationMatrix(_m1$1);this.quaternion.premultiply(_q1.inverse());}},add:function add(object){if(arguments.length>1){for(var i=0;i<arguments.length;i++){this.add(arguments[i]);}return this;}if(object===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",object);return this;}if(object&&object.isObject3D){if(object.parent!==null){object.parent.remove(object);}object.parent=this;this.children.push(object);object.dispatchEvent(_addedEvent);}else{console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object);}return this;},remove:function remove(object){if(arguments.length>1){for(var i=0;i<arguments.length;i++){this.remove(arguments[i]);}return this;}var index=this.children.indexOf(object);if(index!==-1){object.parent=null;this.children.splice(index,1);object.dispatchEvent(_removedEvent);}return this;},attach:function attach(object){// adds object as a child of this, while maintaining the object's world transform
this.updateWorldMatrix(true,false);_m1$1.getInverse(this.matrixWorld);if(object.parent!==null){object.parent.updateWorldMatrix(true,false);_m1$1.multiply(object.parent.matrixWorld);}object.applyMatrix4(_m1$1);object.updateWorldMatrix(false,false);this.add(object);return this;},getObjectById:function getObjectById(id){return this.getObjectByProperty('id',id);},getObjectByName:function getObjectByName(name){return this.getObjectByProperty('name',name);},getObjectByProperty:function getObjectByProperty(name,value){if(this[name]===value)return this;for(var i=0,l=this.children.length;i<l;i++){var child=this.children[i];var object=child.getObjectByProperty(name,value);if(object!==undefined){return object;}}return undefined;},getWorldPosition:function getWorldPosition(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldPosition() target is now required');target=new Vector3$1();}this.updateMatrixWorld(true);return target.setFromMatrixPosition(this.matrixWorld);},getWorldQuaternion:function getWorldQuaternion(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');target=new Quaternion();}this.updateMatrixWorld(true);this.matrixWorld.decompose(_position,target,_scale);return target;},getWorldScale:function getWorldScale(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldScale() target is now required');target=new Vector3$1();}this.updateMatrixWorld(true);this.matrixWorld.decompose(_position,_quaternion$2,target);return target;},getWorldDirection:function getWorldDirection(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldDirection() target is now required');target=new Vector3$1();}this.updateMatrixWorld(true);var e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize();},raycast:function raycast(){},traverse:function traverse(callback){callback(this);var children=this.children;for(var i=0,l=children.length;i<l;i++){children[i].traverse(callback);}},traverseVisible:function traverseVisible(callback){if(this.visible===false)return;callback(this);var children=this.children;for(var i=0,l=children.length;i<l;i++){children[i].traverseVisible(callback);}},traverseAncestors:function traverseAncestors(callback){var parent=this.parent;if(parent!==null){callback(parent);parent.traverseAncestors(callback);}},updateMatrix:function updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;},updateMatrixWorld:function updateMatrixWorld(force){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}// update children
var children=this.children;for(var i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(force);}},updateWorldMatrix:function updateWorldMatrix(updateParents,updateChildren){var parent=this.parent;if(updateParents===true&&parent!==null){parent.updateWorldMatrix(true,false);}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}// update children
if(updateChildren===true){var children=this.children;for(var i=0,l=children.length;i<l;i++){children[i].updateWorldMatrix(false,true);}}},toJSON:function toJSON(meta){// meta is a string when called from JSON.stringify
var isRootObject=meta===undefined||typeof meta==='string';var output={};// meta is a hash used to collect geometries, materials.
// not providing it implies that this is the root object
// being serialized.
if(isRootObject){// initialize meta obj
meta={geometries:{},materials:{},textures:{},images:{},shapes:{}};output.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'};}// standard Object3D serialization
var object={};object.uuid=this.uuid;object.type=this.type;if(this.name!=='')object.name=this.name;if(this.castShadow===true)object.castShadow=true;if(this.receiveShadow===true)object.receiveShadow=true;if(this.visible===false)object.visible=false;if(this.frustumCulled===false)object.frustumCulled=false;if(this.renderOrder!==0)object.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=='{}')object.userData=this.userData;object.layers=this.layers.mask;object.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)object.matrixAutoUpdate=false;// object specific properties
if(this.isInstancedMesh){object.type='InstancedMesh';object.count=this.count;object.instanceMatrix=this.instanceMatrix.toJSON();}//
function serialize(library,element){if(library[element.uuid]===undefined){library[element.uuid]=element.toJSON(meta);}return element.uuid;}if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);var parameters=this.geometry.parameters;if(parameters!==undefined&&parameters.shapes!==undefined){var shapes=parameters.shapes;if(Array.isArray(shapes)){for(var i=0,l=shapes.length;i<l;i++){var shape=shapes[i];serialize(meta.shapes,shape);}}else{serialize(meta.shapes,shapes);}}}if(this.material!==undefined){if(Array.isArray(this.material)){var uuids=[];for(var i=0,l=this.material.length;i<l;i++){uuids.push(serialize(meta.materials,this.material[i]));}object.material=uuids;}else{object.material=serialize(meta.materials,this.material);}}//
if(this.children.length>0){object.children=[];for(var i=0;i<this.children.length;i++){object.children.push(this.children[i].toJSON(meta).object);}}if(isRootObject){var geometries=extractFromCache(meta.geometries);var materials=extractFromCache(meta.materials);var textures=extractFromCache(meta.textures);var images=extractFromCache(meta.images);var shapes=extractFromCache(meta.shapes);if(geometries.length>0)output.geometries=geometries;if(materials.length>0)output.materials=materials;if(textures.length>0)output.textures=textures;if(images.length>0)output.images=images;if(shapes.length>0)output.shapes=shapes;}output.object=object;return output;// extract data from the cache hash
// remove metadata on each item
// and return as array
function extractFromCache(cache){var values=[];for(var key in cache){var data=cache[key];delete data.metadata;values.push(data);}return values;}},clone:function clone(recursive){return new this.constructor().copy(this,recursive);},copy:function copy(source,recursive){if(recursive===undefined)recursive=true;this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));if(recursive===true){for(var i=0;i<source.children.length;i++){var child=source.children[i];this.add(child.clone());}}return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function Scene(){Object3D.call(this);this.type='Scene';this.background=null;this.environment=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;// checked by the renderer
if(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef
}}Scene.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Scene,isScene:true,copy:function copy(source,recursive){Object3D.prototype.copy.call(this,source,recursive);if(source.background!==null)this.background=source.background.clone();if(source.environment!==null)this.environment=source.environment.clone();if(source.fog!==null)this.fog=source.fog.clone();if(source.overrideMaterial!==null)this.overrideMaterial=source.overrideMaterial.clone();this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this;},toJSON:function toJSON(meta){var data=Object3D.prototype.toJSON.call(this,meta);if(this.background!==null)data.object.background=this.background.toJSON(meta);if(this.environment!==null)data.object.environment=this.environment.toJSON(meta);if(this.fog!==null)data.object.fog=this.fog.toJSON();return data;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}});var _points=[new Vector3$1(),new Vector3$1(),new Vector3$1(),new Vector3$1(),new Vector3$1(),new Vector3$1(),new Vector3$1(),new Vector3$1()];var _vector$1=new Vector3$1();var _box=new Box3();// triangle centered vertices
var _v0=new Vector3$1();var _v1$2=new Vector3$1();var _v2=new Vector3$1();// triangle edge vectors
var _f0=new Vector3$1();var _f1=new Vector3$1();var _f2=new Vector3$1();var _center=new Vector3$1();var _extents=new Vector3$1();var _triangleNormal=new Vector3$1();var _testAxis=new Vector3$1();/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */function Box3(min,max){this.min=min!==undefined?min:new Vector3$1(+Infinity,+Infinity,+Infinity);this.max=max!==undefined?max:new Vector3$1(-Infinity,-Infinity,-Infinity);}Object.assign(Box3.prototype,{isBox3:true,set:function set(min,max){this.min.copy(min);this.max.copy(max);return this;},setFromArray:function setFromArray(array){var minX=+Infinity;var minY=+Infinity;var minZ=+Infinity;var maxX=-Infinity;var maxY=-Infinity;var maxZ=-Infinity;for(var i=0,l=array.length;i<l;i+=3){var x=array[i];var y=array[i+1];var z=array[i+2];if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;},setFromBufferAttribute:function setFromBufferAttribute(attribute){var minX=+Infinity;var minY=+Infinity;var minZ=+Infinity;var maxX=-Infinity;var maxY=-Infinity;var maxZ=-Infinity;for(var i=0,l=attribute.count;i<l;i++){var x=attribute.getX(i);var y=attribute.getY(i);var z=attribute.getZ(i);if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;},setFromPoints:function setFromPoints(points){this.makeEmpty();for(var i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;},setFromCenterAndSize:function setFromCenterAndSize(center,size){var halfSize=_vector$1.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;},setFromObject:function setFromObject(object){this.makeEmpty();return this.expandByObject(object);},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;},makeEmpty:function makeEmpty(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;},isEmpty:function isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;},getCenter:function getCenter(target){if(target===undefined){console.warn('THREE.Box3: .getCenter() target is now required');target=new Vector3$1();}return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);},getSize:function getSize(target){if(target===undefined){console.warn('THREE.Box3: .getSize() target is now required');target=new Vector3$1();}return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min);},expandByPoint:function expandByPoint(point){this.min.min(point);this.max.max(point);return this;},expandByVector:function expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;},expandByScalar:function expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;},expandByObject:function expandByObject(object){// Computes the world-axis-aligned bounding box of an object (including its children),
// accounting for both the object's, and children's, world transforms
object.updateWorldMatrix(false,false);var geometry=object.geometry;if(geometry!==undefined){if(geometry.boundingBox===null){geometry.computeBoundingBox();}_box.copy(geometry.boundingBox);_box.applyMatrix4(object.matrixWorld);this.union(_box);}var children=object.children;for(var i=0,l=children.length;i<l;i++){this.expandByObject(children[i]);}return this;},containsPoint:function containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?false:true;},containsBox:function containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z;},getParameter:function getParameter(point,target){// This can potentially have a divide by zero if the box
// has a size dimension of 0.
if(target===undefined){console.warn('THREE.Box3: .getParameter() target is now required');target=new Vector3$1();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z));},intersectsBox:function intersectsBox(box){// using 6 splitting planes to rule out intersections.
return box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?false:true;},intersectsSphere:function intersectsSphere(sphere){// Find the point on the AABB closest to the sphere center.
this.clampPoint(sphere.center,_vector$1);// If that point is inside the sphere, the AABB and sphere intersect.
return _vector$1.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius;},intersectsPlane:function intersectsPlane(plane){// We compute the minimum and maximum dot product values. If those values
// are on the same side (back or front) of the plane, then there is no intersection.
var min,max;if(plane.normal.x>0){min=plane.normal.x*this.min.x;max=plane.normal.x*this.max.x;}else{min=plane.normal.x*this.max.x;max=plane.normal.x*this.min.x;}if(plane.normal.y>0){min+=plane.normal.y*this.min.y;max+=plane.normal.y*this.max.y;}else{min+=plane.normal.y*this.max.y;max+=plane.normal.y*this.min.y;}if(plane.normal.z>0){min+=plane.normal.z*this.min.z;max+=plane.normal.z*this.max.z;}else{min+=plane.normal.z*this.max.z;max+=plane.normal.z*this.min.z;}return min<=-plane.constant&&max>=-plane.constant;},intersectsTriangle:function intersectsTriangle(triangle){if(this.isEmpty()){return false;}// compute box center and extents
this.getCenter(_center);_extents.subVectors(this.max,_center);// translate triangle to aabb origin
_v0.subVectors(triangle.a,_center);_v1$2.subVectors(triangle.b,_center);_v2.subVectors(triangle.c,_center);// compute edge vectors for triangle
_f0.subVectors(_v1$2,_v0);_f1.subVectors(_v2,_v1$2);_f2.subVectors(_v0,_v2);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb
// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation
// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)
var axes=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];if(!satForAxes(axes,_v0,_v1$2,_v2,_extents)){return false;}// test 3 face normals from the aabb
axes=[1,0,0,0,1,0,0,0,1];if(!satForAxes(axes,_v0,_v1$2,_v2,_extents)){return false;}// finally testing the face normal of the triangle
// use already existing triangle edge vectors here
_triangleNormal.crossVectors(_f0,_f1);axes=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z];return satForAxes(axes,_v0,_v1$2,_v2,_extents);},clampPoint:function clampPoint(point,target){if(target===undefined){console.warn('THREE.Box3: .clampPoint() target is now required');target=new Vector3$1();}return target.copy(point).clamp(this.min,this.max);},distanceToPoint:function distanceToPoint(point){var clampedPoint=_vector$1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();},getBoundingSphere:function getBoundingSphere(target){if(target===undefined){console.error('THREE.Box3: .getBoundingSphere() target is now required');//target = new Sphere(); // removed to avoid cyclic dependency
}this.getCenter(target.center);target.radius=this.getSize(_vector$1).length()*0.5;return target;},intersect:function intersect(box){this.min.max(box.min);this.max.min(box.max);// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
if(this.isEmpty())this.makeEmpty();return this;},union:function union(box){this.min.min(box.min);this.max.max(box.max);return this;},applyMatrix4:function applyMatrix4(matrix){// transform of empty box is an empty box.
if(this.isEmpty())return this;// NOTE: I am using a binary pattern to specify all 2^3 combinations below
_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);// 000
_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);// 001
_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);// 010
_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);// 011
_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);// 100
_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);// 101
_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);// 110
_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);// 111
this.setFromPoints(_points);return this;},translate:function translate(offset){this.min.add(offset);this.max.add(offset);return this;},equals:function equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}});function satForAxes(axes,v0,v1,v2,extents){var i,j;for(i=0,j=axes.length-3;i<=j;i+=3){_testAxis.fromArray(axes,i);// project the aabb onto the seperating axis
var r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z);// project all 3 vertices of the triangle onto the seperating axis
var p0=v0.dot(_testAxis);var p1=v1.dot(_testAxis);var p2=v2.dot(_testAxis);// actual test, basically see if either of the most extreme of the triangle points intersects r
if(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r){// points of the projected triangle are outside the projected half-length of the aabb
// the axis is seperating and we can exit
return false;}}return true;}var _box$1=new Box3();/**
 * @author bhouston / http://clara.io
 * @author mrdoob / http://mrdoob.com/
 */function Sphere(center,radius){this.center=center!==undefined?center:new Vector3$1();this.radius=radius!==undefined?radius:-1;}Object.assign(Sphere.prototype,{set:function set(center,radius){this.center.copy(center);this.radius=radius;return this;},setFromPoints:function setFromPoints(points,optionalCenter){var center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter);}else{_box$1.setFromPoints(points).getCenter(center);}var maxRadiusSq=0;for(var i=0,il=points.length;i<il;i++){maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]));}this.radius=Math.sqrt(maxRadiusSq);return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;},isEmpty:function isEmpty(){return this.radius<0;},makeEmpty:function makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this;},containsPoint:function containsPoint(point){return point.distanceToSquared(this.center)<=this.radius*this.radius;},distanceToPoint:function distanceToPoint(point){return point.distanceTo(this.center)-this.radius;},intersectsSphere:function intersectsSphere(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum;},intersectsBox:function intersectsBox(box){return box.intersectsSphere(this);},intersectsPlane:function intersectsPlane(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius;},clampPoint:function clampPoint(point,target){var deltaLengthSq=this.center.distanceToSquared(point);if(target===undefined){console.warn('THREE.Sphere: .clampPoint() target is now required');target=new Vector3$1();}target.copy(point);if(deltaLengthSq>this.radius*this.radius){target.sub(this.center).normalize();target.multiplyScalar(this.radius).add(this.center);}return target;},getBoundingBox:function getBoundingBox(target){if(target===undefined){console.warn('THREE.Sphere: .getBoundingBox() target is now required');target=new Box3();}if(this.isEmpty()){// Empty sphere produces empty bounding box
target.makeEmpty();return target;}target.set(this.center,this.center);target.expandByScalar(this.radius);return target;},applyMatrix4:function applyMatrix4(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;},translate:function translate(offset){this.center.add(offset);return this;},equals:function equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;}});var _vector$2=new Vector3$1();var _segCenter=new Vector3$1();var _segDir=new Vector3$1();var _diff=new Vector3$1();var _edge1=new Vector3$1();var _edge2=new Vector3$1();var _normal=new Vector3$1();/**
 * @author bhouston / http://clara.io
 */function Ray(origin,direction){this.origin=origin!==undefined?origin:new Vector3$1();this.direction=direction!==undefined?direction:new Vector3$1(0,0,-1);}Object.assign(Ray.prototype,{set:function set(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;},at:function at(t,target){if(target===undefined){console.warn('THREE.Ray: .at() target is now required');target=new Vector3$1();}return target.copy(this.direction).multiplyScalar(t).add(this.origin);},lookAt:function lookAt(v){this.direction.copy(v).sub(this.origin).normalize();return this;},recast:function recast(t){this.origin.copy(this.at(t,_vector$2));return this;},closestPointToPoint:function closestPointToPoint(point,target){if(target===undefined){console.warn('THREE.Ray: .closestPointToPoint() target is now required');target=new Vector3$1();}target.subVectors(point,this.origin);var directionDistance=target.dot(this.direction);if(directionDistance<0){return target.copy(this.origin);}return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);},distanceToPoint:function distanceToPoint(point){return Math.sqrt(this.distanceSqToPoint(point));},distanceSqToPoint:function distanceSqToPoint(point){var directionDistance=_vector$2.subVectors(point,this.origin).dot(this.direction);// point behind the ray
if(directionDistance<0){return this.origin.distanceToSquared(point);}_vector$2.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return _vector$2.distanceToSquared(point);},distanceSqToSegment:function distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h
// It returns the min distance between the ray and the segment
// defined by v0 and v1
// It can also set two optional targets :
// - The closest point on the ray
// - The closest point on the segment
_segCenter.copy(v0).add(v1).multiplyScalar(0.5);_segDir.copy(v1).sub(v0).normalize();_diff.copy(this.origin).sub(_segCenter);var segExtent=v0.distanceTo(v1)*0.5;var a01=-this.direction.dot(_segDir);var b0=_diff.dot(this.direction);var b1=-_diff.dot(_segDir);var c=_diff.lengthSq();var det=Math.abs(1-a01*a01);var s0,s1,sqrDist,extDet;if(det>0){// The ray and segment are not parallel.
s0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){// region 0
// Minimum at interior points of ray and segment.
var invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c;}else{// region 1
s1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{// region 5
s1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{if(s1<=-extDet){// region 4
s0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}else if(s1<=extDet){// region 3
s0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c;}else{// region 2
s0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}}else{// Ray and segment are parallel.
s1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);}if(optionalPointOnSegment){optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);}return sqrDist;},intersectSphere:function intersectSphere(sphere,target){_vector$2.subVectors(sphere.center,this.origin);var tca=_vector$2.dot(this.direction);var d2=_vector$2.dot(_vector$2)-tca*tca;var radius2=sphere.radius*sphere.radius;if(d2>radius2)return null;var thc=Math.sqrt(radius2-d2);// t0 = first intersect point - entrance on front of sphere
var t0=tca-thc;// t1 = second intersect point - exit point on back of sphere
var t1=tca+thc;// test to see if both t0 and t1 are behind the ray - if so, return null
if(t0<0&&t1<0)return null;// test to see if t0 is behind the ray:
// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
// in order to always return an intersect point that is in front of the ray.
if(t0<0)return this.at(t1,target);// else t0 is in front of the ray, so return the first collision point scaled by t0
return this.at(t0,target);},intersectsSphere:function intersectsSphere(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius;},distanceToPlane:function distanceToPlane(plane){var denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin
if(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined
return null;}var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;// Return if the ray never intersects the plane
return t>=0?t:null;},intersectPlane:function intersectPlane(plane,target){var t=this.distanceToPlane(plane);if(t===null){return null;}return this.at(t,target);},intersectsPlane:function intersectsPlane(plane){// check if the ray lies on the plane first
var distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true;}var denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true;}// ray origin is behind the plane (and is pointing behind it)
return false;},intersectBox:function intersectBox(box,target){var tmin,tmax,tymin,tymax,tzmin,tzmax;var invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;var origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx;}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx;}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry;}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry;}if(tmin>tymax||tymin>tmax)return null;// These lines also handle the case where tmin or tmax is NaN
// (result of 0 * Infinity). x !== x returns true if x is NaN
if(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz;}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz;}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;//return point closest to the ray (positive side)
if(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,target);},intersectsBox:function intersectsBox(box){return this.intersectBox(box,_vector$2)!==null;},intersectTriangle:function intersectTriangle(a,b,c,backfaceCulling,target){// Compute the offset origin, edges, and normal.
// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h
_edge1.subVectors(b,a);_edge2.subVectors(c,a);_normal.crossVectors(_edge1,_edge2);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
var DdN=this.direction.dot(_normal);var sign;if(DdN>0){if(backfaceCulling)return null;sign=1;}else if(DdN<0){sign=-1;DdN=-DdN;}else{return null;}_diff.subVectors(this.origin,a);var DdQxE2=sign*this.direction.dot(_edge2.crossVectors(_diff,_edge2));// b1 < 0, no intersection
if(DdQxE2<0){return null;}var DdE1xQ=sign*this.direction.dot(_edge1.cross(_diff));// b2 < 0, no intersection
if(DdE1xQ<0){return null;}// b1+b2 > 1, no intersection
if(DdQxE2+DdE1xQ>DdN){return null;}// Line intersects triangle, check if ray does.
var QdN=-sign*_diff.dot(_normal);// t < 0, no intersection
if(QdN<0){return null;}// Ray intersects triangle.
return this.at(QdN/DdN,target);},applyMatrix4:function applyMatrix4(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this;},equals:function equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);}});/**
 * @author bhouston / http://clara.io
 */var _vector1=new Vector3$1();var _vector2=new Vector3$1();var _normalMatrix=new Matrix3();function Plane(normal,constant){// normal is assumed to be normalized
this.normal=normal!==undefined?normal:new Vector3$1(1,0,0);this.constant=constant!==undefined?constant:0;}Object.assign(Plane.prototype,{isPlane:true,set:function set(normal,constant){this.normal.copy(normal);this.constant=constant;return this;},setComponents:function setComponents(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this;},setFromNormalAndCoplanarPoint:function setFromNormalAndCoplanarPoint(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this;},setFromCoplanarPoints:function setFromCoplanarPoints(a,b,c){var normal=_vector1.subVectors(c,b).cross(_vector2.subVectors(a,b)).normalize();// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?
this.setFromNormalAndCoplanarPoint(normal,a);return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this;},normalize:function normalize(){// Note: will lead to a divide by zero if the plane is invalid.
var inverseNormalLength=1.0/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this;},negate:function negate(){this.constant*=-1;this.normal.negate();return this;},distanceToPoint:function distanceToPoint(point){return this.normal.dot(point)+this.constant;},distanceToSphere:function distanceToSphere(sphere){return this.distanceToPoint(sphere.center)-sphere.radius;},projectPoint:function projectPoint(point,target){if(target===undefined){console.warn('THREE.Plane: .projectPoint() target is now required');target=new Vector3$1();}return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);},intersectLine:function intersectLine(line,target){if(target===undefined){console.warn('THREE.Plane: .intersectLine() target is now required');target=new Vector3$1();}var direction=line.delta(_vector1);var denominator=this.normal.dot(direction);if(denominator===0){// line is coplanar, return origin
if(this.distanceToPoint(line.start)===0){return target.copy(line.start);}// Unsure if this is the correct method to handle this case.
return undefined;}var t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return undefined;}return target.copy(direction).multiplyScalar(t).add(line.start);},intersectsLine:function intersectsLine(line){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.
var startSign=this.distanceToPoint(line.start);var endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0;},intersectsBox:function intersectsBox(box){return box.intersectsPlane(this);},intersectsSphere:function intersectsSphere(sphere){return sphere.intersectsPlane(this);},coplanarPoint:function coplanarPoint(target){if(target===undefined){console.warn('THREE.Plane: .coplanarPoint() target is now required');target=new Vector3$1();}return target.copy(this.normal).multiplyScalar(-this.constant);},applyMatrix4:function applyMatrix4(matrix,optionalNormalMatrix){var normalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix);var referencePoint=this.coplanarPoint(_vector1).applyMatrix4(matrix);var normal=this.normal.applyMatrix3(normalMatrix).normalize();this.constant=-referencePoint.dot(normal);return this;},translate:function translate(offset){this.constant-=offset.dot(this.normal);return this;},equals:function equals(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant;}});/**
 * @author bhouston / http://clara.io
 * @author mrdoob / http://mrdoob.com/
 */var _v0$1=new Vector3$1();var _v1$3=new Vector3$1();var _v2$1=new Vector3$1();var _v3=new Vector3$1();var _vab=new Vector3$1();var _vac=new Vector3$1();var _vbc=new Vector3$1();var _vap=new Vector3$1();var _vbp=new Vector3$1();var _vcp=new Vector3$1();function Triangle(a,b,c){this.a=a!==undefined?a:new Vector3$1();this.b=b!==undefined?b:new Vector3$1();this.c=c!==undefined?c:new Vector3$1();}Object.assign(Triangle,{getNormal:function getNormal(a,b,c,target){if(target===undefined){console.warn('THREE.Triangle: .getNormal() target is now required');target=new Vector3$1();}target.subVectors(c,b);_v0$1.subVectors(a,b);target.cross(_v0$1);var targetLengthSq=target.lengthSq();if(targetLengthSq>0){return target.multiplyScalar(1/Math.sqrt(targetLengthSq));}return target.set(0,0,0);},// static/instance method to calculate barycentric coordinates
// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
getBarycoord:function getBarycoord(point,a,b,c,target){_v0$1.subVectors(c,a);_v1$3.subVectors(b,a);_v2$1.subVectors(point,a);var dot00=_v0$1.dot(_v0$1);var dot01=_v0$1.dot(_v1$3);var dot02=_v0$1.dot(_v2$1);var dot11=_v1$3.dot(_v1$3);var dot12=_v1$3.dot(_v2$1);var denom=dot00*dot11-dot01*dot01;if(target===undefined){console.warn('THREE.Triangle: .getBarycoord() target is now required');target=new Vector3$1();}// collinear or singular triangle
if(denom===0){// arbitrary location outside of triangle?
// not sure if this is the best idea, maybe should be returning undefined
return target.set(-2,-1,-1);}var invDenom=1/denom;var u=(dot11*dot02-dot01*dot12)*invDenom;var v=(dot00*dot12-dot01*dot02)*invDenom;// barycentric coordinates must always sum to 1
return target.set(1-u-v,v,u);},containsPoint:function containsPoint(point,a,b,c){Triangle.getBarycoord(point,a,b,c,_v3);return _v3.x>=0&&_v3.y>=0&&_v3.x+_v3.y<=1;},getUV:function getUV(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,_v3);target.set(0,0);target.addScaledVector(uv1,_v3.x);target.addScaledVector(uv2,_v3.y);target.addScaledVector(uv3,_v3.z);return target;},isFrontFacing:function isFrontFacing(a,b,c,direction){_v0$1.subVectors(c,b);_v1$3.subVectors(a,b);// strictly front facing
return _v0$1.cross(_v1$3).dot(direction)<0?true:false;}});Object.assign(Triangle.prototype,{set:function set(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;},setFromPointsAndIndices:function setFromPointsAndIndices(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;},getArea:function getArea(){_v0$1.subVectors(this.c,this.b);_v1$3.subVectors(this.a,this.b);return _v0$1.cross(_v1$3).length()*0.5;},getMidpoint:function getMidpoint(target){if(target===undefined){console.warn('THREE.Triangle: .getMidpoint() target is now required');target=new Vector3$1();}return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);},getNormal:function getNormal(target){return Triangle.getNormal(this.a,this.b,this.c,target);},getPlane:function getPlane(target){if(target===undefined){console.warn('THREE.Triangle: .getPlane() target is now required');target=new Plane();}return target.setFromCoplanarPoints(this.a,this.b,this.c);},getBarycoord:function getBarycoord(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target);},getUV:function getUV(point,uv1,uv2,uv3,target){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,target);},containsPoint:function containsPoint(point){return Triangle.containsPoint(point,this.a,this.b,this.c);},isFrontFacing:function isFrontFacing(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction);},intersectsBox:function intersectsBox(box){return box.intersectsTriangle(this);},closestPointToPoint:function closestPointToPoint(p,target){if(target===undefined){console.warn('THREE.Triangle: .closestPointToPoint() target is now required');target=new Vector3$1();}var a=this.a,b=this.b,c=this.c;var v,w;// algorithm thanks to Real-Time Collision Detection by Christer Ericson,
// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,
// under the accompanying license; see chapter 5.1.5 for detailed explanation.
// basically, we're distinguishing which of the voronoi regions of the triangle
// the point lies in with the minimum amount of redundant computation.
_vab.subVectors(b,a);_vac.subVectors(c,a);_vap.subVectors(p,a);var d1=_vab.dot(_vap);var d2=_vac.dot(_vap);if(d1<=0&&d2<=0){// vertex region of A; barycentric coords (1, 0, 0)
return target.copy(a);}_vbp.subVectors(p,b);var d3=_vab.dot(_vbp);var d4=_vac.dot(_vbp);if(d3>=0&&d4<=d3){// vertex region of B; barycentric coords (0, 1, 0)
return target.copy(b);}var vc=d1*d4-d3*d2;if(vc<=0&&d1>=0&&d3<=0){v=d1/(d1-d3);// edge region of AB; barycentric coords (1-v, v, 0)
return target.copy(a).addScaledVector(_vab,v);}_vcp.subVectors(p,c);var d5=_vab.dot(_vcp);var d6=_vac.dot(_vcp);if(d6>=0&&d5<=d6){// vertex region of C; barycentric coords (0, 0, 1)
return target.copy(c);}var vb=d5*d2-d1*d6;if(vb<=0&&d2>=0&&d6<=0){w=d2/(d2-d6);// edge region of AC; barycentric coords (1-w, 0, w)
return target.copy(a).addScaledVector(_vac,w);}var va=d3*d6-d5*d4;if(va<=0&&d4-d3>=0&&d5-d6>=0){_vbc.subVectors(c,b);w=(d4-d3)/(d4-d3+(d5-d6));// edge region of BC; barycentric coords (0, 1-w, w)
return target.copy(b).addScaledVector(_vbc,w);// edge region of BC
}// face region
var denom=1/(va+vb+vc);// u = va * denom
v=vb*denom;w=vc*denom;return target.copy(a).addScaledVector(_vab,v).addScaledVector(_vac,w);},equals:function equals(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c);}});/**
 * @author mrdoob / http://mrdoob.com/
 */var _colorKeywords={'aliceblue':0xF0F8FF,'antiquewhite':0xFAEBD7,'aqua':0x00FFFF,'aquamarine':0x7FFFD4,'azure':0xF0FFFF,'beige':0xF5F5DC,'bisque':0xFFE4C4,'black':0x000000,'blanchedalmond':0xFFEBCD,'blue':0x0000FF,'blueviolet':0x8A2BE2,'brown':0xA52A2A,'burlywood':0xDEB887,'cadetblue':0x5F9EA0,'chartreuse':0x7FFF00,'chocolate':0xD2691E,'coral':0xFF7F50,'cornflowerblue':0x6495ED,'cornsilk':0xFFF8DC,'crimson':0xDC143C,'cyan':0x00FFFF,'darkblue':0x00008B,'darkcyan':0x008B8B,'darkgoldenrod':0xB8860B,'darkgray':0xA9A9A9,'darkgreen':0x006400,'darkgrey':0xA9A9A9,'darkkhaki':0xBDB76B,'darkmagenta':0x8B008B,'darkolivegreen':0x556B2F,'darkorange':0xFF8C00,'darkorchid':0x9932CC,'darkred':0x8B0000,'darksalmon':0xE9967A,'darkseagreen':0x8FBC8F,'darkslateblue':0x483D8B,'darkslategray':0x2F4F4F,'darkslategrey':0x2F4F4F,'darkturquoise':0x00CED1,'darkviolet':0x9400D3,'deeppink':0xFF1493,'deepskyblue':0x00BFFF,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1E90FF,'firebrick':0xB22222,'floralwhite':0xFFFAF0,'forestgreen':0x228B22,'fuchsia':0xFF00FF,'gainsboro':0xDCDCDC,'ghostwhite':0xF8F8FF,'gold':0xFFD700,'goldenrod':0xDAA520,'gray':0x808080,'green':0x008000,'greenyellow':0xADFF2F,'grey':0x808080,'honeydew':0xF0FFF0,'hotpink':0xFF69B4,'indianred':0xCD5C5C,'indigo':0x4B0082,'ivory':0xFFFFF0,'khaki':0xF0E68C,'lavender':0xE6E6FA,'lavenderblush':0xFFF0F5,'lawngreen':0x7CFC00,'lemonchiffon':0xFFFACD,'lightblue':0xADD8E6,'lightcoral':0xF08080,'lightcyan':0xE0FFFF,'lightgoldenrodyellow':0xFAFAD2,'lightgray':0xD3D3D3,'lightgreen':0x90EE90,'lightgrey':0xD3D3D3,'lightpink':0xFFB6C1,'lightsalmon':0xFFA07A,'lightseagreen':0x20B2AA,'lightskyblue':0x87CEFA,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xB0C4DE,'lightyellow':0xFFFFE0,'lime':0x00FF00,'limegreen':0x32CD32,'linen':0xFAF0E6,'magenta':0xFF00FF,'maroon':0x800000,'mediumaquamarine':0x66CDAA,'mediumblue':0x0000CD,'mediumorchid':0xBA55D3,'mediumpurple':0x9370DB,'mediumseagreen':0x3CB371,'mediumslateblue':0x7B68EE,'mediumspringgreen':0x00FA9A,'mediumturquoise':0x48D1CC,'mediumvioletred':0xC71585,'midnightblue':0x191970,'mintcream':0xF5FFFA,'mistyrose':0xFFE4E1,'moccasin':0xFFE4B5,'navajowhite':0xFFDEAD,'navy':0x000080,'oldlace':0xFDF5E6,'olive':0x808000,'olivedrab':0x6B8E23,'orange':0xFFA500,'orangered':0xFF4500,'orchid':0xDA70D6,'palegoldenrod':0xEEE8AA,'palegreen':0x98FB98,'paleturquoise':0xAFEEEE,'palevioletred':0xDB7093,'papayawhip':0xFFEFD5,'peachpuff':0xFFDAB9,'peru':0xCD853F,'pink':0xFFC0CB,'plum':0xDDA0DD,'powderblue':0xB0E0E6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xFF0000,'rosybrown':0xBC8F8F,'royalblue':0x4169E1,'saddlebrown':0x8B4513,'salmon':0xFA8072,'sandybrown':0xF4A460,'seagreen':0x2E8B57,'seashell':0xFFF5EE,'sienna':0xA0522D,'silver':0xC0C0C0,'skyblue':0x87CEEB,'slateblue':0x6A5ACD,'slategray':0x708090,'slategrey':0x708090,'snow':0xFFFAFA,'springgreen':0x00FF7F,'steelblue':0x4682B4,'tan':0xD2B48C,'teal':0x008080,'thistle':0xD8BFD8,'tomato':0xFF6347,'turquoise':0x40E0D0,'violet':0xEE82EE,'wheat':0xF5DEB3,'white':0xFFFFFF,'whitesmoke':0xF5F5F5,'yellow':0xFFFF00,'yellowgreen':0x9ACD32};var _hslA={h:0,s:0,l:0};var _hslB={h:0,s:0,l:0};function Color(r,g,b){if(g===undefined&&b===undefined){// r is THREE.Color, hex or string
return this.set(r);}return this.setRGB(r,g,b);}function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p;}function SRGBToLinear(c){return c<0.04045?c*0.0773993808:Math.pow(c*0.9478672986+0.0521327014,2.4);}function LinearToSRGB(c){return c<0.0031308?c*12.92:1.055*Math.pow(c,0.41666)-0.055;}Object.assign(Color.prototype,{isColor:true,r:1,g:1,b:1,set:function set(value){if(value&&value.isColor){this.copy(value);}else if(typeof value==='number'){this.setHex(value);}else if(typeof value==='string'){this.setStyle(value);}return this;},setScalar:function setScalar(scalar){this.r=scalar;this.g=scalar;this.b=scalar;return this;},setHex:function setHex(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;},setRGB:function setRGB(r,g,b){this.r=r;this.g=g;this.b=b;return this;},setHSL:function setHSL(h,s,l){// h,s,l ranges are in 0.0 - 1.0
h=MathUtils.euclideanModulo(h,1);s=MathUtils.clamp(s,0,1);l=MathUtils.clamp(l,0,1);if(s===0){this.r=this.g=this.b=l;}else{var p=l<=0.5?l*(1+s):l+s-l*s;var q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3);}return this;},setStyle:function setStyle(style){function handleAlpha(string){if(string===undefined)return;if(parseFloat(string)<1){console.warn('THREE.Color: Alpha component of '+style+' will be ignored.');}}var m;if(m=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(style)){// rgb / hsl
var color;var name=m[1];var components=m[2];switch(name){case'rgb':case'rgba':if(color=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components)){// rgb(255,0,0) rgba(255,0,0,0.5)
this.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;handleAlpha(color[5]);return this;}if(color=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components)){// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
this.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;handleAlpha(color[5]);return this;}break;case'hsl':case'hsla':if(color=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components)){// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
var h=parseFloat(color[1])/360;var s=parseInt(color[2],10)/100;var l=parseInt(color[3],10)/100;handleAlpha(color[5]);return this.setHSL(h,s,l);}break;}}else if(m=/^\#([A-Fa-f0-9]+)$/.exec(style)){// hex color
var hex=m[1];var size=hex.length;if(size===3){// #ff0
this.r=parseInt(hex.charAt(0)+hex.charAt(0),16)/255;this.g=parseInt(hex.charAt(1)+hex.charAt(1),16)/255;this.b=parseInt(hex.charAt(2)+hex.charAt(2),16)/255;return this;}else if(size===6){// #ff0000
this.r=parseInt(hex.charAt(0)+hex.charAt(1),16)/255;this.g=parseInt(hex.charAt(2)+hex.charAt(3),16)/255;this.b=parseInt(hex.charAt(4)+hex.charAt(5),16)/255;return this;}}if(style&&style.length>0){return this.setColorName(style);}return this;},setColorName:function setColorName(style){// color keywords
var hex=_colorKeywords[style];if(hex!==undefined){// red
this.setHex(hex);}else{// unknown color
console.warn('THREE.Color: Unknown color '+style);}return this;},clone:function clone(){return new this.constructor(this.r,this.g,this.b);},copy:function copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;},copyGammaToLinear:function copyGammaToLinear(color,gammaFactor){if(gammaFactor===undefined)gammaFactor=2.0;this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this;},copyLinearToGamma:function copyLinearToGamma(color,gammaFactor){if(gammaFactor===undefined)gammaFactor=2.0;var safeInverse=gammaFactor>0?1.0/gammaFactor:1.0;this.r=Math.pow(color.r,safeInverse);this.g=Math.pow(color.g,safeInverse);this.b=Math.pow(color.b,safeInverse);return this;},convertGammaToLinear:function convertGammaToLinear(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this;},convertLinearToGamma:function convertLinearToGamma(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this;},copySRGBToLinear:function copySRGBToLinear(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this;},copyLinearToSRGB:function copyLinearToSRGB(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this;},convertSRGBToLinear:function convertSRGBToLinear(){this.copySRGBToLinear(this);return this;},convertLinearToSRGB:function convertLinearToSRGB(){this.copyLinearToSRGB(this);return this;},getHex:function getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;},getHexString:function getHexString(){return('000000'+this.getHex().toString(16)).slice(-6);},getHSL:function getHSL(target){// h,s,l ranges are in 0.0 - 1.0
if(target===undefined){console.warn('THREE.Color: .getHSL() target is now required');target={h:0,s:0,l:0};}var r=this.r,g=this.g,b=this.b;var max=Math.max(r,g,b);var min=Math.min(r,g,b);var hue,saturation;var lightness=(min+max)/2.0;if(min===max){hue=0;saturation=0;}else{var delta=max-min;saturation=lightness<=0.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break;}hue/=6;}target.h=hue;target.s=saturation;target.l=lightness;return target;},getStyle:function getStyle(){return'rgb('+(this.r*255|0)+','+(this.g*255|0)+','+(this.b*255|0)+')';},offsetHSL:function offsetHSL(h,s,l){this.getHSL(_hslA);_hslA.h+=h;_hslA.s+=s;_hslA.l+=l;this.setHSL(_hslA.h,_hslA.s,_hslA.l);return this;},add:function add(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this;},addColors:function addColors(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this;},addScalar:function addScalar(s){this.r+=s;this.g+=s;this.b+=s;return this;},sub:function sub(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this;},multiply:function multiply(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this;},multiplyScalar:function multiplyScalar(s){this.r*=s;this.g*=s;this.b*=s;return this;},lerp:function lerp(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this;},lerpHSL:function lerpHSL(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);var h=MathUtils.lerp(_hslA.h,_hslB.h,alpha);var s=MathUtils.lerp(_hslA.s,_hslB.s,alpha);var l=MathUtils.lerp(_hslA.l,_hslB.l,alpha);this.setHSL(h,s,l);return this;},equals:function equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b;},fromArray:function fromArray(array,offset){if(offset===undefined)offset=0;this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array;},toJSON:function toJSON(){return this.getHex();}});Color.NAMES=_colorKeywords;/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */function Face3(a,b,c,normal,color,materialIndex){this.a=a;this.b=b;this.c=c;this.normal=normal&&normal.isVector3?normal:new Vector3$1();this.vertexNormals=Array.isArray(normal)?normal:[];this.color=color&&color.isColor?color:new Color();this.vertexColors=Array.isArray(color)?color:[];this.materialIndex=materialIndex!==undefined?materialIndex:0;}Object.assign(Face3.prototype,{clone:function clone(){return new this.constructor().copy(this);},copy:function copy(source){this.a=source.a;this.b=source.b;this.c=source.c;this.normal.copy(source.normal);this.color.copy(source.color);this.materialIndex=source.materialIndex;for(var i=0,il=source.vertexNormals.length;i<il;i++){this.vertexNormals[i]=source.vertexNormals[i].clone();}for(var i=0,il=source.vertexColors.length;i<il;i++){this.vertexColors[i]=source.vertexColors[i].clone();}return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */var materialId=0;function Material(){Object.defineProperty(this,'id',{value:materialId++});this.uuid=MathUtils.generateUUID();this.name='';this.type='Material';this.fog=true;this.blending=NormalBlending;this.side=FrontSide;this.flatShading=false;this.vertexColors=false;this.opacity=1;this.transparent=false;this.blendSrc=SrcAlphaFactor;this.blendDst=OneMinusSrcAlphaFactor;this.blendEquation=AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.stencilWriteMask=0xff;this.stencilFunc=AlwaysStencilFunc;this.stencilRef=0;this.stencilFuncMask=0xff;this.stencilFail=KeepStencilOp;this.stencilZFail=KeepStencilOp;this.stencilZPass=KeepStencilOp;this.stencilWrite=false;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;// override the renderer's default precision for this material
this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.premultipliedAlpha=false;this.visible=true;this.toneMapped=true;this.userData={};this.version=0;}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:true,onBeforeCompile:function onBeforeCompile(){},setValues:function setValues(values){if(values===undefined)return;for(var key in values){var newValue=values[key];if(newValue===undefined){console.warn("THREE.Material: '"+key+"' parameter is undefined.");continue;}// for backward compatability if shading is set in the constructor
if(key==='shading'){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=newValue===FlatShading?true:false;continue;}var currentValue=this[key];if(currentValue===undefined){console.warn("THREE."+this.type+": '"+key+"' is not a property of this material.");continue;}if(currentValue&&currentValue.isColor){currentValue.set(newValue);}else if(currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3){currentValue.copy(newValue);}else{this[key]=newValue;}}},toJSON:function toJSON(meta){var isRoot=meta===undefined||typeof meta==='string';if(isRoot){meta={textures:{},images:{}};}var data={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};// standard Material serialization
data.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.color&&this.color.isColor)data.color=this.color.getHex();if(this.roughness!==undefined)data.roughness=this.roughness;if(this.metalness!==undefined)data.metalness=this.metalness;if(this.sheen&&this.sheen.isColor)data.sheen=this.sheen.getHex();if(this.emissive&&this.emissive.isColor)data.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)data.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)data.specular=this.specular.getHex();if(this.shininess!==undefined)data.shininess=this.shininess;if(this.clearcoat!==undefined)data.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)data.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid;}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid;}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid;data.clearcoatNormalScale=this.clearcoatNormalScale.toArray();}if(this.map&&this.map.isTexture)data.map=this.map.toJSON(meta).uuid;if(this.matcap&&this.matcap.isTexture)data.matcap=this.matcap.toJSON(meta).uuid;if(this.alphaMap&&this.alphaMap.isTexture)data.alphaMap=this.alphaMap.toJSON(meta).uuid;if(this.lightMap&&this.lightMap.isTexture)data.lightMap=this.lightMap.toJSON(meta).uuid;if(this.aoMap&&this.aoMap.isTexture){data.aoMap=this.aoMap.toJSON(meta).uuid;data.aoMapIntensity=this.aoMapIntensity;}if(this.bumpMap&&this.bumpMap.isTexture){data.bumpMap=this.bumpMap.toJSON(meta).uuid;data.bumpScale=this.bumpScale;}if(this.normalMap&&this.normalMap.isTexture){data.normalMap=this.normalMap.toJSON(meta).uuid;data.normalMapType=this.normalMapType;data.normalScale=this.normalScale.toArray();}if(this.displacementMap&&this.displacementMap.isTexture){data.displacementMap=this.displacementMap.toJSON(meta).uuid;data.displacementScale=this.displacementScale;data.displacementBias=this.displacementBias;}if(this.roughnessMap&&this.roughnessMap.isTexture)data.roughnessMap=this.roughnessMap.toJSON(meta).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)data.metalnessMap=this.metalnessMap.toJSON(meta).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)data.emissiveMap=this.emissiveMap.toJSON(meta).uuid;if(this.specularMap&&this.specularMap.isTexture)data.specularMap=this.specularMap.toJSON(meta).uuid;if(this.envMap&&this.envMap.isTexture){data.envMap=this.envMap.toJSON(meta).uuid;data.reflectivity=this.reflectivity;// Scale behind envMap
data.refractionRatio=this.refractionRatio;if(this.combine!==undefined)data.combine=this.combine;if(this.envMapIntensity!==undefined)data.envMapIntensity=this.envMapIntensity;}if(this.gradientMap&&this.gradientMap.isTexture){data.gradientMap=this.gradientMap.toJSON(meta).uuid;}if(this.size!==undefined)data.size=this.size;if(this.sizeAttenuation!==undefined)data.sizeAttenuation=this.sizeAttenuation;if(this.blending!==NormalBlending)data.blending=this.blending;if(this.flatShading===true)data.flatShading=this.flatShading;if(this.side!==FrontSide)data.side=this.side;if(this.vertexColors)data.vertexColors=true;if(this.opacity<1)data.opacity=this.opacity;if(this.transparent===true)data.transparent=this.transparent;data.depthFunc=this.depthFunc;data.depthTest=this.depthTest;data.depthWrite=this.depthWrite;data.stencilWrite=this.stencilWrite;data.stencilWriteMask=this.stencilWriteMask;data.stencilFunc=this.stencilFunc;data.stencilRef=this.stencilRef;data.stencilFuncMask=this.stencilFuncMask;data.stencilFail=this.stencilFail;data.stencilZFail=this.stencilZFail;data.stencilZPass=this.stencilZPass;// rotation (SpriteMaterial)
if(this.rotation&&this.rotation!==0)data.rotation=this.rotation;if(this.polygonOffset===true)data.polygonOffset=true;if(this.polygonOffsetFactor!==0)data.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)data.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth&&this.linewidth!==1)data.linewidth=this.linewidth;if(this.dashSize!==undefined)data.dashSize=this.dashSize;if(this.gapSize!==undefined)data.gapSize=this.gapSize;if(this.scale!==undefined)data.scale=this.scale;if(this.dithering===true)data.dithering=true;if(this.alphaTest>0)data.alphaTest=this.alphaTest;if(this.premultipliedAlpha===true)data.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)data.wireframe=this.wireframe;if(this.wireframeLinewidth>1)data.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=='round')data.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=='round')data.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)data.morphTargets=true;if(this.morphNormals===true)data.morphNormals=true;if(this.skinning===true)data.skinning=true;if(this.visible===false)data.visible=false;if(this.toneMapped===false)data.toneMapped=false;if(JSON.stringify(this.userData)!=='{}')data.userData=this.userData;// TODO: Copied from Object3D.toJSON
function extractFromCache(cache){var values=[];for(var key in cache){var data=cache[key];delete data.metadata;values.push(data);}return values;}if(isRoot){var textures=extractFromCache(meta.textures);var images=extractFromCache(meta.images);if(textures.length>0)data.textures=textures;if(images.length>0)data.images=images;}return data;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(source){this.name=source.name;this.fog=source.fog;this.blending=source.blending;this.side=source.side;this.flatShading=source.flatShading;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;var srcPlanes=source.clippingPlanes,dstPlanes=null;if(srcPlanes!==null){var n=srcPlanes.length;dstPlanes=new Array(n);for(var i=0;i!==n;++i){dstPlanes[i]=srcPlanes[i].clone();}}this.clippingPlanes=dstPlanes;this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=JSON.parse(JSON.stringify(source.userData));return this;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}});Object.defineProperty(Material.prototype,'needsUpdate',{set:function set(value){if(value===true)this.version++;}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>
 * }
 */function MeshBasicMaterial(parameters){Material.call(this);this.type='MeshBasicMaterial';this.color=new Color(0xffffff);// emissive
this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.setValues(parameters);}MeshBasicMaterial.prototype=Object.create(Material.prototype);MeshBasicMaterial.prototype.constructor=MeshBasicMaterial;MeshBasicMaterial.prototype.isMeshBasicMaterial=true;MeshBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;return this;};/**
 * @author mrdoob / http://mrdoob.com/
 */var _vector$3=new Vector3$1();function BufferAttribute(array,itemSize,normalized){if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.name='';this.array=array;this.itemSize=itemSize;this.count=array!==undefined?array.length/itemSize:0;this.normalized=normalized===true;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;}Object.defineProperty(BufferAttribute.prototype,'needsUpdate',{set:function set(value){if(value===true)this.version++;}});Object.assign(BufferAttribute.prototype,{isBufferAttribute:true,onUploadCallback:function onUploadCallback(){},setUsage:function setUsage(value){this.usage=value;return this;},copy:function copy(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.usage=source.usage;return this;},copyAt:function copyAt(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(var i=0,l=this.itemSize;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;},copyArray:function copyArray(array){this.array.set(array);return this;},copyColorsArray:function copyColorsArray(colors){var array=this.array,offset=0;for(var i=0,l=colors.length;i<l;i++){var color=colors[i];if(color===undefined){console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',i);color=new Color();}array[offset++]=color.r;array[offset++]=color.g;array[offset++]=color.b;}return this;},copyVector2sArray:function copyVector2sArray(vectors){var array=this.array,offset=0;for(var i=0,l=vectors.length;i<l;i++){var vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',i);vector=new Vector2();}array[offset++]=vector.x;array[offset++]=vector.y;}return this;},copyVector3sArray:function copyVector3sArray(vectors){var array=this.array,offset=0;for(var i=0,l=vectors.length;i<l;i++){var vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',i);vector=new Vector3$1();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;}return this;},copyVector4sArray:function copyVector4sArray(vectors){var array=this.array,offset=0;for(var i=0,l=vectors.length;i<l;i++){var vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',i);vector=new Vector4();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w;}return this;},applyMatrix3:function applyMatrix3(m){for(var i=0,l=this.count;i<l;i++){_vector$3.x=this.getX(i);_vector$3.y=this.getY(i);_vector$3.z=this.getZ(i);_vector$3.applyMatrix3(m);this.setXYZ(i,_vector$3.x,_vector$3.y,_vector$3.z);}return this;},applyMatrix4:function applyMatrix4(m){for(var i=0,l=this.count;i<l;i++){_vector$3.x=this.getX(i);_vector$3.y=this.getY(i);_vector$3.z=this.getZ(i);_vector$3.applyMatrix4(m);this.setXYZ(i,_vector$3.x,_vector$3.y,_vector$3.z);}return this;},applyNormalMatrix:function applyNormalMatrix(m){for(var i=0,l=this.count;i<l;i++){_vector$3.x=this.getX(i);_vector$3.y=this.getY(i);_vector$3.z=this.getZ(i);_vector$3.applyNormalMatrix(m);this.setXYZ(i,_vector$3.x,_vector$3.y,_vector$3.z);}return this;},transformDirection:function transformDirection(m){for(var i=0,l=this.count;i<l;i++){_vector$3.x=this.getX(i);_vector$3.y=this.getY(i);_vector$3.z=this.getZ(i);_vector$3.transformDirection(m);this.setXYZ(i,_vector$3.x,_vector$3.y,_vector$3.z);}return this;},set:function set(value,offset){if(offset===undefined)offset=0;this.array.set(value,offset);return this;},getX:function getX(index){return this.array[index*this.itemSize];},setX:function setX(index,x){this.array[index*this.itemSize]=x;return this;},getY:function getY(index){return this.array[index*this.itemSize+1];},setY:function setY(index,y){this.array[index*this.itemSize+1]=y;return this;},getZ:function getZ(index){return this.array[index*this.itemSize+2];},setZ:function setZ(index,z){this.array[index*this.itemSize+2]=z;return this;},getW:function getW(index){return this.array[index*this.itemSize+3];},setW:function setW(index,w){this.array[index*this.itemSize+3]=w;return this;},setXY:function setXY(index,x,y){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;return this;},setXYZ:function setXYZ(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this;},setXYZW:function setXYZW(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this;},onUpload:function onUpload(callback){this.onUploadCallback=callback;return this;},clone:function clone(){return new this.constructor(this.array,this.itemSize).copy(this);},toJSON:function toJSON(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};}});//
function Int8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int8Array(array),itemSize,normalized);}Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int8BufferAttribute.prototype.constructor=Int8BufferAttribute;function Uint8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8Array(array),itemSize,normalized);}Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute;function Uint8ClampedBufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8ClampedArray(array),itemSize,normalized);}Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute;function Int16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int16Array(array),itemSize,normalized);}Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int16BufferAttribute.prototype.constructor=Int16BufferAttribute;function Uint16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized);}Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute;function Int32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int32Array(array),itemSize,normalized);}Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int32BufferAttribute.prototype.constructor=Int32BufferAttribute;function Uint32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint32Array(array),itemSize,normalized);}Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute;function Float32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float32Array(array),itemSize,normalized);}Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float32BufferAttribute.prototype.constructor=Float32BufferAttribute;function Float64BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float64Array(array),itemSize,normalized);}Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;/**
 * @author mrdoob / http://mrdoob.com/
 */function DirectGeometry(){this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];// this.lineDistances = [];
this.boundingBox=null;this.boundingSphere=null;// update flags
this.verticesNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.uvsNeedUpdate=false;this.groupsNeedUpdate=false;}Object.assign(DirectGeometry.prototype,{computeGroups:function computeGroups(geometry){var group;var groups=[];var materialIndex=undefined;var faces=geometry.faces;for(var i=0;i<faces.length;i++){var face=faces[i];// materials
if(face.materialIndex!==materialIndex){materialIndex=face.materialIndex;if(group!==undefined){group.count=i*3-group.start;groups.push(group);}group={start:i*3,materialIndex:materialIndex};}}if(group!==undefined){group.count=i*3-group.start;groups.push(group);}this.groups=groups;},fromGeometry:function fromGeometry(geometry){var faces=geometry.faces;var vertices=geometry.vertices;var faceVertexUvs=geometry.faceVertexUvs;var hasFaceVertexUv=faceVertexUvs[0]&&faceVertexUvs[0].length>0;var hasFaceVertexUv2=faceVertexUvs[1]&&faceVertexUvs[1].length>0;// morphs
var morphTargets=geometry.morphTargets;var morphTargetsLength=morphTargets.length;var morphTargetsPosition;if(morphTargetsLength>0){morphTargetsPosition=[];for(var i=0;i<morphTargetsLength;i++){morphTargetsPosition[i]={name:morphTargets[i].name,data:[]};}this.morphTargets.position=morphTargetsPosition;}var morphNormals=geometry.morphNormals;var morphNormalsLength=morphNormals.length;var morphTargetsNormal;if(morphNormalsLength>0){morphTargetsNormal=[];for(var i=0;i<morphNormalsLength;i++){morphTargetsNormal[i]={name:morphNormals[i].name,data:[]};}this.morphTargets.normal=morphTargetsNormal;}// skins
var skinIndices=geometry.skinIndices;var skinWeights=geometry.skinWeights;var hasSkinIndices=skinIndices.length===vertices.length;var hasSkinWeights=skinWeights.length===vertices.length;//
if(vertices.length>0&&faces.length===0){console.error('THREE.DirectGeometry: Faceless geometries are not supported.');}for(var i=0;i<faces.length;i++){var face=faces[i];this.vertices.push(vertices[face.a],vertices[face.b],vertices[face.c]);var vertexNormals=face.vertexNormals;if(vertexNormals.length===3){this.normals.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]);}else{var normal=face.normal;this.normals.push(normal,normal,normal);}var vertexColors=face.vertexColors;if(vertexColors.length===3){this.colors.push(vertexColors[0],vertexColors[1],vertexColors[2]);}else{var color=face.color;this.colors.push(color,color,color);}if(hasFaceVertexUv===true){var vertexUvs=faceVertexUvs[0][i];if(vertexUvs!==undefined){this.uvs.push(vertexUvs[0],vertexUvs[1],vertexUvs[2]);}else{console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ',i);this.uvs.push(new Vector2(),new Vector2(),new Vector2());}}if(hasFaceVertexUv2===true){var vertexUvs=faceVertexUvs[1][i];if(vertexUvs!==undefined){this.uvs2.push(vertexUvs[0],vertexUvs[1],vertexUvs[2]);}else{console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ',i);this.uvs2.push(new Vector2(),new Vector2(),new Vector2());}}// morphs
for(var j=0;j<morphTargetsLength;j++){var morphTarget=morphTargets[j].vertices;morphTargetsPosition[j].data.push(morphTarget[face.a],morphTarget[face.b],morphTarget[face.c]);}for(var j=0;j<morphNormalsLength;j++){var morphNormal=morphNormals[j].vertexNormals[i];morphTargetsNormal[j].data.push(morphNormal.a,morphNormal.b,morphNormal.c);}// skins
if(hasSkinIndices){this.skinIndices.push(skinIndices[face.a],skinIndices[face.b],skinIndices[face.c]);}if(hasSkinWeights){this.skinWeights.push(skinWeights[face.a],skinWeights[face.b],skinWeights[face.c]);}}this.computeGroups(geometry);this.verticesNeedUpdate=geometry.verticesNeedUpdate;this.normalsNeedUpdate=geometry.normalsNeedUpdate;this.colorsNeedUpdate=geometry.colorsNeedUpdate;this.uvsNeedUpdate=geometry.uvsNeedUpdate;this.groupsNeedUpdate=geometry.groupsNeedUpdate;if(geometry.boundingSphere!==null){this.boundingSphere=geometry.boundingSphere.clone();}if(geometry.boundingBox!==null){this.boundingBox=geometry.boundingBox.clone();}return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function arrayMax(array){if(array.length===0)return-Infinity;var max=array[0];for(var _i2=1,l=array.length;_i2<l;++_i2){if(array[_i2]>max)max=array[_i2];}return max;}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */var _bufferGeometryId=1;// BufferGeometry uses odd numbers as Id
var _m1$2=new Matrix4();var _obj=new Object3D();var _offset=new Vector3$1();var _box$2=new Box3();var _boxMorphTargets=new Box3();var _vector$4=new Vector3$1();function BufferGeometry(){Object.defineProperty(this,'id',{value:_bufferGeometryId+=2});this.uuid=MathUtils.generateUUID();this.name='';this.type='BufferGeometry';this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=false;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={};}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:true,getIndex:function getIndex(){return this.index;},setIndex:function setIndex(index){if(Array.isArray(index)){this.index=new(arrayMax(index)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(index,1);}else{this.index=index;}},getAttribute:function getAttribute(name){return this.attributes[name];},setAttribute:function setAttribute(name,attribute){this.attributes[name]=attribute;return this;},deleteAttribute:function deleteAttribute(name){delete this.attributes[name];return this;},addGroup:function addGroup(start,count,materialIndex){this.groups.push({start:start,count:count,materialIndex:materialIndex!==undefined?materialIndex:0});},clearGroups:function clearGroups(){this.groups=[];},setDrawRange:function setDrawRange(start,count){this.drawRange.start=start;this.drawRange.count=count;},applyMatrix4:function applyMatrix4(matrix){var position=this.attributes.position;if(position!==undefined){position.applyMatrix4(matrix);position.needsUpdate=true;}var normal=this.attributes.normal;if(normal!==undefined){var normalMatrix=new Matrix3().getNormalMatrix(matrix);normal.applyNormalMatrix(normalMatrix);normal.needsUpdate=true;}var tangent=this.attributes.tangent;if(tangent!==undefined){tangent.transformDirection(matrix);tangent.needsUpdate=true;}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}return this;},rotateX:function rotateX(angle){// rotate geometry around world x-axis
_m1$2.makeRotationX(angle);this.applyMatrix4(_m1$2);return this;},rotateY:function rotateY(angle){// rotate geometry around world y-axis
_m1$2.makeRotationY(angle);this.applyMatrix4(_m1$2);return this;},rotateZ:function rotateZ(angle){// rotate geometry around world z-axis
_m1$2.makeRotationZ(angle);this.applyMatrix4(_m1$2);return this;},translate:function translate(x,y,z){// translate geometry
_m1$2.makeTranslation(x,y,z);this.applyMatrix4(_m1$2);return this;},scale:function scale(x,y,z){// scale geometry
_m1$2.makeScale(x,y,z);this.applyMatrix4(_m1$2);return this;},lookAt:function lookAt(vector){_obj.lookAt(vector);_obj.updateMatrix();this.applyMatrix4(_obj.matrix);return this;},center:function center(){this.computeBoundingBox();this.boundingBox.getCenter(_offset).negate();this.translate(_offset.x,_offset.y,_offset.z);return this;},setFromObject:function setFromObject(object){// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );
var geometry=object.geometry;if(object.isPoints||object.isLine){var positions=new Float32BufferAttribute(geometry.vertices.length*3,3);var colors=new Float32BufferAttribute(geometry.colors.length*3,3);this.setAttribute('position',positions.copyVector3sArray(geometry.vertices));this.setAttribute('color',colors.copyColorsArray(geometry.colors));if(geometry.lineDistances&&geometry.lineDistances.length===geometry.vertices.length){var lineDistances=new Float32BufferAttribute(geometry.lineDistances.length,1);this.setAttribute('lineDistance',lineDistances.copyArray(geometry.lineDistances));}if(geometry.boundingSphere!==null){this.boundingSphere=geometry.boundingSphere.clone();}if(geometry.boundingBox!==null){this.boundingBox=geometry.boundingBox.clone();}}else if(object.isMesh){if(geometry&&geometry.isGeometry){this.fromGeometry(geometry);}}return this;},setFromPoints:function setFromPoints(points){var position=[];for(var i=0,l=points.length;i<l;i++){var point=points[i];position.push(point.x,point.y,point.z||0);}this.setAttribute('position',new Float32BufferAttribute(position,3));return this;},updateFromObject:function updateFromObject(object){var geometry=object.geometry;if(object.isMesh){var direct=geometry.__directGeometry;if(geometry.elementsNeedUpdate===true){direct=undefined;geometry.elementsNeedUpdate=false;}if(direct===undefined){return this.fromGeometry(geometry);}direct.verticesNeedUpdate=geometry.verticesNeedUpdate;direct.normalsNeedUpdate=geometry.normalsNeedUpdate;direct.colorsNeedUpdate=geometry.colorsNeedUpdate;direct.uvsNeedUpdate=geometry.uvsNeedUpdate;direct.groupsNeedUpdate=geometry.groupsNeedUpdate;geometry.verticesNeedUpdate=false;geometry.normalsNeedUpdate=false;geometry.colorsNeedUpdate=false;geometry.uvsNeedUpdate=false;geometry.groupsNeedUpdate=false;geometry=direct;}var attribute;if(geometry.verticesNeedUpdate===true){attribute=this.attributes.position;if(attribute!==undefined){attribute.copyVector3sArray(geometry.vertices);attribute.needsUpdate=true;}geometry.verticesNeedUpdate=false;}if(geometry.normalsNeedUpdate===true){attribute=this.attributes.normal;if(attribute!==undefined){attribute.copyVector3sArray(geometry.normals);attribute.needsUpdate=true;}geometry.normalsNeedUpdate=false;}if(geometry.colorsNeedUpdate===true){attribute=this.attributes.color;if(attribute!==undefined){attribute.copyColorsArray(geometry.colors);attribute.needsUpdate=true;}geometry.colorsNeedUpdate=false;}if(geometry.uvsNeedUpdate){attribute=this.attributes.uv;if(attribute!==undefined){attribute.copyVector2sArray(geometry.uvs);attribute.needsUpdate=true;}geometry.uvsNeedUpdate=false;}if(geometry.lineDistancesNeedUpdate){attribute=this.attributes.lineDistance;if(attribute!==undefined){attribute.copyArray(geometry.lineDistances);attribute.needsUpdate=true;}geometry.lineDistancesNeedUpdate=false;}if(geometry.groupsNeedUpdate){geometry.computeGroups(object.geometry);this.groups=geometry.groups;geometry.groupsNeedUpdate=false;}return this;},fromGeometry:function fromGeometry(geometry){geometry.__directGeometry=new DirectGeometry().fromGeometry(geometry);return this.fromDirectGeometry(geometry.__directGeometry);},fromDirectGeometry:function fromDirectGeometry(geometry){var positions=new Float32Array(geometry.vertices.length*3);this.setAttribute('position',new BufferAttribute(positions,3).copyVector3sArray(geometry.vertices));if(geometry.normals.length>0){var normals=new Float32Array(geometry.normals.length*3);this.setAttribute('normal',new BufferAttribute(normals,3).copyVector3sArray(geometry.normals));}if(geometry.colors.length>0){var colors=new Float32Array(geometry.colors.length*3);this.setAttribute('color',new BufferAttribute(colors,3).copyColorsArray(geometry.colors));}if(geometry.uvs.length>0){var uvs=new Float32Array(geometry.uvs.length*2);this.setAttribute('uv',new BufferAttribute(uvs,2).copyVector2sArray(geometry.uvs));}if(geometry.uvs2.length>0){var uvs2=new Float32Array(geometry.uvs2.length*2);this.setAttribute('uv2',new BufferAttribute(uvs2,2).copyVector2sArray(geometry.uvs2));}// groups
this.groups=geometry.groups;// morphs
for(var name in geometry.morphTargets){var array=[];var morphTargets=geometry.morphTargets[name];for(var i=0,l=morphTargets.length;i<l;i++){var morphTarget=morphTargets[i];var attribute=new Float32BufferAttribute(morphTarget.data.length*3,3);attribute.name=morphTarget.name;array.push(attribute.copyVector3sArray(morphTarget.data));}this.morphAttributes[name]=array;}// skinning
if(geometry.skinIndices.length>0){var skinIndices=new Float32BufferAttribute(geometry.skinIndices.length*4,4);this.setAttribute('skinIndex',skinIndices.copyVector4sArray(geometry.skinIndices));}if(geometry.skinWeights.length>0){var skinWeights=new Float32BufferAttribute(geometry.skinWeights.length*4,4);this.setAttribute('skinWeight',skinWeights.copyVector4sArray(geometry.skinWeights));}//
if(geometry.boundingSphere!==null){this.boundingSphere=geometry.boundingSphere.clone();}if(geometry.boundingBox!==null){this.boundingBox=geometry.boundingBox.clone();}return this;},computeBoundingBox:function computeBoundingBox(){if(this.boundingBox===null){this.boundingBox=new Box3();}var position=this.attributes.position;var morphAttributesPosition=this.morphAttributes.position;if(position!==undefined){this.boundingBox.setFromBufferAttribute(position);// process morph attributes if present
if(morphAttributesPosition){for(var i=0,il=morphAttributesPosition.length;i<il;i++){var morphAttribute=morphAttributesPosition[i];_box$2.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$4.addVectors(this.boundingBox.min,_box$2.min);this.boundingBox.expandByPoint(_vector$4);_vector$4.addVectors(this.boundingBox.max,_box$2.max);this.boundingBox.expandByPoint(_vector$4);}else{this.boundingBox.expandByPoint(_box$2.min);this.boundingBox.expandByPoint(_box$2.max);}}}}else{this.boundingBox.makeEmpty();}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this);}},computeBoundingSphere:function computeBoundingSphere(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}var position=this.attributes.position;var morphAttributesPosition=this.morphAttributes.position;if(position){// first, find the center of the bounding sphere
var center=this.boundingSphere.center;_box$2.setFromBufferAttribute(position);// process morph attributes if present
if(morphAttributesPosition){for(var i=0,il=morphAttributesPosition.length;i<il;i++){var morphAttribute=morphAttributesPosition[i];_boxMorphTargets.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$4.addVectors(_box$2.min,_boxMorphTargets.min);_box$2.expandByPoint(_vector$4);_vector$4.addVectors(_box$2.max,_boxMorphTargets.max);_box$2.expandByPoint(_vector$4);}else{_box$2.expandByPoint(_boxMorphTargets.min);_box$2.expandByPoint(_boxMorphTargets.max);}}}_box$2.getCenter(center);// second, try to find a boundingSphere with a radius smaller than the
// boundingSphere of the boundingBox: sqrt(3) smaller in the best case
var maxRadiusSq=0;for(var i=0,il=position.count;i<il;i++){_vector$4.fromBufferAttribute(position,i);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$4));}// process morph attributes if present
if(morphAttributesPosition){for(var i=0,il=morphAttributesPosition.length;i<il;i++){var morphAttribute=morphAttributesPosition[i];var morphTargetsRelative=this.morphTargetsRelative;for(var j=0,jl=morphAttribute.count;j<jl;j++){_vector$4.fromBufferAttribute(morphAttribute,j);if(morphTargetsRelative){_offset.fromBufferAttribute(position,j);_vector$4.add(_offset);}maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$4));}}}this.boundingSphere.radius=Math.sqrt(maxRadiusSq);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this);}}},computeFaceNormals:function computeFaceNormals(){// backwards compatibility
},computeVertexNormals:function computeVertexNormals(){var index=this.index;var attributes=this.attributes;if(attributes.position){var positions=attributes.position.array;if(attributes.normal===undefined){this.setAttribute('normal',new BufferAttribute(new Float32Array(positions.length),3));}else{// reset existing normals to zero
var array=attributes.normal.array;for(var i=0,il=array.length;i<il;i++){array[i]=0;}}var normals=attributes.normal.array;var vA,vB,vC;var pA=new Vector3$1(),pB=new Vector3$1(),pC=new Vector3$1();var cb=new Vector3$1(),ab=new Vector3$1();// indexed elements
if(index){var indices=index.array;for(var i=0,il=index.count;i<il;i+=3){vA=indices[i+0]*3;vB=indices[i+1]*3;vC=indices[i+2]*3;pA.fromArray(positions,vA);pB.fromArray(positions,vB);pC.fromArray(positions,vC);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normals[vA]+=cb.x;normals[vA+1]+=cb.y;normals[vA+2]+=cb.z;normals[vB]+=cb.x;normals[vB+1]+=cb.y;normals[vB+2]+=cb.z;normals[vC]+=cb.x;normals[vC+1]+=cb.y;normals[vC+2]+=cb.z;}}else{// non-indexed elements (unconnected triangle soup)
for(var i=0,il=positions.length;i<il;i+=9){pA.fromArray(positions,i);pB.fromArray(positions,i+3);pC.fromArray(positions,i+6);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normals[i]=cb.x;normals[i+1]=cb.y;normals[i+2]=cb.z;normals[i+3]=cb.x;normals[i+4]=cb.y;normals[i+5]=cb.z;normals[i+6]=cb.x;normals[i+7]=cb.y;normals[i+8]=cb.z;}}this.normalizeNormals();attributes.normal.needsUpdate=true;}},merge:function merge(geometry,offset){if(!(geometry&&geometry.isBufferGeometry)){console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',geometry);return;}if(offset===undefined){offset=0;console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '+'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');}var attributes=this.attributes;for(var key in attributes){if(geometry.attributes[key]===undefined)continue;var attribute1=attributes[key];var attributeArray1=attribute1.array;var attribute2=geometry.attributes[key];var attributeArray2=attribute2.array;var attributeOffset=attribute2.itemSize*offset;var length=Math.min(attributeArray2.length,attributeArray1.length-attributeOffset);for(var i=0,j=attributeOffset;i<length;i++,j++){attributeArray1[j]=attributeArray2[i];}}return this;},normalizeNormals:function normalizeNormals(){var normals=this.attributes.normal;for(var i=0,il=normals.count;i<il;i++){_vector$4.x=normals.getX(i);_vector$4.y=normals.getY(i);_vector$4.z=normals.getZ(i);_vector$4.normalize();normals.setXYZ(i,_vector$4.x,_vector$4.y,_vector$4.z);}},toNonIndexed:function toNonIndexed(){function convertBufferAttribute(attribute,indices){var array=attribute.array;var itemSize=attribute.itemSize;var normalized=attribute.normalized;var array2=new array.constructor(indices.length*itemSize);var index=0,index2=0;for(var i=0,l=indices.length;i<l;i++){index=indices[i]*itemSize;for(var j=0;j<itemSize;j++){array2[index2++]=array[index++];}}return new BufferAttribute(array2,itemSize,normalized);}//
if(this.index===null){console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');return this;}var geometry2=new BufferGeometry();var indices=this.index.array;var attributes=this.attributes;// attributes
for(var name in attributes){var attribute=attributes[name];var newAttribute=convertBufferAttribute(attribute,indices);geometry2.setAttribute(name,newAttribute);}// morph attributes
var morphAttributes=this.morphAttributes;for(name in morphAttributes){var morphArray=[];var morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes
for(var i=0,il=morphAttribute.length;i<il;i++){var attribute=morphAttribute[i];var newAttribute=convertBufferAttribute(attribute,indices);morphArray.push(newAttribute);}geometry2.morphAttributes[name]=morphArray;}geometry2.morphTargetsRelative=this.morphTargetsRelative;// groups
var groups=this.groups;for(var i=0,l=groups.length;i<l;i++){var group=groups[i];geometry2.addGroup(group.start,group.count,group.materialIndex);}return geometry2;},toJSON:function toJSON(){var data={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};// standard BufferGeometry serialization
data.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(Object.keys(this.userData).length>0)data.userData=this.userData;if(this.parameters!==undefined){var parameters=this.parameters;for(var key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}data.data={attributes:{}};var index=this.index;if(index!==null){data.data.index={type:index.array.constructor.name,array:Array.prototype.slice.call(index.array)};}var attributes=this.attributes;for(var key in attributes){var attribute=attributes[key];var attributeData=attribute.toJSON();if(attribute.name!=='')attributeData.name=attribute.name;data.data.attributes[key]=attributeData;}var morphAttributes={};var hasMorphAttributes=false;for(var key in this.morphAttributes){var attributeArray=this.morphAttributes[key];var array=[];for(var i=0,il=attributeArray.length;i<il;i++){var attribute=attributeArray[i];var attributeData=attribute.toJSON();if(attribute.name!=='')attributeData.name=attribute.name;array.push(attributeData);}if(array.length>0){morphAttributes[key]=array;hasMorphAttributes=true;}}if(hasMorphAttributes){data.data.morphAttributes=morphAttributes;data.data.morphTargetsRelative=this.morphTargetsRelative;}var groups=this.groups;if(groups.length>0){data.data.groups=JSON.parse(JSON.stringify(groups));}var boundingSphere=this.boundingSphere;if(boundingSphere!==null){data.data.boundingSphere={center:boundingSphere.center.toArray(),radius:boundingSphere.radius};}return data;},clone:function clone(){/*
		 // Handle primitives

		 var parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 var values = [];

		 for ( var key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 var geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */return new BufferGeometry().copy(this);},copy:function copy(source){var name,i,l;// reset
this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;// name
this.name=source.name;// index
var index=source.index;if(index!==null){this.setIndex(index.clone());}// attributes
var attributes=source.attributes;for(name in attributes){var attribute=attributes[name];this.setAttribute(name,attribute.clone());}// morph attributes
var morphAttributes=source.morphAttributes;for(name in morphAttributes){var array=[];var morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes
for(i=0,l=morphAttribute.length;i<l;i++){array.push(morphAttribute[i].clone());}this.morphAttributes[name]=array;}this.morphTargetsRelative=source.morphTargetsRelative;// groups
var groups=source.groups;for(i=0,l=groups.length;i<l;i++){var group=groups[i];this.addGroup(group.start,group.count,group.materialIndex);}// bounding box
var boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere
var boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// draw range
this.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;// user data
this.userData=source.userData;return this;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author jonobr1 / http://jonobr1.com/
 */var _inverseMatrix=new Matrix4();var _ray=new Ray();var _sphere=new Sphere();var _vA=new Vector3$1();var _vB=new Vector3$1();var _vC=new Vector3$1();var _tempA=new Vector3$1();var _tempB=new Vector3$1();var _tempC=new Vector3$1();var _morphA=new Vector3$1();var _morphB=new Vector3$1();var _morphC=new Vector3$1();var _uvA=new Vector2();var _uvB=new Vector2();var _uvC=new Vector2();var _intersectionPoint=new Vector3$1();var _intersectionPointWorld=new Vector3$1();function Mesh(geometry,material){Object3D.call(this);this.type='Mesh';this.geometry=geometry!==undefined?geometry:new BufferGeometry();this.material=material!==undefined?material:new MeshBasicMaterial();this.updateMorphTargets();}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:true,copy:function copy(source){Object3D.prototype.copy.call(this,source);if(source.morphTargetInfluences!==undefined){this.morphTargetInfluences=source.morphTargetInfluences.slice();}if(source.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary);}return this;},updateMorphTargets:function updateMorphTargets(){var geometry=this.geometry;var m,ml,name;if(geometry.isBufferGeometry){var morphAttributes=geometry.morphAttributes;var keys=Object.keys(morphAttributes);if(keys.length>0){var morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(m=0,ml=morphAttribute.length;m<ml;m++){name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{var morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}},raycast:function raycast(raycaster,intersects){var geometry=this.geometry;var material=this.material;var matrixWorld=this.matrixWorld;if(material===undefined)return;// Checking boundingSphere distance to ray
if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere.copy(geometry.boundingSphere);_sphere.applyMatrix4(matrixWorld);if(raycaster.ray.intersectsSphere(_sphere)===false)return;//
_inverseMatrix.getInverse(matrixWorld);_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);// Check boundingBox before continuing
if(geometry.boundingBox!==null){if(_ray.intersectsBox(geometry.boundingBox)===false)return;}var intersection;if(geometry.isBufferGeometry){var a,b,c;var index=geometry.index;var position=geometry.attributes.position;var morphPosition=geometry.morphAttributes.position;var morphTargetsRelative=geometry.morphTargetsRelative;var uv=geometry.attributes.uv;var uv2=geometry.attributes.uv2;var groups=geometry.groups;var drawRange=geometry.drawRange;var i,j,il,jl;var group,groupMaterial;var start,end;if(index!==null){// indexed buffer geometry
if(Array.isArray(material)){for(i=0,il=groups.length;i<il;i++){group=groups[i];groupMaterial=material[group.materialIndex];start=Math.max(group.start,drawRange.start);end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(j=start,jl=end;j<jl;j+=3){a=index.getX(j);b=index.getX(j+1);c=index.getX(j+2);intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in indexed buffer semantics
intersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{start=Math.max(0,drawRange.start);end=Math.min(index.count,drawRange.start+drawRange.count);for(i=start,il=end;i<il;i+=3){a=index.getX(i);b=index.getX(i+1);c=index.getX(i+2);intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in indexed buffer semantics
intersects.push(intersection);}}}}else if(position!==undefined){// non-indexed buffer geometry
if(Array.isArray(material)){for(i=0,il=groups.length;i<il;i++){group=groups[i];groupMaterial=material[group.materialIndex];start=Math.max(group.start,drawRange.start);end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(j=start,jl=end;j<jl;j+=3){a=j;b=j+1;c=j+2;intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in non-indexed buffer semantics
intersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{start=Math.max(0,drawRange.start);end=Math.min(position.count,drawRange.start+drawRange.count);for(i=start,il=end;i<il;i+=3){a=i;b=i+1;c=i+2;intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in non-indexed buffer semantics
intersects.push(intersection);}}}}}else if(geometry.isGeometry){var fvA,fvB,fvC;var isMultiMaterial=Array.isArray(material);var vertices=geometry.vertices;var faces=geometry.faces;var uvs;var faceVertexUvs=geometry.faceVertexUvs[0];if(faceVertexUvs.length>0)uvs=faceVertexUvs;for(var f=0,fl=faces.length;f<fl;f++){var face=faces[f];var faceMaterial=isMultiMaterial?material[face.materialIndex]:material;if(faceMaterial===undefined)continue;fvA=vertices[face.a];fvB=vertices[face.b];fvC=vertices[face.c];intersection=checkIntersection(this,faceMaterial,raycaster,_ray,fvA,fvB,fvC,_intersectionPoint);if(intersection){if(uvs&&uvs[f]){var uvs_f=uvs[f];_uvA.copy(uvs_f[0]);_uvB.copy(uvs_f[1]);_uvC.copy(uvs_f[2]);intersection.uv=Triangle.getUV(_intersectionPoint,fvA,fvB,fvC,_uvA,_uvB,_uvC,new Vector2());}intersection.face=face;intersection.faceIndex=f;intersects.push(intersection);}}}},clone:function clone(){return new this.constructor(this.geometry,this.material).copy(this);}});function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){var intersect;if(material.side===BackSide){intersect=ray.intersectTriangle(pC,pB,pA,true,point);}else{intersect=ray.intersectTriangle(pA,pB,pC,material.side!==DoubleSide,point);}if(intersect===null)return null;_intersectionPointWorld.copy(point);_intersectionPointWorld.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(_intersectionPointWorld);if(distance<raycaster.near||distance>raycaster.far)return null;return{distance:distance,point:_intersectionPointWorld.clone(),object:object};}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c){_vA.fromBufferAttribute(position,a);_vB.fromBufferAttribute(position,b);_vC.fromBufferAttribute(position,c);var morphInfluences=object.morphTargetInfluences;if(material.morphTargets&&morphPosition&&morphInfluences){_morphA.set(0,0,0);_morphB.set(0,0,0);_morphC.set(0,0,0);for(var i=0,il=morphPosition.length;i<il;i++){var influence=morphInfluences[i];var morphAttribute=morphPosition[i];if(influence===0)continue;_tempA.fromBufferAttribute(morphAttribute,a);_tempB.fromBufferAttribute(morphAttribute,b);_tempC.fromBufferAttribute(morphAttribute,c);if(morphTargetsRelative){_morphA.addScaledVector(_tempA,influence);_morphB.addScaledVector(_tempB,influence);_morphC.addScaledVector(_tempC,influence);}else{_morphA.addScaledVector(_tempA.sub(_vA),influence);_morphB.addScaledVector(_tempB.sub(_vB),influence);_morphC.addScaledVector(_tempC.sub(_vC),influence);}}_vA.add(_morphA);_vB.add(_morphB);_vC.add(_morphC);}if(object.isSkinnedMesh){object.boneTransform(a,_vA);object.boneTransform(b,_vB);object.boneTransform(c,_vC);}var intersection=checkIntersection(object,material,raycaster,ray,_vA,_vB,_vC,_intersectionPoint);if(intersection){if(uv){_uvA.fromBufferAttribute(uv,a);_uvB.fromBufferAttribute(uv,b);_uvC.fromBufferAttribute(uv,c);intersection.uv=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2());}if(uv2){_uvA.fromBufferAttribute(uv2,a);_uvB.fromBufferAttribute(uv2,b);_uvC.fromBufferAttribute(uv2,c);intersection.uv2=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2());}var face=new Face3(a,b,c);Triangle.getNormal(_vA,_vB,_vC,face.normal);intersection.face=face;}return intersection;}/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author bhouston / http://clara.io
 */var _geometryId=0;// Geometry uses even numbers as Id
var _m1$3=new Matrix4();var _obj$1=new Object3D();var _offset$1=new Vector3$1();function Geometry(){Object.defineProperty(this,'id',{value:_geometryId+=2});this.uuid=MathUtils.generateUUID();this.name='';this.type='Geometry';this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;// update flags
this.elementsNeedUpdate=false;this.verticesNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.groupsNeedUpdate=false;}Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:true,applyMatrix4:function applyMatrix4(matrix){var normalMatrix=new Matrix3().getNormalMatrix(matrix);for(var i=0,il=this.vertices.length;i<il;i++){var vertex=this.vertices[i];vertex.applyMatrix4(matrix);}for(var i=0,il=this.faces.length;i<il;i++){var face=this.faces[i];face.normal.applyMatrix3(normalMatrix).normalize();for(var j=0,jl=face.vertexNormals.length;j<jl;j++){face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();}}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}this.verticesNeedUpdate=true;this.normalsNeedUpdate=true;return this;},rotateX:function rotateX(angle){// rotate geometry around world x-axis
_m1$3.makeRotationX(angle);this.applyMatrix4(_m1$3);return this;},rotateY:function rotateY(angle){// rotate geometry around world y-axis
_m1$3.makeRotationY(angle);this.applyMatrix4(_m1$3);return this;},rotateZ:function rotateZ(angle){// rotate geometry around world z-axis
_m1$3.makeRotationZ(angle);this.applyMatrix4(_m1$3);return this;},translate:function translate(x,y,z){// translate geometry
_m1$3.makeTranslation(x,y,z);this.applyMatrix4(_m1$3);return this;},scale:function scale(x,y,z){// scale geometry
_m1$3.makeScale(x,y,z);this.applyMatrix4(_m1$3);return this;},lookAt:function lookAt(vector){_obj$1.lookAt(vector);_obj$1.updateMatrix();this.applyMatrix4(_obj$1.matrix);return this;},fromBufferGeometry:function fromBufferGeometry(geometry){var scope=this;var indices=geometry.index!==null?geometry.index.array:undefined;var attributes=geometry.attributes;if(attributes.position===undefined){console.error('THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.');return this;}var positions=attributes.position.array;var normals=attributes.normal!==undefined?attributes.normal.array:undefined;var colors=attributes.color!==undefined?attributes.color.array:undefined;var uvs=attributes.uv!==undefined?attributes.uv.array:undefined;var uvs2=attributes.uv2!==undefined?attributes.uv2.array:undefined;if(uvs2!==undefined)this.faceVertexUvs[1]=[];for(var i=0;i<positions.length;i+=3){scope.vertices.push(new Vector3$1().fromArray(positions,i));if(colors!==undefined){scope.colors.push(new Color().fromArray(colors,i));}}function addFace(a,b,c,materialIndex){var vertexColors=colors===undefined?[]:[scope.colors[a].clone(),scope.colors[b].clone(),scope.colors[c].clone()];var vertexNormals=normals===undefined?[]:[new Vector3$1().fromArray(normals,a*3),new Vector3$1().fromArray(normals,b*3),new Vector3$1().fromArray(normals,c*3)];var face=new Face3(a,b,c,vertexNormals,vertexColors,materialIndex);scope.faces.push(face);if(uvs!==undefined){scope.faceVertexUvs[0].push([new Vector2().fromArray(uvs,a*2),new Vector2().fromArray(uvs,b*2),new Vector2().fromArray(uvs,c*2)]);}if(uvs2!==undefined){scope.faceVertexUvs[1].push([new Vector2().fromArray(uvs2,a*2),new Vector2().fromArray(uvs2,b*2),new Vector2().fromArray(uvs2,c*2)]);}}var groups=geometry.groups;if(groups.length>0){for(var i=0;i<groups.length;i++){var group=groups[i];var start=group.start;var count=group.count;for(var j=start,jl=start+count;j<jl;j+=3){if(indices!==undefined){addFace(indices[j],indices[j+1],indices[j+2],group.materialIndex);}else{addFace(j,j+1,j+2,group.materialIndex);}}}}else{if(indices!==undefined){for(var i=0;i<indices.length;i+=3){addFace(indices[i],indices[i+1],indices[i+2]);}}else{for(var i=0;i<positions.length/3;i+=3){addFace(i,i+1,i+2);}}}this.computeFaceNormals();if(geometry.boundingBox!==null){this.boundingBox=geometry.boundingBox.clone();}if(geometry.boundingSphere!==null){this.boundingSphere=geometry.boundingSphere.clone();}return this;},center:function center(){this.computeBoundingBox();this.boundingBox.getCenter(_offset$1).negate();this.translate(_offset$1.x,_offset$1.y,_offset$1.z);return this;},normalize:function normalize(){this.computeBoundingSphere();var center=this.boundingSphere.center;var radius=this.boundingSphere.radius;var s=radius===0?1:1.0/radius;var matrix=new Matrix4();matrix.set(s,0,0,-s*center.x,0,s,0,-s*center.y,0,0,s,-s*center.z,0,0,0,1);this.applyMatrix4(matrix);return this;},computeFaceNormals:function computeFaceNormals(){var cb=new Vector3$1(),ab=new Vector3$1();for(var f=0,fl=this.faces.length;f<fl;f++){var face=this.faces[f];var vA=this.vertices[face.a];var vB=this.vertices[face.b];var vC=this.vertices[face.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);cb.normalize();face.normal.copy(cb);}},computeVertexNormals:function computeVertexNormals(areaWeighted){if(areaWeighted===undefined)areaWeighted=true;var v,vl,f,fl,face,vertices;vertices=new Array(this.vertices.length);for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v]=new Vector3$1();}if(areaWeighted){// vertex normals weighted by triangle areas
// http://www.iquilezles.org/www/articles/normals/normals.htm
var vA,vB,vC;var cb=new Vector3$1(),ab=new Vector3$1();for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];vA=this.vertices[face.a];vB=this.vertices[face.b];vC=this.vertices[face.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);vertices[face.a].add(cb);vertices[face.b].add(cb);vertices[face.c].add(cb);}}else{this.computeFaceNormals();for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];vertices[face.a].add(face.normal);vertices[face.b].add(face.normal);vertices[face.c].add(face.normal);}}for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v].normalize();}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];var vertexNormals=face.vertexNormals;if(vertexNormals.length===3){vertexNormals[0].copy(vertices[face.a]);vertexNormals[1].copy(vertices[face.b]);vertexNormals[2].copy(vertices[face.c]);}else{vertexNormals[0]=vertices[face.a].clone();vertexNormals[1]=vertices[face.b].clone();vertexNormals[2]=vertices[face.c].clone();}}if(this.faces.length>0){this.normalsNeedUpdate=true;}},computeFlatVertexNormals:function computeFlatVertexNormals(){var f,fl,face;this.computeFaceNormals();for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];var vertexNormals=face.vertexNormals;if(vertexNormals.length===3){vertexNormals[0].copy(face.normal);vertexNormals[1].copy(face.normal);vertexNormals[2].copy(face.normal);}else{vertexNormals[0]=face.normal.clone();vertexNormals[1]=face.normal.clone();vertexNormals[2]=face.normal.clone();}}if(this.faces.length>0){this.normalsNeedUpdate=true;}},computeMorphNormals:function computeMorphNormals(){var i,il,f,fl,face;// save original normals
// - create temp variables on first access
//   otherwise just copy (for faster repeated calls)
for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];if(!face.__originalFaceNormal){face.__originalFaceNormal=face.normal.clone();}else{face.__originalFaceNormal.copy(face.normal);}if(!face.__originalVertexNormals)face.__originalVertexNormals=[];for(i=0,il=face.vertexNormals.length;i<il;i++){if(!face.__originalVertexNormals[i]){face.__originalVertexNormals[i]=face.vertexNormals[i].clone();}else{face.__originalVertexNormals[i].copy(face.vertexNormals[i]);}}}// use temp geometry to compute face and vertex normals for each morph
var tmpGeo=new Geometry();tmpGeo.faces=this.faces;for(i=0,il=this.morphTargets.length;i<il;i++){// create on first access
if(!this.morphNormals[i]){this.morphNormals[i]={};this.morphNormals[i].faceNormals=[];this.morphNormals[i].vertexNormals=[];var dstNormalsFace=this.morphNormals[i].faceNormals;var dstNormalsVertex=this.morphNormals[i].vertexNormals;var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;f<fl;f++){faceNormal=new Vector3$1();vertexNormals={a:new Vector3$1(),b:new Vector3$1(),c:new Vector3$1()};dstNormalsFace.push(faceNormal);dstNormalsVertex.push(vertexNormals);}}var morphNormals=this.morphNormals[i];// set vertices to morph target
tmpGeo.vertices=this.morphTargets[i].vertices;// compute morph normals
tmpGeo.computeFaceNormals();tmpGeo.computeVertexNormals();// store morph normals
var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];faceNormal=morphNormals.faceNormals[f];vertexNormals=morphNormals.vertexNormals[f];faceNormal.copy(face.normal);vertexNormals.a.copy(face.vertexNormals[0]);vertexNormals.b.copy(face.vertexNormals[1]);vertexNormals.c.copy(face.vertexNormals[2]);}}// restore original normals
for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.normal=face.__originalFaceNormal;face.vertexNormals=face.__originalVertexNormals;}},computeBoundingBox:function computeBoundingBox(){if(this.boundingBox===null){this.boundingBox=new Box3();}this.boundingBox.setFromPoints(this.vertices);},computeBoundingSphere:function computeBoundingSphere(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}this.boundingSphere.setFromPoints(this.vertices);},merge:function merge(geometry,matrix,materialIndexOffset){if(!(geometry&&geometry.isGeometry)){console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.',geometry);return;}var normalMatrix,vertexOffset=this.vertices.length,vertices1=this.vertices,vertices2=geometry.vertices,faces1=this.faces,faces2=geometry.faces,colors1=this.colors,colors2=geometry.colors;if(materialIndexOffset===undefined)materialIndexOffset=0;if(matrix!==undefined){normalMatrix=new Matrix3().getNormalMatrix(matrix);}// vertices
for(var i=0,il=vertices2.length;i<il;i++){var vertex=vertices2[i];var vertexCopy=vertex.clone();if(matrix!==undefined)vertexCopy.applyMatrix4(matrix);vertices1.push(vertexCopy);}// colors
for(var i=0,il=colors2.length;i<il;i++){colors1.push(colors2[i].clone());}// faces
for(i=0,il=faces2.length;i<il;i++){var face=faces2[i],faceCopy,normal,color,faceVertexNormals=face.vertexNormals,faceVertexColors=face.vertexColors;faceCopy=new Face3(face.a+vertexOffset,face.b+vertexOffset,face.c+vertexOffset);faceCopy.normal.copy(face.normal);if(normalMatrix!==undefined){faceCopy.normal.applyMatrix3(normalMatrix).normalize();}for(var j=0,jl=faceVertexNormals.length;j<jl;j++){normal=faceVertexNormals[j].clone();if(normalMatrix!==undefined){normal.applyMatrix3(normalMatrix).normalize();}faceCopy.vertexNormals.push(normal);}faceCopy.color.copy(face.color);for(var j=0,jl=faceVertexColors.length;j<jl;j++){color=faceVertexColors[j];faceCopy.vertexColors.push(color.clone());}faceCopy.materialIndex=face.materialIndex+materialIndexOffset;faces1.push(faceCopy);}// uvs
for(var i=0,il=geometry.faceVertexUvs.length;i<il;i++){var faceVertexUvs2=geometry.faceVertexUvs[i];if(this.faceVertexUvs[i]===undefined)this.faceVertexUvs[i]=[];for(var j=0,jl=faceVertexUvs2.length;j<jl;j++){var uvs2=faceVertexUvs2[j],uvsCopy=[];for(var k=0,kl=uvs2.length;k<kl;k++){uvsCopy.push(uvs2[k].clone());}this.faceVertexUvs[i].push(uvsCopy);}}},mergeMesh:function mergeMesh(mesh){if(!(mesh&&mesh.isMesh)){console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.',mesh);return;}if(mesh.matrixAutoUpdate)mesh.updateMatrix();this.merge(mesh.geometry,mesh.matrix);},/*
	 * Checks for duplicate vertices with hashmap.
	 * Duplicated vertices are removed
	 * and faces' vertices are updated.
	 */mergeVertices:function mergeVertices(){var verticesMap={};// Hashmap for looking up vertices by position coordinates (and making sure they are unique)
var unique=[],changes=[];var v,key;var precisionPoints=4;// number of decimal points, e.g. 4 for epsilon of 0.0001
var precision=Math.pow(10,precisionPoints);var i,il,face;var indices,j,jl;for(i=0,il=this.vertices.length;i<il;i++){v=this.vertices[i];key=Math.round(v.x*precision)+'_'+Math.round(v.y*precision)+'_'+Math.round(v.z*precision);if(verticesMap[key]===undefined){verticesMap[key]=i;unique.push(this.vertices[i]);changes[i]=unique.length-1;}else{//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);
changes[i]=changes[verticesMap[key]];}}// if faces are completely degenerate after merging vertices, we
// have to remove them from the geometry.
var faceIndicesToRemove=[];for(i=0,il=this.faces.length;i<il;i++){face=this.faces[i];face.a=changes[face.a];face.b=changes[face.b];face.c=changes[face.c];indices=[face.a,face.b,face.c];// if any duplicate vertices are found in a Face3
// we have to remove the face as nothing can be saved
for(var n=0;n<3;n++){if(indices[n]===indices[(n+1)%3]){faceIndicesToRemove.push(i);break;}}}for(i=faceIndicesToRemove.length-1;i>=0;i--){var idx=faceIndicesToRemove[i];this.faces.splice(idx,1);for(j=0,jl=this.faceVertexUvs.length;j<jl;j++){this.faceVertexUvs[j].splice(idx,1);}}// Use unique set of vertices
var diff=this.vertices.length-unique.length;this.vertices=unique;return diff;},setFromPoints:function setFromPoints(points){this.vertices=[];for(var i=0,l=points.length;i<l;i++){var point=points[i];this.vertices.push(new Vector3$1(point.x,point.y,point.z||0));}return this;},sortFacesByMaterialIndex:function sortFacesByMaterialIndex(){var faces=this.faces;var length=faces.length;// tag faces
for(var i=0;i<length;i++){faces[i]._id=i;}// sort faces
function materialIndexSort(a,b){return a.materialIndex-b.materialIndex;}faces.sort(materialIndexSort);// sort uvs
var uvs1=this.faceVertexUvs[0];var uvs2=this.faceVertexUvs[1];var newUvs1,newUvs2;if(uvs1&&uvs1.length===length)newUvs1=[];if(uvs2&&uvs2.length===length)newUvs2=[];for(var i=0;i<length;i++){var id=faces[i]._id;if(newUvs1)newUvs1.push(uvs1[id]);if(newUvs2)newUvs2.push(uvs2[id]);}if(newUvs1)this.faceVertexUvs[0]=newUvs1;if(newUvs2)this.faceVertexUvs[1]=newUvs2;},toJSON:function toJSON(){var data={metadata:{version:4.5,type:'Geometry',generator:'Geometry.toJSON'}};// standard Geometry serialization
data.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.parameters!==undefined){var parameters=this.parameters;for(var key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}var vertices=[];for(var i=0;i<this.vertices.length;i++){var vertex=this.vertices[i];vertices.push(vertex.x,vertex.y,vertex.z);}var faces=[];var normals=[];var normalsHash={};var colors=[];var colorsHash={};var uvs=[];var uvsHash={};for(var i=0;i<this.faces.length;i++){var face=this.faces[i];var hasMaterial=true;var hasFaceUv=false;// deprecated
var hasFaceVertexUv=this.faceVertexUvs[0][i]!==undefined;var hasFaceNormal=face.normal.length()>0;var hasFaceVertexNormal=face.vertexNormals.length>0;var hasFaceColor=face.color.r!==1||face.color.g!==1||face.color.b!==1;var hasFaceVertexColor=face.vertexColors.length>0;var faceType=0;faceType=setBit(faceType,0,0);// isQuad
faceType=setBit(faceType,1,hasMaterial);faceType=setBit(faceType,2,hasFaceUv);faceType=setBit(faceType,3,hasFaceVertexUv);faceType=setBit(faceType,4,hasFaceNormal);faceType=setBit(faceType,5,hasFaceVertexNormal);faceType=setBit(faceType,6,hasFaceColor);faceType=setBit(faceType,7,hasFaceVertexColor);faces.push(faceType);faces.push(face.a,face.b,face.c);faces.push(face.materialIndex);if(hasFaceVertexUv){var faceVertexUvs=this.faceVertexUvs[0][i];faces.push(getUvIndex(faceVertexUvs[0]),getUvIndex(faceVertexUvs[1]),getUvIndex(faceVertexUvs[2]));}if(hasFaceNormal){faces.push(getNormalIndex(face.normal));}if(hasFaceVertexNormal){var vertexNormals=face.vertexNormals;faces.push(getNormalIndex(vertexNormals[0]),getNormalIndex(vertexNormals[1]),getNormalIndex(vertexNormals[2]));}if(hasFaceColor){faces.push(getColorIndex(face.color));}if(hasFaceVertexColor){var vertexColors=face.vertexColors;faces.push(getColorIndex(vertexColors[0]),getColorIndex(vertexColors[1]),getColorIndex(vertexColors[2]));}}function setBit(value,position,enabled){return enabled?value|1<<position:value&~(1<<position);}function getNormalIndex(normal){var hash=normal.x.toString()+normal.y.toString()+normal.z.toString();if(normalsHash[hash]!==undefined){return normalsHash[hash];}normalsHash[hash]=normals.length/3;normals.push(normal.x,normal.y,normal.z);return normalsHash[hash];}function getColorIndex(color){var hash=color.r.toString()+color.g.toString()+color.b.toString();if(colorsHash[hash]!==undefined){return colorsHash[hash];}colorsHash[hash]=colors.length;colors.push(color.getHex());return colorsHash[hash];}function getUvIndex(uv){var hash=uv.x.toString()+uv.y.toString();if(uvsHash[hash]!==undefined){return uvsHash[hash];}uvsHash[hash]=uvs.length/2;uvs.push(uv.x,uv.y);return uvsHash[hash];}data.data={};data.data.vertices=vertices;data.data.normals=normals;if(colors.length>0)data.data.colors=colors;if(uvs.length>0)data.data.uvs=[uvs];// temporal backward compatibility
data.data.faces=faces;return data;},clone:function clone(){/*
		 // Handle primitives

		 var parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 var values = [];

		 for ( var key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 var geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */return new Geometry().copy(this);},copy:function copy(source){var i,il,j,jl,k,kl;// reset
this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;// name
this.name=source.name;// vertices
var vertices=source.vertices;for(i=0,il=vertices.length;i<il;i++){this.vertices.push(vertices[i].clone());}// colors
var colors=source.colors;for(i=0,il=colors.length;i<il;i++){this.colors.push(colors[i].clone());}// faces
var faces=source.faces;for(i=0,il=faces.length;i<il;i++){this.faces.push(faces[i].clone());}// face vertex uvs
for(i=0,il=source.faceVertexUvs.length;i<il;i++){var faceVertexUvs=source.faceVertexUvs[i];if(this.faceVertexUvs[i]===undefined){this.faceVertexUvs[i]=[];}for(j=0,jl=faceVertexUvs.length;j<jl;j++){var uvs=faceVertexUvs[j],uvsCopy=[];for(k=0,kl=uvs.length;k<kl;k++){var uv=uvs[k];uvsCopy.push(uv.clone());}this.faceVertexUvs[i].push(uvsCopy);}}// morph targets
var morphTargets=source.morphTargets;for(i=0,il=morphTargets.length;i<il;i++){var morphTarget={};morphTarget.name=morphTargets[i].name;// vertices
if(morphTargets[i].vertices!==undefined){morphTarget.vertices=[];for(j=0,jl=morphTargets[i].vertices.length;j<jl;j++){morphTarget.vertices.push(morphTargets[i].vertices[j].clone());}}// normals
if(morphTargets[i].normals!==undefined){morphTarget.normals=[];for(j=0,jl=morphTargets[i].normals.length;j<jl;j++){morphTarget.normals.push(morphTargets[i].normals[j].clone());}}this.morphTargets.push(morphTarget);}// morph normals
var morphNormals=source.morphNormals;for(i=0,il=morphNormals.length;i<il;i++){var morphNormal={};// vertex normals
if(morphNormals[i].vertexNormals!==undefined){morphNormal.vertexNormals=[];for(j=0,jl=morphNormals[i].vertexNormals.length;j<jl;j++){var srcVertexNormal=morphNormals[i].vertexNormals[j];var destVertexNormal={};destVertexNormal.a=srcVertexNormal.a.clone();destVertexNormal.b=srcVertexNormal.b.clone();destVertexNormal.c=srcVertexNormal.c.clone();morphNormal.vertexNormals.push(destVertexNormal);}}// face normals
if(morphNormals[i].faceNormals!==undefined){morphNormal.faceNormals=[];for(j=0,jl=morphNormals[i].faceNormals.length;j<jl;j++){morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());}}this.morphNormals.push(morphNormal);}// skin weights
var skinWeights=source.skinWeights;for(i=0,il=skinWeights.length;i<il;i++){this.skinWeights.push(skinWeights[i].clone());}// skin indices
var skinIndices=source.skinIndices;for(i=0,il=skinIndices.length;i<il;i++){this.skinIndices.push(skinIndices[i].clone());}// line distances
var lineDistances=source.lineDistances;for(i=0,il=lineDistances.length;i<il;i++){this.lineDistances.push(lineDistances[i]);}// bounding box
var boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere
var boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// update flags
this.elementsNeedUpdate=source.elementsNeedUpdate;this.verticesNeedUpdate=source.verticesNeedUpdate;this.uvsNeedUpdate=source.uvsNeedUpdate;this.normalsNeedUpdate=source.normalsNeedUpdate;this.colorsNeedUpdate=source.colorsNeedUpdate;this.lineDistancesNeedUpdate=source.lineDistancesNeedUpdate;this.groupsNeedUpdate=source.groupsNeedUpdate;return this;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */ // BoxGeometry
var BoxGeometry=/*#__PURE__*/function(_Geometry){_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(BoxGeometry,_Geometry);var _super2=_createSuper(BoxGeometry);function BoxGeometry(width,height,depth,widthSegments,heightSegments,depthSegments){var _this8;_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this,BoxGeometry);_this8=_super2.call(this);_this8.type='BoxGeometry';_this8.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};_this8.fromBufferGeometry(new BoxBufferGeometry(width,height,depth,widthSegments,heightSegments,depthSegments));_this8.mergeVertices();return _this8;}return BoxGeometry;}(Geometry);// BoxBufferGeometry
var BoxBufferGeometry=/*#__PURE__*/function(_BufferGeometry){_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(BoxBufferGeometry,_BufferGeometry);var _super3=_createSuper(BoxBufferGeometry);function BoxBufferGeometry(width,height,depth,widthSegments,heightSegments,depthSegments){var _this9;_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this,BoxBufferGeometry);_this9=_super3.call(this);_this9.type='BoxBufferGeometry';_this9.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};var scope=_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default()(_this9);width=width||1;height=height||1;depth=depth||1;// segments
widthSegments=Math.floor(widthSegments)||1;heightSegments=Math.floor(heightSegments)||1;depthSegments=Math.floor(depthSegments)||1;// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables
var numberOfVertices=0;var groupStart=0;// build each side of the box geometry
buildPlane('z','y','x',-1,-1,depth,height,width,depthSegments,heightSegments,0);// px
buildPlane('z','y','x',1,-1,depth,height,-width,depthSegments,heightSegments,1);// nx
buildPlane('x','z','y',1,1,width,depth,height,widthSegments,depthSegments,2);// py
buildPlane('x','z','y',1,-1,width,depth,-height,widthSegments,depthSegments,3);// ny
buildPlane('x','y','z',1,-1,width,height,depth,widthSegments,heightSegments,4);// pz
buildPlane('x','y','z',-1,-1,width,height,-depth,widthSegments,heightSegments,5);// nz
// build geometry
_this9.setIndex(indices);_this9.setAttribute('position',new Float32BufferAttribute(vertices,3));_this9.setAttribute('normal',new Float32BufferAttribute(normals,3));_this9.setAttribute('uv',new Float32BufferAttribute(uvs,2));function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){var segmentWidth=width/gridX;var segmentHeight=height/gridY;var widthHalf=width/2;var heightHalf=height/2;var depthHalf=depth/2;var gridX1=gridX+1;var gridY1=gridY+1;var vertexCounter=0;var groupCount=0;var vector=new Vector3$1();// generate vertices, normals and uvs
for(var iy=0;iy<gridY1;iy++){var _y2=iy*segmentHeight-heightHalf;for(var ix=0;ix<gridX1;ix++){var _x2=ix*segmentWidth-widthHalf;// set values to correct vector component
vector[u]=_x2*udir;vector[v]=_y2*vdir;vector[w]=depthHalf;// now apply vector to vertex buffer
vertices.push(vector.x,vector.y,vector.z);// set values to correct vector component
vector[u]=0;vector[v]=0;vector[w]=depth>0?1:-1;// now apply vector to normal buffer
normals.push(vector.x,vector.y,vector.z);// uvs
uvs.push(ix/gridX);uvs.push(1-iy/gridY);// counters
vertexCounter+=1;}}// indices
// 1. you need three indices to draw a single face
// 2. a single segment consists of two faces
// 3. so we need to generate six (2*3) indices per segment
for(var _iy=0;_iy<gridY;_iy++){for(var _ix=0;_ix<gridX;_ix++){var _a2=numberOfVertices+_ix+gridX1*_iy;var _b2=numberOfVertices+_ix+gridX1*(_iy+1);var c=numberOfVertices+(_ix+1)+gridX1*(_iy+1);var _d2=numberOfVertices+(_ix+1)+gridX1*_iy;// faces
indices.push(_a2,_b2,_d2);indices.push(_b2,c,_d2);// increase counter
groupCount+=6;}}// add a group to the geometry. this will ensure multi material support
scope.addGroup(groupStart,groupCount,materialIndex);// calculate new start value for groups
groupStart+=groupCount;// update total number of vertices
numberOfVertices+=vertexCounter;}return _this9;}return BoxBufferGeometry;}(BufferGeometry);/**
 * Uniform Utilities
 */function cloneUniforms(src){var dst={};for(var u in src){dst[u]={};for(var p in src[u]){var property=src[u][p];if(property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture)){dst[u][p]=property.clone();}else if(Array.isArray(property)){dst[u][p]=property.slice();}else{dst[u][p]=property;}}}return dst;}function mergeUniforms(uniforms){var merged={};for(var u=0;u<uniforms.length;u++){var tmp=cloneUniforms(uniforms[u]);for(var p in tmp){merged[p]=tmp[p];}}return merged;}// Legacy
var UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";var default_fragment="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  defines: { "label" : "value" },
 *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
 *
 *  fragmentShader: <string>,
 *  vertexShader: <string>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  lights: <bool>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */function ShaderMaterial(parameters){Material.call(this);this.type='ShaderMaterial';this.defines={};this.uniforms={};this.vertexShader=default_vertex;this.fragmentShader=default_fragment;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;// set to use scene fog
this.lights=false;// set to use scene lights
this.clipping=false;// set to use user-defined clipping planes
this.skinning=false;// set to use skinning attribute streams
this.morphTargets=false;// set to use morph targets
this.morphNormals=false;// set to use morph normals
this.extensions={derivatives:false,// set to use derivatives
fragDepth:false,// set to use fragment depth values
drawBuffers:false,// set to use draw buffers
shaderTextureLOD:false// set to use shader texture LOD
};// When rendered geometry doesn't include these attributes but the material does,
// use these default values in WebGL. This avoids errors when buffer data is missing.
this.defaultAttributeValues={'color':[1,1,1],'uv':[0,0],'uv2':[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;if(parameters!==undefined){if(parameters.attributes!==undefined){console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');}this.setValues(parameters);}}ShaderMaterial.prototype=Object.create(Material.prototype);ShaderMaterial.prototype.constructor=ShaderMaterial;ShaderMaterial.prototype.isShaderMaterial=true;ShaderMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.extensions=Object.assign({},source.extensions);return this;};ShaderMaterial.prototype.toJSON=function(meta){var data=Material.prototype.toJSON.call(this,meta);data.uniforms={};for(var name in this.uniforms){var uniform=this.uniforms[name];var value=uniform.value;if(value&&value.isTexture){data.uniforms[name]={type:'t',value:value.toJSON(meta).uuid};}else if(value&&value.isColor){data.uniforms[name]={type:'c',value:value.getHex()};}else if(value&&value.isVector2){data.uniforms[name]={type:'v2',value:value.toArray()};}else if(value&&value.isVector3){data.uniforms[name]={type:'v3',value:value.toArray()};}else if(value&&value.isVector4){data.uniforms[name]={type:'v4',value:value.toArray()};}else if(value&&value.isMatrix3){data.uniforms[name]={type:'m3',value:value.toArray()};}else if(value&&value.isMatrix4){data.uniforms[name]={type:'m4',value:value.toArray()};}else{data.uniforms[name]={value:value};// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far
}}if(Object.keys(this.defines).length>0)data.defines=this.defines;data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;var extensions={};for(var key in this.extensions){if(this.extensions[key]===true)extensions[key]=true;}if(Object.keys(extensions).length>0)data.extensions=extensions;return data;};/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author WestLangley / http://github.com/WestLangley
*/function Camera(){Object3D.call(this);this.type='Camera';this.matrixWorldInverse=new Matrix4();this.projectionMatrix=new Matrix4();this.projectionMatrixInverse=new Matrix4();}Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:true,copy:function copy(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);return this;},getWorldDirection:function getWorldDirection(target){if(target===undefined){console.warn('THREE.Camera: .getWorldDirection() target is now required');target=new Vector3$1();}this.updateMatrixWorld(true);var e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize();},updateMatrixWorld:function updateMatrixWorld(force){Object3D.prototype.updateMatrixWorld.call(this,force);this.matrixWorldInverse.getInverse(this.matrixWorld);},updateWorldMatrix:function updateWorldMatrix(updateParents,updateChildren){Object3D.prototype.updateWorldMatrix.call(this,updateParents,updateChildren);this.matrixWorldInverse.getInverse(this.matrixWorld);},clone:function clone(){return new this.constructor().copy(this);}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author greggman / http://games.greggman.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author tschw
 */function PerspectiveCamera(fov,aspect,near,far){Camera.call(this);this.type='PerspectiveCamera';this.fov=fov!==undefined?fov:50;this.zoom=1;this.near=near!==undefined?near:0.1;this.far=far!==undefined?far:2000;this.focus=10;this.aspect=aspect!==undefined?aspect:1;this.view=null;this.filmGauge=35;// width of the film (default in millimeters)
this.filmOffset=0;// horizontal film offset (same unit as gauge)
this.updateProjectionMatrix();}PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:true,copy:function copy(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=source.view===null?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this;},/**
	 * Sets the FOV by focal length in respect to the current .filmGauge.
	 *
	 * The default film gauge is 35, so that the focal length can be specified for
	 * a 35mm (full frame) camera.
	 *
	 * Values for focal length and film gauge must have the same unit.
	 */setFocalLength:function setFocalLength(focalLength){// see http://www.bobatkins.com/photography/technical/field_of_view.html
var vExtentSlope=0.5*this.getFilmHeight()/focalLength;this.fov=MathUtils.RAD2DEG*2*Math.atan(vExtentSlope);this.updateProjectionMatrix();},/**
	 * Calculates the focal length from the current .fov and .filmGauge.
	 */getFocalLength:function getFocalLength(){var vExtentSlope=Math.tan(MathUtils.DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/vExtentSlope;},getEffectiveFOV:function getEffectiveFOV(){return MathUtils.RAD2DEG*2*Math.atan(Math.tan(MathUtils.DEG2RAD*0.5*this.fov)/this.zoom);},getFilmWidth:function getFilmWidth(){// film not completely covered in portrait format (aspect < 1)
return this.filmGauge*Math.min(this.aspect,1);},getFilmHeight:function getFilmHeight(){// film not completely covered in landscape format (aspect > 1)
return this.filmGauge/Math.max(this.aspect,1);},/**
	 * Sets an offset in a larger frustum. This is useful for multi-window or
	 * multi-monitor/multi-machine setups.
	 *
	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
	 * the monitors are in grid like this
	 *
	 *   +---+---+---+
	 *   | A | B | C |
	 *   +---+---+---+
	 *   | D | E | F |
	 *   +---+---+---+
	 *
	 * then for each monitor you would call it like this
	 *
	 *   var w = 1920;
	 *   var h = 1080;
	 *   var fullWidth = w * 3;
	 *   var fullHeight = h * 2;
	 *
	 *   --A--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
	 *   --B--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
	 *   --C--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
	 *   --D--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
	 *   --E--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
	 *   --F--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
	 *
	 *   Note there is no reason monitors have to be the same size or in a grid.
	 */setViewOffset:function setViewOffset(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();},clearViewOffset:function clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();},updateProjectionMatrix:function updateProjectionMatrix(){var near=this.near,top=near*Math.tan(MathUtils.DEG2RAD*0.5*this.fov)/this.zoom,height=2*top,width=this.aspect*height,left=-0.5*width,view=this.view;if(this.view!==null&&this.view.enabled){var fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight;}var skew=this.filmOffset;if(skew!==0)left+=near*skew/this.getFilmWidth();this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix);},toJSON:function toJSON(meta){var data=Object3D.prototype.toJSON.call(this,meta);data.object.fov=this.fov;data.object.zoom=this.zoom;data.object.near=this.near;data.object.far=this.far;data.object.focus=this.focus;data.object.aspect=this.aspect;if(this.view!==null)data.object.view=Object.assign({},this.view);data.object.filmGauge=this.filmGauge;data.object.filmOffset=this.filmOffset;return data;}});/**
 * Camera for rendering cube maps
 *	- renders scene into axis-aligned cube
 *
 * @author alteredq / http://alteredqualia.com/
 */var fov=90,aspect=1;function CubeCamera(near,far,renderTarget){Object3D.call(this);this.type='CubeCamera';if(renderTarget.isWebGLCubeRenderTarget!==true){console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');return;}this.renderTarget=renderTarget;var cameraPX=new PerspectiveCamera(fov,aspect,near,far);cameraPX.layers=this.layers;cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3$1(1,0,0));this.add(cameraPX);var cameraNX=new PerspectiveCamera(fov,aspect,near,far);cameraNX.layers=this.layers;cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3$1(-1,0,0));this.add(cameraNX);var cameraPY=new PerspectiveCamera(fov,aspect,near,far);cameraPY.layers=this.layers;cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3$1(0,1,0));this.add(cameraPY);var cameraNY=new PerspectiveCamera(fov,aspect,near,far);cameraNY.layers=this.layers;cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3$1(0,-1,0));this.add(cameraNY);var cameraPZ=new PerspectiveCamera(fov,aspect,near,far);cameraPZ.layers=this.layers;cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3$1(0,0,1));this.add(cameraPZ);var cameraNZ=new PerspectiveCamera(fov,aspect,near,far);cameraNZ.layers=this.layers;cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3$1(0,0,-1));this.add(cameraNZ);this.update=function(renderer,scene){if(this.parent===null)this.updateMatrixWorld();var currentXrEnabled=renderer.xr.enabled;var currentRenderTarget=renderer.getRenderTarget();renderer.xr.enabled=false;var generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=false;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget);renderer.xr.enabled=currentXrEnabled;};this.clear=function(renderer,color,depth,stencil){var currentRenderTarget=renderer.getRenderTarget();for(var i=0;i<6;i++){renderer.setRenderTarget(renderTarget,i);renderer.clear(color,depth,stencil);}renderer.setRenderTarget(currentRenderTarget);};}CubeCamera.prototype=Object.create(Object3D.prototype);CubeCamera.prototype.constructor=CubeCamera;/**
 * @author alteredq / http://alteredqualia.com
 * @author WestLangley / http://github.com/WestLangley
 */function WebGLCubeRenderTarget(size,options,dummy){if(Number.isInteger(options)){console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');options=dummy;}WebGLRenderTarget.call(this,size,size,options);}WebGLCubeRenderTarget.prototype=Object.create(WebGLRenderTarget.prototype);WebGLCubeRenderTarget.prototype.constructor=WebGLCubeRenderTarget;WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=true;WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=function(renderer,texture){this.texture.type=texture.type;this.texture.format=texture.format;this.texture.encoding=texture.encoding;var scene=new Scene();var shader={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","	vWorldDirection = transformDirection( position, modelMatrix );","	#include <begin_vertex>","	#include <project_vertex>","}"].join('\n'),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#include <common>","void main() {","	vec3 direction = normalize( vWorldDirection );","	vec2 sampleUV = equirectUv( direction );","	gl_FragColor = texture2D( tEquirect, sampleUV );","}"].join('\n')};var material=new ShaderMaterial({type:'CubemapFromEquirect',uniforms:cloneUniforms(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,side:BackSide,blending:NoBlending});material.uniforms.tEquirect.value=texture;var mesh=new Mesh(new BoxBufferGeometry(5,5,5),material);scene.add(mesh);var camera=new CubeCamera(1,10,this);camera.update(renderer,scene);mesh.geometry.dispose();mesh.material.dispose();return this;};/**
 * @author alteredq / http://alteredqualia.com/
 */function DataTexture(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={data:data||null,width:width||1,height:height||1};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}DataTexture.prototype=Object.create(Texture.prototype);DataTexture.prototype.constructor=DataTexture;DataTexture.prototype.isDataTexture=true;/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / http://clara.io
 */var _sphere$1=new Sphere();var _vector$5=new Vector3$1();function Frustum(p0,p1,p2,p3,p4,p5){this.planes=[p0!==undefined?p0:new Plane(),p1!==undefined?p1:new Plane(),p2!==undefined?p2:new Plane(),p3!==undefined?p3:new Plane(),p4!==undefined?p4:new Plane(),p5!==undefined?p5:new Plane()];}Object.assign(Frustum.prototype,{set:function set(p0,p1,p2,p3,p4,p5){var planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(frustum){var planes=this.planes;for(var i=0;i<6;i++){planes[i].copy(frustum.planes[i]);}return this;},setFromProjectionMatrix:function setFromProjectionMatrix(m){var planes=this.planes;var me=m.elements;var me0=me[0],me1=me[1],me2=me[2],me3=me[3];var me4=me[4],me5=me[5],me6=me[6],me7=me[7];var me8=me[8],me9=me[9],me10=me[10],me11=me[11];var me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this;},intersectsObject:function intersectsObject(object){var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$1.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(_sphere$1);},intersectsSprite:function intersectsSprite(sprite){_sphere$1.center.set(0,0,0);_sphere$1.radius=0.7071067811865476;_sphere$1.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(_sphere$1);},intersectsSphere:function intersectsSphere(sphere){var planes=this.planes;var center=sphere.center;var negRadius=-sphere.radius;for(var i=0;i<6;i++){var distance=planes[i].distanceToPoint(center);if(distance<negRadius){return false;}}return true;},intersectsBox:function intersectsBox(box){var planes=this.planes;for(var i=0;i<6;i++){var plane=planes[i];// corner at max distance
_vector$5.x=plane.normal.x>0?box.max.x:box.min.x;_vector$5.y=plane.normal.y>0?box.max.y:box.min.y;_vector$5.z=plane.normal.z>0?box.max.z:box.min.z;if(plane.distanceToPoint(_vector$5)<0){return false;}}return true;},containsPoint:function containsPoint(point){var planes=this.planes;for(var i=0;i<6;i++){if(planes[i].distanceToPoint(point)<0){return false;}}return true;}});/**
 * Uniforms library for shared webgl shaders
 */var UniformsLib={common:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},map:{value:null},uvTransform:{value:new Matrix3()},uv2Transform:{value:new Matrix3()},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1.0},refractionRatio:{value:0.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:0.00025},fogNear:{value:1},fogFar:{value:2000},fogColor:{value:new Color(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},size:{value:1.0},scale:{value:1.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}},sprite:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},center:{value:new Vector2(0.5,0.5)},rotation:{value:0.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}}};/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLAnimation(){var context=null;var isAnimating=false;var animationLoop=null;function onAnimationFrame(time,frame){if(isAnimating===false)return;animationLoop(time,frame);context.requestAnimationFrame(onAnimationFrame);}return{start:function start(){if(isAnimating===true)return;if(animationLoop===null)return;context.requestAnimationFrame(onAnimationFrame);isAnimating=true;},stop:function stop(){isAnimating=false;},setAnimationLoop:function setAnimationLoop(callback){animationLoop=callback;},setContext:function setContext(value){context=value;}};}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLAttributes(gl,capabilities){var isWebGL2=capabilities.isWebGL2;var buffers=new WeakMap();function createBuffer(attribute,bufferType){var array=attribute.array;var usage=attribute.usage;var buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();var type=5126;if(array instanceof Float32Array){type=5126;}else if(array instanceof Float64Array){console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');}else if(array instanceof Uint16Array){type=5123;}else if(array instanceof Int16Array){type=5122;}else if(array instanceof Uint32Array){type=5125;}else if(array instanceof Int32Array){type=5124;}else if(array instanceof Int8Array){type=5120;}else if(array instanceof Uint8Array){type=5121;}return{buffer:buffer,type:type,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version};}function updateBuffer(buffer,attribute,bufferType){var array=attribute.array;var updateRange=attribute.updateRange;gl.bindBuffer(bufferType,buffer);if(updateRange.count===-1){// Not using update ranges
gl.bufferSubData(bufferType,0,array);}else{if(isWebGL2){gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array,updateRange.offset,updateRange.count);}else{gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count));}updateRange.count=-1;// reset range
}}//
function get(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;return buffers.get(attribute);}function remove(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;var data=buffers.get(attribute);if(data){gl.deleteBuffer(data.buffer);buffers.delete(attribute);}}function update(attribute,bufferType){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;var data=buffers.get(attribute);if(data===undefined){buffers.set(attribute,createBuffer(attribute,bufferType));}else if(data.version<attribute.version){updateBuffer(data.buffer,attribute,bufferType);data.version=attribute.version;}}return{get:get,remove:remove,update:update};}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */ // PlaneGeometry
function PlaneGeometry(width,height,widthSegments,heightSegments){Geometry.call(this);this.type='PlaneGeometry';this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};this.fromBufferGeometry(new PlaneBufferGeometry(width,height,widthSegments,heightSegments));this.mergeVertices();}PlaneGeometry.prototype=Object.create(Geometry.prototype);PlaneGeometry.prototype.constructor=PlaneGeometry;// PlaneBufferGeometry
function PlaneBufferGeometry(width,height,widthSegments,heightSegments){BufferGeometry.call(this);this.type='PlaneBufferGeometry';this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};width=width||1;height=height||1;var width_half=width/2;var height_half=height/2;var gridX=Math.floor(widthSegments)||1;var gridY=Math.floor(heightSegments)||1;var gridX1=gridX+1;var gridY1=gridY+1;var segment_width=width/gridX;var segment_height=height/gridY;var ix,iy;// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// generate vertices, normals and uvs
for(iy=0;iy<gridY1;iy++){var y=iy*segment_height-height_half;for(ix=0;ix<gridX1;ix++){var x=ix*segment_width-width_half;vertices.push(x,-y,0);normals.push(0,0,1);uvs.push(ix/gridX);uvs.push(1-iy/gridY);}}// indices
for(iy=0;iy<gridY;iy++){for(ix=0;ix<gridX;ix++){var a=ix+gridX1*iy;var b=ix+gridX1*(iy+1);var c=ix+1+gridX1*(iy+1);var d=ix+1+gridX1*iy;// faces
indices.push(a,b,d);indices.push(b,c,d);}}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}PlaneBufferGeometry.prototype=Object.create(BufferGeometry.prototype);PlaneBufferGeometry.prototype.constructor=PlaneBufferGeometry;var alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif";var alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";var alphatest_fragment="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif";var aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif";var aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";var begin_vertex="vec3 transformed = vec3( position );";var beginnormal_vertex="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif";var bsdfs="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif";var bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif";var clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif";var clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif";var clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif";var clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif";var color_fragment="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif";var color_pars_fragment="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";var color_pars_vertex="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";var color_vertex="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif";var common="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}";var cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif";var defaultnormal_vertex="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif";var displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif";var displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif";var emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif";var emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif";var encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );";var encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}";var envmap_fragment="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif";var envmap_common_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif";var envmap_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif";var envmap_pars_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif";var envmap_vertex="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif";var fog_vertex="#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif";var fog_pars_vertex="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif";var fog_fragment="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif";var fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";var gradientmap_pars_fragment="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}";var lightmap_fragment="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif";var lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";var lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif";var lights_pars_begin="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif";var envmap_physical_pars_fragment="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif";var lights_toon_fragment="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";var lights_toon_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)";var lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";var lights_phong_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)";var lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif";var lights_physical_pars_fragment="struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}";var lights_fragment_begin="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif";var lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif";var lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif";var logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif";var logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif";var logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif";var logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif";var map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif";var map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif";var map_particle_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif";var map_particle_pars_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";var metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif";var metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";var morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif";var morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";var morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif";var normal_fragment_begin="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;";var normal_fragment_maps="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif";var normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif";var clearcoat_normal_fragment_begin="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif";var clearcoat_normal_fragment_maps="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif";var clearcoat_pars_fragment="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif";var packing="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}";var premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif";var project_vertex="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;";var dithering_fragment="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif";var dithering_pars_fragment="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif";var roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif";var roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";var shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif";var shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif";var shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif";var shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}";var skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";var skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif";var skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif";var skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif";var specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";var specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";var tonemapping_fragment="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif";var tonemapping_pars_fragment="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}";var uv_pars_fragment="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif";var uv_pars_vertex="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif";var uv_vertex="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif";var uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";var uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif";var uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif";var worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";var background_frag="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var background_vert="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}";var cube_frag="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var cube_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}";var depth_frag="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}";var depth_vert="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}";var distanceRGBA_frag="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}";var distanceRGBA_vert="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}";var equirect_frag="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var equirect_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}";var linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";var linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";var meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}";var meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var meshmatcap_frag="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var meshmatcap_vert="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}";var meshtoon_frag="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var meshtoon_vert="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var meshphysical_frag="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var meshphysical_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var normal_frag="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}";var normal_vert="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}";var points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";var points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}";var shadow_frag="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";var shadow_vert="#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var sprite_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";var sprite_vert="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";var ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert};/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 */var ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},specular:{value:new Color(0x111111)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},roughness:{value:1.0},metalness:{value:0.0},envMapIntensity:{value:1}// temporary
}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},specular:{value:new Color(0x111111)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3()},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},/* -------------------------------------------------------------------------
	//	Cube map shader
	 ------------------------------------------------------------------------- */cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3$1()},nearDistance:{value:1},farDistance:{value:1000}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0x00000)},opacity:{value:1.0}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0x000000)},transparency:{value:0}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLBackground(renderer,state,objects,premultipliedAlpha){var clearColor=new Color(0x000000);var clearAlpha=0;var planeMesh;var boxMesh;var currentBackground=null;var currentBackgroundVersion=0;var currentTonemapping=null;function render(renderList,scene,camera,forceClear){var background=scene.background;// Ignore background in AR
// TODO: Reconsider this.
var xr=renderer.xr;var session=xr.getSession&&xr.getSession();if(session&&session.environmentBlendMode==='additive'){background=null;}if(background===null){setClear(clearColor,clearAlpha);}else if(background&&background.isColor){setClear(background,1);forceClear=true;}if(renderer.autoClear||forceClear){renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);}if(background&&(background.isCubeTexture||background.isWebGLCubeRenderTarget||background.mapping===CubeUVReflectionMapping)){if(boxMesh===undefined){boxMesh=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({type:'BackgroundCubeMaterial',uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:false,depthWrite:false,fog:false}));boxMesh.geometry.deleteAttribute('normal');boxMesh.geometry.deleteAttribute('uv');boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld);};// enable code injection for non-built-in material
Object.defineProperty(boxMesh.material,'envMap',{get:function get(){return this.uniforms.envMap.value;}});objects.update(boxMesh);}var texture=background.isWebGLCubeRenderTarget?background.texture:background;boxMesh.material.uniforms.envMap.value=texture;boxMesh.material.uniforms.flipEnvMap.value=texture.isCubeTexture?-1:1;if(currentBackground!==background||currentBackgroundVersion!==texture.version||currentTonemapping!==renderer.toneMapping){boxMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=texture.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list
renderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null);}else if(background&&background.isTexture){if(planeMesh===undefined){planeMesh=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({type:'BackgroundMaterial',uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:false,depthWrite:false,fog:false}));planeMesh.geometry.deleteAttribute('normal');// enable code injection for non-built-in material
Object.defineProperty(planeMesh.material,'map',{get:function get(){return this.uniforms.t2D.value;}});objects.update(planeMesh);}planeMesh.material.uniforms.t2D.value=background;if(background.matrixAutoUpdate===true){background.updateMatrix();}planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){planeMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list
renderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null);}}function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha);}return{getClearColor:function getClearColor(){return clearColor;},setClearColor:function setClearColor(color,alpha){clearColor.set(color);clearAlpha=alpha!==undefined?alpha:1;setClear(clearColor,clearAlpha);},getClearAlpha:function getClearAlpha(){return clearAlpha;},setClearAlpha:function setClearAlpha(alpha){clearAlpha=alpha;setClear(clearColor,clearAlpha);},render:render};}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLBufferRenderer(gl,extensions,info,capabilities){var isWebGL2=capabilities.isWebGL2;var mode;function setMode(value){mode=value;}function render(start,count){gl.drawArrays(mode,start,count);info.update(count,mode);}function renderInstances(geometry,start,count,primcount){if(primcount===0)return;var extension,methodName;if(isWebGL2){extension=gl;methodName='drawArraysInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawArraysInstancedANGLE';if(extension===null){console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,start,count,primcount);info.update(count,mode,primcount);}//
this.setMode=setMode;this.render=render;this.renderInstances=renderInstances;}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLCapabilities(gl,extensions,parameters){var maxAnisotropy;function getMaxAnisotropy(){if(maxAnisotropy!==undefined)return maxAnisotropy;var extension=extensions.get('EXT_texture_filter_anisotropic');if(extension!==null){maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);}else{maxAnisotropy=0;}return maxAnisotropy;}function getMaxPrecision(precision){if(precision==='highp'){if(gl.getShaderPrecisionFormat(35633,36338).precision>0&&gl.getShaderPrecisionFormat(35632,36338).precision>0){return'highp';}precision='mediump';}if(precision==='mediump'){if(gl.getShaderPrecisionFormat(35633,36337).precision>0&&gl.getShaderPrecisionFormat(35632,36337).precision>0){return'mediump';}}return'lowp';}/* eslint-disable no-undef */var isWebGL2=typeof WebGL2RenderingContext!=='undefined'&&gl instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!=='undefined'&&gl instanceof WebGL2ComputeRenderingContext;/* eslint-enable no-undef */var precision=parameters.precision!==undefined?parameters.precision:'highp';var maxPrecision=getMaxPrecision(precision);if(maxPrecision!==precision){console.warn('THREE.WebGLRenderer:',precision,'not supported, using',maxPrecision,'instead.');precision=maxPrecision;}var logarithmicDepthBuffer=parameters.logarithmicDepthBuffer===true;var maxTextures=gl.getParameter(34930);var maxVertexTextures=gl.getParameter(35660);var maxTextureSize=gl.getParameter(3379);var maxCubemapSize=gl.getParameter(34076);var maxAttributes=gl.getParameter(34921);var maxVertexUniforms=gl.getParameter(36347);var maxVaryings=gl.getParameter(36348);var maxFragmentUniforms=gl.getParameter(36349);var vertexTextures=maxVertexTextures>0;var floatFragmentTextures=isWebGL2||!!extensions.get('OES_texture_float');var floatVertexTextures=vertexTextures&&floatFragmentTextures;var maxSamples=isWebGL2?gl.getParameter(36183):0;return{isWebGL2:isWebGL2,getMaxAnisotropy:getMaxAnisotropy,getMaxPrecision:getMaxPrecision,precision:precision,logarithmicDepthBuffer:logarithmicDepthBuffer,maxTextures:maxTextures,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples};}/**
 * @author tschw
 */function WebGLClipping(){var scope=this,globalState=null,numGlobalPlanes=0,localClippingEnabled=false,renderingShadows=false,plane=new Plane(),viewNormalMatrix=new Matrix3(),uniform={value:null,needsUpdate:false};this.uniform=uniform;this.numPlanes=0;this.numIntersection=0;this.init=function(planes,enableLocalClipping,camera){var enabled=planes.length!==0||enableLocalClipping||// enable state of previous frame - the clipping code has to
// run another frame in order to reset the state:
numGlobalPlanes!==0||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled;};this.beginShadows=function(){renderingShadows=true;projectPlanes(null);};this.endShadows=function(){renderingShadows=false;resetGlobalState();};this.setState=function(planes,clipIntersection,clipShadows,camera,cache,fromCache){if(!localClippingEnabled||planes===null||planes.length===0||renderingShadows&&!clipShadows){// there's no local clipping
if(renderingShadows){// there's no global clipping
projectPlanes(null);}else{resetGlobalState();}}else{var nGlobal=renderingShadows?0:numGlobalPlanes,lGlobal=nGlobal*4,dstArray=cache.clippingState||null;uniform.value=dstArray;// ensure unique state
dstArray=projectPlanes(planes,camera,lGlobal,fromCache);for(var i=0;i!==lGlobal;++i){dstArray[i]=globalState[i];}cache.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=nGlobal;}};function resetGlobalState(){if(uniform.value!==globalState){uniform.value=globalState;uniform.needsUpdate=numGlobalPlanes>0;}scope.numPlanes=numGlobalPlanes;scope.numIntersection=0;}function projectPlanes(planes,camera,dstOffset,skipTransform){var nPlanes=planes!==null?planes.length:0,dstArray=null;if(nPlanes!==0){dstArray=uniform.value;if(skipTransform!==true||dstArray===null){var flatSize=dstOffset+nPlanes*4,viewMatrix=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(viewMatrix);if(dstArray===null||dstArray.length<flatSize){dstArray=new Float32Array(flatSize);}for(var i=0,i4=dstOffset;i!==nPlanes;++i,i4+=4){plane.copy(planes[i]).applyMatrix4(viewMatrix,viewNormalMatrix);plane.normal.toArray(dstArray,i4);dstArray[i4+3]=plane.constant;}}uniform.value=dstArray;uniform.needsUpdate=true;}scope.numPlanes=nPlanes;scope.numIntersection=0;return dstArray;}}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLExtensions(gl){var extensions={};return{get:function get(name){if(extensions[name]!==undefined){return extensions[name];}var extension;switch(name){case'WEBGL_depth_texture':extension=gl.getExtension('WEBGL_depth_texture')||gl.getExtension('MOZ_WEBGL_depth_texture')||gl.getExtension('WEBKIT_WEBGL_depth_texture');break;case'EXT_texture_filter_anisotropic':extension=gl.getExtension('EXT_texture_filter_anisotropic')||gl.getExtension('MOZ_EXT_texture_filter_anisotropic')||gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');break;case'WEBGL_compressed_texture_s3tc':extension=gl.getExtension('WEBGL_compressed_texture_s3tc')||gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');break;case'WEBGL_compressed_texture_pvrtc':extension=gl.getExtension('WEBGL_compressed_texture_pvrtc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');break;default:extension=gl.getExtension(name);}if(extension===null){console.warn('THREE.WebGLRenderer: '+name+' extension not supported.');}extensions[name]=extension;return extension;}};}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLGeometries(gl,attributes,info){var geometries=new WeakMap();var wireframeAttributes=new WeakMap();function onGeometryDispose(event){var geometry=event.target;var buffergeometry=geometries.get(geometry);if(buffergeometry.index!==null){attributes.remove(buffergeometry.index);}for(var name in buffergeometry.attributes){attributes.remove(buffergeometry.attributes[name]);}geometry.removeEventListener('dispose',onGeometryDispose);geometries.delete(geometry);var attribute=wireframeAttributes.get(buffergeometry);if(attribute){attributes.remove(attribute);wireframeAttributes.delete(buffergeometry);}//
info.memory.geometries--;}function get(object,geometry){var buffergeometry=geometries.get(geometry);if(buffergeometry)return buffergeometry;geometry.addEventListener('dispose',onGeometryDispose);if(geometry.isBufferGeometry){buffergeometry=geometry;}else if(geometry.isGeometry){if(geometry._bufferGeometry===undefined){geometry._bufferGeometry=new BufferGeometry().setFromObject(object);}buffergeometry=geometry._bufferGeometry;}geometries.set(geometry,buffergeometry);info.memory.geometries++;return buffergeometry;}function update(geometry){var index=geometry.index;var geometryAttributes=geometry.attributes;if(index!==null){attributes.update(index,34963);}for(var name in geometryAttributes){attributes.update(geometryAttributes[name],34962);}// morph targets
var morphAttributes=geometry.morphAttributes;for(var name in morphAttributes){var array=morphAttributes[name];for(var i=0,l=array.length;i<l;i++){attributes.update(array[i],34962);}}}function updateWireframeAttribute(geometry){var indices=[];var geometryIndex=geometry.index;var geometryPosition=geometry.attributes.position;var version=0;if(geometryIndex!==null){var array=geometryIndex.array;version=geometryIndex.version;for(var i=0,l=array.length;i<l;i+=3){var a=array[i+0];var b=array[i+1];var c=array[i+2];indices.push(a,b,b,c,c,a);}}else{var array=geometryPosition.array;version=geometryPosition.version;for(var i=0,l=array.length/3-1;i<l;i+=3){var a=i+0;var b=i+1;var c=i+2;indices.push(a,b,b,c,c,a);}}var attribute=new(arrayMax(indices)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);attribute.version=version;attributes.update(attribute,34963);//
var previousAttribute=wireframeAttributes.get(geometry);if(previousAttribute)attributes.remove(previousAttribute);//
wireframeAttributes.set(geometry,attribute);}function getWireframeAttribute(geometry){var currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){var geometryIndex=geometry.index;if(geometryIndex!==null){// if the attribute is obsolete, create a new one
if(currentAttribute.version<geometryIndex.version){updateWireframeAttribute(geometry);}}}else{updateWireframeAttribute(geometry);}return wireframeAttributes.get(geometry);}return{get:get,update:update,getWireframeAttribute:getWireframeAttribute};}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){var isWebGL2=capabilities.isWebGL2;var mode;function setMode(value){mode=value;}var type,bytesPerElement;function setIndex(value){type=value.type;bytesPerElement=value.bytesPerElement;}function render(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode);}function renderInstances(geometry,start,count,primcount){if(primcount===0)return;var extension,methodName;if(isWebGL2){extension=gl;methodName='drawElementsInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawElementsInstancedANGLE';if(extension===null){console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,count,type,start*bytesPerElement,primcount);info.update(count,mode,primcount);}//
this.setMode=setMode;this.setIndex=setIndex;this.render=render;this.renderInstances=renderInstances;}/**
 * @author Mugen87 / https://github.com/Mugen87
 */function WebGLInfo(gl){var memory={geometries:0,textures:0};var render={frame:0,calls:0,triangles:0,points:0,lines:0};function update(count,mode,instanceCount){instanceCount=instanceCount||1;render.calls++;switch(mode){case 4:render.triangles+=instanceCount*(count/3);break;case 1:render.lines+=instanceCount*(count/2);break;case 3:render.lines+=instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error('THREE.WebGLInfo: Unknown draw mode:',mode);break;}}function reset(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0;}return{memory:memory,render:render,programs:null,autoReset:true,reset:reset,update:update};}/**
 * @author mrdoob / http://mrdoob.com/
 */function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1]);}function WebGLMorphtargets(gl){var influencesList={};var morphInfluences=new Float32Array(8);function update(object,geometry,material,program){var objectInfluences=object.morphTargetInfluences;// When object doesn't have morph target influences defined, we treat it as a 0-length array
// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences
var length=objectInfluences===undefined?0:objectInfluences.length;var influences=influencesList[geometry.id];if(influences===undefined){// initialise list
influences=[];for(var i=0;i<length;i++){influences[i]=[i,0];}influencesList[geometry.id]=influences;}var morphTargets=material.morphTargets&&geometry.morphAttributes.position;var morphNormals=material.morphNormals&&geometry.morphAttributes.normal;// Remove current morphAttributes
for(var i=0;i<length;i++){var influence=influences[i];if(influence[1]!==0){if(morphTargets)geometry.deleteAttribute('morphTarget'+i);if(morphNormals)geometry.deleteAttribute('morphNormal'+i);}}// Collect influences
for(var i=0;i<length;i++){var influence=influences[i];influence[0]=i;influence[1]=objectInfluences[i];}influences.sort(absNumericalSort);// Add morphAttributes
var morphInfluencesSum=0;for(var i=0;i<8;i++){var influence=influences[i];if(influence){var index=influence[0];var value=influence[1];if(value){if(morphTargets)geometry.setAttribute('morphTarget'+i,morphTargets[index]);if(morphNormals)geometry.setAttribute('morphNormal'+i,morphNormals[index]);morphInfluences[i]=value;morphInfluencesSum+=value;continue;}}morphInfluences[i]=0;}// GLSL shader uses formula baseinfluence * base + sum(target * influence)
// This allows us to switch between absolute morphs and relative morphs without changing shader code
// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)
var morphBaseInfluence=geometry.morphTargetsRelative?1:1-morphInfluencesSum;program.getUniforms().setValue(gl,'morphTargetBaseInfluence',morphBaseInfluence);program.getUniforms().setValue(gl,'morphTargetInfluences',morphInfluences);}return{update:update};}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLObjects(gl,geometries,attributes,info){var updateMap=new WeakMap();function update(object){var frame=info.render.frame;var geometry=object.geometry;var buffergeometry=geometries.get(object,geometry);// Update once per frame
if(updateMap.get(buffergeometry)!==frame){if(geometry.isGeometry){buffergeometry.updateFromObject(object);}geometries.update(buffergeometry);updateMap.set(buffergeometry,frame);}if(object.isInstancedMesh){attributes.update(object.instanceMatrix,34962);}return buffergeometry;}function dispose(){updateMap=new WeakMap();}return{update:update,dispose:dispose};}/**
 * @author mrdoob / http://mrdoob.com/
 */function CubeTexture(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){images=images!==undefined?images:[];mapping=mapping!==undefined?mapping:CubeReflectionMapping;format=format!==undefined?format:RGBFormat;Texture.call(this,images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.flipY=false;}CubeTexture.prototype=Object.create(Texture.prototype);CubeTexture.prototype.constructor=CubeTexture;CubeTexture.prototype.isCubeTexture=true;Object.defineProperty(CubeTexture.prototype,'images',{get:function get(){return this.image;},set:function set(value){this.image=value;}});/**
 * @author Takahiro https://github.com/takahirox
 */function DataTexture2DArray(data,width,height,depth){Texture.call(this,null);this.image={data:data||null,width:width||1,height:height||1,depth:depth||1};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true;}DataTexture2DArray.prototype=Object.create(Texture.prototype);DataTexture2DArray.prototype.constructor=DataTexture2DArray;DataTexture2DArray.prototype.isDataTexture2DArray=true;/**
 * @author Artur Trzesiok
 */function DataTexture3D(data,width,height,depth){// We're going to add .setXXX() methods for setting properties later.
// Users can still set in DataTexture3D directly.
//
//	var texture = new THREE.DataTexture3D( data, width, height, depth );
// 	texture.anisotropy = 16;
//
// See #14839
Texture.call(this,null);this.image={data:data||null,width:width||1,height:height||1,depth:depth||1};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true;}DataTexture3D.prototype=Object.create(Texture.prototype);DataTexture3D.prototype.constructor=DataTexture3D;DataTexture3D.prototype.isDataTexture3D=true;/**
 * @author tschw
 * @author Mugen87 / https://github.com/Mugen87
 * @author mrdoob / http://mrdoob.com/
 *
 * Uniforms of a program.
 * Those form a tree structure with a special top-level container for the root,
 * which you get by calling 'new WebGLUniforms( gl, program )'.
 *
 *
 * Properties of inner nodes including the top-level container:
 *
 * .seq - array of nested uniforms
 * .map - nested uniforms by name
 *
 *
 * Methods of all nodes except the top-level container:
 *
 * .setValue( gl, value, [textures] )
 *
 * 		uploads a uniform value(s)
 *  	the 'textures' parameter is needed for sampler uniforms
 *
 *
 * Static methods of the top-level container (textures factorizations):
 *
 * .upload( gl, seq, values, textures )
 *
 * 		sets uniforms in 'seq' to 'values[id].value'
 *
 * .seqWithValue( seq, values ) : filteredSeq
 *
 * 		filters 'seq' entries with corresponding entry in values
 *
 *
 * Methods of the top-level container (textures factorizations):
 *
 * .setValue( gl, name, value, textures )
 *
 * 		sets uniform with  name 'name' to 'value'
 *
 * .setOptional( gl, obj, prop )
 *
 * 		like .set for an optional property of the object
 *
 */var emptyTexture=new Texture();var emptyTexture2dArray=new DataTexture2DArray();var emptyTexture3d=new DataTexture3D();var emptyCubeTexture=new CubeTexture();// --- Utilities ---
// Array Caches (provide typed arrays for temporary by size)
var arrayCacheF32=[];var arrayCacheI32=[];// Float32Array caches used for uploading Matrix uniforms
var mat4array=new Float32Array(16);var mat3array=new Float32Array(9);var mat2array=new Float32Array(4);// Flattening for arrays of vectors and matrices
function flatten$1(array,nBlocks,blockSize){var firstElem=array[0];if(firstElem<=0||firstElem>0)return array;// unoptimized: ! isNaN( firstElem )
// see http://jacksondunstan.com/articles/983
var n=nBlocks*blockSize,r=arrayCacheF32[n];if(r===undefined){r=new Float32Array(n);arrayCacheF32[n]=r;}if(nBlocks!==0){firstElem.toArray(r,0);for(var i=1,offset=0;i!==nBlocks;++i){offset+=blockSize;array[i].toArray(r,offset);}}return r;}function arraysEqual(a,b){if(a.length!==b.length)return false;for(var i=0,l=a.length;i<l;i++){if(a[i]!==b[i])return false;}return true;}function copyArray(a,b){for(var i=0,l=b.length;i<l;i++){a[i]=b[i];}}// Texture unit allocation
function allocTexUnits(textures,n){var r=arrayCacheI32[n];if(r===undefined){r=new Int32Array(n);arrayCacheI32[n]=r;}for(var i=0;i!==n;++i){r[i]=textures.allocateTextureUnit();}return r;}// --- Setters ---
// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.
// Single scalar
function setValueV1f(gl,v){var cache=this.cache;if(cache[0]===v)return;gl.uniform1f(this.addr,v);cache[0]=v;}// Single float vector (from flat array or THREE.VectorN)
function setValueV2f(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y){gl.uniform2f(this.addr,v.x,v.y);cache[0]=v.x;cache[1]=v.y;}}else{if(arraysEqual(cache,v))return;gl.uniform2fv(this.addr,v);copyArray(cache,v);}}function setValueV3f(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z){gl.uniform3f(this.addr,v.x,v.y,v.z);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;}}else if(v.r!==undefined){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b){gl.uniform3f(this.addr,v.r,v.g,v.b);cache[0]=v.r;cache[1]=v.g;cache[2]=v.b;}}else{if(arraysEqual(cache,v))return;gl.uniform3fv(this.addr,v);copyArray(cache,v);}}function setValueV4f(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w){gl.uniform4f(this.addr,v.x,v.y,v.z,v.w);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;cache[3]=v.w;}}else{if(arraysEqual(cache,v))return;gl.uniform4fv(this.addr,v);copyArray(cache,v);}}// Single matrix (from flat array or MatrixN)
function setValueM2(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix2fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat2array.set(elements);gl.uniformMatrix2fv(this.addr,false,mat2array);copyArray(cache,elements);}}function setValueM3(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix3fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat3array.set(elements);gl.uniformMatrix3fv(this.addr,false,mat3array);copyArray(cache,elements);}}function setValueM4(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix4fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat4array.set(elements);gl.uniformMatrix4fv(this.addr,false,mat4array);copyArray(cache,elements);}}// Single texture (2D / Cube)
function setValueT1(gl,v,textures){var cache=this.cache;var unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTexture2D(v||emptyTexture,unit);}function setValueT2DArray1(gl,v,textures){var cache=this.cache;var unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture2DArray(v||emptyTexture2dArray,unit);}function setValueT3D1(gl,v,textures){var cache=this.cache;var unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture3D(v||emptyTexture3d,unit);}function setValueT6(gl,v,textures){var cache=this.cache;var unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTextureCube(v||emptyCubeTexture,unit);}// Integer / Boolean vectors or arrays thereof (always flat arrays)
function setValueV1i(gl,v){var cache=this.cache;if(cache[0]===v)return;gl.uniform1i(this.addr,v);cache[0]=v;}function setValueV2i(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2iv(this.addr,v);copyArray(cache,v);}function setValueV3i(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3iv(this.addr,v);copyArray(cache,v);}function setValueV4i(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4iv(this.addr,v);copyArray(cache,v);}// uint
function setValueV1ui(gl,v){var cache=this.cache;if(cache[0]===v)return;gl.uniform1ui(this.addr,v);cache[0]=v;}// Helper to pick the right setter for the singular case
function getSingularSetter(type){switch(type){case 0x1406:return setValueV1f;// FLOAT
case 0x8b50:return setValueV2f;// _VEC2
case 0x8b51:return setValueV3f;// _VEC3
case 0x8b52:return setValueV4f;// _VEC4
case 0x8b5a:return setValueM2;// _MAT2
case 0x8b5b:return setValueM3;// _MAT3
case 0x8b5c:return setValueM4;// _MAT4
case 0x1404:case 0x8b56:return setValueV1i;// INT, BOOL
case 0x8b53:case 0x8b57:return setValueV2i;// _VEC2
case 0x8b54:case 0x8b58:return setValueV3i;// _VEC3
case 0x8b55:case 0x8b59:return setValueV4i;// _VEC4
case 0x1405:return setValueV1ui;// UINT
case 0x8b5e:// SAMPLER_2D
case 0x8d66:// SAMPLER_EXTERNAL_OES
case 0x8dca:// INT_SAMPLER_2D
case 0x8dd2:// UNSIGNED_INT_SAMPLER_2D
case 0x8b62:// SAMPLER_2D_SHADOW
return setValueT1;case 0x8b5f:// SAMPLER_3D
case 0x8dcb:// INT_SAMPLER_3D
case 0x8dd3:// UNSIGNED_INT_SAMPLER_3D
return setValueT3D1;case 0x8b60:// SAMPLER_CUBE
case 0x8dcc:// INT_SAMPLER_CUBE
case 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE
case 0x8dc5:// SAMPLER_CUBE_SHADOW
return setValueT6;case 0x8dc1:// SAMPLER_2D_ARRAY
case 0x8dcf:// INT_SAMPLER_2D_ARRAY
case 0x8dd7:// UNSIGNED_INT_SAMPLER_2D_ARRAY
case 0x8dc4:// SAMPLER_2D_ARRAY_SHADOW
return setValueT2DArray1;}}// Array of scalars
function setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v);}// Integer / Boolean vectors or arrays thereof (always flat arrays)
function setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v);}function setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v);}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v);}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v);}// Array of vectors (flat or from THREE classes)
function setValueV2fArray(gl,v){var data=flatten$1(v,this.size,2);gl.uniform2fv(this.addr,data);}function setValueV3fArray(gl,v){var data=flatten$1(v,this.size,3);gl.uniform3fv(this.addr,data);}function setValueV4fArray(gl,v){var data=flatten$1(v,this.size,4);gl.uniform4fv(this.addr,data);}// Array of matrices (flat or from THREE clases)
function setValueM2Array(gl,v){var data=flatten$1(v,this.size,4);gl.uniformMatrix2fv(this.addr,false,data);}function setValueM3Array(gl,v){var data=flatten$1(v,this.size,9);gl.uniformMatrix3fv(this.addr,false,data);}function setValueM4Array(gl,v){var data=flatten$1(v,this.size,16);gl.uniformMatrix4fv(this.addr,false,data);}// Array of textures (2D / Cube)
function setValueT1Array(gl,v,textures){var n=v.length;var units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(var i=0;i!==n;++i){textures.safeSetTexture2D(v[i]||emptyTexture,units[i]);}}function setValueT6Array(gl,v,textures){var n=v.length;var units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(var i=0;i!==n;++i){textures.safeSetTextureCube(v[i]||emptyCubeTexture,units[i]);}}// Helper to pick the right setter for a pure (bottom-level) array
function getPureArraySetter(type){switch(type){case 0x1406:return setValueV1fArray;// FLOAT
case 0x8b50:return setValueV2fArray;// _VEC2
case 0x8b51:return setValueV3fArray;// _VEC3
case 0x8b52:return setValueV4fArray;// _VEC4
case 0x8b5a:return setValueM2Array;// _MAT2
case 0x8b5b:return setValueM3Array;// _MAT3
case 0x8b5c:return setValueM4Array;// _MAT4
case 0x1404:case 0x8b56:return setValueV1iArray;// INT, BOOL
case 0x8b53:case 0x8b57:return setValueV2iArray;// _VEC2
case 0x8b54:case 0x8b58:return setValueV3iArray;// _VEC3
case 0x8b55:case 0x8b59:return setValueV4iArray;// _VEC4
case 0x8b5e:// SAMPLER_2D
case 0x8d66:// SAMPLER_EXTERNAL_OES
case 0x8dca:// INT_SAMPLER_2D
case 0x8dd2:// UNSIGNED_INT_SAMPLER_2D
case 0x8b62:// SAMPLER_2D_SHADOW
return setValueT1Array;case 0x8b60:// SAMPLER_CUBE
case 0x8dcc:// INT_SAMPLER_CUBE
case 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE
case 0x8dc5:// SAMPLER_CUBE_SHADOW
return setValueT6Array;}}// --- Uniform Classes ---
function SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG
}function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG
}PureArrayUniform.prototype.updateCache=function(data){var cache=this.cache;if(data instanceof Float32Array&&cache.length!==data.length){this.cache=new Float32Array(data.length);}copyArray(cache,data);};function StructuredUniform(id){this.id=id;this.seq=[];this.map={};}StructuredUniform.prototype.setValue=function(gl,value,textures){var seq=this.seq;for(var i=0,n=seq.length;i!==n;++i){var u=seq[i];u.setValue(gl,value[u.id],textures);}};// --- Top-level ---
// Parser - builds up the property tree from the path strings
var RePathPart=/([\w\d_]+)(\])?(\[|\.)?/g;// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.
function addUniform(container,uniformObject){container.seq.push(uniformObject);container.map[uniformObject.id]=uniformObject;}function parseUniform(activeInfo,addr,container){var path=activeInfo.name,pathLength=path.length;// reset RegExp object, because of the early exit of a previous run
RePathPart.lastIndex=0;while(true){var match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex,id=match[1],idIsIndex=match[2]===']',subscript=match[3];if(idIsIndex)id=id|0;// convert to integer
if(subscript===undefined||subscript==='['&&matchEnd+2===pathLength){// bare name or "pure" bottom-level array "[0]" suffix
addUniform(container,subscript===undefined?new SingleUniform(id,activeInfo,addr):new PureArrayUniform(id,activeInfo,addr));break;}else{// step into inner node / create it in case it doesn't exist
var map=container.map,next=map[id];if(next===undefined){next=new StructuredUniform(id);addUniform(container,next);}container=next;}}}// Root Container
function WebGLUniforms(gl,program){this.seq=[];this.map={};var n=gl.getProgramParameter(program,35718);for(var i=0;i<n;++i){var info=gl.getActiveUniform(program,i),addr=gl.getUniformLocation(program,info.name);parseUniform(info,addr,this);}}WebGLUniforms.prototype.setValue=function(gl,name,value,textures){var u=this.map[name];if(u!==undefined)u.setValue(gl,value,textures);};WebGLUniforms.prototype.setOptional=function(gl,object,name){var v=object[name];if(v!==undefined)this.setValue(gl,name,v);};// Static interface
WebGLUniforms.upload=function(gl,seq,values,textures){for(var i=0,n=seq.length;i!==n;++i){var u=seq[i],v=values[u.id];if(v.needsUpdate!==false){// note: always updating when .needsUpdate is undefined
u.setValue(gl,v.value,textures);}}};WebGLUniforms.seqWithValue=function(seq,values){var r=[];for(var i=0,n=seq.length;i!==n;++i){var u=seq[i];if(u.id in values)r.push(u);}return r;};/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLShader(gl,type,string){var shader=gl.createShader(type);gl.shaderSource(shader,string);gl.compileShader(shader);return shader;}/**
 * @author mrdoob / http://mrdoob.com/
 */var programIdCount=0;function addLineNumbers(string){var lines=string.split('\n');for(var i=0;i<lines.length;i++){lines[i]=i+1+': '+lines[i];}return lines.join('\n');}function getEncodingComponents(encoding){switch(encoding){case LinearEncoding:return['Linear','( value )'];case sRGBEncoding:return['sRGB','( value )'];case RGBEEncoding:return['RGBE','( value )'];case RGBM7Encoding:return['RGBM','( value, 7.0 )'];case RGBM16Encoding:return['RGBM','( value, 16.0 )'];case RGBDEncoding:return['RGBD','( value, 256.0 )'];case GammaEncoding:return['Gamma','( value, float( GAMMA_FACTOR ) )'];case LogLuvEncoding:return['LogLuv','( value )'];default:throw new Error('unsupported encoding: '+encoding);}}function getShaderErrors(gl,shader,type){var status=gl.getShaderParameter(shader,35713);var log=gl.getShaderInfoLog(shader).trim();if(status&&log==='')return'';// --enable-privileged-webgl-extension
// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );
var source=gl.getShaderSource(shader);return'THREE.WebGLShader: gl.getShaderInfoLog() '+type+'\n'+log+addLineNumbers(source);}function getTexelDecodingFunction(functionName,encoding){var components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return '+components[0]+'ToLinear'+components[1]+'; }';}function getTexelEncodingFunction(functionName,encoding){var components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return LinearTo'+components[0]+components[1]+'; }';}function getToneMappingFunction(functionName,toneMapping){var toneMappingName;switch(toneMapping){case LinearToneMapping:toneMappingName='Linear';break;case ReinhardToneMapping:toneMappingName='Reinhard';break;case Uncharted2ToneMapping:toneMappingName='Uncharted2';break;case CineonToneMapping:toneMappingName='OptimizedCineon';break;case ACESFilmicToneMapping:toneMappingName='ACESFilmic';break;default:throw new Error('unsupported toneMapping: '+toneMapping);}return'vec3 '+functionName+'( vec3 color ) { return '+toneMappingName+'ToneMapping( color ); }';}function generateExtensions(parameters){var chunks=[parameters.extensionDerivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.tangentSpaceNormalMap||parameters.clearcoatNormalMap||parameters.flatShading||parameters.shaderID==='physical'?'#extension GL_OES_standard_derivatives : enable':'',(parameters.extensionFragDepth||parameters.logarithmicDepthBuffer)&&parameters.rendererExtensionFragDepth?'#extension GL_EXT_frag_depth : enable':'',parameters.extensionDrawBuffers&&parameters.rendererExtensionDrawBuffers?'#extension GL_EXT_draw_buffers : require':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#extension GL_EXT_shader_texture_lod : enable':''];return chunks.filter(filterEmptyLine).join('\n');}function generateDefines(defines){var chunks=[];for(var name in defines){var value=defines[name];if(value===false)continue;chunks.push('#define '+name+' '+value);}return chunks.join('\n');}function fetchAttributeLocations(gl,program){var attributes={};var n=gl.getProgramParameter(program,35721);for(var i=0;i<n;i++){var info=gl.getActiveAttrib(program,i);var name=info.name;// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );
attributes[name]=gl.getAttribLocation(program,name);}return attributes;}function filterEmptyLine(string){return string!=='';}function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows);}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection);}// Resolve Includes
var includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(string){return string.replace(includePattern,includeReplacer);}function includeReplacer(match,include){var string=ShaderChunk[include];if(string===undefined){throw new Error('Can not resolve #include <'+include+'>');}return resolveIncludes(string);}// Unroll Loops
var deprecatedUnrollLoopPattern=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;var unrollLoopPattern=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function unrollLoops(string){return string.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer);}function deprecatedLoopReplacer(match,start,end,snippet){console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');return loopReplacer(match,start,end,snippet);}function loopReplacer(match,start,end,snippet){var string='';for(var i=parseInt(start);i<parseInt(end);i++){string+=snippet.replace(/\[ i \]/g,'[ '+i+' ]').replace(/UNROLLED_LOOP_INDEX/g,i);}return string;}//
function generatePrecision(parameters){var precisionstring="precision "+parameters.precision+" float;\nprecision "+parameters.precision+" int;";if(parameters.precision==="highp"){precisionstring+="\n#define HIGH_PRECISION";}else if(parameters.precision==="mediump"){precisionstring+="\n#define MEDIUM_PRECISION";}else if(parameters.precision==="lowp"){precisionstring+="\n#define LOW_PRECISION";}return precisionstring;}function generateShadowMapTypeDefine(parameters){var shadowMapTypeDefine='SHADOWMAP_TYPE_BASIC';if(parameters.shadowMapType===PCFShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF';}else if(parameters.shadowMapType===PCFSoftShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF_SOFT';}else if(parameters.shadowMapType===VSMShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_VSM';}return shadowMapTypeDefine;}function generateEnvMapTypeDefine(parameters){var envMapTypeDefine='ENVMAP_TYPE_CUBE';if(parameters.envMap){switch(parameters.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE';break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE_UV';break;case EquirectangularReflectionMapping:case EquirectangularRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_EQUIREC';break;case SphericalReflectionMapping:envMapTypeDefine='ENVMAP_TYPE_SPHERE';break;}}return envMapTypeDefine;}function generateEnvMapModeDefine(parameters){var envMapModeDefine='ENVMAP_MODE_REFLECTION';if(parameters.envMap){switch(parameters.envMapMode){case CubeRefractionMapping:case EquirectangularRefractionMapping:envMapModeDefine='ENVMAP_MODE_REFRACTION';break;}}return envMapModeDefine;}function generateEnvMapBlendingDefine(parameters){var envMapBlendingDefine='ENVMAP_BLENDING_NONE';if(parameters.envMap){switch(parameters.combine){case MultiplyOperation:envMapBlendingDefine='ENVMAP_BLENDING_MULTIPLY';break;case MixOperation:envMapBlendingDefine='ENVMAP_BLENDING_MIX';break;case AddOperation:envMapBlendingDefine='ENVMAP_BLENDING_ADD';break;}}return envMapBlendingDefine;}function WebGLProgram(renderer,cacheKey,parameters){var gl=renderer.getContext();var defines=parameters.defines;var vertexShader=parameters.vertexShader;var fragmentShader=parameters.fragmentShader;var shadowMapTypeDefine=generateShadowMapTypeDefine(parameters);var envMapTypeDefine=generateEnvMapTypeDefine(parameters);var envMapModeDefine=generateEnvMapModeDefine(parameters);var envMapBlendingDefine=generateEnvMapBlendingDefine(parameters);var gammaFactorDefine=renderer.gammaFactor>0?renderer.gammaFactor:1.0;var customExtensions=parameters.isWebGL2?'':generateExtensions(parameters);var customDefines=generateDefines(defines);var program=gl.createProgram();var prefixVertex,prefixFragment;if(parameters.isRawShaderMaterial){prefixVertex=[customDefines].filter(filterEmptyLine).join('\n');if(prefixVertex.length>0){prefixVertex+='\n';}prefixFragment=[customExtensions,customDefines].filter(filterEmptyLine).join('\n');if(prefixFragment.length>0){prefixFragment+='\n';}}else{prefixVertex=[generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.instancing?'#define USE_INSTANCING':'',parameters.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+gammaFactorDefine,'#define MAX_BONES '+parameters.maxBones,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.displacementMap&&parameters.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.skinning?'#define USE_SKINNING':'',parameters.useVertexTexture?'#define BONE_TEXTURE':'',parameters.morphTargets?'#define USE_MORPHTARGETS':'',parameters.morphNormals&&parameters.flatShading===false?'#define USE_MORPHNORMALS':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.sizeAttenuation?'#define USE_SIZEATTENUATION':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;','#ifdef USE_INSTANCING',' attribute mat4 instanceMatrix;','#endif','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_TANGENT','	attribute vec4 tangent;','#endif','#ifdef USE_COLOR','	attribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','	attribute vec3 morphTarget0;','	attribute vec3 morphTarget1;','	attribute vec3 morphTarget2;','	attribute vec3 morphTarget3;','	#ifdef USE_MORPHNORMALS','		attribute vec3 morphNormal0;','		attribute vec3 morphNormal1;','		attribute vec3 morphNormal2;','		attribute vec3 morphNormal3;','	#else','		attribute vec3 morphTarget4;','		attribute vec3 morphTarget5;','		attribute vec3 morphTarget6;','		attribute vec3 morphTarget7;','	#endif','#endif','#ifdef USE_SKINNING','	attribute vec4 skinIndex;','	attribute vec4 skinWeight;','#endif','\n'].filter(filterEmptyLine).join('\n');prefixFragment=[customExtensions,generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.alphaTest?'#define ALPHATEST '+parameters.alphaTest+(parameters.alphaTest%1?'':'.0'):'',// add '.0' if integer
'#define GAMMA_FACTOR '+gammaFactorDefine,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.matcap?'#define USE_MATCAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapTypeDefine:'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.envMap?'#define '+envMapBlendingDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.sheen?'#define USE_SHEEN':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.gradientMap?'#define USE_GRADIENTMAP':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',parameters.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;',parameters.toneMapping!==NoToneMapping?'#define TONE_MAPPING':'',parameters.toneMapping!==NoToneMapping?ShaderChunk['tonemapping_pars_fragment']:'',// this code is required here because it is used by the toneMapping() function defined below
parameters.toneMapping!==NoToneMapping?getToneMappingFunction('toneMapping',parameters.toneMapping):'',parameters.dithering?'#define DITHERING':'',parameters.outputEncoding||parameters.mapEncoding||parameters.matcapEncoding||parameters.envMapEncoding||parameters.emissiveMapEncoding||parameters.lightMapEncoding?ShaderChunk['encodings_pars_fragment']:'',// this code is required here because it is used by the various encoding/decoding function defined below
parameters.mapEncoding?getTexelDecodingFunction('mapTexelToLinear',parameters.mapEncoding):'',parameters.matcapEncoding?getTexelDecodingFunction('matcapTexelToLinear',parameters.matcapEncoding):'',parameters.envMapEncoding?getTexelDecodingFunction('envMapTexelToLinear',parameters.envMapEncoding):'',parameters.emissiveMapEncoding?getTexelDecodingFunction('emissiveMapTexelToLinear',parameters.emissiveMapEncoding):'',parameters.lightMapEncoding?getTexelDecodingFunction('lightMapTexelToLinear',parameters.lightMapEncoding):'',parameters.outputEncoding?getTexelEncodingFunction('linearToOutputTexel',parameters.outputEncoding):'',parameters.depthPacking?'#define DEPTH_PACKING '+parameters.depthPacking:'','\n'].filter(filterEmptyLine).join('\n');}vertexShader=resolveIncludes(vertexShader);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=resolveIncludes(fragmentShader);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=unrollLoops(vertexShader);fragmentShader=unrollLoops(fragmentShader);if(parameters.isWebGL2&&!parameters.isRawShaderMaterial){var isGLSL3ShaderMaterial=false;var versionRegex=/^\s*#version\s+300\s+es\s*\n/;if(parameters.isShaderMaterial&&vertexShader.match(versionRegex)!==null&&fragmentShader.match(versionRegex)!==null){isGLSL3ShaderMaterial=true;vertexShader=vertexShader.replace(versionRegex,'');fragmentShader=fragmentShader.replace(versionRegex,'');}// GLSL 3.0 conversion
prefixVertex=['#version 300 es\n','#define attribute in','#define varying out','#define texture2D texture'].join('\n')+'\n'+prefixVertex;prefixFragment=['#version 300 es\n','#define varying in',isGLSL3ShaderMaterial?'':'out highp vec4 pc_fragColor;',isGLSL3ShaderMaterial?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\n')+'\n'+prefixFragment;}var vertexGlsl=prefixVertex+vertexShader;var fragmentGlsl=prefixFragment+fragmentShader;// console.log( '*VERTEX*', vertexGlsl );
// console.log( '*FRAGMENT*', fragmentGlsl );
var glVertexShader=WebGLShader(gl,35633,vertexGlsl);var glFragmentShader=WebGLShader(gl,35632,fragmentGlsl);gl.attachShader(program,glVertexShader);gl.attachShader(program,glFragmentShader);// Force a particular attribute to index 0.
if(parameters.index0AttributeName!==undefined){gl.bindAttribLocation(program,0,parameters.index0AttributeName);}else if(parameters.morphTargets===true){// programs with morphTargets displace position out of attribute 0
gl.bindAttribLocation(program,0,'position');}gl.linkProgram(program);// check for link errors
if(renderer.debug.checkShaderErrors){var programLog=gl.getProgramInfoLog(program).trim();var vertexLog=gl.getShaderInfoLog(glVertexShader).trim();var fragmentLog=gl.getShaderInfoLog(glFragmentShader).trim();var runnable=true;var haveDiagnostics=true;if(gl.getProgramParameter(program,35714)===false){runnable=false;var vertexErrors=getShaderErrors(gl,glVertexShader,'vertex');var fragmentErrors=getShaderErrors(gl,glFragmentShader,'fragment');console.error('THREE.WebGLProgram: shader error: ',gl.getError(),'35715',gl.getProgramParameter(program,35715),'gl.getProgramInfoLog',programLog,vertexErrors,fragmentErrors);}else if(programLog!==''){console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',programLog);}else if(vertexLog===''||fragmentLog===''){haveDiagnostics=false;}if(haveDiagnostics){this.diagnostics={runnable:runnable,programLog:programLog,vertexShader:{log:vertexLog,prefix:prefixVertex},fragmentShader:{log:fragmentLog,prefix:prefixFragment}};}}// Clean up
// Crashes in iOS9 and iOS10. #18402
// gl.detachShader( program, glVertexShader );
// gl.detachShader( program, glFragmentShader );
gl.deleteShader(glVertexShader);gl.deleteShader(glFragmentShader);// set up caching for uniform locations
var cachedUniforms;this.getUniforms=function(){if(cachedUniforms===undefined){cachedUniforms=new WebGLUniforms(gl,program);}return cachedUniforms;};// set up caching for attribute locations
var cachedAttributes;this.getAttributes=function(){if(cachedAttributes===undefined){cachedAttributes=fetchAttributeLocations(gl,program);}return cachedAttributes;};// free resource
this.destroy=function(){gl.deleteProgram(program);this.program=undefined;};//
this.name=parameters.shaderName;this.id=programIdCount++;this.cacheKey=cacheKey;this.usedTimes=1;this.program=program;this.vertexShader=glVertexShader;this.fragmentShader=glFragmentShader;return this;}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLPrograms(renderer,extensions,capabilities){var programs=[];var isWebGL2=capabilities.isWebGL2;var logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer;var floatVertexTextures=capabilities.floatVertexTextures;var precision=capabilities.precision;var maxVertexUniforms=capabilities.maxVertexUniforms;var vertexTextures=capabilities.vertexTextures;var shaderIDs={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'toon',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'};var parameterNames=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping",'physicallyCorrectLights',"alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function getShaderObject(material,shaderID){var shaderobject;if(shaderID){var shader=ShaderLib[shaderID];shaderobject={name:material.type,uniforms:UniformsUtils.clone(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader};}else{shaderobject={name:material.type,uniforms:material.uniforms,vertexShader:material.vertexShader,fragmentShader:material.fragmentShader};}return shaderobject;}function allocateBones(object){var skeleton=object.skeleton;var bones=skeleton.bones;if(floatVertexTextures){return 1024;}else{// default for when object is not specified
// ( for example when prebuilding shader to be used with multiple objects )
//
//  - leave some extra space for other uniforms
//  - limit here is ANGLE's 254 max uniform vectors
//    (up to 54 should be safe)
var nVertexUniforms=maxVertexUniforms;var nVertexMatrices=Math.floor((nVertexUniforms-20)/4);var maxBones=Math.min(nVertexMatrices,bones.length);if(maxBones<bones.length){console.warn('THREE.WebGLRenderer: Skeleton has '+bones.length+' bones. This GPU supports '+maxBones+'.');return 0;}return maxBones;}}function getTextureEncodingFromMap(map){var encoding;if(!map){encoding=LinearEncoding;}else if(map.isTexture){encoding=map.encoding;}else if(map.isWebGLRenderTarget){console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.");encoding=map.texture.encoding;}return encoding;}this.getParameters=function(material,lights,shadows,scene,nClipPlanes,nClipIntersection,object){var fog=scene.fog;var environment=material.isMeshStandardMaterial?scene.environment:null;var envMap=material.envMap||environment;var shaderID=shaderIDs[material.type];// heuristics to create shader parameters according to lights in the scene
// (not to blow over maxLights budget)
var maxBones=object.isSkinnedMesh?allocateBones(object):0;if(material.precision!==null){precision=capabilities.getMaxPrecision(material.precision);if(precision!==material.precision){console.warn('THREE.WebGLProgram.getParameters:',material.precision,'not supported, using',precision,'instead.');}}var shaderobject=getShaderObject(material,shaderID);material.onBeforeCompile(shaderobject,renderer);var currentRenderTarget=renderer.getRenderTarget();var parameters={isWebGL2:isWebGL2,shaderID:shaderID,shaderName:shaderobject.name,uniforms:shaderobject.uniforms,vertexShader:shaderobject.vertexShader,fragmentShader:shaderobject.fragmentShader,defines:material.defines,isRawShaderMaterial:material.isRawShaderMaterial,isShaderMaterial:material.isShaderMaterial,precision:precision,instancing:object.isInstancedMesh===true,supportsVertexTextures:vertexTextures,outputEncoding:currentRenderTarget!==null?getTextureEncodingFromMap(currentRenderTarget.texture):renderer.outputEncoding,map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap),envMap:!!envMap,envMapMode:envMap&&envMap.mapping,envMapEncoding:getTextureEncodingFromMap(envMap),envMapCubeUV:!!envMap&&(envMap.mapping===CubeUVReflectionMapping||envMap.mapping===CubeUVRefractionMapping),lightMap:!!material.lightMap,lightMapEncoding:getTextureEncodingFromMap(material.lightMap),aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:material.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:material.normalMapType===TangentSpaceNormalMap,clearcoatMap:!!material.clearcoatMap,clearcoatRoughnessMap:!!material.clearcoatRoughnessMap,clearcoatNormalMap:!!material.clearcoatNormalMap,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,alphaMap:!!material.alphaMap,gradientMap:!!material.gradientMap,sheen:!!material.sheen,combine:material.combine,vertexTangents:material.normalMap&&material.vertexTangents,vertexColors:material.vertexColors,vertexUvs:!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatMap||!!material.clearcoatRoughnessMap||!!material.clearcoatNormalMap||!!material.displacementMap,uvsVertexOnly:!(!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatNormalMap)&&!!material.displacementMap,fog:!!fog,useFog:material.fog,fogExp2:fog&&fog.isFogExp2,flatShading:material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:logarithmicDepthBuffer,skinning:material.skinning&&maxBones>0,maxBones:maxBones,useVertexTexture:floatVertexTextures,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:renderer.maxMorphTargets,maxMorphNormals:renderer.maxMorphNormals,numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numClippingPlanes:nClipPlanes,numClipIntersection:nClipIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&shadows.length>0,shadowMapType:renderer.shadowMap.type,toneMapping:material.toneMapped?renderer.toneMapping:NoToneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,alphaTest:material.alphaTest,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,depthPacking:material.depthPacking!==undefined?material.depthPacking:false,index0AttributeName:material.index0AttributeName,extensionDerivatives:material.extensions&&material.extensions.derivatives,extensionFragDepth:material.extensions&&material.extensions.fragDepth,extensionDrawBuffers:material.extensions&&material.extensions.drawBuffers,extensionShaderTextureLOD:material.extensions&&material.extensions.shaderTextureLOD,rendererExtensionFragDepth:isWebGL2||extensions.get('EXT_frag_depth')!==null,rendererExtensionDrawBuffers:isWebGL2||extensions.get('WEBGL_draw_buffers')!==null,rendererExtensionShaderTextureLod:isWebGL2||extensions.get('EXT_shader_texture_lod')!==null,onBeforeCompile:material.onBeforeCompile};return parameters;};this.getProgramCacheKey=function(parameters){var array=[];if(parameters.shaderID){array.push(parameters.shaderID);}else{array.push(parameters.fragmentShader);array.push(parameters.vertexShader);}if(parameters.defines!==undefined){for(var name in parameters.defines){array.push(name);array.push(parameters.defines[name]);}}if(parameters.isRawShaderMaterial===undefined){for(var i=0;i<parameterNames.length;i++){array.push(parameters[parameterNames[i]]);}array.push(renderer.outputEncoding);array.push(renderer.gammaFactor);}array.push(parameters.onBeforeCompile.toString());return array.join();};this.acquireProgram=function(parameters,cacheKey){var program;// Check if code has been already compiled
for(var p=0,pl=programs.length;p<pl;p++){var preexistingProgram=programs[p];if(preexistingProgram.cacheKey===cacheKey){program=preexistingProgram;++program.usedTimes;break;}}if(program===undefined){program=new WebGLProgram(renderer,cacheKey,parameters);programs.push(program);}return program;};this.releaseProgram=function(program){if(--program.usedTimes===0){// Remove from unordered set
var i=programs.indexOf(program);programs[i]=programs[programs.length-1];programs.pop();// Free WebGL resources
program.destroy();}};// Exposed for resource monitoring & error feedback via renderer.info:
this.programs=programs;}/**
 * @author fordacious / fordacious.github.io
 */function WebGLProperties(){var properties=new WeakMap();function get(object){var map=properties.get(object);if(map===undefined){map={};properties.set(object,map);}return map;}function remove(object){properties.delete(object);}function update(object,key,value){properties.get(object)[key]=value;}function dispose(){properties=new WeakMap();}return{get:get,remove:remove,update:update,dispose:dispose};}/**
 * @author mrdoob / http://mrdoob.com/
 */function painterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.program!==b.program){return a.program.id-b.program.id;}else if(a.material.id!==b.material.id){return a.material.id-b.material.id;}else if(a.z!==b.z){return a.z-b.z;}else{return a.id-b.id;}}function reversePainterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.z!==b.z){return b.z-a.z;}else{return a.id-b.id;}}function WebGLRenderList(){var renderItems=[];var renderItemsIndex=0;var opaque=[];var transparent=[];var defaultProgram={id:-1};function init(){renderItemsIndex=0;opaque.length=0;transparent.length=0;}function getNextRenderItem(object,geometry,material,groupOrder,z,group){var renderItem=renderItems[renderItemsIndex];if(renderItem===undefined){renderItem={id:object.id,object:object,geometry:geometry,material:material,program:material.program||defaultProgram,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group};renderItems[renderItemsIndex]=renderItem;}else{renderItem.id=object.id;renderItem.object=object;renderItem.geometry=geometry;renderItem.material=material;renderItem.program=material.program||defaultProgram;renderItem.groupOrder=groupOrder;renderItem.renderOrder=object.renderOrder;renderItem.z=z;renderItem.group=group;}renderItemsIndex++;return renderItem;}function push(object,geometry,material,groupOrder,z,group){var renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);(material.transparent===true?transparent:opaque).push(renderItem);}function unshift(object,geometry,material,groupOrder,z,group){var renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);(material.transparent===true?transparent:opaque).unshift(renderItem);}function sort(customOpaqueSort,customTransparentSort){if(opaque.length>1)opaque.sort(customOpaqueSort||painterSortStable);if(transparent.length>1)transparent.sort(customTransparentSort||reversePainterSortStable);}function finish(){// Clear references from inactive renderItems in the list
for(var i=renderItemsIndex,il=renderItems.length;i<il;i++){var renderItem=renderItems[i];if(renderItem.id===null)break;renderItem.id=null;renderItem.object=null;renderItem.geometry=null;renderItem.material=null;renderItem.program=null;renderItem.group=null;}}return{opaque:opaque,transparent:transparent,init:init,push:push,unshift:unshift,finish:finish,sort:sort};}function WebGLRenderLists(){var lists=new WeakMap();function onSceneDispose(event){var scene=event.target;scene.removeEventListener('dispose',onSceneDispose);lists.delete(scene);}function get(scene,camera){var cameras=lists.get(scene);var list;if(cameras===undefined){list=new WebGLRenderList();lists.set(scene,new WeakMap());lists.get(scene).set(camera,list);scene.addEventListener('dispose',onSceneDispose);}else{list=cameras.get(camera);if(list===undefined){list=new WebGLRenderList();cameras.set(camera,list);}}return list;}function dispose(){lists=new WeakMap();}return{get:get,dispose:dispose};}/**
 * @author mrdoob / http://mrdoob.com/
 */function UniformsCache(){var lights={};return{get:function get(light){if(lights[light.id]!==undefined){return lights[light.id];}var uniforms;switch(light.type){case'DirectionalLight':uniforms={direction:new Vector3$1(),color:new Color()};break;case'SpotLight':uniforms={position:new Vector3$1(),direction:new Vector3$1(),color:new Color(),distance:0,coneCos:0,penumbraCos:0,decay:0};break;case'PointLight':uniforms={position:new Vector3$1(),color:new Color(),distance:0,decay:0};break;case'HemisphereLight':uniforms={direction:new Vector3$1(),skyColor:new Color(),groundColor:new Color()};break;case'RectAreaLight':uniforms={color:new Color(),position:new Vector3$1(),halfWidth:new Vector3$1(),halfHeight:new Vector3$1()};break;}lights[light.id]=uniforms;return uniforms;}};}function ShadowUniformsCache(){var lights={};return{get:function get(light){if(lights[light.id]!==undefined){return lights[light.id];}var uniforms;switch(light.type){case'DirectionalLight':uniforms={shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'SpotLight':uniforms={shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'PointLight':uniforms={shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2(),shadowCameraNear:1,shadowCameraFar:1000};break;// TODO (abelnation): set RectAreaLight shadow uniforms
}lights[light.id]=uniforms;return uniforms;}};}var nextVersion=0;function shadowCastingLightsFirst(lightA,lightB){return(lightB.castShadow?1:0)-(lightA.castShadow?1:0);}function WebGLLights(){var cache=new UniformsCache();var shadowCache=ShadowUniformsCache();var state={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(var i=0;i<9;i++){state.probe.push(new Vector3$1());}var vector3=new Vector3$1();var matrix4=new Matrix4();var matrix42=new Matrix4();function setup(lights,shadows,camera){var r=0,g=0,b=0;for(var i=0;i<9;i++){state.probe[i].set(0,0,0);}var directionalLength=0;var pointLength=0;var spotLength=0;var rectAreaLength=0;var hemiLength=0;var numDirectionalShadows=0;var numPointShadows=0;var numSpotShadows=0;var viewMatrix=camera.matrixWorldInverse;lights.sort(shadowCastingLightsFirst);for(var i=0,l=lights.length;i<l;i++){var light=lights[i];var color=light.color;var intensity=light.intensity;var distance=light.distance;var shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight){r+=color.r*intensity;g+=color.g*intensity;b+=color.b*intensity;}else if(light.isLightProbe){for(var j=0;j<9;j++){state.probe[j].addScaledVector(light.sh.coefficients[j],intensity);}}else if(light.isDirectionalLight){var uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);if(light.castShadow){var shadow=light.shadow;var shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.directionalShadow[directionalLength]=shadowUniforms;state.directionalShadowMap[directionalLength]=shadowMap;state.directionalShadowMatrix[directionalLength]=light.shadow.matrix;numDirectionalShadows++;}state.directional[directionalLength]=uniforms;directionalLength++;}else if(light.isSpotLight){var uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);uniforms.color.copy(color).multiplyScalar(intensity);uniforms.distance=distance;uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);uniforms.coneCos=Math.cos(light.angle);uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra));uniforms.decay=light.decay;if(light.castShadow){var shadow=light.shadow;var shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.spotShadow[spotLength]=shadowUniforms;state.spotShadowMap[spotLength]=shadowMap;state.spotShadowMatrix[spotLength]=light.shadow.matrix;numSpotShadows++;}state.spot[spotLength]=uniforms;spotLength++;}else if(light.isRectAreaLight){var uniforms=cache.get(light);// (a) intensity is the total visible light emitted
//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );
// (b) intensity is the brightness of the light
uniforms.color.copy(color).multiplyScalar(intensity);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);// extract local rotation of light to derive width/height half vectors
matrix42.identity();matrix4.copy(light.matrixWorld);matrix4.premultiply(viewMatrix);matrix42.extractRotation(matrix4);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);uniforms.halfWidth.applyMatrix4(matrix42);uniforms.halfHeight.applyMatrix4(matrix42);// TODO (abelnation): RectAreaLight distance?
// uniforms.distance = distance;
state.rectArea[rectAreaLength]=uniforms;rectAreaLength++;}else if(light.isPointLight){var uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.distance=light.distance;uniforms.decay=light.decay;if(light.castShadow){var shadow=light.shadow;var shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;shadowUniforms.shadowCameraNear=shadow.camera.near;shadowUniforms.shadowCameraFar=shadow.camera.far;state.pointShadow[pointLength]=shadowUniforms;state.pointShadowMap[pointLength]=shadowMap;state.pointShadowMatrix[pointLength]=light.shadow.matrix;numPointShadows++;}state.point[pointLength]=uniforms;pointLength++;}else if(light.isHemisphereLight){var uniforms=cache.get(light);uniforms.direction.setFromMatrixPosition(light.matrixWorld);uniforms.direction.transformDirection(viewMatrix);uniforms.direction.normalize();uniforms.skyColor.copy(light.color).multiplyScalar(intensity);uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);state.hemi[hemiLength]=uniforms;hemiLength++;}}state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;var hash=state.hash;if(hash.directionalLength!==directionalLength||hash.pointLength!==pointLength||hash.spotLength!==spotLength||hash.rectAreaLength!==rectAreaLength||hash.hemiLength!==hemiLength||hash.numDirectionalShadows!==numDirectionalShadows||hash.numPointShadows!==numPointShadows||hash.numSpotShadows!==numSpotShadows){state.directional.length=directionalLength;state.spot.length=spotLength;state.rectArea.length=rectAreaLength;state.point.length=pointLength;state.hemi.length=hemiLength;state.directionalShadow.length=numDirectionalShadows;state.directionalShadowMap.length=numDirectionalShadows;state.pointShadow.length=numPointShadows;state.pointShadowMap.length=numPointShadows;state.spotShadow.length=numSpotShadows;state.spotShadowMap.length=numSpotShadows;state.directionalShadowMatrix.length=numDirectionalShadows;state.pointShadowMatrix.length=numPointShadows;state.spotShadowMatrix.length=numSpotShadows;hash.directionalLength=directionalLength;hash.pointLength=pointLength;hash.spotLength=spotLength;hash.rectAreaLength=rectAreaLength;hash.hemiLength=hemiLength;hash.numDirectionalShadows=numDirectionalShadows;hash.numPointShadows=numPointShadows;hash.numSpotShadows=numSpotShadows;state.version=nextVersion++;}}return{setup:setup,state:state};}/**
 * @author Mugen87 / https://github.com/Mugen87
 */function WebGLRenderState(){var lights=new WebGLLights();var lightsArray=[];var shadowsArray=[];function init(){lightsArray.length=0;shadowsArray.length=0;}function pushLight(light){lightsArray.push(light);}function pushShadow(shadowLight){shadowsArray.push(shadowLight);}function setupLights(camera){lights.setup(lightsArray,shadowsArray,camera);}var state={lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights};return{init:init,state:state,setupLights:setupLights,pushLight:pushLight,pushShadow:pushShadow};}function WebGLRenderStates(){var renderStates=new WeakMap();function onSceneDispose(event){var scene=event.target;scene.removeEventListener('dispose',onSceneDispose);renderStates.delete(scene);}function get(scene,camera){var renderState;if(renderStates.has(scene)===false){renderState=new WebGLRenderState();renderStates.set(scene,new WeakMap());renderStates.get(scene).set(camera,renderState);scene.addEventListener('dispose',onSceneDispose);}else{if(renderStates.get(scene).has(camera)===false){renderState=new WebGLRenderState();renderStates.get(scene).set(camera,renderState);}else{renderState=renderStates.get(scene).get(camera);}}return renderState;}function dispose(){renderStates=new WeakMap();}return{get:get,dispose:dispose};}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / https://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */function MeshDepthMaterial(parameters){Material.call(this);this.type='MeshDepthMaterial';this.depthPacking=BasicDepthPacking;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.setValues(parameters);}MeshDepthMaterial.prototype=Object.create(Material.prototype);MeshDepthMaterial.prototype.constructor=MeshDepthMaterial;MeshDepthMaterial.prototype.isMeshDepthMaterial=true;MeshDepthMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.depthPacking=source.depthPacking;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this;};/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *
 *  referencePosition: <float>,
 *  nearDistance: <float>,
 *  farDistance: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>
 *
 * }
 */function MeshDistanceMaterial(parameters){Material.call(this);this.type='MeshDistanceMaterial';this.referencePosition=new Vector3$1();this.nearDistance=1;this.farDistance=1000;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.setValues(parameters);}MeshDistanceMaterial.prototype=Object.create(Material.prototype);MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial;MeshDistanceMaterial.prototype.isMeshDistanceMaterial=true;MeshDistanceMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this;};var vsm_frag="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";var vsm_vert="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */function WebGLShadowMap(_renderer,_objects,maxTextureSize){var _frustum=new Frustum(),_shadowMapSize=new Vector2(),_viewportSize=new Vector2(),_viewport=new Vector4(),_depthMaterials=[],_distanceMaterials=[],_materialCache={};var shadowSide={0:BackSide,1:FrontSide,2:DoubleSide};var shadowMaterialVertical=new ShaderMaterial({defines:{SAMPLE_RATE:2.0/8.0,HALF_SAMPLE_RATE:1.0/8.0},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2()},radius:{value:4.0}},vertexShader:vsm_vert,fragmentShader:vsm_frag});var shadowMaterialHorizonal=shadowMaterialVertical.clone();shadowMaterialHorizonal.defines.HORIZONAL_PASS=1;var fullScreenTri=new BufferGeometry();fullScreenTri.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,0.5,3,-1,0.5,-1,3,0.5]),3));var fullScreenMesh=new Mesh(fullScreenTri,shadowMaterialVertical);var scope=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=PCFShadowMap;this.render=function(lights,scene,camera){if(scope.enabled===false)return;if(scope.autoUpdate===false&&scope.needsUpdate===false)return;if(lights.length===0)return;var currentRenderTarget=_renderer.getRenderTarget();var activeCubeFace=_renderer.getActiveCubeFace();var activeMipmapLevel=_renderer.getActiveMipmapLevel();var _state=_renderer.state;// Set GL state for depth map.
_state.setBlending(NoBlending);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(true);_state.setScissorTest(false);// render depth map
for(var i=0,il=lights.length;i<il;i++){var light=lights[i];var shadow=light.shadow;if(shadow===undefined){console.warn('THREE.WebGLShadowMap:',light,'has no shadow.');continue;}_shadowMapSize.copy(shadow.mapSize);var shadowFrameExtents=shadow.getFrameExtents();_shadowMapSize.multiply(shadowFrameExtents);_viewportSize.copy(shadow.mapSize);if(_shadowMapSize.x>maxTextureSize||_shadowMapSize.y>maxTextureSize){if(_shadowMapSize.x>maxTextureSize){_viewportSize.x=Math.floor(maxTextureSize/shadowFrameExtents.x);_shadowMapSize.x=_viewportSize.x*shadowFrameExtents.x;shadow.mapSize.x=_viewportSize.x;}if(_shadowMapSize.y>maxTextureSize){_viewportSize.y=Math.floor(maxTextureSize/shadowFrameExtents.y);_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y;shadow.mapSize.y=_viewportSize.y;}}if(shadow.map===null&&!shadow.isPointLightShadow&&this.type===VSMShadowMap){var pars={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+".shadowMap";shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.camera.updateProjectionMatrix();}if(shadow.map===null){var pars={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+".shadowMap";shadow.camera.updateProjectionMatrix();}_renderer.setRenderTarget(shadow.map);_renderer.clear();var viewportCount=shadow.getViewportCount();for(var vp=0;vp<viewportCount;vp++){var viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w);_state.viewport(_viewport);shadow.updateMatrices(light,vp);_frustum=shadow.getFrustum();renderObject(scene,camera,shadow.camera,light,this.type);}// do blur pass for VSM
if(!shadow.isPointLightShadow&&this.type===VSMShadowMap){VSMPass(shadow,camera);}}scope.needsUpdate=false;_renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel);};function VSMPass(shadow,camera){var geometry=_objects.update(fullScreenMesh);// vertical pass
shadowMaterialVertical.uniforms.shadow_pass.value=shadow.map.texture;shadowMaterialVertical.uniforms.resolution.value=shadow.mapSize;shadowMaterialVertical.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.mapPass);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialVertical,fullScreenMesh,null);// horizonal pass
shadowMaterialHorizonal.uniforms.shadow_pass.value=shadow.mapPass.texture;shadowMaterialHorizonal.uniforms.resolution.value=shadow.mapSize;shadowMaterialHorizonal.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.map);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialHorizonal,fullScreenMesh,null);}function getDepthMaterialVariant(useMorphing,useSkinning,useInstancing){var index=useMorphing<<0|useSkinning<<1|useInstancing<<2;var material=_depthMaterials[index];if(material===undefined){material=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:useMorphing,skinning:useSkinning});_depthMaterials[index]=material;}return material;}function getDistanceMaterialVariant(useMorphing,useSkinning,useInstancing){var index=useMorphing<<0|useSkinning<<1|useInstancing<<2;var material=_distanceMaterials[index];if(material===undefined){material=new MeshDistanceMaterial({morphTargets:useMorphing,skinning:useSkinning});_distanceMaterials[index]=material;}return material;}function getDepthMaterial(object,geometry,material,light,shadowCameraNear,shadowCameraFar,type){var result=null;var getMaterialVariant=getDepthMaterialVariant;var customMaterial=object.customDepthMaterial;if(light.isPointLight===true){getMaterialVariant=getDistanceMaterialVariant;customMaterial=object.customDistanceMaterial;}if(customMaterial===undefined){var useMorphing=false;if(material.morphTargets===true){useMorphing=geometry.morphAttributes&&geometry.morphAttributes.position&&geometry.morphAttributes.position.length>0;}var useSkinning=false;if(object.isSkinnedMesh===true){if(material.skinning===true){useSkinning=true;}else{console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:',object);}}var useInstancing=object.isInstancedMesh===true;result=getMaterialVariant(useMorphing,useSkinning,useInstancing);}else{result=customMaterial;}if(_renderer.localClippingEnabled&&material.clipShadows===true&&material.clippingPlanes.length!==0){// in this case we need a unique material instance reflecting the
// appropriate state
var keyA=result.uuid,keyB=material.uuid;var materialsForVariant=_materialCache[keyA];if(materialsForVariant===undefined){materialsForVariant={};_materialCache[keyA]=materialsForVariant;}var cachedMaterial=materialsForVariant[keyB];if(cachedMaterial===undefined){cachedMaterial=result.clone();materialsForVariant[keyB]=cachedMaterial;}result=cachedMaterial;}result.visible=material.visible;result.wireframe=material.wireframe;if(type===VSMShadowMap){result.side=material.shadowSide!==null?material.shadowSide:material.side;}else{result.side=material.shadowSide!==null?material.shadowSide:shadowSide[material.side];}result.clipShadows=material.clipShadows;result.clippingPlanes=material.clippingPlanes;result.clipIntersection=material.clipIntersection;result.wireframeLinewidth=material.wireframeLinewidth;result.linewidth=material.linewidth;if(light.isPointLight===true&&result.isMeshDistanceMaterial===true){result.referencePosition.setFromMatrixPosition(light.matrixWorld);result.nearDistance=shadowCameraNear;result.farDistance=shadowCameraFar;}return result;}function renderObject(object,camera,shadowCamera,light,type){if(object.visible===false)return;var visible=object.layers.test(camera.layers);if(visible&&(object.isMesh||object.isLine||object.isPoints)){if((object.castShadow||object.receiveShadow&&type===VSMShadowMap)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);var geometry=_objects.update(object);var material=object.material;if(Array.isArray(material)){var groups=geometry.groups;for(var k=0,kl=groups.length;k<kl;k++){var group=groups[k];var groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){var depthMaterial=getDepthMaterial(object,geometry,groupMaterial,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,group);}}}else if(material.visible){var depthMaterial=getDepthMaterial(object,geometry,material,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,null);}}}var children=object.children;for(var i=0,l=children.length;i<l;i++){renderObject(children[i],camera,shadowCamera,light,type);}}}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLState(gl,extensions,capabilities){var _equationToGL,_factorToGL;var isWebGL2=capabilities.isWebGL2;function ColorBuffer(){var locked=false;var color=new Vector4();var currentColorMask=null;var currentColorClear=new Vector4(0,0,0,0);return{setMask:function setMask(colorMask){if(currentColorMask!==colorMask&&!locked){gl.colorMask(colorMask,colorMask,colorMask,colorMask);currentColorMask=colorMask;}},setLocked:function setLocked(lock){locked=lock;},setClear:function setClear(r,g,b,a,premultipliedAlpha){if(premultipliedAlpha===true){r*=a;g*=a;b*=a;}color.set(r,g,b,a);if(currentColorClear.equals(color)===false){gl.clearColor(r,g,b,a);currentColorClear.copy(color);}},reset:function reset(){locked=false;currentColorMask=null;currentColorClear.set(-1,0,0,0);// set to invalid state
}};}function DepthBuffer(){var locked=false;var currentDepthMask=null;var currentDepthFunc=null;var currentDepthClear=null;return{setTest:function setTest(depthTest){if(depthTest){enable(2929);}else{disable(2929);}},setMask:function setMask(depthMask){if(currentDepthMask!==depthMask&&!locked){gl.depthMask(depthMask);currentDepthMask=depthMask;}},setFunc:function setFunc(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc){switch(depthFunc){case NeverDepth:gl.depthFunc(512);break;case AlwaysDepth:gl.depthFunc(519);break;case LessDepth:gl.depthFunc(513);break;case LessEqualDepth:gl.depthFunc(515);break;case EqualDepth:gl.depthFunc(514);break;case GreaterEqualDepth:gl.depthFunc(518);break;case GreaterDepth:gl.depthFunc(516);break;case NotEqualDepth:gl.depthFunc(517);break;default:gl.depthFunc(515);}}else{gl.depthFunc(515);}currentDepthFunc=depthFunc;}},setLocked:function setLocked(lock){locked=lock;},setClear:function setClear(depth){if(currentDepthClear!==depth){gl.clearDepth(depth);currentDepthClear=depth;}},reset:function reset(){locked=false;currentDepthMask=null;currentDepthFunc=null;currentDepthClear=null;}};}function StencilBuffer(){var locked=false;var currentStencilMask=null;var currentStencilFunc=null;var currentStencilRef=null;var currentStencilFuncMask=null;var currentStencilFail=null;var currentStencilZFail=null;var currentStencilZPass=null;var currentStencilClear=null;return{setTest:function setTest(stencilTest){if(!locked){if(stencilTest){enable(2960);}else{disable(2960);}}},setMask:function setMask(stencilMask){if(currentStencilMask!==stencilMask&&!locked){gl.stencilMask(stencilMask);currentStencilMask=stencilMask;}},setFunc:function setFunc(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask){gl.stencilFunc(stencilFunc,stencilRef,stencilMask);currentStencilFunc=stencilFunc;currentStencilRef=stencilRef;currentStencilFuncMask=stencilMask;}},setOp:function setOp(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass){gl.stencilOp(stencilFail,stencilZFail,stencilZPass);currentStencilFail=stencilFail;currentStencilZFail=stencilZFail;currentStencilZPass=stencilZPass;}},setLocked:function setLocked(lock){locked=lock;},setClear:function setClear(stencil){if(currentStencilClear!==stencil){gl.clearStencil(stencil);currentStencilClear=stencil;}},reset:function reset(){locked=false;currentStencilMask=null;currentStencilFunc=null;currentStencilRef=null;currentStencilFuncMask=null;currentStencilFail=null;currentStencilZFail=null;currentStencilZPass=null;currentStencilClear=null;}};}//
var colorBuffer=new ColorBuffer();var depthBuffer=new DepthBuffer();var stencilBuffer=new StencilBuffer();var maxVertexAttributes=gl.getParameter(34921);var newAttributes=new Uint8Array(maxVertexAttributes);var enabledAttributes=new Uint8Array(maxVertexAttributes);var attributeDivisors=new Uint8Array(maxVertexAttributes);var enabledCapabilities={};var currentProgram=null;var currentBlendingEnabled=null;var currentBlending=null;var currentBlendEquation=null;var currentBlendSrc=null;var currentBlendDst=null;var currentBlendEquationAlpha=null;var currentBlendSrcAlpha=null;var currentBlendDstAlpha=null;var currentPremultipledAlpha=false;var currentFlipSided=null;var currentCullFace=null;var currentLineWidth=null;var currentPolygonOffsetFactor=null;var currentPolygonOffsetUnits=null;var maxTextures=gl.getParameter(35661);var lineWidthAvailable=false;var version=0;var glVersion=gl.getParameter(7938);if(glVersion.indexOf('WebGL')!==-1){version=parseFloat(/^WebGL\ ([0-9])/.exec(glVersion)[1]);lineWidthAvailable=version>=1.0;}else if(glVersion.indexOf('OpenGL ES')!==-1){version=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(glVersion)[1]);lineWidthAvailable=version>=2.0;}var currentTextureSlot=null;var currentBoundTextures={};var currentScissor=new Vector4();var currentViewport=new Vector4();function createTexture(type,target,count){var data=new Uint8Array(4);// 4 is required to match default unpack alignment of 4.
var texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(var i=0;i<count;i++){gl.texImage2D(target+i,0,6408,1,1,0,6408,5121,data);}return texture;}var emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);// init
colorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(LessEqualDepth);setFlipSided(false);setCullFace(CullFaceBack);enable(2884);setBlending(NoBlending);//
function initAttributes(){for(var i=0,l=newAttributes.length;i<l;i++){newAttributes[i]=0;}}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0);}function enableAttributeAndDivisor(attribute,meshPerAttribute){newAttributes[attribute]=1;if(enabledAttributes[attribute]===0){gl.enableVertexAttribArray(attribute);enabledAttributes[attribute]=1;}if(attributeDivisors[attribute]!==meshPerAttribute){var extension=isWebGL2?gl:extensions.get('ANGLE_instanced_arrays');extension[isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](attribute,meshPerAttribute);attributeDivisors[attribute]=meshPerAttribute;}}function disableUnusedAttributes(){for(var i=0,l=enabledAttributes.length;i!==l;++i){if(enabledAttributes[i]!==newAttributes[i]){gl.disableVertexAttribArray(i);enabledAttributes[i]=0;}}}function vertexAttribPointer(index,size,type,normalized,stride,offset){if(isWebGL2===true&&(type===5124||type===5125)){gl.vertexAttribIPointer(index,size,type,normalized,stride,offset);}else{gl.vertexAttribPointer(index,size,type,normalized,stride,offset);}}function enable(id){if(enabledCapabilities[id]!==true){gl.enable(id);enabledCapabilities[id]=true;}}function disable(id){if(enabledCapabilities[id]!==false){gl.disable(id);enabledCapabilities[id]=false;}}function useProgram(program){if(currentProgram!==program){gl.useProgram(program);currentProgram=program;return true;}return false;}var equationToGL=(_equationToGL={},_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_equationToGL,AddEquation,32774),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_equationToGL,SubtractEquation,32778),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_equationToGL,ReverseSubtractEquation,32779),_equationToGL);if(isWebGL2){equationToGL[MinEquation]=32775;equationToGL[MaxEquation]=32776;}else{var extension=extensions.get('EXT_blend_minmax');if(extension!==null){equationToGL[MinEquation]=extension.MIN_EXT;equationToGL[MaxEquation]=extension.MAX_EXT;}}var factorToGL=(_factorToGL={},_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,ZeroFactor,0),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,OneFactor,1),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,SrcColorFactor,768),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,SrcAlphaFactor,770),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,SrcAlphaSaturateFactor,776),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,DstColorFactor,774),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,DstAlphaFactor,772),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,OneMinusSrcColorFactor,769),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,OneMinusSrcAlphaFactor,771),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,OneMinusDstColorFactor,775),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_factorToGL,OneMinusDstAlphaFactor,773),_factorToGL);function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===NoBlending){if(currentBlendingEnabled){disable(3042);currentBlendingEnabled=false;}return;}if(!currentBlendingEnabled){enable(3042);currentBlendingEnabled=true;}if(blending!==CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==AddEquation||currentBlendEquationAlpha!==AddEquation){gl.blendEquation(32774);currentBlendEquation=AddEquation;currentBlendEquationAlpha=AddEquation;}if(premultipliedAlpha){switch(blending){case NormalBlending:gl.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:gl.blendFunc(1,1);break;case SubtractiveBlending:gl.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:gl.blendFuncSeparate(0,768,0,770);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}else{switch(blending){case NormalBlending:gl.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:gl.blendFunc(770,1);break;case SubtractiveBlending:gl.blendFunc(0,769);break;case MultiplyBlending:gl.blendFunc(0,768);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}currentBlendSrc=null;currentBlendDst=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha;}return;}// custom blending
blendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha){gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]);currentBlendEquation=blendEquation;currentBlendEquationAlpha=blendEquationAlpha;}if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha){gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]);currentBlendSrc=blendSrc;currentBlendDst=blendDst;currentBlendSrcAlpha=blendSrcAlpha;currentBlendDstAlpha=blendDstAlpha;}currentBlending=blending;currentPremultipledAlpha=null;}function setMaterial(material,frontFaceCW){material.side===DoubleSide?disable(2884):enable(2884);var flipSided=material.side===BackSide;if(frontFaceCW)flipSided=!flipSided;setFlipSided(flipSided);material.blending===NormalBlending&&material.transparent===false?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);var stencilWrite=material.stencilWrite;stencilBuffer.setTest(stencilWrite);if(stencilWrite){stencilBuffer.setMask(material.stencilWriteMask);stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask);stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass);}setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);}//
function setFlipSided(flipSided){if(currentFlipSided!==flipSided){if(flipSided){gl.frontFace(2304);}else{gl.frontFace(2305);}currentFlipSided=flipSided;}}function setCullFace(cullFace){if(cullFace!==CullFaceNone){enable(2884);if(cullFace!==currentCullFace){if(cullFace===CullFaceBack){gl.cullFace(1029);}else if(cullFace===CullFaceFront){gl.cullFace(1028);}else{gl.cullFace(1032);}}}else{disable(2884);}currentCullFace=cullFace;}function setLineWidth(width){if(width!==currentLineWidth){if(lineWidthAvailable)gl.lineWidth(width);currentLineWidth=width;}}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){enable(32823);if(currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units){gl.polygonOffset(factor,units);currentPolygonOffsetFactor=factor;currentPolygonOffsetUnits=units;}}else{disable(32823);}}function setScissorTest(scissorTest){if(scissorTest){enable(3089);}else{disable(3089);}}// texture
function activeTexture(webglSlot){if(webglSlot===undefined)webglSlot=33984+maxTextures-1;if(currentTextureSlot!==webglSlot){gl.activeTexture(webglSlot);currentTextureSlot=webglSlot;}}function bindTexture(webglType,webglTexture){if(currentTextureSlot===null){activeTexture();}var boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture===undefined){boundTexture={type:undefined,texture:undefined};currentBoundTextures[currentTextureSlot]=boundTexture;}if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture){gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]);boundTexture.type=webglType;boundTexture.texture=webglTexture;}}function unbindTexture(){var boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture!==undefined&&boundTexture.type!==undefined){gl.bindTexture(boundTexture.type,null);boundTexture.type=undefined;boundTexture.texture=undefined;}}function compressedTexImage2D(){try{gl.compressedTexImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage2D(){try{gl.texImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage3D(){try{gl.texImage3D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}//
function scissor(scissor){if(currentScissor.equals(scissor)===false){gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w);currentScissor.copy(scissor);}}function viewport(viewport){if(currentViewport.equals(viewport)===false){gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w);currentViewport.copy(viewport);}}//
function reset(){for(var i=0;i<enabledAttributes.length;i++){if(enabledAttributes[i]===1){gl.disableVertexAttribArray(i);enabledAttributes[i]=0;}}enabledCapabilities={};currentTextureSlot=null;currentBoundTextures={};currentProgram=null;currentBlending=null;currentFlipSided=null;currentCullFace=null;colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset();}return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},initAttributes:initAttributes,enableAttribute:enableAttribute,enableAttributeAndDivisor:enableAttributeAndDivisor,disableUnusedAttributes:disableUnusedAttributes,vertexAttribPointer:vertexAttribPointer,enable:enable,disable:disable,useProgram:useProgram,setBlending:setBlending,setMaterial:setMaterial,setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:setLineWidth,setPolygonOffset:setPolygonOffset,setScissorTest:setScissorTest,activeTexture:activeTexture,bindTexture:bindTexture,unbindTexture:unbindTexture,compressedTexImage2D:compressedTexImage2D,texImage2D:texImage2D,texImage3D:texImage3D,scissor:scissor,viewport:viewport,reset:reset};}/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){var _wrappingToGL,_filterToGL;var isWebGL2=capabilities.isWebGL2;var maxTextures=capabilities.maxTextures;var maxCubemapSize=capabilities.maxCubemapSize;var maxTextureSize=capabilities.maxTextureSize;var maxSamples=capabilities.maxSamples;var _videoTextures=new WeakMap();var _canvas;// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,
// also OffscreenCanvas.getContext("webgl"), but not OffscreenCanvas.getContext("2d")!
// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).
var useOffscreenCanvas=false;try{useOffscreenCanvas=typeof OffscreenCanvas!=='undefined'&&new OffscreenCanvas(1,1).getContext("2d")!==null;}catch(err){// Ignore any errors
}function createCanvas(width,height){// Use OffscreenCanvas when available. Specially needed in web workers
return useOffscreenCanvas?new OffscreenCanvas(width,height):document.createElementNS('http://www.w3.org/1999/xhtml','canvas');}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){var scale=1;// handle case if texture exceeds max size
if(image.width>maxSize||image.height>maxSize){scale=maxSize/Math.max(image.width,image.height);}// only perform resize if necessary
if(scale<1||needsPowerOfTwo===true){// only perform resize for certain image types
if(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){var floor=needsPowerOfTwo?MathUtils.floorPowerOfTwo:Math.floor;var width=floor(scale*image.width);var height=floor(scale*image.height);if(_canvas===undefined)_canvas=createCanvas(width,height);// cube textures can't reuse the same canvas
var canvas=needsNewCanvas?createCanvas(width,height):_canvas;canvas.width=width;canvas.height=height;var context=canvas.getContext('2d');context.drawImage(image,0,0,width,height);console.warn('THREE.WebGLRenderer: Texture has been resized from ('+image.width+'x'+image.height+') to ('+width+'x'+height+').');return canvas;}else{if('data'in image){console.warn('THREE.WebGLRenderer: Image in DataTexture is too big ('+image.width+'x'+image.height+').');}return image;}}return image;}function isPowerOfTwo(image){return MathUtils.isPowerOfTwo(image.width)&&MathUtils.isPowerOfTwo(image.height);}function textureNeedsPowerOfTwo(texture){if(isWebGL2)return false;return texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function generateMipmap(target,texture,width,height){_gl.generateMipmap(target);var textureProperties=properties.get(texture);// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11
textureProperties.__maxMipLevel=Math.log(Math.max(width,height))*Math.LOG2E;}function getInternalFormat(internalFormatName,glFormat,glType){if(isWebGL2===false)return glFormat;if(internalFormatName!==null){if(_gl[internalFormatName]!==undefined)return _gl[internalFormatName];console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \''+internalFormatName+'\'');}var internalFormat=glFormat;if(glFormat===6403){if(glType===5126)internalFormat=33326;if(glType===5131)internalFormat=33325;if(glType===5121)internalFormat=33321;}if(glFormat===6407){if(glType===5126)internalFormat=34837;if(glType===5131)internalFormat=34843;if(glType===5121)internalFormat=32849;}if(glFormat===6408){if(glType===5126)internalFormat=34836;if(glType===5131)internalFormat=34842;if(glType===5121)internalFormat=32856;}if(internalFormat===33325||internalFormat===33326||internalFormat===34842||internalFormat===34836){extensions.get('EXT_color_buffer_float');}return internalFormat;}// Fallback filters for non-power-of-2 textures
function filterFallback(f){if(f===NearestFilter||f===NearestMipmapNearestFilter||f===NearestMipmapLinearFilter){return 9728;}return 9729;}//
function onTextureDispose(event){var texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);if(texture.isVideoTexture){_videoTextures.delete(texture);}info.memory.textures--;}function onRenderTargetDispose(event){var renderTarget=event.target;renderTarget.removeEventListener('dispose',onRenderTargetDispose);deallocateRenderTarget(renderTarget);info.memory.textures--;}//
function deallocateTexture(texture){var textureProperties=properties.get(texture);if(textureProperties.__webglInit===undefined)return;_gl.deleteTexture(textureProperties.__webglTexture);properties.remove(texture);}function deallocateRenderTarget(renderTarget){var renderTargetProperties=properties.get(renderTarget);var textureProperties=properties.get(renderTarget.texture);if(!renderTarget)return;if(textureProperties.__webglTexture!==undefined){_gl.deleteTexture(textureProperties.__webglTexture);}if(renderTarget.depthTexture){renderTarget.depthTexture.dispose();}if(renderTarget.isWebGLCubeRenderTarget){for(var i=0;i<6;i++){_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);}}else{_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);if(renderTargetProperties.__webglMultisampledFramebuffer)_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);if(renderTargetProperties.__webglColorRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);if(renderTargetProperties.__webglDepthRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);}properties.remove(renderTarget.texture);properties.remove(renderTarget);}//
var textureUnits=0;function resetTextureUnits(){textureUnits=0;}function allocateTextureUnit(){var textureUnit=textureUnits;if(textureUnit>=maxTextures){console.warn('THREE.WebGLTextures: Trying to use '+textureUnit+' texture units while this GPU supports only '+maxTextures);}textureUnits+=1;return textureUnit;}//
function setTexture2D(texture,slot){var textureProperties=properties.get(texture);if(texture.isVideoTexture)updateVideoTexture(texture);if(texture.version>0&&textureProperties.__version!==texture.version){var image=texture.image;if(image===undefined){console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');}else if(image.complete===false){console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');}else{uploadTexture(textureProperties,texture,slot);return;}}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture);}function setTexture2DArray(texture,slot){var textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(35866,textureProperties.__webglTexture);}function setTexture3D(texture,slot){var textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(32879,textureProperties.__webglTexture);}function setTextureCube(texture,slot){if(texture.image.length!==6)return;var textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);var isCompressed=texture&&(texture.isCompressedTexture||texture.image[0].isCompressedTexture);var isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;var cubeImage=[];for(var i=0;i<6;i++){if(!isCompressed&&!isDataTexture){cubeImage[i]=resizeImage(texture.image[i],false,true,maxCubemapSize);}else{cubeImage[i]=isDataTexture?texture.image[i].image:texture.image[i];}}var image=cubeImage[0],supportsMips=isPowerOfTwo(image)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(34067,texture,supportsMips);var mipmaps;if(isCompressed){for(var i=0;i<6;i++){mipmaps=cubeImage[i].mipmaps;for(var j=0;j<mipmaps.length;j++){var mipmap=mipmaps[j];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');}}else{state.texImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}textureProperties.__maxMipLevel=mipmaps.length-1;}else{mipmaps=texture.mipmaps;for(var i=0;i<6;i++){if(isDataTexture){state.texImage2D(34069+i,0,glInternalFormat,cubeImage[i].width,cubeImage[i].height,0,glFormat,glType,cubeImage[i].data);for(var j=0;j<mipmaps.length;j++){var mipmap=mipmaps[j];var mipmapImage=mipmap.image[i].image;state.texImage2D(34069+i,j+1,glInternalFormat,mipmapImage.width,mipmapImage.height,0,glFormat,glType,mipmapImage.data);}}else{state.texImage2D(34069+i,0,glInternalFormat,glFormat,glType,cubeImage[i]);for(var j=0;j<mipmaps.length;j++){var mipmap=mipmaps[j];state.texImage2D(34069+i,j+1,glInternalFormat,glFormat,glType,mipmap.image[i]);}}}textureProperties.__maxMipLevel=mipmaps.length;}if(textureNeedsGenerateMipmaps(texture,supportsMips)){// We assume images for cube map have the same size.
generateMipmap(34067,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}else{state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);}}function setTextureCubeDynamic(texture,slot){state.activeTexture(33984+slot);state.bindTexture(34067,properties.get(texture).__webglTexture);}var wrappingToGL=(_wrappingToGL={},_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_wrappingToGL,RepeatWrapping$1,10497),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_wrappingToGL,ClampToEdgeWrapping,33071),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_wrappingToGL,MirroredRepeatWrapping,33648),_wrappingToGL);var filterToGL=(_filterToGL={},_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_filterToGL,NearestFilter,9728),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_filterToGL,NearestMipmapNearestFilter,9984),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_filterToGL,NearestMipmapLinearFilter,9986),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_filterToGL,LinearFilter,9729),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_filterToGL,LinearMipmapNearestFilter,9985),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_filterToGL,LinearMipmapLinearFilter,9987),_filterToGL);function setTextureParameters(textureType,texture,supportsMips){if(supportsMips){_gl.texParameteri(textureType,10242,wrappingToGL[texture.wrapS]);_gl.texParameteri(textureType,10243,wrappingToGL[texture.wrapT]);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,wrappingToGL[texture.wrapR]);}_gl.texParameteri(textureType,10240,filterToGL[texture.magFilter]);_gl.texParameteri(textureType,10241,filterToGL[texture.minFilter]);}else{_gl.texParameteri(textureType,10242,33071);_gl.texParameteri(textureType,10243,33071);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,33071);}if(texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');}_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter));_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter));if(texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');}}var extension=extensions.get('EXT_texture_filter_anisotropic');if(extension){if(texture.type===FloatType$1&&extensions.get('OES_texture_float_linear')===null)return;if(texture.type===HalfFloatType&&(isWebGL2||extensions.get('OES_texture_half_float_linear'))===null)return;if(texture.anisotropy>1||properties.get(texture).__currentAnisotropy){_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy()));properties.get(texture).__currentAnisotropy=texture.anisotropy;}}}function initTexture(textureProperties,texture){if(textureProperties.__webglInit===undefined){textureProperties.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}function uploadTexture(textureProperties,texture,slot){var textureType=3553;if(texture.isDataTexture2DArray)textureType=35866;if(texture.isDataTexture3D)textureType=32879;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);var needsPowerOfTwo=textureNeedsPowerOfTwo(texture)&&isPowerOfTwo(texture.image)===false;var image=resizeImage(texture.image,needsPowerOfTwo,false,maxTextureSize);var supportsMips=isPowerOfTwo(image)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(textureType,texture,supportsMips);var mipmap,mipmaps=texture.mipmaps;if(texture.isDepthTexture){// populate depth texture with dummy data
glInternalFormat=6402;if(isWebGL2){if(texture.type===FloatType$1){glInternalFormat=36012;}else if(texture.type===UnsignedIntType){glInternalFormat=33190;}else if(texture.type===UnsignedInt248Type){glInternalFormat=35056;}else{glInternalFormat=33189;// WebGL2 requires sized internalformat for glTexImage2D
}}else{if(texture.type===FloatType$1){console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');}}// validation checks for WebGL 1
if(texture.format===DepthFormat&&glInternalFormat===6402){// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
if(texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType){console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');texture.type=UnsignedShortType;glType=utils.convert(texture.type);}}if(texture.format===DepthStencilFormat&&glInternalFormat===6402){// Depth stencil textures need the DEPTH_STENCIL internal format
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
glInternalFormat=34041;// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
if(texture.type!==UnsignedInt248Type){console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');texture.type=UnsignedInt248Type;glType=utils.convert(texture.type);}}//
state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,null);}else if(texture.isDataTexture){// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(mipmaps.length>0&&supportsMips){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}}else if(texture.isCompressedTexture){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');}}else{state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}textureProperties.__maxMipLevel=mipmaps.length-1;}else if(texture.isDataTexture2DArray){state.texImage3D(35866,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else if(texture.isDataTexture3D){state.texImage3D(32879,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else{// regular Texture (image, video, canvas)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(mipmaps.length>0&&supportsMips){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,glFormat,glType,image);textureProperties.__maxMipLevel=0;}}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(textureType,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}// Render targets
// Setup storage for target texture and bind it to correct framebuffer
function setupFrameBufferTexture(framebuffer,renderTarget,attachment,textureTarget){var glFormat=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);var glInternalFormat=getInternalFormat(renderTarget.texture.internalFormat,glFormat,glType);state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);_gl.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(renderTarget.texture).__webglTexture,0);_gl.bindFramebuffer(36160,null);}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
function setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){var glInternalFormat=33189;if(isMultisample){var depthTexture=renderTarget.depthTexture;if(depthTexture&&depthTexture.isDepthTexture){if(depthTexture.type===FloatType$1){glInternalFormat=36012;}else if(depthTexture.type===UnsignedIntType){glInternalFormat=33190;}}var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,36096,36161,renderbuffer);}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){if(isMultisample){var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,35056,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer);}else{var glFormat=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);var glInternalFormat=getInternalFormat(renderTarget.texture.internalFormat,glFormat,glType);if(isMultisample){var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}}_gl.bindRenderbuffer(36161,null);}// Setup resources for a Depth Texture for a FBO (needs an extension)
function setupDepthTexture(framebuffer,renderTarget){var isCube=renderTarget&&renderTarget.isWebGLCubeRenderTarget;if(isCube)throw new Error('Depth Texture with cube render targets is not supported');_gl.bindFramebuffer(36160,framebuffer);if(!(renderTarget.depthTexture&&renderTarget.depthTexture.isDepthTexture)){throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');}// upload an empty depth texture with framebuffer size
if(!properties.get(renderTarget.depthTexture).__webglTexture||renderTarget.depthTexture.image.width!==renderTarget.width||renderTarget.depthTexture.image.height!==renderTarget.height){renderTarget.depthTexture.image.width=renderTarget.width;renderTarget.depthTexture.image.height=renderTarget.height;renderTarget.depthTexture.needsUpdate=true;}setTexture2D(renderTarget.depthTexture,0);var webglDepthTexture=properties.get(renderTarget.depthTexture).__webglTexture;if(renderTarget.depthTexture.format===DepthFormat){_gl.framebufferTexture2D(36160,36096,3553,webglDepthTexture,0);}else if(renderTarget.depthTexture.format===DepthStencilFormat){_gl.framebufferTexture2D(36160,33306,3553,webglDepthTexture,0);}else{throw new Error('Unknown depthTexture format');}}// Setup GL resources for a non-texture depth buffer
function setupDepthRenderbuffer(renderTarget){var renderTargetProperties=properties.get(renderTarget);var isCube=renderTarget.isWebGLCubeRenderTarget===true;if(renderTarget.depthTexture){if(isCube)throw new Error('target.depthTexture not supported in Cube render targets');setupDepthTexture(renderTargetProperties.__webglFramebuffer,renderTarget);}else{if(isCube){renderTargetProperties.__webglDepthbuffer=[];for(var i=0;i<6;i++){_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[i]);renderTargetProperties.__webglDepthbuffer[i]=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i],renderTarget,false);}}else{_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,false);}}_gl.bindFramebuffer(36160,null);}// Set up GL resources for the render target
function setupRenderTarget(renderTarget){var renderTargetProperties=properties.get(renderTarget);var textureProperties=properties.get(renderTarget.texture);renderTarget.addEventListener('dispose',onRenderTargetDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;var isCube=renderTarget.isWebGLCubeRenderTarget===true;var isMultisample=renderTarget.isWebGLMultisampleRenderTarget===true;var supportsMips=isPowerOfTwo(renderTarget)||isWebGL2;// Handles WebGL2 RGBFormat fallback - #18858
if(isWebGL2&&renderTarget.texture.format===RGBFormat&&(renderTarget.texture.type===FloatType$1||renderTarget.texture.type===HalfFloatType)){renderTarget.texture.format=RGBAFormat;console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');}// Setup framebuffer
if(isCube){renderTargetProperties.__webglFramebuffer=[];for(var i=0;i<6;i++){renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer();}}else{renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer();if(isMultisample){if(isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);var glFormat=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);var glInternalFormat=getInternalFormat(renderTarget.texture.internalFormat,glFormat,glType);var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);_gl.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);if(renderTarget.depthBuffer){renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,true);}_gl.bindFramebuffer(36160,null);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}// Setup color buffer
if(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,renderTarget.texture,supportsMips);for(var i=0;i<6;i++){setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i],renderTarget,36064,34069+i);}if(textureNeedsGenerateMipmaps(renderTarget.texture,supportsMips)){generateMipmap(34067,renderTarget.texture,renderTarget.width,renderTarget.height);}state.bindTexture(34067,null);}else{state.bindTexture(3553,textureProperties.__webglTexture);setTextureParameters(3553,renderTarget.texture,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,36064,3553);if(textureNeedsGenerateMipmaps(renderTarget.texture,supportsMips)){generateMipmap(3553,renderTarget.texture,renderTarget.width,renderTarget.height);}state.bindTexture(3553,null);}// Setup depth and stencil buffers
if(renderTarget.depthBuffer){setupDepthRenderbuffer(renderTarget);}}function updateRenderTargetMipmap(renderTarget){var texture=renderTarget.texture;var supportsMips=isPowerOfTwo(renderTarget)||isWebGL2;if(textureNeedsGenerateMipmaps(texture,supportsMips)){var target=renderTarget.isWebGLCubeRenderTarget?34067:3553;var webglTexture=properties.get(texture).__webglTexture;state.bindTexture(target,webglTexture);generateMipmap(target,texture,renderTarget.width,renderTarget.height);state.bindTexture(target,null);}}function updateMultisampleRenderTarget(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget){if(isWebGL2){var renderTargetProperties=properties.get(renderTarget);_gl.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);_gl.bindFramebuffer(36009,renderTargetProperties.__webglFramebuffer);var width=renderTarget.width;var height=renderTarget.height;var mask=16384;if(renderTarget.depthBuffer)mask|=256;if(renderTarget.stencilBuffer)mask|=1024;_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,9728);_gl.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);// see #18905
}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}function getRenderTargetSamples(renderTarget){return isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(maxSamples,renderTarget.samples):0;}function updateVideoTexture(texture){var frame=info.render.frame;// Check the last frame we updated the VideoTexture
if(_videoTextures.get(texture)!==frame){_videoTextures.set(texture,frame);texture.update();}}// backwards compatibility
var warnedTexture2D=false;var warnedTextureCube=false;function safeSetTexture2D(texture,slot){if(texture&&texture.isWebGLRenderTarget){if(warnedTexture2D===false){console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.");warnedTexture2D=true;}texture=texture.texture;}setTexture2D(texture,slot);}function safeSetTextureCube(texture,slot){if(texture&&texture.isWebGLCubeRenderTarget){if(warnedTextureCube===false){console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.");warnedTextureCube=true;}texture=texture.texture;}// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture
// TODO: unify these code paths
if(texture&&texture.isCubeTexture||Array.isArray(texture.image)&&texture.image.length===6){// CompressedTexture can have Array in image :/
// this function alone should take care of cube textures
setTextureCube(texture,slot);}else{// assumed: texture property of THREE.WebGLCubeRenderTarget
setTextureCubeDynamic(texture,slot);}}//
this.allocateTextureUnit=allocateTextureUnit;this.resetTextureUnits=resetTextureUnits;this.setTexture2D=setTexture2D;this.setTexture2DArray=setTexture2DArray;this.setTexture3D=setTexture3D;this.setTextureCube=setTextureCube;this.setTextureCubeDynamic=setTextureCubeDynamic;this.setupRenderTarget=setupRenderTarget;this.updateRenderTargetMipmap=updateRenderTargetMipmap;this.updateMultisampleRenderTarget=updateMultisampleRenderTarget;this.safeSetTexture2D=safeSetTexture2D;this.safeSetTextureCube=safeSetTextureCube;}/**
 * @author thespite / http://www.twitter.com/thespite
 */function WebGLUtils(gl,extensions,capabilities){var isWebGL2=capabilities.isWebGL2;function convert(p){var extension;if(p===UnsignedByteType)return 5121;if(p===UnsignedShort4444Type)return 32819;if(p===UnsignedShort5551Type)return 32820;if(p===UnsignedShort565Type)return 33635;if(p===ByteType)return 5120;if(p===ShortType)return 5122;if(p===UnsignedShortType)return 5123;if(p===IntType)return 5124;if(p===UnsignedIntType)return 5125;if(p===FloatType$1)return 5126;if(p===HalfFloatType){if(isWebGL2)return 5131;extension=extensions.get('OES_texture_half_float');if(extension!==null){return extension.HALF_FLOAT_OES;}else{return null;}}if(p===AlphaFormat)return 6406;if(p===RGBFormat)return 6407;if(p===RGBAFormat)return 6408;if(p===LuminanceFormat)return 6409;if(p===LuminanceAlphaFormat)return 6410;if(p===DepthFormat)return 6402;if(p===DepthStencilFormat)return 34041;if(p===RedFormat)return 6403;// WebGL2 formats.
if(p===RedIntegerFormat)return 36244;if(p===RGFormat)return 33319;if(p===RGIntegerFormat)return 33320;if(p===RGBIntegerFormat)return 36248;if(p===RGBAIntegerFormat)return 36249;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format){extension=extensions.get('WEBGL_compressed_texture_s3tc');if(extension!==null){if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;}else{return null;}}if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format){extension=extensions.get('WEBGL_compressed_texture_pvrtc');if(extension!==null){if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}else{return null;}}if(p===RGB_ETC1_Format){extension=extensions.get('WEBGL_compressed_texture_etc1');if(extension!==null){return extension.COMPRESSED_RGB_ETC1_WEBGL;}else{return null;}}if(p===RGB_ETC2_Format||p===RGBA_ETC2_EAC_Format){extension=extensions.get('WEBGL_compressed_texture_etc');if(extension!==null){if(p===RGB_ETC2_Format)return extension.COMPRESSED_RGB8_ETC2;if(p===RGBA_ETC2_EAC_Format)return extension.COMPRESSED_RGBA8_ETC2_EAC;}}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format||p===SRGB8_ALPHA8_ASTC_4x4_Format||p===SRGB8_ALPHA8_ASTC_5x4_Format||p===SRGB8_ALPHA8_ASTC_5x5_Format||p===SRGB8_ALPHA8_ASTC_6x5_Format||p===SRGB8_ALPHA8_ASTC_6x6_Format||p===SRGB8_ALPHA8_ASTC_8x5_Format||p===SRGB8_ALPHA8_ASTC_8x6_Format||p===SRGB8_ALPHA8_ASTC_8x8_Format||p===SRGB8_ALPHA8_ASTC_10x5_Format||p===SRGB8_ALPHA8_ASTC_10x6_Format||p===SRGB8_ALPHA8_ASTC_10x8_Format||p===SRGB8_ALPHA8_ASTC_10x10_Format||p===SRGB8_ALPHA8_ASTC_12x10_Format||p===SRGB8_ALPHA8_ASTC_12x12_Format){extension=extensions.get('WEBGL_compressed_texture_astc');if(extension!==null){// TODO Complete?
return p;}else{return null;}}if(p===RGBA_BPTC_Format){extension=extensions.get('EXT_texture_compression_bptc');if(extension!==null){// TODO Complete?
return p;}else{return null;}}if(p===UnsignedInt248Type){if(isWebGL2)return 34042;extension=extensions.get('WEBGL_depth_texture');if(extension!==null){return extension.UNSIGNED_INT_24_8_WEBGL;}else{return null;}}}return{convert:convert};}/**
 * @author mrdoob / http://mrdoob.com/
 */function ArrayCamera(array){PerspectiveCamera.call(this);this.cameras=array||[];}ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:true});/**
 * @author mrdoob / http://mrdoob.com/
 */function Group(){Object3D.call(this);this.type='Group';}Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:true});/**
 * @author Mugen87 / https://github.com/Mugen87
 */function WebXRController(){this._targetRay=null;this._grip=null;}Object.assign(WebXRController.prototype,{constructor:WebXRController,getTargetRaySpace:function getTargetRaySpace(){if(this._targetRay===null){this._targetRay=new Group();this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false;}return this._targetRay;},getGripSpace:function getGripSpace(){if(this._grip===null){this._grip=new Group();this._grip.matrixAutoUpdate=false;this._grip.visible=false;}return this._grip;},dispatchEvent:function dispatchEvent(event){if(this._targetRay!==null){this._targetRay.dispatchEvent(event);}if(this._grip!==null){this._grip.dispatchEvent(event);}return this;},disconnect:function disconnect(inputSource){this.dispatchEvent({type:'disconnected',data:inputSource});if(this._targetRay!==null){this._targetRay.visible=false;}if(this._grip!==null){this._grip.visible=false;}return this;},update:function update(inputSource,frame,referenceSpace){var inputPose=null;var gripPose=null;var targetRay=this._targetRay;var grip=this._grip;if(inputSource){if(targetRay!==null){inputPose=frame.getPose(inputSource.targetRaySpace,referenceSpace);if(inputPose!==null){targetRay.matrix.fromArray(inputPose.transform.matrix);targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale);}}if(grip!==null&&inputSource.gripSpace){gripPose=frame.getPose(inputSource.gripSpace,referenceSpace);if(gripPose!==null){grip.matrix.fromArray(gripPose.transform.matrix);grip.matrix.decompose(grip.position,grip.rotation,grip.scale);}}}if(targetRay!==null){targetRay.visible=inputPose!==null;}if(grip!==null){grip.visible=gripPose!==null;}return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function WebXRManager(renderer,gl){var scope=this;var session=null;var framebufferScaleFactor=1.0;var referenceSpace=null;var referenceSpaceType='local-floor';var pose=null;var controllers=[];var inputSourcesMap=new Map();//
var cameraL=new PerspectiveCamera();cameraL.layers.enable(1);cameraL.viewport=new Vector4();var cameraR=new PerspectiveCamera();cameraR.layers.enable(2);cameraR.viewport=new Vector4();var cameras=[cameraL,cameraR];var cameraVR=new ArrayCamera();cameraVR.layers.enable(1);cameraVR.layers.enable(2);var _currentDepthNear=null;var _currentDepthFar=null;//
this.enabled=false;this.isPresenting=false;this.getController=function(index){var controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getTargetRaySpace();};this.getControllerGrip=function(index){var controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getGripSpace();};//
function onSessionEvent(event){var controller=inputSourcesMap.get(event.inputSource);if(controller){controller.dispatchEvent({type:event.type});}}function onSessionEnd(){inputSourcesMap.forEach(function(controller,inputSource){controller.disconnect(inputSource);});inputSourcesMap.clear();//
renderer.setFramebuffer(null);renderer.setRenderTarget(renderer.getRenderTarget());// Hack #15830
animation.stop();scope.isPresenting=false;scope.dispatchEvent({type:'sessionend'});}function onRequestReferenceSpace(value){referenceSpace=value;animation.setContext(session);animation.start();scope.isPresenting=true;scope.dispatchEvent({type:'sessionstart'});}this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');}};this.setReferenceSpaceType=function(value){referenceSpaceType=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');}};this.getReferenceSpace=function(){return referenceSpace;};this.getSession=function(){return session;};this.setSession=function(value){session=value;if(session!==null){session.addEventListener('select',onSessionEvent);session.addEventListener('selectstart',onSessionEvent);session.addEventListener('selectend',onSessionEvent);session.addEventListener('squeeze',onSessionEvent);session.addEventListener('squeezestart',onSessionEvent);session.addEventListener('squeezeend',onSessionEvent);session.addEventListener('end',onSessionEnd);var attributes=gl.getContextAttributes();if(attributes.xrCompatible!==true){gl.makeXRCompatible();}var layerInit={antialias:attributes.antialias,alpha:attributes.alpha,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor:framebufferScaleFactor};// eslint-disable-next-line no-undef
var baseLayer=new XRWebGLLayer(session,gl,layerInit);session.updateRenderState({baseLayer:baseLayer});session.requestReferenceSpace(referenceSpaceType).then(onRequestReferenceSpace);//
session.addEventListener('inputsourceschange',updateInputSources);}};function updateInputSources(event){var inputSources=session.inputSources;// Assign inputSources to available controllers
for(var i=0;i<controllers.length;i++){inputSourcesMap.set(inputSources[i],controllers[i]);}// Notify disconnected
for(var i=0;i<event.removed.length;i++){var inputSource=event.removed[i];var controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'disconnected',data:inputSource});inputSourcesMap.delete(inputSource);}}// Notify connected
for(var i=0;i<event.added.length;i++){var inputSource=event.added[i];var controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'connected',data:inputSource});}}}//
var cameraLPos=new Vector3$1();var cameraRPos=new Vector3$1();/**
	 * @author jsantell / https://www.jsantell.com/
	 *
	 * Assumes 2 cameras that are parallel and share an X-axis, and that
	 * the cameras' projection and world matrices have already been set.
	 * And that near and far planes are identical for both cameras.
	 * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765
	 */function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);var ipd=cameraLPos.distanceTo(cameraRPos);var projL=cameraL.projectionMatrix.elements;var projR=cameraR.projectionMatrix.elements;// VR systems will have identical far and near planes, and
// most likely identical top and bottom frustum extents.
// Use the left camera for these values.
var near=projL[14]/(projL[10]-1);var far=projL[14]/(projL[10]+1);var topFov=(projL[9]+1)/projL[5];var bottomFov=(projL[9]-1)/projL[5];var leftFov=(projL[8]-1)/projL[0];var rightFov=(projR[8]+1)/projR[0];var left=near*leftFov;var right=near*rightFov;// Calculate the new camera's position offset from the
// left camera. xOffset should be roughly half `ipd`.
var zOffset=ipd/(-leftFov+rightFov);var xOffset=zOffset*-leftFov;// TODO: Better way to apply this offset?
cameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale);camera.translateX(xOffset);camera.translateZ(zOffset);camera.matrixWorld.compose(camera.position,camera.quaternion,camera.scale);camera.matrixWorldInverse.getInverse(camera.matrixWorld);// Find the union of the frustum values of the cameras and scale
// the values so that the near plane's position does not change in world space,
// although must now be relative to the new union camera.
var near2=near+zOffset;var far2=far+zOffset;var left2=left-xOffset;var right2=right+(ipd-xOffset);var top2=topFov*far/far2*near2;var bottom2=bottomFov*far/far2*near2;camera.projectionMatrix.makePerspective(left2,right2,top2,bottom2,near2,far2);}function updateCamera(camera,parent){if(parent===null){camera.matrixWorld.copy(camera.matrix);}else{camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);}camera.matrixWorldInverse.getInverse(camera.matrixWorld);}this.getCamera=function(camera){cameraVR.near=cameraR.near=cameraL.near=camera.near;cameraVR.far=cameraR.far=cameraL.far=camera.far;if(_currentDepthNear!==cameraVR.near||_currentDepthFar!==cameraVR.far){// Note that the new renderState won't apply until the next frame. See #18320
session.updateRenderState({depthNear:cameraVR.near,depthFar:cameraVR.far});_currentDepthNear=cameraVR.near;_currentDepthFar=cameraVR.far;}var parent=camera.parent;var cameras=cameraVR.cameras;updateCamera(cameraVR,parent);for(var i=0;i<cameras.length;i++){updateCamera(cameras[i],parent);}// update camera and its children
camera.matrixWorld.copy(cameraVR.matrixWorld);var children=camera.children;for(var i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(true);}// update projection matrix for proper view frustum culling
if(cameras.length===2){setProjectionFromUnion(cameraVR,cameraL,cameraR);}else{// assume single camera setup (AR)
cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);}return cameraVR;};// Animation Loop
var onAnimationFrameCallback=null;function onAnimationFrame(time,frame){pose=frame.getViewerPose(referenceSpace);if(pose!==null){var views=pose.views;var baseLayer=session.renderState.baseLayer;renderer.setFramebuffer(baseLayer.framebuffer);var cameraVRNeedsUpdate=false;// check if it's necessary to rebuild cameraVR's camera list
if(views.length!==cameraVR.cameras.length){cameraVR.cameras.length=0;cameraVRNeedsUpdate=true;}for(var i=0;i<views.length;i++){var view=views[i];var viewport=baseLayer.getViewport(view);var camera=cameras[i];camera.matrix.fromArray(view.transform.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height);if(i===0){cameraVR.matrix.copy(camera.matrix);}if(cameraVRNeedsUpdate===true){cameraVR.cameras.push(camera);}}}//
var inputSources=session.inputSources;for(var i=0;i<controllers.length;i++){var controller=controllers[i];var inputSource=inputSources[i];controller.update(inputSource,frame,referenceSpace);}if(onAnimationFrameCallback)onAnimationFrameCallback(time,frame);}var animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;};this.dispose=function(){};}Object.assign(WebXRManager.prototype,EventDispatcher.prototype);/**
 * @author mrdoob / http://mrdoob.com/
 */function WebGLMaterials(properties){function refreshFogUniforms(uniforms,fog){uniforms.fogColor.value.copy(fog.color);if(fog.isFog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far;}else if(fog.isFogExp2){uniforms.fogDensity.value=fog.density;}}function refreshMaterialUniforms(uniforms,material,environment,pixelRatio,height){if(material.isMeshBasicMaterial){refreshUniformsCommon(uniforms,material);}else if(material.isMeshLambertMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsLambert(uniforms,material);}else if(material.isMeshToonMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsToon(uniforms,material);}else if(material.isMeshPhongMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsPhong(uniforms,material);}else if(material.isMeshStandardMaterial){refreshUniformsCommon(uniforms,material,environment);if(material.isMeshPhysicalMaterial){refreshUniformsPhysical(uniforms,material,environment);}else{refreshUniformsStandard(uniforms,material,environment);}}else if(material.isMeshMatcapMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsMatcap(uniforms,material);}else if(material.isMeshDepthMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDepth(uniforms,material);}else if(material.isMeshDistanceMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDistance(uniforms,material);}else if(material.isMeshNormalMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsNormal(uniforms,material);}else if(material.isLineBasicMaterial){refreshUniformsLine(uniforms,material);if(material.isLineDashedMaterial){refreshUniformsDash(uniforms,material);}}else if(material.isPointsMaterial){refreshUniformsPoints(uniforms,material,pixelRatio,height);}else if(material.isSpriteMaterial){refreshUniformsSprites(uniforms,material);}else if(material.isShadowMaterial){uniforms.color.value.copy(material.color);uniforms.opacity.value=material.opacity;}else if(material.isShaderMaterial){material.uniformsNeedUpdate=false;// #15581
}}function refreshUniformsCommon(uniforms,material,environment){uniforms.opacity.value=material.opacity;if(material.color){uniforms.diffuse.value.copy(material.color);}if(material.emissive){uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);}if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.specularMap){uniforms.specularMap.value=material.specularMap;}var envMap=material.envMap||environment;if(envMap){uniforms.envMap.value=envMap;uniforms.flipEnvMap.value=envMap.isCubeTexture?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;uniforms.maxMipLevel.value=properties.get(envMap).__maxMipLevel;}if(material.lightMap){uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;}if(material.aoMap){uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;}// uv repeat and offset setting priorities
// 1. color map
// 2. specular map
// 3. normal map
// 4. bump map
// 5. alpha map
// 6. emissive map
var uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.roughnessMap){uvScaleMap=material.roughnessMap;}else if(material.metalnessMap){uvScaleMap=material.metalnessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}if(uvScaleMap!==undefined){// backwards compatibility
if(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}// uv repeat and offset setting priorities for uv2
// 1. ao map
// 2. light map
var uv2ScaleMap;if(material.aoMap){uv2ScaleMap=material.aoMap;}else if(material.lightMap){uv2ScaleMap=material.lightMap;}if(uv2ScaleMap!==undefined){// backwards compatibility
if(uv2ScaleMap.isWebGLRenderTarget){uv2ScaleMap=uv2ScaleMap.texture;}if(uv2ScaleMap.matrixAutoUpdate===true){uv2ScaleMap.updateMatrix();}uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);}}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale;}function refreshUniformsPoints(uniforms,material,pixelRatio,height){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.size.value=material.size*pixelRatio;uniforms.scale.value=height*0.5;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities
// 1. color map
// 2. alpha map
var uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsSprites(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.rotation.value=material.rotation;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities
// 1. color map
// 2. alpha map
var uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsLambert(uniforms,material){if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}}function refreshUniformsPhong(uniforms,material){uniforms.specular.value.copy(material.specular);uniforms.shininess.value=Math.max(material.shininess,1e-4);// to prevent pow( 0.0, 0.0 )
if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsToon(uniforms,material){uniforms.specular.value.copy(material.specular);uniforms.shininess.value=Math.max(material.shininess,1e-4);// to prevent pow( 0.0, 0.0 )
if(material.gradientMap){uniforms.gradientMap.value=material.gradientMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsStandard(uniforms,material,environment){uniforms.roughness.value=material.roughness;uniforms.metalness.value=material.metalness;if(material.roughnessMap){uniforms.roughnessMap.value=material.roughnessMap;}if(material.metalnessMap){uniforms.metalnessMap.value=material.metalnessMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}if(material.envMap||environment){//uniforms.envMap.value = material.envMap; // part of uniforms common
uniforms.envMapIntensity.value=material.envMapIntensity;}}function refreshUniformsPhysical(uniforms,material,environment){refreshUniformsStandard(uniforms,material,environment);uniforms.reflectivity.value=material.reflectivity;// also part of uniforms common
uniforms.clearcoat.value=material.clearcoat;uniforms.clearcoatRoughness.value=material.clearcoatRoughness;if(material.sheen)uniforms.sheen.value.copy(material.sheen);if(material.clearcoatMap){uniforms.clearcoatMap.value=material.clearcoatMap;}if(material.clearcoatRoughnessMap){uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap;}if(material.clearcoatNormalMap){uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap;if(material.side===BackSide){uniforms.clearcoatNormalScale.value.negate();}}uniforms.transparency.value=material.transparency;}function refreshUniformsMatcap(uniforms,material){if(material.matcap){uniforms.matcap.value=material.matcap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDepth(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDistance(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}uniforms.referencePosition.value.copy(material.referencePosition);uniforms.nearDistance.value=material.nearDistance;uniforms.farDistance.value=material.farDistance;}function refreshUniformsNormal(uniforms,material){if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}return{refreshFogUniforms:refreshFogUniforms,refreshMaterialUniforms:refreshMaterialUniforms};}/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 * @author tschw
 */function WebGLRenderer(parameters){parameters=parameters||{};var _canvas=parameters.canvas!==undefined?parameters.canvas:document.createElementNS('http://www.w3.org/1999/xhtml','canvas'),_context=parameters.context!==undefined?parameters.context:null,_alpha=parameters.alpha!==undefined?parameters.alpha:false,_depth=parameters.depth!==undefined?parameters.depth:true,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_powerPreference=parameters.powerPreference!==undefined?parameters.powerPreference:'default',_failIfMajorPerformanceCaveat=parameters.failIfMajorPerformanceCaveat!==undefined?parameters.failIfMajorPerformanceCaveat:false;var currentRenderList=null;var currentRenderState=null;// public properties
this.domElement=_canvas;// Debug configuration container
this.debug={/**
		 * Enables error checking and reporting when shader programs are being compiled
		 * @type {boolean}
		 */checkShaderErrors:true};// clearing
this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;// scene graph
this.sortObjects=true;// user-defined clipping
this.clippingPlanes=[];this.localClippingEnabled=false;// physically based shading
this.gammaFactor=2.0;// for backwards compatibility
this.outputEncoding=LinearEncoding;// physical lights
this.physicallyCorrectLights=false;// tone mapping
this.toneMapping=NoToneMapping;this.toneMappingExposure=1.0;this.toneMappingWhitePoint=1.0;// morphs
this.maxMorphTargets=8;this.maxMorphNormals=4;// internal properties
var _this=this,_isContextLost=false,// internal state cache
_framebuffer=null,_currentActiveCubeFace=0,_currentActiveMipmapLevel=0,_currentRenderTarget=null,_currentFramebuffer=null,_currentMaterialId=-1,// geometry and program caching
_currentGeometryProgram={geometry:null,program:null,wireframe:false},_currentCamera=null,_currentArrayCamera=null,_currentViewport=new Vector4(),_currentScissor=new Vector4(),_currentScissorTest=null,//
_width=_canvas.width,_height=_canvas.height,_pixelRatio=1,_opaqueSort=null,_transparentSort=null,_viewport=new Vector4(0,0,_width,_height),_scissor=new Vector4(0,0,_width,_height),_scissorTest=false,// frustum
_frustum=new Frustum(),// clipping
_clipping=new WebGLClipping(),_clippingEnabled=false,_localClippingEnabled=false,// camera matrices cache
_projScreenMatrix=new Matrix4(),_vector3=new Vector3$1();function getTargetPixelRatio(){return _currentRenderTarget===null?_pixelRatio:1;}// initialize
var _gl;try{var contextAttributes={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference,failIfMajorPerformanceCaveat:_failIfMajorPerformanceCaveat};// event listeners must be registered before WebGL context is created, see #12753
_canvas.addEventListener('webglcontextlost',onContextLost,false);_canvas.addEventListener('webglcontextrestored',onContextRestore,false);_gl=_context||_canvas.getContext('webgl',contextAttributes)||_canvas.getContext('experimental-webgl',contextAttributes);if(_gl===null){if(_canvas.getContext('webgl')!==null){throw new Error('Error creating WebGL context with your selected attributes.');}else{throw new Error('Error creating WebGL context.');}}// Some experimental-webgl implementations do not have getShaderPrecisionFormat
if(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{'rangeMin':1,'rangeMax':1,'precision':1};};}}catch(error){console.error('THREE.WebGLRenderer: '+error.message);throw error;}var extensions,capabilities,state,info;var properties,textures,attributes,geometries,objects;var programCache,materials,renderLists,renderStates;var background,morphtargets,bufferRenderer,indexedBufferRenderer;var utils;function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,extensions,parameters);if(capabilities.isWebGL2===false){extensions.get('WEBGL_depth_texture');extensions.get('OES_texture_float');extensions.get('OES_texture_half_float');extensions.get('OES_texture_half_float_linear');extensions.get('OES_standard_derivatives');extensions.get('OES_element_index_uint');extensions.get('ANGLE_instanced_arrays');}extensions.get('OES_texture_float_linear');utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,capabilities);state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());info=new WebGLInfo(_gl);properties=new WebGLProperties();textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);attributes=new WebGLAttributes(_gl,capabilities);geometries=new WebGLGeometries(_gl,attributes,info);objects=new WebGLObjects(_gl,geometries,attributes,info);morphtargets=new WebGLMorphtargets(_gl);programCache=new WebGLPrograms(_this,extensions,capabilities);materials=new WebGLMaterials(properties);renderLists=new WebGLRenderLists();renderStates=new WebGLRenderStates();background=new WebGLBackground(_this,state,objects,_premultipliedAlpha);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);info.programs=programCache.programs;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.state=state;_this.info=info;}initGLContext();// xr
var xr=new WebXRManager(_this,_gl);this.xr=xr;// shadow map
var shadowMap=new WebGLShadowMap(_this,objects,capabilities.maxTextureSize);this.shadowMap=shadowMap;// API
this.getContext=function(){return _gl;};this.getContextAttributes=function(){return _gl.getContextAttributes();};this.forceContextLoss=function(){var extension=extensions.get('WEBGL_lose_context');if(extension)extension.loseContext();};this.forceContextRestore=function(){var extension=extensions.get('WEBGL_lose_context');if(extension)extension.restoreContext();};this.getPixelRatio=function(){return _pixelRatio;};this.setPixelRatio=function(value){if(value===undefined)return;_pixelRatio=value;this.setSize(_width,_height,false);};this.getSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width,_height);};this.setSize=function(width,height,updateStyle){if(xr.isPresenting){console.warn('THREE.WebGLRenderer: Can\'t change size while VR device is presenting.');return;}_width=width;_height=height;_canvas.width=Math.floor(width*_pixelRatio);_canvas.height=Math.floor(height*_pixelRatio);if(updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}this.setViewport(0,0,width,height);};this.getDrawingBufferSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width*_pixelRatio,_height*_pixelRatio).floor();};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=Math.floor(width*pixelRatio);_canvas.height=Math.floor(height*pixelRatio);this.setViewport(0,0,width,height);};this.getCurrentViewport=function(target){if(target===undefined){console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');target=new Vector4();}return target.copy(_currentViewport);};this.getViewport=function(target){return target.copy(_viewport);};this.setViewport=function(x,y,width,height){if(x.isVector4){_viewport.set(x.x,x.y,x.z,x.w);}else{_viewport.set(x,y,width,height);}state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());};this.getScissor=function(target){return target.copy(_scissor);};this.setScissor=function(x,y,width,height){if(x.isVector4){_scissor.set(x.x,x.y,x.z,x.w);}else{_scissor.set(x,y,width,height);}state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());};this.getScissorTest=function(){return _scissorTest;};this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean);};this.setOpaqueSort=function(method){_opaqueSort=method;};this.setTransparentSort=function(method){_transparentSort=method;};// Clearing
this.getClearColor=function(){return background.getClearColor();};this.setClearColor=function(){background.setClearColor.apply(background,arguments);};this.getClearAlpha=function(){return background.getClearAlpha();};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments);};this.clear=function(color,depth,stencil){var bits=0;if(color===undefined||color)bits|=16384;if(depth===undefined||depth)bits|=256;if(stencil===undefined||stencil)bits|=1024;_gl.clear(bits);};this.clearColor=function(){this.clear(true,false,false);};this.clearDepth=function(){this.clear(false,true,false);};this.clearStencil=function(){this.clear(false,false,true);};//
this.dispose=function(){_canvas.removeEventListener('webglcontextlost',onContextLost,false);_canvas.removeEventListener('webglcontextrestored',onContextRestore,false);renderLists.dispose();renderStates.dispose();properties.dispose();objects.dispose();xr.dispose();animation.stop();};// Events
function onContextLost(event){event.preventDefault();console.log('THREE.WebGLRenderer: Context Lost.');_isContextLost=true;}function onContextRestore()/* event */{console.log('THREE.WebGLRenderer: Context Restored.');_isContextLost=false;initGLContext();}function onMaterialDispose(event){var material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);}// Buffer deallocation
function deallocateMaterial(material){releaseMaterialProgramReference(material);properties.remove(material);}function releaseMaterialProgramReference(material){var programInfo=properties.get(material).program;material.program=undefined;if(programInfo!==undefined){programCache.releaseProgram(programInfo);}}// Buffer rendering
function renderObjectImmediate(object,program){object.render(function(object){_this.renderBufferImmediate(object,program);});}this.renderBufferImmediate=function(object,program){state.initAttributes();var buffers=properties.get(object);if(object.hasPositions&&!buffers.position)buffers.position=_gl.createBuffer();if(object.hasNormals&&!buffers.normal)buffers.normal=_gl.createBuffer();if(object.hasUvs&&!buffers.uv)buffers.uv=_gl.createBuffer();if(object.hasColors&&!buffers.color)buffers.color=_gl.createBuffer();var programAttributes=program.getAttributes();if(object.hasPositions){_gl.bindBuffer(34962,buffers.position);_gl.bufferData(34962,object.positionArray,35048);state.enableAttribute(programAttributes.position);_gl.vertexAttribPointer(programAttributes.position,3,5126,false,0,0);}if(object.hasNormals){_gl.bindBuffer(34962,buffers.normal);_gl.bufferData(34962,object.normalArray,35048);state.enableAttribute(programAttributes.normal);_gl.vertexAttribPointer(programAttributes.normal,3,5126,false,0,0);}if(object.hasUvs){_gl.bindBuffer(34962,buffers.uv);_gl.bufferData(34962,object.uvArray,35048);state.enableAttribute(programAttributes.uv);_gl.vertexAttribPointer(programAttributes.uv,2,5126,false,0,0);}if(object.hasColors){_gl.bindBuffer(34962,buffers.color);_gl.bufferData(34962,object.colorArray,35048);state.enableAttribute(programAttributes.color);_gl.vertexAttribPointer(programAttributes.color,3,5126,false,0,0);}state.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);object.count=0;};var tempScene=new Scene();this.renderBufferDirect=function(camera,scene,geometry,material,object,group){if(scene===null)scene=tempScene;// renderBufferDirect second parameter used to be fog (could be null)
var frontFaceCW=object.isMesh&&object.matrixWorld.determinant()<0;var program=setProgram(camera,scene,material,object);state.setMaterial(material,frontFaceCW);var updateBuffers=false;if(_currentGeometryProgram.geometry!==geometry.id||_currentGeometryProgram.program!==program.id||_currentGeometryProgram.wireframe!==(material.wireframe===true)){_currentGeometryProgram.geometry=geometry.id;_currentGeometryProgram.program=program.id;_currentGeometryProgram.wireframe=material.wireframe===true;updateBuffers=true;}if(material.morphTargets||material.morphNormals){morphtargets.update(object,geometry,material,program);updateBuffers=true;}if(object.isInstancedMesh===true){updateBuffers=true;}//
var index=geometry.index;var position=geometry.attributes.position;//
if(index===null){if(position===undefined||position.count===0)return;}else if(index.count===0){return;}//
var rangeFactor=1;if(material.wireframe===true){index=geometries.getWireframeAttribute(geometry);rangeFactor=2;}var attribute;var renderer=bufferRenderer;if(index!==null){attribute=attributes.get(index);renderer=indexedBufferRenderer;renderer.setIndex(attribute);}if(updateBuffers){setupVertexAttributes(object,geometry,material,program);if(index!==null){_gl.bindBuffer(34963,attribute.buffer);}}//
var dataCount=index!==null?index.count:position.count;var rangeStart=geometry.drawRange.start*rangeFactor;var rangeCount=geometry.drawRange.count*rangeFactor;var groupStart=group!==null?group.start*rangeFactor:0;var groupCount=group!==null?group.count*rangeFactor:Infinity;var drawStart=Math.max(rangeStart,groupStart);var drawEnd=Math.min(dataCount,rangeStart+rangeCount,groupStart+groupCount)-1;var drawCount=Math.max(0,drawEnd-drawStart+1);if(drawCount===0)return;//
if(object.isMesh){if(material.wireframe===true){state.setLineWidth(material.wireframeLinewidth*getTargetPixelRatio());renderer.setMode(1);}else{renderer.setMode(4);}}else if(object.isLine){var lineWidth=material.linewidth;if(lineWidth===undefined)lineWidth=1;// Not using Line*Material
state.setLineWidth(lineWidth*getTargetPixelRatio());if(object.isLineSegments){renderer.setMode(1);}else if(object.isLineLoop){renderer.setMode(2);}else{renderer.setMode(3);}}else if(object.isPoints){renderer.setMode(0);}else if(object.isSprite){renderer.setMode(4);}if(object.isInstancedMesh){renderer.renderInstances(geometry,drawStart,drawCount,object.count);}else if(geometry.isInstancedBufferGeometry){var instanceCount=Math.min(geometry.instanceCount,geometry._maxInstanceCount);renderer.renderInstances(geometry,drawStart,drawCount,instanceCount);}else{renderer.render(drawStart,drawCount);}};function setupVertexAttributes(object,geometry,material,program){if(capabilities.isWebGL2===false&&(object.isInstancedMesh||geometry.isInstancedBufferGeometry)){if(extensions.get('ANGLE_instanced_arrays')===null)return;}state.initAttributes();var geometryAttributes=geometry.attributes;var programAttributes=program.getAttributes();var materialDefaultAttributeValues=material.defaultAttributeValues;for(var name in programAttributes){var programAttribute=programAttributes[name];if(programAttribute>=0){var geometryAttribute=geometryAttributes[name];if(geometryAttribute!==undefined){var normalized=geometryAttribute.normalized;var size=geometryAttribute.itemSize;var attribute=attributes.get(geometryAttribute);// TODO Attribute may not be available on context restore
if(attribute===undefined)continue;var buffer=attribute.buffer;var type=attribute.type;var bytesPerElement=attribute.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){var data=geometryAttribute.data;var stride=data.stride;var offset=geometryAttribute.offset;if(data&&data.isInstancedInterleavedBuffer){state.enableAttributeAndDivisor(programAttribute,data.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=data.meshPerAttribute*data.count;}}else{state.enableAttribute(programAttribute);}_gl.bindBuffer(34962,buffer);state.vertexAttribPointer(programAttribute,size,type,normalized,stride*bytesPerElement,offset*bytesPerElement);}else{if(geometryAttribute.isInstancedBufferAttribute){state.enableAttributeAndDivisor(programAttribute,geometryAttribute.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=geometryAttribute.meshPerAttribute*geometryAttribute.count;}}else{state.enableAttribute(programAttribute);}_gl.bindBuffer(34962,buffer);state.vertexAttribPointer(programAttribute,size,type,normalized,0,0);}}else if(name==='instanceMatrix'){var attribute=attributes.get(object.instanceMatrix);// TODO Attribute may not be available on context restore
if(attribute===undefined)continue;var buffer=attribute.buffer;var type=attribute.type;state.enableAttributeAndDivisor(programAttribute+0,1);state.enableAttributeAndDivisor(programAttribute+1,1);state.enableAttributeAndDivisor(programAttribute+2,1);state.enableAttributeAndDivisor(programAttribute+3,1);_gl.bindBuffer(34962,buffer);_gl.vertexAttribPointer(programAttribute+0,4,type,false,64,0);_gl.vertexAttribPointer(programAttribute+1,4,type,false,64,16);_gl.vertexAttribPointer(programAttribute+2,4,type,false,64,32);_gl.vertexAttribPointer(programAttribute+3,4,type,false,64,48);}else if(materialDefaultAttributeValues!==undefined){var value=materialDefaultAttributeValues[name];if(value!==undefined){switch(value.length){case 2:_gl.vertexAttrib2fv(programAttribute,value);break;case 3:_gl.vertexAttrib3fv(programAttribute,value);break;case 4:_gl.vertexAttrib4fv(programAttribute,value);break;default:_gl.vertexAttrib1fv(programAttribute,value);}}}}}state.disableUnusedAttributes();}// Compile
this.compile=function(scene,camera){currentRenderState=renderStates.get(scene,camera);currentRenderState.init();scene.traverse(function(object){if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}});currentRenderState.setupLights(camera);var compiled={};scene.traverse(function(object){var material=object.material;if(material){if(Array.isArray(material)){for(var _i3=0;_i3<material.length;_i3++){var material2=material[_i3];if(material2.uuid in compiled===false){initMaterial(material2,scene,object);compiled[material2.uuid]=true;}}}else if(material.uuid in compiled===false){initMaterial(material,scene,object);compiled[material.uuid]=true;}}});};// Animation Loop
var onAnimationFrameCallback=null;function onAnimationFrame(time){if(xr.isPresenting)return;if(onAnimationFrameCallback)onAnimationFrameCallback(time);}var animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);if(typeof window!=='undefined')animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;xr.setAnimationLoop(callback);animation.start();};// Rendering
this.render=function(scene,camera){var renderTarget,forceClear;if(arguments[2]!==undefined){console.warn('THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.');renderTarget=arguments[2];}if(arguments[3]!==undefined){console.warn('THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.');forceClear=arguments[3];}if(!(camera&&camera.isCamera)){console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}if(_isContextLost)return;// reset caching for this frame
_currentGeometryProgram.geometry=null;_currentGeometryProgram.program=null;_currentGeometryProgram.wireframe=false;_currentMaterialId=-1;_currentCamera=null;// update scene graph
if(scene.autoUpdate===true)scene.updateMatrixWorld();// update camera matrices and frustum
if(camera.parent===null)camera.updateMatrixWorld();if(xr.enabled&&xr.isPresenting){camera=xr.getCamera(camera);}//
scene.onBeforeRender(_this,scene,camera,renderTarget||_currentRenderTarget);currentRenderState=renderStates.get(scene,camera);currentRenderState.init();_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromProjectionMatrix(_projScreenMatrix);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=_clipping.init(this.clippingPlanes,_localClippingEnabled,camera);currentRenderList=renderLists.get(scene,camera);currentRenderList.init();projectObject(scene,camera,0,_this.sortObjects);currentRenderList.finish();if(_this.sortObjects===true){currentRenderList.sort(_opaqueSort,_transparentSort);}//
if(_clippingEnabled)_clipping.beginShadows();var shadowsArray=currentRenderState.state.shadowsArray;shadowMap.render(shadowsArray,scene,camera);currentRenderState.setupLights(camera);if(_clippingEnabled)_clipping.endShadows();//
if(this.info.autoReset)this.info.reset();if(renderTarget!==undefined){this.setRenderTarget(renderTarget);}//
background.render(currentRenderList,scene,camera,forceClear);// render scene
var opaqueObjects=currentRenderList.opaque;var transparentObjects=currentRenderList.transparent;if(scene.overrideMaterial){var overrideMaterial=scene.overrideMaterial;if(opaqueObjects.length)renderObjects(opaqueObjects,scene,camera,overrideMaterial);if(transparentObjects.length)renderObjects(transparentObjects,scene,camera,overrideMaterial);}else{// opaque pass (front-to-back order)
if(opaqueObjects.length)renderObjects(opaqueObjects,scene,camera);// transparent pass (back-to-front order)
if(transparentObjects.length)renderObjects(transparentObjects,scene,camera);}//
scene.onAfterRender(_this,scene,camera);//
if(_currentRenderTarget!==null){// Generate mipmap if we're using any kind of mipmap filtering
textures.updateRenderTargetMipmap(_currentRenderTarget);// resolve multisample renderbuffers to a single-sample texture if necessary
textures.updateMultisampleRenderTarget(_currentRenderTarget);}// Ensure depth buffer writing is enabled so it can be cleared on next render
state.buffers.depth.setTest(true);state.buffers.depth.setMask(true);state.buffers.color.setMask(true);state.setPolygonOffset(false);// _gl.finish();
currentRenderList=null;currentRenderState=null;};function projectObject(object,camera,groupOrder,sortObjects){if(object.visible===false)return;var visible=object.layers.test(camera.layers);if(visible){if(object.isGroup){groupOrder=object.renderOrder;}else if(object.isLOD){if(object.autoUpdate===true)object.update(camera);}else if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}var geometry=objects.update(object);var material=object.material;if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}else if(object.isImmediateRenderObject){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);}else if(object.isMesh||object.isLine||object.isPoints){if(object.isSkinnedMesh){// update skeleton only once in a frame
if(object.skeleton.frame!==info.render.frame){object.skeleton.update();object.skeleton.frame=info.render.frame;}}if(!object.frustumCulled||_frustum.intersectsObject(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}var geometry=objects.update(object);var material=object.material;if(Array.isArray(material)){var groups=geometry.groups;for(var i=0,l=groups.length;i<l;i++){var group=groups[i];var groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group);}}}else if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}}var children=object.children;for(var i=0,l=children.length;i<l;i++){projectObject(children[i],camera,groupOrder,sortObjects);}}function renderObjects(renderList,scene,camera,overrideMaterial){for(var i=0,l=renderList.length;i<l;i++){var renderItem=renderList[i];var object=renderItem.object;var geometry=renderItem.geometry;var material=overrideMaterial===undefined?renderItem.material:overrideMaterial;var group=renderItem.group;if(camera.isArrayCamera){_currentArrayCamera=camera;var cameras=camera.cameras;for(var j=0,jl=cameras.length;j<jl;j++){var camera2=cameras[j];if(object.layers.test(camera2.layers)){state.viewport(_currentViewport.copy(camera2.viewport));currentRenderState.setupLights(camera2);renderObject(object,scene,camera2,geometry,material,group);}}}else{_currentArrayCamera=null;renderObject(object,scene,camera,geometry,material,group);}}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);currentRenderState=renderStates.get(scene,_currentArrayCamera||camera);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);if(object.isImmediateRenderObject){var program=setProgram(camera,scene,material,object);state.setMaterial(material);_currentGeometryProgram.geometry=null;_currentGeometryProgram.program=null;_currentGeometryProgram.wireframe=false;renderObjectImmediate(object,program);}else{_this.renderBufferDirect(camera,scene,geometry,material,object,group);}object.onAfterRender(_this,scene,camera,geometry,material,group);currentRenderState=renderStates.get(scene,_currentArrayCamera||camera);}function initMaterial(material,scene,object){var materialProperties=properties.get(material);var lights=currentRenderState.state.lights;var shadowsArray=currentRenderState.state.shadowsArray;var lightsStateVersion=lights.state.version;var parameters=programCache.getParameters(material,lights.state,shadowsArray,scene,_clipping.numPlanes,_clipping.numIntersection,object);var programCacheKey=programCache.getProgramCacheKey(parameters);var program=materialProperties.program;var programChange=true;if(program===undefined){// new material
material.addEventListener('dispose',onMaterialDispose);}else if(program.cacheKey!==programCacheKey){// changed glsl or parameters
releaseMaterialProgramReference(material);}else if(materialProperties.lightsStateVersion!==lightsStateVersion){materialProperties.lightsStateVersion=lightsStateVersion;programChange=false;}else if(parameters.shaderID!==undefined){// same glsl and uniform list
return;}else{// only rebuild uniform list
programChange=false;}if(programChange){program=programCache.acquireProgram(parameters,programCacheKey);materialProperties.program=program;materialProperties.uniforms=parameters.uniforms;materialProperties.outputEncoding=parameters.outputEncoding;material.program=program;}var programAttributes=program.getAttributes();if(material.morphTargets){material.numSupportedMorphTargets=0;for(var i=0;i<_this.maxMorphTargets;i++){if(programAttributes['morphTarget'+i]>=0){material.numSupportedMorphTargets++;}}}if(material.morphNormals){material.numSupportedMorphNormals=0;for(var i=0;i<_this.maxMorphNormals;i++){if(programAttributes['morphNormal'+i]>=0){material.numSupportedMorphNormals++;}}}var uniforms=materialProperties.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||material.clipping===true){materialProperties.numClippingPlanes=_clipping.numPlanes;materialProperties.numIntersection=_clipping.numIntersection;uniforms.clippingPlanes=_clipping.uniform;}materialProperties.environment=material.isMeshStandardMaterial?scene.environment:null;materialProperties.fog=scene.fog;// store the light setup it was created for
materialProperties.needsLights=materialNeedsLights(material);materialProperties.lightsStateVersion=lightsStateVersion;if(materialProperties.needsLights){// wire up the material to this renderer's lighting state
uniforms.ambientLightColor.value=lights.state.ambient;uniforms.lightProbe.value=lights.state.probe;uniforms.directionalLights.value=lights.state.directional;uniforms.directionalLightShadows.value=lights.state.directionalShadow;uniforms.spotLights.value=lights.state.spot;uniforms.spotLightShadows.value=lights.state.spotShadow;uniforms.rectAreaLights.value=lights.state.rectArea;uniforms.pointLights.value=lights.state.point;uniforms.pointLightShadows.value=lights.state.pointShadow;uniforms.hemisphereLights.value=lights.state.hemi;uniforms.directionalShadowMap.value=lights.state.directionalShadowMap;uniforms.directionalShadowMatrix.value=lights.state.directionalShadowMatrix;uniforms.spotShadowMap.value=lights.state.spotShadowMap;uniforms.spotShadowMatrix.value=lights.state.spotShadowMatrix;uniforms.pointShadowMap.value=lights.state.pointShadowMap;uniforms.pointShadowMatrix.value=lights.state.pointShadowMatrix;// TODO (abelnation): add area lights shadow info to uniforms
}var progUniforms=materialProperties.program.getUniforms(),uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,uniforms);materialProperties.uniformsList=uniformsList;}function setProgram(camera,scene,material,object){textures.resetTextureUnits();var fog=scene.fog;var environment=material.isMeshStandardMaterial?scene.environment:null;var encoding=_currentRenderTarget===null?_this.outputEncoding:_currentRenderTarget.texture.encoding;var materialProperties=properties.get(material);var lights=currentRenderState.state.lights;if(_clippingEnabled){if(_localClippingEnabled||camera!==_currentCamera){var useCache=camera===_currentCamera&&material.id===_currentMaterialId;// we might want to call this function with some ClippingGroup
// object instead of the material, once it becomes feasible
// (#8465, #8379)
_clipping.setState(material.clippingPlanes,material.clipIntersection,material.clipShadows,camera,materialProperties,useCache);}}if(material.version===materialProperties.__version){if(materialProperties.program===undefined){initMaterial(material,scene,object);}else if(material.fog&&materialProperties.fog!==fog){initMaterial(material,scene,object);}else if(materialProperties.environment!==environment){initMaterial(material,scene,object);}else if(materialProperties.needsLights&&materialProperties.lightsStateVersion!==lights.state.version){initMaterial(material,scene,object);}else if(materialProperties.numClippingPlanes!==undefined&&(materialProperties.numClippingPlanes!==_clipping.numPlanes||materialProperties.numIntersection!==_clipping.numIntersection)){initMaterial(material,scene,object);}else if(materialProperties.outputEncoding!==encoding){initMaterial(material,scene,object);}}else{initMaterial(material,scene,object);materialProperties.__version=material.version;}var refreshProgram=false;var refreshMaterial=false;var refreshLights=false;var program=materialProperties.program,p_uniforms=program.getUniforms(),m_uniforms=materialProperties.uniforms;if(state.useProgram(program.program)){refreshProgram=true;refreshMaterial=true;refreshLights=true;}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(refreshProgram||_currentCamera!==camera){p_uniforms.setValue(_gl,'projectionMatrix',camera.projectionMatrix);if(capabilities.logarithmicDepthBuffer){p_uniforms.setValue(_gl,'logDepthBufFC',2.0/(Math.log(camera.far+1.0)/Math.LN2));}if(_currentCamera!==camera){_currentCamera=camera;// lighting uniforms depend on the camera so enforce an update
// now, in case this material supports lights - or later, when
// the next material that does gets activated:
refreshMaterial=true;// set to true on material change
refreshLights=true;// remains set until update done
}// load material specific uniforms
// (shader material also gets them for the sake of genericity)
if(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshStandardMaterial||material.envMap){var uCamPos=p_uniforms.map.cameraPosition;if(uCamPos!==undefined){uCamPos.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));}}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial){p_uniforms.setValue(_gl,'isOrthographic',camera.isOrthographicCamera===true);}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.skinning){p_uniforms.setValue(_gl,'viewMatrix',camera.matrixWorldInverse);}}// skinning uniforms must be set even if material didn't change
// auto-setting of texture unit for bone texture must go before other textures
// otherwise textures used for skinning can take over texture units reserved for other material textures
if(material.skinning){p_uniforms.setOptional(_gl,object,'bindMatrix');p_uniforms.setOptional(_gl,object,'bindMatrixInverse');var skeleton=object.skeleton;if(skeleton){var bones=skeleton.bones;if(capabilities.floatVertexTextures){if(skeleton.boneTexture===undefined){// layout (1 matrix = 4 pixels)
//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)
var size=Math.sqrt(bones.length*4);// 4 pixels needed for 1 matrix
size=MathUtils.ceilPowerOfTwo(size);size=Math.max(size,4);var boneMatrices=new Float32Array(size*size*4);// 4 floats per RGBA pixel
boneMatrices.set(skeleton.boneMatrices);// copy current values
var boneTexture=new DataTexture(boneMatrices,size,size,RGBAFormat,FloatType$1);skeleton.boneMatrices=boneMatrices;skeleton.boneTexture=boneTexture;skeleton.boneTextureSize=size;}p_uniforms.setValue(_gl,'boneTexture',skeleton.boneTexture,textures);p_uniforms.setValue(_gl,'boneTextureSize',skeleton.boneTextureSize);}else{p_uniforms.setOptional(_gl,skeleton,'boneMatrices');}}}if(refreshMaterial||materialProperties.receiveShadow!==object.receiveShadow){materialProperties.receiveShadow=object.receiveShadow;p_uniforms.setValue(_gl,'receiveShadow',object.receiveShadow);}if(refreshMaterial){p_uniforms.setValue(_gl,'toneMappingExposure',_this.toneMappingExposure);p_uniforms.setValue(_gl,'toneMappingWhitePoint',_this.toneMappingWhitePoint);if(materialProperties.needsLights){// the current material requires lighting info
// note: all lighting uniforms are always set correctly
// they simply reference the renderer's state for their
// values
//
// use the current material's .needsUpdate flags to set
// the GL state when required
markUniformsLightsNeedsUpdate(m_uniforms,refreshLights);}// refresh uniforms common to several materials
if(fog&&material.fog){materials.refreshFogUniforms(m_uniforms,fog);}materials.refreshMaterialUniforms(m_uniforms,material,environment,_pixelRatio,_height);// RectAreaLight Texture
// TODO (mrdoob): Find a nicer implementation
if(m_uniforms.ltc_1!==undefined)m_uniforms.ltc_1.value=UniformsLib.LTC_1;if(m_uniforms.ltc_2!==undefined)m_uniforms.ltc_2.value=UniformsLib.LTC_2;WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);}if(material.isShaderMaterial&&material.uniformsNeedUpdate===true){WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);material.uniformsNeedUpdate=false;}if(material.isSpriteMaterial){p_uniforms.setValue(_gl,'center',object.center);}// common matrices
p_uniforms.setValue(_gl,'modelViewMatrix',object.modelViewMatrix);p_uniforms.setValue(_gl,'normalMatrix',object.normalMatrix);p_uniforms.setValue(_gl,'modelMatrix',object.matrixWorld);return program;}// If uniforms are marked as clean, they don't need to be loaded to the GPU.
function markUniformsLightsNeedsUpdate(uniforms,value){uniforms.ambientLightColor.needsUpdate=value;uniforms.lightProbe.needsUpdate=value;uniforms.directionalLights.needsUpdate=value;uniforms.directionalLightShadows.needsUpdate=value;uniforms.pointLights.needsUpdate=value;uniforms.pointLightShadows.needsUpdate=value;uniforms.spotLights.needsUpdate=value;uniforms.spotLightShadows.needsUpdate=value;uniforms.rectAreaLights.needsUpdate=value;uniforms.hemisphereLights.needsUpdate=value;}function materialNeedsLights(material){return material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&material.lights===true;}//
this.setFramebuffer=function(value){if(_framebuffer!==value&&_currentRenderTarget===null)_gl.bindFramebuffer(36160,value);_framebuffer=value;};this.getActiveCubeFace=function(){return _currentActiveCubeFace;};this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel;};this.getRenderTarget=function(){return _currentRenderTarget;};this.setRenderTarget=function(renderTarget,activeCubeFace,activeMipmapLevel){_currentRenderTarget=renderTarget;_currentActiveCubeFace=activeCubeFace;_currentActiveMipmapLevel=activeMipmapLevel;if(renderTarget&&properties.get(renderTarget).__webglFramebuffer===undefined){textures.setupRenderTarget(renderTarget);}var framebuffer=_framebuffer;var isCube=false;if(renderTarget){var __webglFramebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget){framebuffer=__webglFramebuffer[activeCubeFace||0];isCube=true;}else if(renderTarget.isWebGLMultisampleRenderTarget){framebuffer=properties.get(renderTarget).__webglMultisampledFramebuffer;}else{framebuffer=__webglFramebuffer;}_currentViewport.copy(renderTarget.viewport);_currentScissor.copy(renderTarget.scissor);_currentScissorTest=renderTarget.scissorTest;}else{_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();_currentScissorTest=_scissorTest;}if(_currentFramebuffer!==framebuffer){_gl.bindFramebuffer(36160,framebuffer);_currentFramebuffer=framebuffer;}state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);if(isCube){var textureProperties=properties.get(renderTarget.texture);_gl.framebufferTexture2D(36160,36064,34069+(activeCubeFace||0),textureProperties.__webglTexture,activeMipmapLevel||0);}};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex){if(!(renderTarget&&renderTarget.isWebGLRenderTarget)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');return;}var framebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget&&activeCubeFaceIndex!==undefined){framebuffer=framebuffer[activeCubeFaceIndex];}if(framebuffer){var restore=false;if(framebuffer!==_currentFramebuffer){_gl.bindFramebuffer(36160,framebuffer);restore=true;}try{var texture=renderTarget.texture;var textureFormat=texture.format;var textureType=texture.type;if(textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');return;}if(textureType!==UnsignedByteType&&utils.convert(textureType)!==_gl.getParameter(35738)&&// IE11, Edge and Chrome Mac < 52 (#9513)
!(textureType===FloatType$1&&(capabilities.isWebGL2||extensions.get('OES_texture_float')||extensions.get('WEBGL_color_buffer_float')))&&// Chrome Mac >= 52 and Firefox
!(textureType===HalfFloatType&&(capabilities.isWebGL2?extensions.get('EXT_color_buffer_float'):extensions.get('EXT_color_buffer_half_float')))){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');return;}if(_gl.checkFramebufferStatus(36160)===36053){// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)
if(x>=0&&x<=renderTarget.width-width&&y>=0&&y<=renderTarget.height-height){_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer);}}else{console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');}}finally{if(restore){_gl.bindFramebuffer(36160,_currentFramebuffer);}}}};this.copyFramebufferToTexture=function(position,texture,level){if(level===undefined)level=0;var levelScale=Math.pow(2,-level);var width=Math.floor(texture.image.width*levelScale);var height=Math.floor(texture.image.height*levelScale);var glFormat=utils.convert(texture.format);textures.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level,glFormat,position.x,position.y,width,height,0);state.unbindTexture();};this.copyTextureToTexture=function(position,srcTexture,dstTexture,level){if(level===undefined)level=0;var width=srcTexture.image.width;var height=srcTexture.image.height;var glFormat=utils.convert(dstTexture.format);var glType=utils.convert(dstTexture.type);textures.setTexture2D(dstTexture,0);if(srcTexture.isDataTexture){_gl.texSubImage2D(3553,level,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data);}else{if(srcTexture.isCompressedTexture){_gl.compressedTexSubImage2D(3553,level,position.x,position.y,srcTexture.mipmaps[0].width,srcTexture.mipmaps[0].height,glFormat,srcTexture.mipmaps[0].data);}else{_gl.texSubImage2D(3553,level,position.x,position.y,glFormat,glType,srcTexture.image);}}// Generate mipmaps only when copying level 0
if(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(3553);state.unbindTexture();};this.initTexture=function(texture){textures.setTexture2D(texture,0);state.unbindTexture();};if(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef
}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */function FogExp2(color,density){this.name='';this.color=new Color(color);this.density=density!==undefined?density:0.00025;}Object.assign(FogExp2.prototype,{isFogExp2:true,clone:function clone(){return new FogExp2(this.color,this.density);},toJSON:function toJSON()/* meta */{return{type:'FogExp2',color:this.color.getHex(),density:this.density};}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */function Fog(color,near,far){this.name='';this.color=new Color(color);this.near=near!==undefined?near:1;this.far=far!==undefined?far:1000;}Object.assign(Fog.prototype,{isFog:true,clone:function clone(){return new Fog(this.color,this.near,this.far);},toJSON:function toJSON()/* meta */{return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far};}});/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */function InterleavedBuffer(array,stride){this.array=array;this.stride=stride;this.count=array!==undefined?array.length/stride:0;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;}Object.defineProperty(InterleavedBuffer.prototype,'needsUpdate',{set:function set(value){if(value===true)this.version++;}});Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:true,onUploadCallback:function onUploadCallback(){},setUsage:function setUsage(value){this.usage=value;return this;},copy:function copy(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.usage=source.usage;return this;},copyAt:function copyAt(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(var i=0,l=this.stride;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;},set:function set(value,offset){if(offset===undefined)offset=0;this.array.set(value,offset);return this;},clone:function clone(){return new this.constructor().copy(this);},onUpload:function onUpload(callback){this.onUploadCallback=callback;return this;}});/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */var _vector$6=new Vector3$1();function InterleavedBufferAttribute(interleavedBuffer,itemSize,offset,normalized){this.name='';this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=normalized===true;}Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function get(){return this.data.count;}},array:{get:function get(){return this.data.array;}}});Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:true,applyMatrix4:function applyMatrix4(m){for(var i=0,l=this.data.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.applyMatrix4(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;},setX:function setX(index,x){this.data.array[index*this.data.stride+this.offset]=x;return this;},setY:function setY(index,y){this.data.array[index*this.data.stride+this.offset+1]=y;return this;},setZ:function setZ(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this;},setW:function setW(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this;},getX:function getX(index){return this.data.array[index*this.data.stride+this.offset];},getY:function getY(index){return this.data.array[index*this.data.stride+this.offset+1];},getZ:function getZ(index){return this.data.array[index*this.data.stride+this.offset+2];},getW:function getW(index){return this.data.array[index*this.data.stride+this.offset+3];},setXY:function setXY(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this;},setXYZ:function setXYZ(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this;},setXYZW:function setXYZW(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this;},clone:function clone(){console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');var array=[];for(var i=0;i<this.count;i++){var index=i*this.data.stride+this.offset;for(var j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}return new BufferAttribute(new this.array.constructor(array),this.itemSize,this.normalized);},toJSON:function toJSON(){console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');var array=[];for(var i=0;i<this.count;i++){var index=i*this.data.stride+this.offset;for(var j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}// deinterleave data and save it as an ordinary buffer attribute for now
return{itemSize:this.itemSize,type:this.array.constructor.name,array:array,normalized:this.normalized};}});/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  map: new THREE.Texture( <Image> ),
 *  alphaMap: new THREE.Texture( <Image> ),
 *  rotation: <float>,
 *  sizeAttenuation: <bool>
 * }
 */function SpriteMaterial(parameters){Material.call(this);this.type='SpriteMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=true;this.transparent=true;this.setValues(parameters);}SpriteMaterial.prototype=Object.create(Material.prototype);SpriteMaterial.prototype.constructor=SpriteMaterial;SpriteMaterial.prototype.isSpriteMaterial=true;SpriteMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this;};/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */var _geometry;var _intersectPoint=new Vector3$1();var _worldScale=new Vector3$1();var _mvPosition=new Vector3$1();var _alignedPosition=new Vector2();var _rotatedPosition=new Vector2();var _viewWorldMatrix=new Matrix4();var _vA$1=new Vector3$1();var _vB$1=new Vector3$1();var _vC$1=new Vector3$1();var _uvA$1=new Vector2();var _uvB$1=new Vector2();var _uvC$1=new Vector2();function Sprite(material){Object3D.call(this);this.type='Sprite';if(_geometry===undefined){_geometry=new BufferGeometry();var float32Array=new Float32Array([-0.5,-0.5,0,0,0,0.5,-0.5,0,1,0,0.5,0.5,0,1,1,-0.5,0.5,0,0,1]);var interleavedBuffer=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,1,2,0,2,3]);_geometry.setAttribute('position',new InterleavedBufferAttribute(interleavedBuffer,3,0,false));_geometry.setAttribute('uv',new InterleavedBufferAttribute(interleavedBuffer,2,3,false));}this.geometry=_geometry;this.material=material!==undefined?material:new SpriteMaterial();this.center=new Vector2(0.5,0.5);}Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:true,raycast:function raycast(raycaster,intersects){if(raycaster.camera===null){console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.');}_worldScale.setFromMatrixScale(this.matrixWorld);_viewWorldMatrix.copy(raycaster.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld);_mvPosition.setFromMatrixPosition(this.modelViewMatrix);if(raycaster.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){_worldScale.multiplyScalar(-_mvPosition.z);}var rotation=this.material.rotation;var sin,cos;if(rotation!==0){cos=Math.cos(rotation);sin=Math.sin(rotation);}var center=this.center;transformVertex(_vA$1.set(-0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vB$1.set(0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vC$1.set(0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvA$1.set(0,0);_uvB$1.set(1,0);_uvC$1.set(1,1);// check first triangle
var intersect=raycaster.ray.intersectTriangle(_vA$1,_vB$1,_vC$1,false,_intersectPoint);if(intersect===null){// check second triangle
transformVertex(_vB$1.set(-0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvB$1.set(0,1);intersect=raycaster.ray.intersectTriangle(_vA$1,_vC$1,_vB$1,false,_intersectPoint);if(intersect===null){return;}}var distance=raycaster.ray.origin.distanceTo(_intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2()),face:null,object:this});},clone:function clone(){return new this.constructor(this.material).copy(this);},copy:function copy(source){Object3D.prototype.copy.call(this,source);if(source.center!==undefined)this.center.copy(source.center);return this;}});function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){// compute position in camera space
_alignedPosition.subVectors(vertexPosition,center).addScalar(0.5).multiply(scale);// to check if rotation is not zero
if(sin!==undefined){_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y;_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y;}else{_rotatedPosition.copy(_alignedPosition);}vertexPosition.copy(mvPosition);vertexPosition.x+=_rotatedPosition.x;vertexPosition.y+=_rotatedPosition.y;// transform to world space
vertexPosition.applyMatrix4(_viewWorldMatrix);}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */var _v1$4=new Vector3$1();var _v2$2=new Vector3$1();function LOD(){Object3D.call(this);this._currentLevel=0;this.type='LOD';Object.defineProperties(this,{levels:{enumerable:true,value:[]}});this.autoUpdate=true;}LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,isLOD:true,copy:function copy(source){Object3D.prototype.copy.call(this,source,false);var levels=source.levels;for(var i=0,l=levels.length;i<l;i++){var level=levels[i];this.addLevel(level.object.clone(),level.distance);}this.autoUpdate=source.autoUpdate;return this;},addLevel:function addLevel(object,distance){if(distance===undefined)distance=0;distance=Math.abs(distance);var levels=this.levels;for(var l=0;l<levels.length;l++){if(distance<levels[l].distance){break;}}levels.splice(l,0,{distance:distance,object:object});this.add(object);return this;},getCurrentLevel:function getCurrentLevel(){return this._currentLevel;},getObjectForDistance:function getObjectForDistance(distance){var levels=this.levels;if(levels.length>0){for(var i=1,l=levels.length;i<l;i++){if(distance<levels[i].distance){break;}}return levels[i-1].object;}return null;},raycast:function raycast(raycaster,intersects){var levels=this.levels;if(levels.length>0){_v1$4.setFromMatrixPosition(this.matrixWorld);var distance=raycaster.ray.origin.distanceTo(_v1$4);this.getObjectForDistance(distance).raycast(raycaster,intersects);}},update:function update(camera){var levels=this.levels;if(levels.length>1){_v1$4.setFromMatrixPosition(camera.matrixWorld);_v2$2.setFromMatrixPosition(this.matrixWorld);var distance=_v1$4.distanceTo(_v2$2)/camera.zoom;levels[0].object.visible=true;for(var i=1,l=levels.length;i<l;i++){if(distance>=levels[i].distance){levels[i-1].object.visible=false;levels[i].object.visible=true;}else{break;}}this._currentLevel=i-1;for(;i<l;i++){levels[i].object.visible=false;}}},toJSON:function toJSON(meta){var data=Object3D.prototype.toJSON.call(this,meta);if(this.autoUpdate===false)data.object.autoUpdate=false;data.object.levels=[];var levels=this.levels;for(var i=0,l=levels.length;i<l;i++){var level=levels[i];data.object.levels.push({object:level.object.uuid,distance:level.distance});}return data;}});/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author ikerr / http://verold.com
 */function SkinnedMesh(geometry,material){if(geometry&&geometry.isGeometry){console.error('THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}Mesh.call(this,geometry,material);this.type='SkinnedMesh';this.bindMode='attached';this.bindMatrix=new Matrix4();this.bindMatrixInverse=new Matrix4();}SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:true,bind:function bind(skeleton,bindMatrix){this.skeleton=skeleton;if(bindMatrix===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();bindMatrix=this.matrixWorld;}this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.getInverse(bindMatrix);},pose:function pose(){this.skeleton.pose();},normalizeSkinWeights:function normalizeSkinWeights(){var vector=new Vector4();var skinWeight=this.geometry.attributes.skinWeight;for(var i=0,l=skinWeight.count;i<l;i++){vector.x=skinWeight.getX(i);vector.y=skinWeight.getY(i);vector.z=skinWeight.getZ(i);vector.w=skinWeight.getW(i);var scale=1.0/vector.manhattanLength();if(scale!==Infinity){vector.multiplyScalar(scale);}else{vector.set(1,0,0,0);// do something reasonable
}skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w);}},updateMatrixWorld:function updateMatrixWorld(force){Mesh.prototype.updateMatrixWorld.call(this,force);if(this.bindMode==='attached'){this.bindMatrixInverse.getInverse(this.matrixWorld);}else if(this.bindMode==='detached'){this.bindMatrixInverse.getInverse(this.bindMatrix);}else{console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode);}},clone:function clone(){return new this.constructor(this.geometry,this.material).copy(this);},boneTransform:function(){var basePosition=new Vector3$1();var skinIndex=new Vector4();var skinWeight=new Vector4();var vector=new Vector3$1();var matrix=new Matrix4();return function(index,target){var skeleton=this.skeleton;var geometry=this.geometry;skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index);skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,index);basePosition.fromBufferAttribute(geometry.attributes.position,index).applyMatrix4(this.bindMatrix);target.set(0,0,0);for(var i=0;i<4;i++){var weight=skinWeight.getComponent(i);if(weight!==0){var boneIndex=skinIndex.getComponent(i);matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]);target.addScaledVector(vector.copy(basePosition).applyMatrix4(matrix),weight);}}return target.applyMatrix4(this.bindMatrixInverse);};}()});/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author michael guerrero / http://realitymeltdown.com
 * @author ikerr / http://verold.com
 */var _offsetMatrix=new Matrix4();var _identityMatrix=new Matrix4();function Skeleton(bones,boneInverses){// copy the bone array
bones=bones||[];this.bones=bones.slice(0);this.boneMatrices=new Float32Array(this.bones.length*16);this.frame=-1;// use the supplied bone inverses or calculate the inverses
if(boneInverses===undefined){this.calculateInverses();}else{if(this.bones.length===boneInverses.length){this.boneInverses=boneInverses.slice(0);}else{console.warn('THREE.Skeleton boneInverses is the wrong length.');this.boneInverses=[];for(var i=0,il=this.bones.length;i<il;i++){this.boneInverses.push(new Matrix4());}}}}Object.assign(Skeleton.prototype,{calculateInverses:function calculateInverses(){this.boneInverses=[];for(var i=0,il=this.bones.length;i<il;i++){var inverse=new Matrix4();if(this.bones[i]){inverse.getInverse(this.bones[i].matrixWorld);}this.boneInverses.push(inverse);}},pose:function pose(){var bone,i,il;// recover the bind-time world matrices
for(i=0,il=this.bones.length;i<il;i++){bone=this.bones[i];if(bone){bone.matrixWorld.getInverse(this.boneInverses[i]);}}// compute the local matrices, positions, rotations and scales
for(i=0,il=this.bones.length;i<il;i++){bone=this.bones[i];if(bone){if(bone.parent&&bone.parent.isBone){bone.matrix.getInverse(bone.parent.matrixWorld);bone.matrix.multiply(bone.matrixWorld);}else{bone.matrix.copy(bone.matrixWorld);}bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);}}},update:function update(){var bones=this.bones;var boneInverses=this.boneInverses;var boneMatrices=this.boneMatrices;var boneTexture=this.boneTexture;// flatten bone matrices to array
for(var i=0,il=bones.length;i<il;i++){// compute the offset between the current and the original transform
var matrix=bones[i]?bones[i].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(matrix,boneInverses[i]);_offsetMatrix.toArray(boneMatrices,i*16);}if(boneTexture!==undefined){boneTexture.needsUpdate=true;}},clone:function clone(){return new Skeleton(this.bones,this.boneInverses);},getBoneByName:function getBoneByName(name){for(var i=0,il=this.bones.length;i<il;i++){var bone=this.bones[i];if(bone.name===name){return bone;}}return undefined;},dispose:function dispose(){if(this.boneTexture){this.boneTexture.dispose();this.boneTexture=undefined;}}});/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author ikerr / http://verold.com
 */function Bone(){Object3D.call(this);this.type='Bone';}Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:true});/**
 * @author mrdoob / http://mrdoob.com/
 */var _instanceLocalMatrix=new Matrix4();var _instanceWorldMatrix=new Matrix4();var _instanceIntersects=[];var _mesh=new Mesh();function InstancedMesh(geometry,material,count){Mesh.call(this,geometry,material);this.instanceMatrix=new BufferAttribute(new Float32Array(count*16),16);this.count=count;this.frustumCulled=false;}InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:true,getMatrixAt:function getMatrixAt(index,matrix){matrix.fromArray(this.instanceMatrix.array,index*16);},raycast:function raycast(raycaster,intersects){var matrixWorld=this.matrixWorld;var raycastTimes=this.count;_mesh.geometry=this.geometry;_mesh.material=this.material;if(_mesh.material===undefined)return;for(var instanceId=0;instanceId<raycastTimes;instanceId++){// calculate the world matrix for each instance
this.getMatrixAt(instanceId,_instanceLocalMatrix);_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix);// the mesh represents this single instance
_mesh.matrixWorld=_instanceWorldMatrix;_mesh.raycast(raycaster,_instanceIntersects);// process the result of raycast
for(var i=0,l=_instanceIntersects.length;i<l;i++){var intersect=_instanceIntersects[i];intersect.instanceId=instanceId;intersect.object=this;intersects.push(intersect);}_instanceIntersects.length=0;}},setMatrixAt:function setMatrixAt(index,matrix){matrix.toArray(this.instanceMatrix.array,index*16);},updateMorphTargets:function updateMorphTargets(){}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *  linecap: "round",
 *  linejoin: "round"
 * }
 */function LineBasicMaterial(parameters){Material.call(this);this.type='LineBasicMaterial';this.color=new Color(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.morphTargets=false;this.setValues(parameters);}LineBasicMaterial.prototype=Object.create(Material.prototype);LineBasicMaterial.prototype.constructor=LineBasicMaterial;LineBasicMaterial.prototype.isLineBasicMaterial=true;LineBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;this.morphTargets=source.morphTargets;return this;};/**
 * @author mrdoob / http://mrdoob.com/
 */var _start=new Vector3$1();var _end=new Vector3$1();var _inverseMatrix$1=new Matrix4();var _ray$1=new Ray();var _sphere$2=new Sphere();function Line(geometry,material,mode){if(mode===1){console.error('THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.');}Object3D.call(this);this.type='Line';this.geometry=geometry!==undefined?geometry:new BufferGeometry();this.material=material!==undefined?material:new LineBasicMaterial();this.updateMorphTargets();}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:true,computeLineDistances:function computeLineDistances(){var geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry
if(geometry.index===null){var positionAttribute=geometry.attributes.position;var lineDistances=[0];for(var i=1,l=positionAttribute.count;i<l;i++){_start.fromBufferAttribute(positionAttribute,i-1);_end.fromBufferAttribute(positionAttribute,i);lineDistances[i]=lineDistances[i-1];lineDistances[i]+=_start.distanceTo(_end);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){var vertices=geometry.vertices;var lineDistances=geometry.lineDistances;lineDistances[0]=0;for(var i=1,l=vertices.length;i<l;i++){lineDistances[i]=lineDistances[i-1];lineDistances[i]+=vertices[i-1].distanceTo(vertices[i]);}}return this;},raycast:function raycast(raycaster,intersects){var geometry=this.geometry;var matrixWorld=this.matrixWorld;var threshold=raycaster.params.Line.threshold;// Checking boundingSphere distance to ray
if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$2.copy(geometry.boundingSphere);_sphere$2.applyMatrix4(matrixWorld);_sphere$2.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere$2)===false)return;//
_inverseMatrix$1.getInverse(matrixWorld);_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);var localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);var localThresholdSq=localThreshold*localThreshold;var vStart=new Vector3$1();var vEnd=new Vector3$1();var interSegment=new Vector3$1();var interRay=new Vector3$1();var step=this&&this.isLineSegments?2:1;if(geometry.isBufferGeometry){var index=geometry.index;var attributes=geometry.attributes;var positions=attributes.position.array;if(index!==null){var indices=index.array;for(var i=0,l=indices.length-1;i<l;i+=step){var a=indices[i];var b=indices[i+1];vStart.fromArray(positions,a*3);vEnd.fromArray(positions,b*3);var distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation
var distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}else{for(var i=0,l=positions.length/3-1;i<l;i+=step){vStart.fromArray(positions,3*i);vEnd.fromArray(positions,3*i+3);var distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation
var distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}}else if(geometry.isGeometry){var vertices=geometry.vertices;var nbVertices=vertices.length;for(var i=0;i<nbVertices-1;i+=step){var distSq=_ray$1.distanceSqToSegment(vertices[i],vertices[i+1],interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation
var distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}},updateMorphTargets:function updateMorphTargets(){var geometry=this.geometry;var m,ml,name;if(geometry.isBufferGeometry){var morphAttributes=geometry.morphAttributes;var keys=Object.keys(morphAttributes);if(keys.length>0){var morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(m=0,ml=morphAttribute.length;m<ml;m++){name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{var morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}},clone:function clone(){return new this.constructor(this.geometry,this.material).copy(this);}});/**
 * @author mrdoob / http://mrdoob.com/
 */var _start$1=new Vector3$1();var _end$1=new Vector3$1();function LineSegments(geometry,material){Line.call(this,geometry,material);this.type='LineSegments';}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:true,computeLineDistances:function computeLineDistances(){var geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry
if(geometry.index===null){var positionAttribute=geometry.attributes.position;var lineDistances=[];for(var i=0,l=positionAttribute.count;i<l;i+=2){_start$1.fromBufferAttribute(positionAttribute,i);_end$1.fromBufferAttribute(positionAttribute,i+1);lineDistances[i]=i===0?0:lineDistances[i-1];lineDistances[i+1]=lineDistances[i]+_start$1.distanceTo(_end$1);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){var vertices=geometry.vertices;var lineDistances=geometry.lineDistances;for(var i=0,l=vertices.length;i<l;i+=2){_start$1.copy(vertices[i]);_end$1.copy(vertices[i+1]);lineDistances[i]=i===0?0:lineDistances[i-1];lineDistances[i+1]=lineDistances[i]+_start$1.distanceTo(_end$1);}}return this;}});/**
 * @author mgreter / http://github.com/mgreter
 */function LineLoop(geometry,material){Line.call(this,geometry,material);this.type='LineLoop';}LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:true});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  size: <float>,
 *  sizeAttenuation: <bool>
 *
 *  morphTargets: <bool>
 * }
 */function PointsMaterial(parameters){Material.call(this);this.type='PointsMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=true;this.morphTargets=false;this.setValues(parameters);}PointsMaterial.prototype=Object.create(Material.prototype);PointsMaterial.prototype.constructor=PointsMaterial;PointsMaterial.prototype.isPointsMaterial=true;PointsMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.morphTargets=source.morphTargets;return this;};/**
 * @author alteredq / http://alteredqualia.com/
 */var _inverseMatrix$2=new Matrix4();var _ray$2=new Ray();var _sphere$3=new Sphere();var _position$1=new Vector3$1();function Points(geometry,material){Object3D.call(this);this.type='Points';this.geometry=geometry!==undefined?geometry:new BufferGeometry();this.material=material!==undefined?material:new PointsMaterial();this.updateMorphTargets();}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:true,raycast:function raycast(raycaster,intersects){var geometry=this.geometry;var matrixWorld=this.matrixWorld;var threshold=raycaster.params.Points.threshold;// Checking boundingSphere distance to ray
if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$3.copy(geometry.boundingSphere);_sphere$3.applyMatrix4(matrixWorld);_sphere$3.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere$3)===false)return;//
_inverseMatrix$2.getInverse(matrixWorld);_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);var localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);var localThresholdSq=localThreshold*localThreshold;if(geometry.isBufferGeometry){var index=geometry.index;var attributes=geometry.attributes;var positions=attributes.position.array;if(index!==null){var indices=index.array;for(var i=0,il=indices.length;i<il;i++){var a=indices[i];_position$1.fromArray(positions,a*3);testPoint(_position$1,a,localThresholdSq,matrixWorld,raycaster,intersects,this);}}else{for(var i=0,l=positions.length/3;i<l;i++){_position$1.fromArray(positions,i*3);testPoint(_position$1,i,localThresholdSq,matrixWorld,raycaster,intersects,this);}}}else{var vertices=geometry.vertices;for(var i=0,l=vertices.length;i<l;i++){testPoint(vertices[i],i,localThresholdSq,matrixWorld,raycaster,intersects,this);}}},updateMorphTargets:function updateMorphTargets(){var geometry=this.geometry;var m,ml,name;if(geometry.isBufferGeometry){var morphAttributes=geometry.morphAttributes;var keys=Object.keys(morphAttributes);if(keys.length>0){var morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(m=0,ml=morphAttribute.length;m<ml;m++){name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{var morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}},clone:function clone(){return new this.constructor(this.geometry,this.material).copy(this);}});function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){var rayPointDistanceSq=_ray$2.distanceSqToPoint(point);if(rayPointDistanceSq<localThresholdSq){var intersectPoint=new Vector3$1();_ray$2.closestPointToPoint(point,intersectPoint);intersectPoint.applyMatrix4(matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint,index:index,face:null,object:object});}}/**
 * @author mrdoob / http://mrdoob.com/
 */function VideoTexture(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.format=format!==undefined?format:RGBFormat;this.minFilter=minFilter!==undefined?minFilter:LinearFilter;this.magFilter=magFilter!==undefined?magFilter:LinearFilter;this.generateMipmaps=false;}VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,isVideoTexture:true,update:function update(){var video=this.image;if(video.readyState>=video.HAVE_CURRENT_DATA){this.needsUpdate=true;}}});/**
 * @author alteredq / http://alteredqualia.com/
 */function CompressedTexture(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={width:width,height:height};this.mipmaps=mipmaps;// no flipping for cube textures
// (also flipping doesn't work for compressed textures )
this.flipY=false;// can't generate mipmaps for compressed textures
// mips must be embedded in DDS files
this.generateMipmaps=false;}CompressedTexture.prototype=Object.create(Texture.prototype);CompressedTexture.prototype.constructor=CompressedTexture;CompressedTexture.prototype.isCompressedTexture=true;/**
 * @author mrdoob / http://mrdoob.com/
 */function CanvasTexture(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.needsUpdate=true;}CanvasTexture.prototype=Object.create(Texture.prototype);CanvasTexture.prototype.constructor=CanvasTexture;CanvasTexture.prototype.isCanvasTexture=true;/**
 * @author Matt DesLauriers / @mattdesl
 * @author atix / arthursilber.de
 */function DepthTexture(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){format=format!==undefined?format:DepthFormat;if(format!==DepthFormat&&format!==DepthStencilFormat){throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');}if(type===undefined&&format===DepthFormat)type=UnsignedShortType;if(type===undefined&&format===DepthStencilFormat)type=UnsignedInt248Type;Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.flipY=false;this.generateMipmaps=false;}DepthTexture.prototype=Object.create(Texture.prototype);DepthTexture.prototype.constructor=DepthTexture;DepthTexture.prototype.isDepthTexture=true;/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */function WireframeGeometry(geometry){BufferGeometry.call(this);this.type='WireframeGeometry';// buffer
var vertices=[];// helper variables
var i,j,l,o,ol;var edge=[0,0],edges={},e,edge1,edge2;var key,keys=['a','b','c'];var vertex;// different logic for Geometry and BufferGeometry
if(geometry&&geometry.isGeometry){// create a data structure that contains all edges without duplicates
var faces=geometry.faces;for(i=0,l=faces.length;i<l;i++){var face=faces[i];for(j=0;j<3;j++){edge1=face[keys[j]];edge2=face[keys[(j+1)%3]];edge[0]=Math.min(edge1,edge2);// sorting prevents duplicates
edge[1]=Math.max(edge1,edge2);key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1]};}}}// generate vertices
for(key in edges){e=edges[key];vertex=geometry.vertices[e.index1];vertices.push(vertex.x,vertex.y,vertex.z);vertex=geometry.vertices[e.index2];vertices.push(vertex.x,vertex.y,vertex.z);}}else if(geometry&&geometry.isBufferGeometry){var position,indices,groups;var group,start,count;var index1,index2;vertex=new Vector3$1();if(geometry.index!==null){// indexed BufferGeometry
position=geometry.attributes.position;indices=geometry.index;groups=geometry.groups;if(groups.length===0){groups=[{start:0,count:indices.count,materialIndex:0}];}// create a data structure that contains all eges without duplicates
for(o=0,ol=groups.length;o<ol;++o){group=groups[o];start=group.start;count=group.count;for(i=start,l=start+count;i<l;i+=3){for(j=0;j<3;j++){edge1=indices.getX(i+j);edge2=indices.getX(i+(j+1)%3);edge[0]=Math.min(edge1,edge2);// sorting prevents duplicates
edge[1]=Math.max(edge1,edge2);key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1]};}}}}// generate vertices
for(key in edges){e=edges[key];vertex.fromBufferAttribute(position,e.index1);vertices.push(vertex.x,vertex.y,vertex.z);vertex.fromBufferAttribute(position,e.index2);vertices.push(vertex.x,vertex.y,vertex.z);}}else{// non-indexed BufferGeometry
position=geometry.attributes.position;for(i=0,l=position.count/3;i<l;i++){for(j=0;j<3;j++){// three edges per triangle, an edge is represented as (index1, index2)
// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)
index1=3*i+j;vertex.fromBufferAttribute(position,index1);vertices.push(vertex.x,vertex.y,vertex.z);index2=3*i+(j+1)%3;vertex.fromBufferAttribute(position,index2);vertices.push(vertex.x,vertex.y,vertex.z);}}}}// build geometry
this.setAttribute('position',new Float32BufferAttribute(vertices,3));}WireframeGeometry.prototype=Object.create(BufferGeometry.prototype);WireframeGeometry.prototype.constructor=WireframeGeometry;/**
 * @author zz85 / https://github.com/zz85
 * @author Mugen87 / https://github.com/Mugen87
 *
 * Parametric Surfaces Geometry
 * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html
 */ // ParametricGeometry
function ParametricGeometry(func,slices,stacks){Geometry.call(this);this.type='ParametricGeometry';this.parameters={func:func,slices:slices,stacks:stacks};this.fromBufferGeometry(new ParametricBufferGeometry(func,slices,stacks));this.mergeVertices();}ParametricGeometry.prototype=Object.create(Geometry.prototype);ParametricGeometry.prototype.constructor=ParametricGeometry;// ParametricBufferGeometry
function ParametricBufferGeometry(func,slices,stacks){BufferGeometry.call(this);this.type='ParametricBufferGeometry';this.parameters={func:func,slices:slices,stacks:stacks};// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];var EPS=0.00001;var normal=new Vector3$1();var p0=new Vector3$1(),p1=new Vector3$1();var pu=new Vector3$1(),pv=new Vector3$1();var i,j;if(func.length<3){console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');}// generate vertices, normals and uvs
var sliceCount=slices+1;for(i=0;i<=stacks;i++){var v=i/stacks;for(j=0;j<=slices;j++){var u=j/slices;// vertex
func(u,v,p0);vertices.push(p0.x,p0.y,p0.z);// normal
// approximate tangent vectors via finite differences
if(u-EPS>=0){func(u-EPS,v,p1);pu.subVectors(p0,p1);}else{func(u+EPS,v,p1);pu.subVectors(p1,p0);}if(v-EPS>=0){func(u,v-EPS,p1);pv.subVectors(p0,p1);}else{func(u,v+EPS,p1);pv.subVectors(p1,p0);}// cross product of tangent vectors returns surface normal
normal.crossVectors(pu,pv).normalize();normals.push(normal.x,normal.y,normal.z);// uv
uvs.push(u,v);}}// generate indices
for(i=0;i<stacks;i++){for(j=0;j<slices;j++){var a=i*sliceCount+j;var b=i*sliceCount+j+1;var c=(i+1)*sliceCount+j+1;var d=(i+1)*sliceCount+j;// faces one and two
indices.push(a,b,d);indices.push(b,c,d);}}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ParametricBufferGeometry.prototype.constructor=ParametricBufferGeometry;/**
 * @author clockworkgeek / https://github.com/clockworkgeek
 * @author timothypratley / https://github.com/timothypratley
 * @author WestLangley / http://github.com/WestLangley
 * @author Mugen87 / https://github.com/Mugen87
 */ // PolyhedronGeometry
function PolyhedronGeometry(vertices,indices,radius,detail){Geometry.call(this);this.type='PolyhedronGeometry';this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices,indices,radius,detail));this.mergeVertices();}PolyhedronGeometry.prototype=Object.create(Geometry.prototype);PolyhedronGeometry.prototype.constructor=PolyhedronGeometry;// PolyhedronBufferGeometry
function PolyhedronBufferGeometry(vertices,indices,radius,detail){BufferGeometry.call(this);this.type='PolyhedronBufferGeometry';this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};radius=radius||1;detail=detail||0;// default buffer data
var vertexBuffer=[];var uvBuffer=[];// the subdivision creates the vertex buffer data
subdivide(detail);// all vertices should lie on a conceptual sphere with a given radius
applyRadius(radius);// finally, create the uv data
generateUVs();// build non-indexed geometry
this.setAttribute('position',new Float32BufferAttribute(vertexBuffer,3));this.setAttribute('normal',new Float32BufferAttribute(vertexBuffer.slice(),3));this.setAttribute('uv',new Float32BufferAttribute(uvBuffer,2));if(detail===0){this.computeVertexNormals();// flat normals
}else{this.normalizeNormals();// smooth normals
}// helper functions
function subdivide(detail){var a=new Vector3$1();var b=new Vector3$1();var c=new Vector3$1();// iterate over all faces and apply a subdivison with the given detail value
for(var i=0;i<indices.length;i+=3){// get the vertices of the face
getVertexByIndex(indices[i+0],a);getVertexByIndex(indices[i+1],b);getVertexByIndex(indices[i+2],c);// perform subdivision
subdivideFace(a,b,c,detail);}}function subdivideFace(a,b,c,detail){var cols=Math.pow(2,detail);// we use this multidimensional array as a data structure for creating the subdivision
var v=[];var i,j;// construct all of the vertices for this subdivision
for(i=0;i<=cols;i++){v[i]=[];var aj=a.clone().lerp(c,i/cols);var bj=b.clone().lerp(c,i/cols);var rows=cols-i;for(j=0;j<=rows;j++){if(j===0&&i===cols){v[i][j]=aj;}else{v[i][j]=aj.clone().lerp(bj,j/rows);}}}// construct all of the faces
for(i=0;i<cols;i++){for(j=0;j<2*(cols-i)-1;j++){var k=Math.floor(j/2);if(j%2===0){pushVertex(v[i][k+1]);pushVertex(v[i+1][k]);pushVertex(v[i][k]);}else{pushVertex(v[i][k+1]);pushVertex(v[i+1][k+1]);pushVertex(v[i+1][k]);}}}}function applyRadius(radius){var vertex=new Vector3$1();// iterate over the entire buffer and apply the radius to each vertex
for(var i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];vertex.normalize().multiplyScalar(radius);vertexBuffer[i+0]=vertex.x;vertexBuffer[i+1]=vertex.y;vertexBuffer[i+2]=vertex.z;}}function generateUVs(){var vertex=new Vector3$1();for(var i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];var u=azimuth(vertex)/2/Math.PI+0.5;var v=inclination(vertex)/Math.PI+0.5;uvBuffer.push(u,1-v);}correctUVs();correctSeam();}function correctSeam(){// handle case when face straddles the seam, see #3269
for(var i=0;i<uvBuffer.length;i+=6){// uv data of a single face
var x0=uvBuffer[i+0];var x1=uvBuffer[i+2];var x2=uvBuffer[i+4];var max=Math.max(x0,x1,x2);var min=Math.min(x0,x1,x2);// 0.9 is somewhat arbitrary
if(max>0.9&&min<0.1){if(x0<0.2)uvBuffer[i+0]+=1;if(x1<0.2)uvBuffer[i+2]+=1;if(x2<0.2)uvBuffer[i+4]+=1;}}}function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z);}function getVertexByIndex(index,vertex){var stride=index*3;vertex.x=vertices[stride+0];vertex.y=vertices[stride+1];vertex.z=vertices[stride+2];}function correctUVs(){var a=new Vector3$1();var b=new Vector3$1();var c=new Vector3$1();var centroid=new Vector3$1();var uvA=new Vector2();var uvB=new Vector2();var uvC=new Vector2();for(var i=0,j=0;i<vertexBuffer.length;i+=9,j+=6){a.set(vertexBuffer[i+0],vertexBuffer[i+1],vertexBuffer[i+2]);b.set(vertexBuffer[i+3],vertexBuffer[i+4],vertexBuffer[i+5]);c.set(vertexBuffer[i+6],vertexBuffer[i+7],vertexBuffer[i+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(a).add(b).add(c).divideScalar(3);var azi=azimuth(centroid);correctUV(uvA,j+0,a,azi);correctUV(uvB,j+2,b,azi);correctUV(uvC,j+4,c,azi);}}function correctUV(uv,stride,vector,azimuth){if(azimuth<0&&uv.x===1){uvBuffer[stride]=uv.x-1;}if(vector.x===0&&vector.z===0){uvBuffer[stride]=azimuth/2/Math.PI+0.5;}}// Angle around the Y axis, counter-clockwise when looking from above.
function azimuth(vector){return Math.atan2(vector.z,-vector.x);}// Angle above the XZ plane.
function inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z));}}PolyhedronBufferGeometry.prototype=Object.create(BufferGeometry.prototype);PolyhedronBufferGeometry.prototype.constructor=PolyhedronBufferGeometry;/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */ // TetrahedronGeometry
function TetrahedronGeometry(radius,detail){Geometry.call(this);this.type='TetrahedronGeometry';this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new TetrahedronBufferGeometry(radius,detail));this.mergeVertices();}TetrahedronGeometry.prototype=Object.create(Geometry.prototype);TetrahedronGeometry.prototype.constructor=TetrahedronGeometry;// TetrahedronBufferGeometry
function TetrahedronBufferGeometry(radius,detail){var vertices=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];var indices=[2,1,0,0,3,2,1,3,0,2,3,1];PolyhedronBufferGeometry.call(this,vertices,indices,radius,detail);this.type='TetrahedronBufferGeometry';this.parameters={radius:radius,detail:detail};}TetrahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry;/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */ // OctahedronGeometry
function OctahedronGeometry(radius,detail){Geometry.call(this);this.type='OctahedronGeometry';this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new OctahedronBufferGeometry(radius,detail));this.mergeVertices();}OctahedronGeometry.prototype=Object.create(Geometry.prototype);OctahedronGeometry.prototype.constructor=OctahedronGeometry;// OctahedronBufferGeometry
function OctahedronBufferGeometry(radius,detail){var vertices=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];var indices=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];PolyhedronBufferGeometry.call(this,vertices,indices,radius,detail);this.type='OctahedronBufferGeometry';this.parameters={radius:radius,detail:detail};}OctahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);OctahedronBufferGeometry.prototype.constructor=OctahedronBufferGeometry;/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */ // IcosahedronGeometry
function IcosahedronGeometry(radius,detail){Geometry.call(this);this.type='IcosahedronGeometry';this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new IcosahedronBufferGeometry(radius,detail));this.mergeVertices();}IcosahedronGeometry.prototype=Object.create(Geometry.prototype);IcosahedronGeometry.prototype.constructor=IcosahedronGeometry;// IcosahedronBufferGeometry
function IcosahedronBufferGeometry(radius,detail){var t=(1+Math.sqrt(5))/2;var vertices=[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1];var indices=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];PolyhedronBufferGeometry.call(this,vertices,indices,radius,detail);this.type='IcosahedronBufferGeometry';this.parameters={radius:radius,detail:detail};}IcosahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);IcosahedronBufferGeometry.prototype.constructor=IcosahedronBufferGeometry;/**
 * @author Abe Pazos / https://hamoid.com
 * @author Mugen87 / https://github.com/Mugen87
 */ // DodecahedronGeometry
function DodecahedronGeometry(radius,detail){Geometry.call(this);this.type='DodecahedronGeometry';this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new DodecahedronBufferGeometry(radius,detail));this.mergeVertices();}DodecahedronGeometry.prototype=Object.create(Geometry.prototype);DodecahedronGeometry.prototype.constructor=DodecahedronGeometry;// DodecahedronBufferGeometry
function DodecahedronBufferGeometry(radius,detail){var t=(1+Math.sqrt(5))/2;var r=1/t;var vertices=[// (±1, ±1, ±1)
-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)
0,-r,-t,0,-r,t,0,r,-t,0,r,t,// (±1/φ, ±φ, 0)
-r,-t,0,-r,t,0,r,-t,0,r,t,0,// (±φ, 0, ±1/φ)
-t,0,-r,t,0,-r,-t,0,r,t,0,r];var indices=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];PolyhedronBufferGeometry.call(this,vertices,indices,radius,detail);this.type='DodecahedronBufferGeometry';this.parameters={radius:radius,detail:detail};}DodecahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);DodecahedronBufferGeometry.prototype.constructor=DodecahedronBufferGeometry;/**
 * @author oosmoxiecode / https://github.com/oosmoxiecode
 * @author WestLangley / https://github.com/WestLangley
 * @author zz85 / https://github.com/zz85
 * @author miningold / https://github.com/miningold
 * @author jonobr1 / https://github.com/jonobr1
 * @author Mugen87 / https://github.com/Mugen87
 *
 */ // TubeGeometry
function TubeGeometry(path,tubularSegments,radius,radialSegments,closed,taper){Geometry.call(this);this.type='TubeGeometry';this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};if(taper!==undefined)console.warn('THREE.TubeGeometry: taper has been removed.');var bufferGeometry=new TubeBufferGeometry(path,tubularSegments,radius,radialSegments,closed);// expose internals
this.tangents=bufferGeometry.tangents;this.normals=bufferGeometry.normals;this.binormals=bufferGeometry.binormals;// create geometry
this.fromBufferGeometry(bufferGeometry);this.mergeVertices();}TubeGeometry.prototype=Object.create(Geometry.prototype);TubeGeometry.prototype.constructor=TubeGeometry;// TubeBufferGeometry
function TubeBufferGeometry(path,tubularSegments,radius,radialSegments,closed){BufferGeometry.call(this);this.type='TubeBufferGeometry';this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};tubularSegments=tubularSegments||64;radius=radius||1;radialSegments=radialSegments||8;closed=closed||false;var frames=path.computeFrenetFrames(tubularSegments,closed);// expose internals
this.tangents=frames.tangents;this.normals=frames.normals;this.binormals=frames.binormals;// helper variables
var vertex=new Vector3$1();var normal=new Vector3$1();var uv=new Vector2();var P=new Vector3$1();var i,j;// buffer
var vertices=[];var normals=[];var uvs=[];var indices=[];// create buffer data
generateBufferData();// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// functions
function generateBufferData(){for(i=0;i<tubularSegments;i++){generateSegment(i);}// if the geometry is not closed, generate the last row of vertices and normals
// at the regular position on the given path
//
// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)
generateSegment(closed===false?tubularSegments:0);// uvs are generated in a separate function.
// this makes it easy compute correct values for closed geometries
generateUVs();// finally create faces
generateIndices();}function generateSegment(i){// we use getPointAt to sample evenly distributed points from the given path
P=path.getPointAt(i/tubularSegments,P);// retrieve corresponding normal and binormal
var N=frames.normals[i];var B=frames.binormals[i];// generate normals and vertices for the current segment
for(j=0;j<=radialSegments;j++){var v=j/radialSegments*Math.PI*2;var sin=Math.sin(v);var cos=-Math.cos(v);// normal
normal.x=cos*N.x+sin*B.x;normal.y=cos*N.y+sin*B.y;normal.z=cos*N.z+sin*B.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);// vertex
vertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z);}}function generateIndices(){for(j=1;j<=tubularSegments;j++){for(i=1;i<=radialSegments;i++){var a=(radialSegments+1)*(j-1)+(i-1);var b=(radialSegments+1)*j+(i-1);var c=(radialSegments+1)*j+i;var d=(radialSegments+1)*(j-1)+i;// faces
indices.push(a,b,d);indices.push(b,c,d);}}}function generateUVs(){for(i=0;i<=tubularSegments;i++){for(j=0;j<=radialSegments;j++){uv.x=i/tubularSegments;uv.y=j/radialSegments;uvs.push(uv.x,uv.y);}}}}TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TubeBufferGeometry.prototype.constructor=TubeBufferGeometry;TubeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);data.path=this.parameters.path.toJSON();return data;};/**
 * @author oosmoxiecode
 * @author Mugen87 / https://github.com/Mugen87
 *
 * based on http://www.blackpawn.com/texts/pqtorus/
 */ // TorusKnotGeometry
function TorusKnotGeometry(radius,tube,tubularSegments,radialSegments,p,q,heightScale){Geometry.call(this);this.type='TorusKnotGeometry';this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};if(heightScale!==undefined)console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');this.fromBufferGeometry(new TorusKnotBufferGeometry(radius,tube,tubularSegments,radialSegments,p,q));this.mergeVertices();}TorusKnotGeometry.prototype=Object.create(Geometry.prototype);TorusKnotGeometry.prototype.constructor=TorusKnotGeometry;// TorusKnotBufferGeometry
function TorusKnotBufferGeometry(radius,tube,tubularSegments,radialSegments,p,q){BufferGeometry.call(this);this.type='TorusKnotBufferGeometry';this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};radius=radius||1;tube=tube||0.4;tubularSegments=Math.floor(tubularSegments)||64;radialSegments=Math.floor(radialSegments)||8;p=p||2;q=q||3;// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables
var i,j;var vertex=new Vector3$1();var normal=new Vector3$1();var P1=new Vector3$1();var P2=new Vector3$1();var B=new Vector3$1();var T=new Vector3$1();var N=new Vector3$1();// generate vertices, normals and uvs
for(i=0;i<=tubularSegments;++i){// the radian "u" is used to calculate the position on the torus curve of the current tubular segement
var u=i/tubularSegments*p*Math.PI*2;// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions
calculatePositionOnCurve(u,p,q,radius,P1);calculatePositionOnCurve(u+0.01,p,q,radius,P2);// calculate orthonormal basis
T.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);// normalize B, N. T can be ignored, we don't use it
B.normalize();N.normalize();for(j=0;j<=radialSegments;++j){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.
var v=j/radialSegments*Math.PI*2;var cx=-tube*Math.cos(v);var cy=tube*Math.sin(v);// now calculate the final vertex position.
// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve
vertex.x=P1.x+(cx*N.x+cy*B.x);vertex.y=P1.y+(cx*N.y+cy*B.y);vertex.z=P1.z+(cx*N.z+cy*B.z);vertices.push(vertex.x,vertex.y,vertex.z);// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)
normal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);// uv
uvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices
for(j=1;j<=tubularSegments;j++){for(i=1;i<=radialSegments;i++){// indices
var a=(radialSegments+1)*(j-1)+(i-1);var b=(radialSegments+1)*j+(i-1);var c=(radialSegments+1)*j+i;var d=(radialSegments+1)*(j-1)+i;// faces
indices.push(a,b,d);indices.push(b,c,d);}}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// this function calculates the current position on the torus curve
function calculatePositionOnCurve(u,p,q,radius,position){var cu=Math.cos(u);var su=Math.sin(u);var quOverP=q/p*u;var cs=Math.cos(quOverP);position.x=radius*(2+cs)*0.5*cu;position.y=radius*(2+cs)*su*0.5;position.z=radius*Math.sin(quOverP)*0.5;}}TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TorusKnotBufferGeometry.prototype.constructor=TorusKnotBufferGeometry;/**
 * @author oosmoxiecode
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */ // TorusGeometry
function TorusGeometry(radius,tube,radialSegments,tubularSegments,arc){Geometry.call(this);this.type='TorusGeometry';this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};this.fromBufferGeometry(new TorusBufferGeometry(radius,tube,radialSegments,tubularSegments,arc));this.mergeVertices();}TorusGeometry.prototype=Object.create(Geometry.prototype);TorusGeometry.prototype.constructor=TorusGeometry;// TorusBufferGeometry
function TorusBufferGeometry(radius,tube,radialSegments,tubularSegments,arc){BufferGeometry.call(this);this.type='TorusBufferGeometry';this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radius=radius||1;tube=tube||0.4;radialSegments=Math.floor(radialSegments)||8;tubularSegments=Math.floor(tubularSegments)||6;arc=arc||Math.PI*2;// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables
var center=new Vector3$1();var vertex=new Vector3$1();var normal=new Vector3$1();var j,i;// generate vertices, normals and uvs
for(j=0;j<=radialSegments;j++){for(i=0;i<=tubularSegments;i++){var u=i/tubularSegments*arc;var v=j/radialSegments*Math.PI*2;// vertex
vertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);// normal
center.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);// uv
uvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices
for(j=1;j<=radialSegments;j++){for(i=1;i<=tubularSegments;i++){// indices
var a=(tubularSegments+1)*j+i-1;var b=(tubularSegments+1)*(j-1)+i-1;var c=(tubularSegments+1)*(j-1)+i;var d=(tubularSegments+1)*j+i;// faces
indices.push(a,b,d);indices.push(b,c,d);}}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TorusBufferGeometry.prototype.constructor=TorusBufferGeometry;/**
 * @author Mugen87 / https://github.com/Mugen87
 * Port from https://github.com/mapbox/earcut (v2.2.2)
 */var Earcut={triangulate:function triangulate(data,holeIndices,dim){dim=dim||2;var hasHoles=holeIndices&&holeIndices.length,outerLen=hasHoles?holeIndices[0]*dim:data.length,outerNode=linkedList(data,0,outerLen,dim,true),triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;var minX,minY,maxX,maxY,x,y,invSize;if(hasHoles)outerNode=eliminateHoles(data,holeIndices,outerNode,dim);// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
if(data.length>80*dim){minX=maxX=data[0];minY=maxY=data[1];for(var i=dim;i<outerLen;i+=dim){x=data[i];y=data[i+1];if(x<minX)minX=x;if(y<minY)minY=y;if(x>maxX)maxX=x;if(y>maxY)maxY=y;}// minX, minY and invSize are later used to transform coords into integers for z-order calculation
invSize=Math.max(maxX-minX,maxY-minY);invSize=invSize!==0?1/invSize:0;}earcutLinked(outerNode,triangles,dim,minX,minY,invSize);return triangles;}};// create a circular doubly linked list from polygon points in the specified winding order
function linkedList(data,start,end,dim,clockwise){var i,last;if(clockwise===signedArea(data,start,end,dim)>0){for(i=start;i<end;i+=dim){last=insertNode(i,data[i],data[i+1],last);}}else{for(i=end-dim;i>=start;i-=dim){last=insertNode(i,data[i],data[i+1],last);}}if(last&&equals(last,last.next)){removeNode(last);last=last.next;}return last;}// eliminate colinear or duplicate points
function filterPoints(start,end){if(!start)return start;if(!end)end=start;var p=start,again;do{again=false;if(!p.steiner&&(equals(p,p.next)||area(p.prev,p,p.next)===0)){removeNode(p);p=end=p.prev;if(p===p.next)break;again=true;}else{p=p.next;}}while(again||p!==end);return end;}// main ear slicing loop which triangulates a polygon (given as a linked list)
function earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(!ear)return;// interlink polygon nodes in z-order
if(!pass&&invSize)indexCurve(ear,minX,minY,invSize);var stop=ear,prev,next;// iterate through ears, slicing them one by one
while(ear.prev!==ear.next){prev=ear.prev;next=ear.next;if(invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear)){// cut off the triangle
triangles.push(prev.i/dim);triangles.push(ear.i/dim);triangles.push(next.i/dim);removeNode(ear);// skipping the next vertex leads to less sliver triangles
ear=next.next;stop=next.next;continue;}ear=next;// if we looped through the whole remaining polygon and can't find any more ears
if(ear===stop){// try filtering points and slicing again
if(!pass){earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);// if this didn't work, try curing all small self-intersections locally
}else if(pass===1){ear=cureLocalIntersections(filterPoints(ear),triangles,dim);earcutLinked(ear,triangles,dim,minX,minY,invSize,2);// as a last resort, try splitting the remaining polygon into two
}else if(pass===2){splitEarcut(ear,triangles,dim,minX,minY,invSize);}break;}}}// check whether a polygon node forms a valid ear with adjacent nodes
function isEar(ear){var a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear
// now make sure we don't have other points inside the potential ear
var p=ear.next.next;while(p!==ear.prev){if(pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.next;}return true;}function isEarHashed(ear,minX,minY,invSize){var a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear
// triangle bbox; min & max are calculated like this for speed
var minTX=a.x<b.x?a.x<c.x?a.x:c.x:b.x<c.x?b.x:c.x,minTY=a.y<b.y?a.y<c.y?a.y:c.y:b.y<c.y?b.y:c.y,maxTX=a.x>b.x?a.x>c.x?a.x:c.x:b.x>c.x?b.x:c.x,maxTY=a.y>b.y?a.y>c.y?a.y:c.y:b.y>c.y?b.y:c.y;// z-order range for the current triangle bbox;
var minZ=zOrder(minTX,minTY,minX,minY,invSize),maxZ=zOrder(maxTX,maxTY,minX,minY,invSize);var p=ear.prevZ,n=ear.nextZ;// look for points inside the triangle in both directions
while(p&&p.z>=minZ&&n&&n.z<=maxZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}// look for remaining points in decreasing z-order
while(p&&p.z>=minZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;}// look for remaining points in increasing z-order
while(n&&n.z<=maxZ){if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}return true;}// go through all polygon nodes and cure small local self-intersections
function cureLocalIntersections(start,triangles,dim){var p=start;do{var a=p.prev,b=p.next.next;if(!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)){triangles.push(a.i/dim);triangles.push(p.i/dim);triangles.push(b.i/dim);// remove two nodes involved
removeNode(p);removeNode(p.next);p=start=b;}p=p.next;}while(p!==start);return filterPoints(p);}// try splitting polygon into two and triangulate them independently
function splitEarcut(start,triangles,dim,minX,minY,invSize){// look for a valid diagonal that divides the polygon into two
var a=start;do{var b=a.next.next;while(b!==a.prev){if(a.i!==b.i&&isValidDiagonal(a,b)){// split the polygon in two by the diagonal
var c=splitPolygon(a,b);// filter colinear points around the cuts
a=filterPoints(a,a.next);c=filterPoints(c,c.next);// run earcut on each half
earcutLinked(a,triangles,dim,minX,minY,invSize);earcutLinked(c,triangles,dim,minX,minY,invSize);return;}b=b.next;}a=a.next;}while(a!==start);}// link every hole into the outer loop, producing a single-ring polygon without holes
function eliminateHoles(data,holeIndices,outerNode,dim){var queue=[],i,len,start,end,list;for(i=0,len=holeIndices.length;i<len;i++){start=holeIndices[i]*dim;end=i<len-1?holeIndices[i+1]*dim:data.length;list=linkedList(data,start,end,dim,false);if(list===list.next)list.steiner=true;queue.push(getLeftmost(list));}queue.sort(compareX);// process holes from left to right
for(i=0;i<queue.length;i++){eliminateHole(queue[i],outerNode);outerNode=filterPoints(outerNode,outerNode.next);}return outerNode;}function compareX(a,b){return a.x-b.x;}// find a bridge between vertices that connects hole with an outer ring and and link it
function eliminateHole(hole,outerNode){outerNode=findHoleBridge(hole,outerNode);if(outerNode){var b=splitPolygon(outerNode,hole);// filter collinear points around the cuts
filterPoints(outerNode,outerNode.next);filterPoints(b,b.next);}}// David Eberly's algorithm for finding a bridge between hole and outer polygon
function findHoleBridge(hole,outerNode){var p=outerNode,hx=hole.x,hy=hole.y,qx=-Infinity,m;// find a segment intersected by a ray from the hole's leftmost point to the left;
// segment's endpoint with lesser x will be potential connection point
do{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){var x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next;}m=p.x<p.next.x?p:p.next;}}p=p.next;}while(p!==outerNode);if(!m)return null;if(hx===qx)return m;// hole touches outer segment; pick leftmost endpoint
// look for points inside the triangle of hole point, segment intersection and endpoint;
// if there are no points found, we have a valid connection;
// otherwise choose the point of the minimum angle with the ray as connection point
var stop=m,mx=m.x,my=m.y,tanMin=Infinity,tan;p=m;do{if(hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)){tan=Math.abs(hy-p.y)/(hx-p.x);// tangential
if(locallyInside(p,hole)&&(tan<tanMin||tan===tanMin&&(p.x>m.x||p.x===m.x&&sectorContainsSector(m,p)))){m=p;tanMin=tan;}}p=p.next;}while(p!==stop);return m;}// whether sector in vertex m contains sector in vertex p in the same coordinates
function sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0&&area(p.next,m,m.next)<0;}// interlink polygon nodes in z-order
function indexCurve(start,minX,minY,invSize){var p=start;do{if(p.z===null)p.z=zOrder(p.x,p.y,minX,minY,invSize);p.prevZ=p.prev;p.nextZ=p.next;p=p.next;}while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;sortLinked(p);}// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function sortLinked(list){var i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{p=list;list=null;tail=null;numMerges=0;while(p){numMerges++;q=p;pSize=0;for(i=0;i<inSize;i++){pSize++;q=q.nextZ;if(!q)break;}qSize=inSize;while(pSize>0||qSize>0&&q){if(pSize!==0&&(qSize===0||!q||p.z<=q.z)){e=p;p=p.nextZ;pSize--;}else{e=q;q=q.nextZ;qSize--;}if(tail)tail.nextZ=e;else list=e;e.prevZ=tail;tail=e;}p=q;}tail.nextZ=null;inSize*=2;}while(numMerges>1);return list;}// z-order of a point given coords and inverse of the longer side of data bbox
function zOrder(x,y,minX,minY,invSize){// coords are transformed into non-negative 15-bit integer range
x=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&0x00FF00FF;x=(x|x<<4)&0x0F0F0F0F;x=(x|x<<2)&0x33333333;x=(x|x<<1)&0x55555555;y=(y|y<<8)&0x00FF00FF;y=(y|y<<4)&0x0F0F0F0F;y=(y|y<<2)&0x33333333;y=(y|y<<1)&0x55555555;return x|y<<1;}// find the leftmost node of a polygon ring
function getLeftmost(start){var p=start,leftmost=start;do{if(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)leftmost=p;p=p.next;}while(p!==start);return leftmost;}// check if a point lies within a convex triangle
function pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)-(ax-px)*(cy-py)>=0&&(ax-px)*(by-py)-(bx-px)*(ay-py)>=0&&(bx-px)*(cy-py)-(cx-px)*(by-py)>=0;}// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
function isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!intersectsPolygon(a,b)&&(// dones't intersect other edges
locallyInside(a,b)&&locallyInside(b,a)&&middleInside(a,b)&&(// locally visible
area(a.prev,a,b.prev)||area(a,b.prev,b))||// does not create opposite-facing sectors
equals(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0);// special zero-length case
}// signed area of a triangle
function area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y);}// check if two points are equal
function equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y;}// check if two segments intersect
function intersects(p1,q1,p2,q2){var o1=sign(area(p1,q1,p2));var o2=sign(area(p1,q1,q2));var o3=sign(area(p2,q2,p1));var o4=sign(area(p2,q2,q1));if(o1!==o2&&o3!==o4)return true;// general case
if(o1===0&&onSegment(p1,p2,q1))return true;// p1, q1 and p2 are collinear and p2 lies on p1q1
if(o2===0&&onSegment(p1,q2,q1))return true;// p1, q1 and q2 are collinear and q2 lies on p1q1
if(o3===0&&onSegment(p2,p1,q2))return true;// p2, q2 and p1 are collinear and p1 lies on p2q2
if(o4===0&&onSegment(p2,q1,q2))return true;// p2, q2 and q1 are collinear and q1 lies on p2q2
return false;}// for collinear points p, q, r, check if point q lies on segment pr
function onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y);}function sign(num){return num>0?1:num<0?-1:0;}// check if a polygon diagonal intersects any polygon segments
function intersectsPolygon(a,b){var p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b))return true;p=p.next;}while(p!==a);return false;}// check if a polygon diagonal is locally inside the polygon
function locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0;}// check if the middle point of a polygon diagonal is inside the polygon
function middleInside(a,b){var p=a,inside=false,px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{if(p.y>py!==p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x)inside=!inside;p=p.next;}while(p!==a);return inside;}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
function splitPolygon(a,b){var a2=new Node$1(a.i,a.x,a.y),b2=new Node$1(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2;}// create a node and optionally link it with previous one (in a circular doubly linked list)
function insertNode(i,x,y,last){var p=new Node$1(i,x,y);if(!last){p.prev=p;p.next=p;}else{p.next=last.next;p.prev=last;last.next.prev=p;last.next=p;}return p;}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;if(p.prevZ)p.prevZ.nextZ=p.nextZ;if(p.nextZ)p.nextZ.prevZ=p.prevZ;}function Node$1(i,x,y){// vertex index in coordinates array
this.i=i;// vertex coordinates
this.x=x;this.y=y;// previous and next vertex nodes in a polygon ring
this.prev=null;this.next=null;// z-order curve value
this.z=null;// previous and next nodes in z-order
this.prevZ=null;this.nextZ=null;// indicates whether this is a steiner point
this.steiner=false;}function signedArea(data,start,end,dim){var sum=0;for(var i=start,j=end-dim;i<end;i+=dim){sum+=(data[j]-data[i])*(data[i+1]+data[j+1]);j=i;}return sum;}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */var ShapeUtils={// calculate area of the contour polygon
area:function area(contour){var n=contour.length;var a=0.0;for(var p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;}return a*0.5;},isClockWise:function isClockWise(pts){return ShapeUtils.area(pts)<0;},triangulateShape:function triangulateShape(contour,holes){var vertices=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]
var holeIndices=[];// array of hole indices
var faces=[];// final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]
removeDupEndPts(contour);addContour(vertices,contour);//
var holeIndex=contour.length;holes.forEach(removeDupEndPts);for(var i=0;i<holes.length;i++){holeIndices.push(holeIndex);holeIndex+=holes[i].length;addContour(vertices,holes[i]);}//
var triangles=Earcut.triangulate(vertices,holeIndices);//
for(var i=0;i<triangles.length;i+=3){faces.push(triangles.slice(i,i+3));}return faces;}};function removeDupEndPts(points){var l=points.length;if(l>2&&points[l-1].equals(points[0])){points.pop();}}function addContour(vertices,contour){for(var i=0;i<contour.length;i++){vertices.push(contour[i].x);vertices.push(contour[i].y);}}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Creates extruded geometry from a path shape.
 *
 * parameters = {
 *
 *  curveSegments: <int>, // number of points on the curves
 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
 *  depth: <float>, // Depth to extrude the shape
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into the original shape bevel goes
 *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel
 *  bevelOffset: <float>, // how far from shape outline does bevel start
 *  bevelSegments: <int>, // number of bevel layers
 *
 *  extrudePath: <THREE.Curve> // curve to extrude shape along
 *
 *  UVGenerator: <Object> // object that provides UV generator functions
 *
 * }
 */ // ExtrudeGeometry
function ExtrudeGeometry(shapes,options){Geometry.call(this);this.type='ExtrudeGeometry';this.parameters={shapes:shapes,options:options};this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes,options));this.mergeVertices();}ExtrudeGeometry.prototype=Object.create(Geometry.prototype);ExtrudeGeometry.prototype.constructor=ExtrudeGeometry;ExtrudeGeometry.prototype.toJSON=function(){var data=Geometry.prototype.toJSON.call(this);var shapes=this.parameters.shapes;var options=this.parameters.options;return toJSON(shapes,options,data);};// ExtrudeBufferGeometry
function ExtrudeBufferGeometry(shapes,options){BufferGeometry.call(this);this.type='ExtrudeBufferGeometry';this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];var scope=this;var verticesArray=[];var uvArray=[];for(var i=0,l=shapes.length;i<l;i++){var shape=shapes[i];addShape(shape);}// build geometry
this.setAttribute('position',new Float32BufferAttribute(verticesArray,3));this.setAttribute('uv',new Float32BufferAttribute(uvArray,2));this.computeVertexNormals();// functions
function addShape(shape){var placeholder=[];// options
var curveSegments=options.curveSegments!==undefined?options.curveSegments:12;var steps=options.steps!==undefined?options.steps:1;var depth=options.depth!==undefined?options.depth:100;var bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;var bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:6;var bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-2;var bevelOffset=options.bevelOffset!==undefined?options.bevelOffset:0;var bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;var extrudePath=options.extrudePath;var uvgen=options.UVGenerator!==undefined?options.UVGenerator:WorldUVGenerator;// deprecated options
if(options.amount!==undefined){console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');depth=options.amount;}//
var extrudePts,extrudeByPath=false;var splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;// bevels not supported for path extrusion
// SETUP TNB variables
// TODO1 - have a .isClosed in spline?
splineTube=extrudePath.computeFrenetFrames(steps,false);// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);
binormal=new Vector3$1();normal=new Vector3$1();position2=new Vector3$1();}// Safeguards if bevels are not enabled
if(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0;bevelOffset=0;}// Variables initialization
var ahole,h,hl;// looping of holes
var shapePoints=shape.extractPoints(curveSegments);var vertices=shapePoints.shape;var holes=shapePoints.holes;var reverse=!ShapeUtils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();// Maybe we should also check if holes are in the opposite direction, just to be safe ...
for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];if(ShapeUtils.isClockWise(ahole)){holes[h]=ahole.reverse();}}}var faces=ShapeUtils.triangulateShape(vertices,holes);/* Vertices */var contour=vertices;// vertices has all points but contour has only points of circumference
for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];vertices=vertices.concat(ahole);}function scalePt2(pt,vec,size){if(!vec)console.error("THREE.ExtrudeGeometry: vec does not exist");return vec.clone().multiplyScalar(size).add(pt);}var b,bs,t,z,vert,vlen=vertices.length,face,flen=faces.length;// Find directions for point movement
function getBevelVec(inPt,inPrev,inNext){// computes for inPt the corresponding point inPt' on a new contour
//   shifted by 1 unit (length of normalized vector) to the left
// if we walk along contour clockwise, this new contour is outside the old one
//
// inPt' is the intersection of the two lines parallel to the two
//  adjacent edges of inPt at a distance of 1 unit on the left side.
var v_trans_x,v_trans_y,shrink_by;// resulting translation vector for inPt
// good reading for geometry algorithms (here: line-line intersection)
// http://geomalgorithms.com/a05-_intersect-1.html
var v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y;var v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y;var v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y;// check for collinear edges
var collinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(collinear0)>Number.EPSILON){// not collinear
// length of vectors for normalizing
var v_prev_len=Math.sqrt(v_prev_lensq);var v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y);// shift adjacent points by unit vectors to the left
var ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len;var ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len;var ptNextShift_x=inNext.x-v_next_y/v_next_len;var ptNextShift_y=inNext.y+v_next_x/v_next_len;// scaling factor for v_prev to intersection point
var sf=((ptNextShift_x-ptPrevShift_x)*v_next_y-(ptNextShift_y-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);// vector from inPt to intersection point
v_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x;v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;// Don't normalize!, otherwise sharp corners become ugly
//  but prevent crazy spikes
var v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2){return new Vector2(v_trans_x,v_trans_y);}else{shrink_by=Math.sqrt(v_trans_lensq/2);}}else{// handle special case of collinear edges
var direction_eq=false;// assumes: opposite
if(v_prev_x>Number.EPSILON){if(v_next_x>Number.EPSILON){direction_eq=true;}}else{if(v_prev_x<-Number.EPSILON){if(v_next_x<-Number.EPSILON){direction_eq=true;}}else{if(Math.sign(v_prev_y)===Math.sign(v_next_y)){direction_eq=true;}}}if(direction_eq){// console.log("Warning: lines are a straight sequence");
v_trans_x=-v_prev_y;v_trans_y=v_prev_x;shrink_by=Math.sqrt(v_prev_lensq);}else{// console.log("Warning: lines are a straight spike");
v_trans_x=v_prev_x;v_trans_y=v_prev_y;shrink_by=Math.sqrt(v_prev_lensq/2);}}return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by);}var contourMovements=[];for(var i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)
// console.log('i,j,k', i, j , k)
contourMovements[i]=getBevelVec(contour[i],contour[j],contour[k]);}var holesMovements=[],oneHoleMovements,verticesMovements=contourMovements.concat();for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=[];for(i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)
oneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements);}// Loop bevelSegments, 1 for the front, 1 for the back
for(b=0;b<bevelSegments;b++){//for ( b = bevelSegments; b > 0; b -- ) {
t=b/bevelSegments;z=bevelThickness*Math.cos(t*Math.PI/2);bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape
for(i=0,il=contour.length;i<il;i++){vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z);}// expand holes
for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=holesMovements[h];for(i=0,il=ahole.length;i<il;i++){vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z);}}}bs=bevelSize+bevelOffset;// Back facing vertices
for(i=0;i<vlen;i++){vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,0);}else{// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );
normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}// Add stepped vertices...
// Including front facing vertices
var s;for(s=1;s<=steps;s++){for(i=0;i<vlen;i++){vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,depth/steps*s);}else{// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );
normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}}// Add bevel segments planes
//for ( b = 1; b <= bevelSegments; b ++ ) {
for(b=bevelSegments-1;b>=0;b--){t=b/bevelSegments;z=bevelThickness*Math.cos(t*Math.PI/2);bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape
for(i=0,il=contour.length;i<il;i++){vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,depth+z);}// expand holes
for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=holesMovements[h];for(i=0,il=ahole.length;i<il;i++){vert=scalePt2(ahole[i],oneHoleMovements[i],bs);if(!extrudeByPath){v(vert.x,vert.y,depth+z);}else{v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z);}}}}/* Faces */ // Top and bottom faces
buildLidFaces();// Sides faces
buildSideFaces();/////  Internal functions
function buildLidFaces(){var start=verticesArray.length/3;if(bevelEnabled){var layer=0;// steps + 1
var offset=vlen*layer;// Bottom faces
for(i=0;i<flen;i++){face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset);}layer=steps+bevelSegments*2;offset=vlen*layer;// Top faces
for(i=0;i<flen;i++){face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset);}}else{// Bottom faces
for(i=0;i<flen;i++){face=faces[i];f3(face[2],face[1],face[0]);}// Top faces
for(i=0;i<flen;i++){face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps);}}scope.addGroup(start,verticesArray.length/3-start,0);}// Create faces for the z-sides of the shape
function buildSideFaces(){var start=verticesArray.length/3;var layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];sidewalls(ahole,layeroffset);//, true
layeroffset+=ahole.length;}scope.addGroup(start,verticesArray.length/3-start,1);}function sidewalls(contour,layeroffset){var j,k;i=contour.length;while(--i>=0){j=i;k=i-1;if(k<0)k=contour.length-1;//console.log('b', i,j, i-1, k,vertices.length);
var s=0,sl=steps+bevelSegments*2;for(s=0;s<sl;s++){var slen1=vlen*s;var slen2=vlen*(s+1);var a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d);}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z);}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);var nextIndex=verticesArray.length/3;var uvs=uvgen.generateTopUV(scope,verticesArray,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[2]);}function f4(a,b,c,d){addVertex(a);addVertex(b);addVertex(d);addVertex(b);addVertex(c);addVertex(d);var nextIndex=verticesArray.length/3;var uvs=uvgen.generateSideWallUV(scope,verticesArray,nextIndex-6,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[3]);addUV(uvs[1]);addUV(uvs[2]);addUV(uvs[3]);}function addVertex(index){verticesArray.push(placeholder[index*3+0]);verticesArray.push(placeholder[index*3+1]);verticesArray.push(placeholder[index*3+2]);}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y);}}}ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry;ExtrudeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);var shapes=this.parameters.shapes;var options=this.parameters.options;return toJSON(shapes,options,data);};//
var WorldUVGenerator={generateTopUV:function generateTopUV(geometry,vertices,indexA,indexB,indexC){var a_x=vertices[indexA*3];var a_y=vertices[indexA*3+1];var b_x=vertices[indexB*3];var b_y=vertices[indexB*3+1];var c_x=vertices[indexC*3];var c_y=vertices[indexC*3+1];return[new Vector2(a_x,a_y),new Vector2(b_x,b_y),new Vector2(c_x,c_y)];},generateSideWallUV:function generateSideWallUV(geometry,vertices,indexA,indexB,indexC,indexD){var a_x=vertices[indexA*3];var a_y=vertices[indexA*3+1];var a_z=vertices[indexA*3+2];var b_x=vertices[indexB*3];var b_y=vertices[indexB*3+1];var b_z=vertices[indexB*3+2];var c_x=vertices[indexC*3];var c_y=vertices[indexC*3+1];var c_z=vertices[indexC*3+2];var d_x=vertices[indexD*3];var d_y=vertices[indexD*3+1];var d_z=vertices[indexD*3+2];if(Math.abs(a_y-b_y)<0.01){return[new Vector2(a_x,1-a_z),new Vector2(b_x,1-b_z),new Vector2(c_x,1-c_z),new Vector2(d_x,1-d_z)];}else{return[new Vector2(a_y,1-a_z),new Vector2(b_y,1-b_z),new Vector2(c_y,1-c_z),new Vector2(d_y,1-d_z)];}}};function toJSON(shapes,options,data){//
data.shapes=[];if(Array.isArray(shapes)){for(var i=0,l=shapes.length;i<l;i++){var shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}//
if(options.extrudePath!==undefined)data.options.extrudePath=options.extrudePath.toJSON();return data;}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author alteredq / http://alteredqualia.com/
 *
 * Text = 3D Text
 *
 * parameters = {
 *  font: <THREE.Font>, // font
 *
 *  size: <float>, // size of the text
 *  height: <float>, // thickness to extrude text
 *  curveSegments: <int>, // number of points on the curves
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into text bevel goes
 *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel
 *  bevelOffset: <float> // how far from text outline does bevel start
 * }
 */ // TextGeometry
function TextGeometry(text,parameters){Geometry.call(this);this.type='TextGeometry';this.parameters={text:text,parameters:parameters};this.fromBufferGeometry(new TextBufferGeometry(text,parameters));this.mergeVertices();}TextGeometry.prototype=Object.create(Geometry.prototype);TextGeometry.prototype.constructor=TextGeometry;// TextBufferGeometry
function TextBufferGeometry(text,parameters){parameters=parameters||{};var font=parameters.font;if(!(font&&font.isFont)){console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');return new Geometry();}var shapes=font.generateShapes(text,parameters.size);// translate parameters to ExtrudeGeometry API
parameters.depth=parameters.height!==undefined?parameters.height:50;// defaults
if(parameters.bevelThickness===undefined)parameters.bevelThickness=10;if(parameters.bevelSize===undefined)parameters.bevelSize=8;if(parameters.bevelEnabled===undefined)parameters.bevelEnabled=false;ExtrudeBufferGeometry.call(this,shapes,parameters);this.type='TextBufferGeometry';}TextBufferGeometry.prototype=Object.create(ExtrudeBufferGeometry.prototype);TextBufferGeometry.prototype.constructor=TextBufferGeometry;/**
 * @author mrdoob / http://mrdoob.com/
 * @author benaadams / https://twitter.com/ben_a_adams
 * @author Mugen87 / https://github.com/Mugen87
 */ // SphereGeometry
function SphereGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){Geometry.call(this);this.type='SphereGeometry';this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new SphereBufferGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength));this.mergeVertices();}SphereGeometry.prototype=Object.create(Geometry.prototype);SphereGeometry.prototype.constructor=SphereGeometry;// SphereBufferGeometry
function SphereBufferGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){BufferGeometry.call(this);this.type='SphereBufferGeometry';this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};radius=radius||1;widthSegments=Math.max(3,Math.floor(widthSegments)||8);heightSegments=Math.max(2,Math.floor(heightSegments)||6);phiStart=phiStart!==undefined?phiStart:0;phiLength=phiLength!==undefined?phiLength:Math.PI*2;thetaStart=thetaStart!==undefined?thetaStart:0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI;var thetaEnd=Math.min(thetaStart+thetaLength,Math.PI);var ix,iy;var index=0;var grid=[];var vertex=new Vector3$1();var normal=new Vector3$1();// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// generate vertices, normals and uvs
for(iy=0;iy<=heightSegments;iy++){var verticesRow=[];var v=iy/heightSegments;// special case for the poles
var uOffset=0;if(iy==0&&thetaStart==0){uOffset=0.5/widthSegments;}else if(iy==heightSegments&&thetaEnd==Math.PI){uOffset=-0.5/widthSegments;}for(ix=0;ix<=widthSegments;ix++){var u=ix/widthSegments;// vertex
vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);// normal
normal.copy(vertex).normalize();normals.push(normal.x,normal.y,normal.z);// uv
uvs.push(u+uOffset,1-v);verticesRow.push(index++);}grid.push(verticesRow);}// indices
for(iy=0;iy<heightSegments;iy++){for(ix=0;ix<widthSegments;ix++){var a=grid[iy][ix+1];var b=grid[iy][ix];var c=grid[iy+1][ix];var d=grid[iy+1][ix+1];if(iy!==0||thetaStart>0)indices.push(a,b,d);if(iy!==heightSegments-1||thetaEnd<Math.PI)indices.push(b,c,d);}}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype);SphereBufferGeometry.prototype.constructor=SphereBufferGeometry;/**
 * @author Kaleb Murphy
 * @author Mugen87 / https://github.com/Mugen87
 */ // RingGeometry
function RingGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){Geometry.call(this);this.type='RingGeometry';this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength));this.mergeVertices();}RingGeometry.prototype=Object.create(Geometry.prototype);RingGeometry.prototype.constructor=RingGeometry;// RingBufferGeometry
function RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){BufferGeometry.call(this);this.type='RingBufferGeometry';this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};innerRadius=innerRadius||0.5;outerRadius=outerRadius||1;thetaStart=thetaStart!==undefined?thetaStart:0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;thetaSegments=thetaSegments!==undefined?Math.max(3,thetaSegments):8;phiSegments=phiSegments!==undefined?Math.max(1,phiSegments):1;// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// some helper variables
var segment;var radius=innerRadius;var radiusStep=(outerRadius-innerRadius)/phiSegments;var vertex=new Vector3$1();var uv=new Vector2();var j,i;// generate vertices, normals and uvs
for(j=0;j<=phiSegments;j++){for(i=0;i<=thetaSegments;i++){// values are generate from the inside of the ring to the outside
segment=thetaStart+i/thetaSegments*thetaLength;// vertex
vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal
normals.push(0,0,1);// uv
uv.x=(vertex.x/outerRadius+1)/2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y);}// increase the radius for next row of vertices
radius+=radiusStep;}// indices
for(j=0;j<phiSegments;j++){var thetaSegmentLevel=j*(thetaSegments+1);for(i=0;i<thetaSegments;i++){segment=i+thetaSegmentLevel;var a=segment;var b=segment+thetaSegments+1;var c=segment+thetaSegments+2;var d=segment+1;// faces
indices.push(a,b,d);indices.push(b,c,d);}}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}RingBufferGeometry.prototype=Object.create(BufferGeometry.prototype);RingBufferGeometry.prototype.constructor=RingBufferGeometry;/**
 * @author zz85 / https://github.com/zz85
 * @author bhouston / http://clara.io
 * @author Mugen87 / https://github.com/Mugen87
 */ // LatheGeometry
function LatheGeometry(points,segments,phiStart,phiLength){Geometry.call(this);this.type='LatheGeometry';this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};this.fromBufferGeometry(new LatheBufferGeometry(points,segments,phiStart,phiLength));this.mergeVertices();}LatheGeometry.prototype=Object.create(Geometry.prototype);LatheGeometry.prototype.constructor=LatheGeometry;// LatheBufferGeometry
function LatheBufferGeometry(points,segments,phiStart,phiLength){BufferGeometry.call(this);this.type='LatheBufferGeometry';this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments)||12;phiStart=phiStart||0;phiLength=phiLength||Math.PI*2;// clamp phiLength so it's in range of [ 0, 2PI ]
phiLength=MathUtils.clamp(phiLength,0,Math.PI*2);// buffers
var indices=[];var vertices=[];var uvs=[];// helper variables
var base;var inverseSegments=1.0/segments;var vertex=new Vector3$1();var uv=new Vector2();var i,j;// generate vertices and uvs
for(i=0;i<=segments;i++){var phi=phiStart+i*inverseSegments*phiLength;var sin=Math.sin(phi);var cos=Math.cos(phi);for(j=0;j<=points.length-1;j++){// vertex
vertex.x=points[j].x*sin;vertex.y=points[j].y;vertex.z=points[j].x*cos;vertices.push(vertex.x,vertex.y,vertex.z);// uv
uv.x=i/segments;uv.y=j/(points.length-1);uvs.push(uv.x,uv.y);}}// indices
for(i=0;i<segments;i++){for(j=0;j<points.length-1;j++){base=j+i*points.length;var a=base;var b=base+points.length;var c=base+points.length+1;var d=base+1;// faces
indices.push(a,b,d);indices.push(b,c,d);}}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// generate normals
this.computeVertexNormals();// if the geometry is closed, we need to average the normals along the seam.
// because the corresponding vertices are identical (but still have different UVs).
if(phiLength===Math.PI*2){var normals=this.attributes.normal.array;var n1=new Vector3$1();var n2=new Vector3$1();var n=new Vector3$1();// this is the buffer offset for the last line of vertices
base=segments*points.length*3;for(i=0,j=0;i<points.length;i++,j+=3){// select the normal of the vertex in the first line
n1.x=normals[j+0];n1.y=normals[j+1];n1.z=normals[j+2];// select the normal of the vertex in the last line
n2.x=normals[base+j+0];n2.y=normals[base+j+1];n2.z=normals[base+j+2];// average normals
n.addVectors(n1,n2).normalize();// assign the new values to both normals
normals[j+0]=normals[base+j+0]=n.x;normals[j+1]=normals[base+j+1]=n.y;normals[j+2]=normals[base+j+2]=n.z;}}}LatheBufferGeometry.prototype=Object.create(BufferGeometry.prototype);LatheBufferGeometry.prototype.constructor=LatheBufferGeometry;/**
 * @author jonobr1 / http://jonobr1.com
 * @author Mugen87 / https://github.com/Mugen87
 */ // ShapeGeometry
function ShapeGeometry(shapes,curveSegments){Geometry.call(this);this.type='ShapeGeometry';if(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(curveSegments)==='object'){console.warn('THREE.ShapeGeometry: Options parameter has been removed.');curveSegments=curveSegments.curveSegments;}this.parameters={shapes:shapes,curveSegments:curveSegments};this.fromBufferGeometry(new ShapeBufferGeometry(shapes,curveSegments));this.mergeVertices();}ShapeGeometry.prototype=Object.create(Geometry.prototype);ShapeGeometry.prototype.constructor=ShapeGeometry;ShapeGeometry.prototype.toJSON=function(){var data=Geometry.prototype.toJSON.call(this);var shapes=this.parameters.shapes;return toJSON$1(shapes,data);};// ShapeBufferGeometry
function ShapeBufferGeometry(shapes,curveSegments){BufferGeometry.call(this);this.type='ShapeBufferGeometry';this.parameters={shapes:shapes,curveSegments:curveSegments};curveSegments=curveSegments||12;// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables
var groupStart=0;var groupCount=0;// allow single and array values for "shapes" parameter
if(Array.isArray(shapes)===false){addShape(shapes);}else{for(var i=0;i<shapes.length;i++){addShape(shapes[i]);this.addGroup(groupStart,groupCount,i);// enables MultiMaterial support
groupStart+=groupCount;groupCount=0;}}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// helper functions
function addShape(shape){var i,l,shapeHole;var indexOffset=vertices.length/3;var points=shape.extractPoints(curveSegments);var shapeVertices=points.shape;var shapeHoles=points.holes;// check direction of vertices
if(ShapeUtils.isClockWise(shapeVertices)===false){shapeVertices=shapeVertices.reverse();}for(i=0,l=shapeHoles.length;i<l;i++){shapeHole=shapeHoles[i];if(ShapeUtils.isClockWise(shapeHole)===true){shapeHoles[i]=shapeHole.reverse();}}var faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);// join vertices of inner and outer paths to a single array
for(i=0,l=shapeHoles.length;i<l;i++){shapeHole=shapeHoles[i];shapeVertices=shapeVertices.concat(shapeHole);}// vertices, normals, uvs
for(i=0,l=shapeVertices.length;i<l;i++){var vertex=shapeVertices[i];vertices.push(vertex.x,vertex.y,0);normals.push(0,0,1);uvs.push(vertex.x,vertex.y);// world uvs
}// incides
for(i=0,l=faces.length;i<l;i++){var face=faces[i];var a=face[0]+indexOffset;var b=face[1]+indexOffset;var c=face[2]+indexOffset;indices.push(a,b,c);groupCount+=3;}}}ShapeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ShapeBufferGeometry.prototype.constructor=ShapeBufferGeometry;ShapeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);var shapes=this.parameters.shapes;return toJSON$1(shapes,data);};//
function toJSON$1(shapes,data){data.shapes=[];if(Array.isArray(shapes)){for(var i=0,l=shapes.length;i<l;i++){var shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}return data;}/**
 * @author WestLangley / http://github.com/WestLangley
 * @author Mugen87 / https://github.com/Mugen87
 */function EdgesGeometry(geometry,thresholdAngle){BufferGeometry.call(this);this.type='EdgesGeometry';this.parameters={thresholdAngle:thresholdAngle};thresholdAngle=thresholdAngle!==undefined?thresholdAngle:1;// buffer
var vertices=[];// helper variables
var thresholdDot=Math.cos(MathUtils.DEG2RAD*thresholdAngle);var edge=[0,0],edges={},edge1,edge2;var key,keys=['a','b','c'];// prepare source geometry
var geometry2;if(geometry.isBufferGeometry){geometry2=new Geometry();geometry2.fromBufferGeometry(geometry);}else{geometry2=geometry.clone();}geometry2.mergeVertices();geometry2.computeFaceNormals();var sourceVertices=geometry2.vertices;var faces=geometry2.faces;// now create a data structure where each entry represents an edge with its adjoining faces
for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0;j<3;j++){edge1=face[keys[j]];edge2=face[keys[(j+1)%3]];edge[0]=Math.min(edge1,edge2);edge[1]=Math.max(edge1,edge2);key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1],face1:i,face2:undefined};}else{edges[key].face2=i;}}}// generate vertices
for(key in edges){var e=edges[key];// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.
if(e.face2===undefined||faces[e.face1].normal.dot(faces[e.face2].normal)<=thresholdDot){var vertex=sourceVertices[e.index1];vertices.push(vertex.x,vertex.y,vertex.z);vertex=sourceVertices[e.index2];vertices.push(vertex.x,vertex.y,vertex.z);}}// build geometry
this.setAttribute('position',new Float32BufferAttribute(vertices,3));}EdgesGeometry.prototype=Object.create(BufferGeometry.prototype);EdgesGeometry.prototype.constructor=EdgesGeometry;/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */ // CylinderGeometry
function CylinderGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){Geometry.call(this);this.type='CylinderGeometry';this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength));this.mergeVertices();}CylinderGeometry.prototype=Object.create(Geometry.prototype);CylinderGeometry.prototype.constructor=CylinderGeometry;// CylinderBufferGeometry
function CylinderBufferGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){BufferGeometry.call(this);this.type='CylinderBufferGeometry';this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};var scope=this;radiusTop=radiusTop!==undefined?radiusTop:1;radiusBottom=radiusBottom!==undefined?radiusBottom:1;height=height||1;radialSegments=Math.floor(radialSegments)||8;heightSegments=Math.floor(heightSegments)||1;openEnded=openEnded!==undefined?openEnded:false;thetaStart=thetaStart!==undefined?thetaStart:0.0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables
var index=0;var indexArray=[];var halfHeight=height/2;var groupStart=0;// generate geometry
generateTorso();if(openEnded===false){if(radiusTop>0)generateCap(true);if(radiusBottom>0)generateCap(false);}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function generateTorso(){var x,y;var normal=new Vector3$1();var vertex=new Vector3$1();var groupCount=0;// this will be used to calculate the normal
var slope=(radiusBottom-radiusTop)/height;// generate vertices, normals and uvs
for(y=0;y<=heightSegments;y++){var indexRow=[];var v=y/heightSegments;// calculate the radius of the current row
var radius=v*(radiusBottom-radiusTop)+radiusTop;for(x=0;x<=radialSegments;x++){var u=x/radialSegments;var theta=u*thetaLength+thetaStart;var sinTheta=Math.sin(theta);var cosTheta=Math.cos(theta);// vertex
vertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal
normal.set(sinTheta,slope,cosTheta).normalize();normals.push(normal.x,normal.y,normal.z);// uv
uvs.push(u,1-v);// save index of vertex in respective row
indexRow.push(index++);}// now save vertices of the row in our index array
indexArray.push(indexRow);}// generate indices
for(x=0;x<radialSegments;x++){for(y=0;y<heightSegments;y++){// we use the index array to access the correct indices
var a=indexArray[y][x];var b=indexArray[y+1][x];var c=indexArray[y+1][x+1];var d=indexArray[y][x+1];// faces
indices.push(a,b,d);indices.push(b,c,d);// update group counter
groupCount+=6;}}// add a group to the geometry. this will ensure multi material support
scope.addGroup(groupStart,groupCount,0);// calculate new start value for groups
groupStart+=groupCount;}function generateCap(top){var x,centerIndexStart,centerIndexEnd;var uv=new Vector2();var vertex=new Vector3$1();var groupCount=0;var radius=top===true?radiusTop:radiusBottom;var sign=top===true?1:-1;// save the index of the first center vertex
centerIndexStart=index;// first we generate the center vertex data of the cap.
// because the geometry needs one set of uvs per face,
// we must generate a center vertex per face/segment
for(x=1;x<=radialSegments;x++){// vertex
vertices.push(0,halfHeight*sign,0);// normal
normals.push(0,sign,0);// uv
uvs.push(0.5,0.5);// increase index
index++;}// save the index of the last center vertex
centerIndexEnd=index;// now we generate the surrounding vertices, normals and uvs
for(x=0;x<=radialSegments;x++){var u=x/radialSegments;var theta=u*thetaLength+thetaStart;var cosTheta=Math.cos(theta);var sinTheta=Math.sin(theta);// vertex
vertex.x=radius*sinTheta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal
normals.push(0,sign,0);// uv
uv.x=cosTheta*0.5+0.5;uv.y=sinTheta*0.5*sign+0.5;uvs.push(uv.x,uv.y);// increase index
index++;}// generate indices
for(x=0;x<radialSegments;x++){var c=centerIndexStart+x;var i=centerIndexEnd+x;if(top===true){// face top
indices.push(i,i+1,c);}else{// face bottom
indices.push(i+1,i,c);}groupCount+=3;}// add a group to the geometry. this will ensure multi material support
scope.addGroup(groupStart,groupCount,top===true?1:2);// calculate new start value for groups
groupStart+=groupCount;}}CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype);CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry;/**
 * @author abelnation / http://github.com/abelnation
 */ // ConeGeometry
function ConeGeometry(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){CylinderGeometry.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type='ConeGeometry';this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};}ConeGeometry.prototype=Object.create(CylinderGeometry.prototype);ConeGeometry.prototype.constructor=ConeGeometry;// ConeBufferGeometry
function ConeBufferGeometry(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){CylinderBufferGeometry.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type='ConeBufferGeometry';this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};}ConeBufferGeometry.prototype=Object.create(CylinderBufferGeometry.prototype);ConeBufferGeometry.prototype.constructor=ConeBufferGeometry;/**
 * @author benaadams / https://twitter.com/ben_a_adams
 * @author Mugen87 / https://github.com/Mugen87
 * @author hughes
 */ // CircleGeometry
function CircleGeometry(radius,segments,thetaStart,thetaLength){Geometry.call(this);this.type='CircleGeometry';this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new CircleBufferGeometry(radius,segments,thetaStart,thetaLength));this.mergeVertices();}CircleGeometry.prototype=Object.create(Geometry.prototype);CircleGeometry.prototype.constructor=CircleGeometry;// CircleBufferGeometry
function CircleBufferGeometry(radius,segments,thetaStart,thetaLength){BufferGeometry.call(this);this.type='CircleBufferGeometry';this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};radius=radius||1;segments=segments!==undefined?Math.max(3,segments):8;thetaStart=thetaStart!==undefined?thetaStart:0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;// buffers
var indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables
var i,s;var vertex=new Vector3$1();var uv=new Vector2();// center point
vertices.push(0,0,0);normals.push(0,0,1);uvs.push(0.5,0.5);for(s=0,i=3;s<=segments;s++,i+=3){var segment=thetaStart+s/segments*thetaLength;// vertex
vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal
normals.push(0,0,1);// uvs
uv.x=(vertices[i]/radius+1)/2;uv.y=(vertices[i+1]/radius+1)/2;uvs.push(uv.x,uv.y);}// indices
for(i=1;i<=segments;i++){indices.push(i,i+1,0);}// build geometry
this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}CircleBufferGeometry.prototype=Object.create(BufferGeometry.prototype);CircleBufferGeometry.prototype.constructor=CircleBufferGeometry;var Geometries=/*#__PURE__*/Object.freeze({__proto__:null,WireframeGeometry:WireframeGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,EdgesGeometry:EdgesGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxBufferGeometry});/**
 * @author mrdoob / http://mrdoob.com/
 *
 * parameters = {
 *  color: <THREE.Color>
 * }
 */function ShadowMaterial(parameters){Material.call(this);this.type='ShadowMaterial';this.color=new Color(0x000000);this.transparent=true;this.setValues(parameters);}ShadowMaterial.prototype=Object.create(Material.prototype);ShadowMaterial.prototype.constructor=ShadowMaterial;ShadowMaterial.prototype.isShadowMaterial=true;ShadowMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);return this;};/**
 * @author mrdoob / http://mrdoob.com/
 */function RawShaderMaterial(parameters){ShaderMaterial.call(this,parameters);this.type='RawShaderMaterial';}RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype);RawShaderMaterial.prototype.constructor=RawShaderMaterial;RawShaderMaterial.prototype.isRawShaderMaterial=true;/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  color: <hex>,
 *  roughness: <float>,
 *  metalness: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  roughnessMap: new THREE.Texture( <Image> ),
 *
 *  metalnessMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  envMapIntensity: <float>
 *
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */function MeshStandardMaterial(parameters){Material.call(this);this.defines={'STANDARD':''};this.type='MeshStandardMaterial';this.color=new Color(0xffffff);// diffuse
this.roughness=1.0;this.metalness=0.0;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1.0;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.vertexTangents=false;this.setValues(parameters);}MeshStandardMaterial.prototype=Object.create(Material.prototype);MeshStandardMaterial.prototype.constructor=MeshStandardMaterial;MeshStandardMaterial.prototype.isMeshStandardMaterial=true;MeshStandardMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={'STANDARD':''};this.color.copy(source.color);this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.vertexTangents=source.vertexTangents;return this;};/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  clearcoat: <float>,
 *  clearcoatMap: new THREE.Texture( <Image> ),
 *  clearcoatRoughness: <float>,
 *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),
 *  clearcoatNormalScale: <Vector2>,
 *  clearcoatNormalMap: new THREE.Texture( <Image> ),
 *
 *  reflectivity: <float>,
 *
 *  sheen: <Color>,
 *
 *  transparency: <float>
 * }
 */function MeshPhysicalMaterial(parameters){MeshStandardMaterial.call(this);this.defines={'STANDARD':'','PHYSICAL':''};this.type='MeshPhysicalMaterial';this.clearcoat=0.0;this.clearcoatMap=null;this.clearcoatRoughness=0.0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Vector2(1,1);this.clearcoatNormalMap=null;this.reflectivity=0.5;// maps to F0 = 0.04
this.sheen=null;// null will disable sheen bsdf
this.transparency=0.0;this.setValues(parameters);}MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype);MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial;MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=true;MeshPhysicalMaterial.prototype.copy=function(source){MeshStandardMaterial.prototype.copy.call(this,source);this.defines={'STANDARD':'','PHYSICAL':''};this.clearcoat=source.clearcoat;this.clearcoatMap=source.clearcoatMap;this.clearcoatRoughness=source.clearcoatRoughness;this.clearcoatRoughnessMap=source.clearcoatRoughnessMap;this.clearcoatNormalMap=source.clearcoatNormalMap;this.clearcoatNormalScale.copy(source.clearcoatNormalScale);this.reflectivity=source.reflectivity;if(source.sheen){this.sheen=(this.sheen||new Color()).copy(source.sheen);}else{this.sheen=null;}this.transparency=source.transparency;return this;};/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  specular: <hex>,
 *  shininess: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.MultiplyOperation,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */function MeshPhongMaterial(parameters){Material.call(this);this.type='MeshPhongMaterial';this.color=new Color(0xffffff);// diffuse
this.specular=new Color(0x111111);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshPhongMaterial.prototype=Object.create(Material.prototype);MeshPhongMaterial.prototype.constructor=MeshPhongMaterial;MeshPhongMaterial.prototype.isMeshPhongMaterial=true;MeshPhongMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**
 * @author takahirox / http://github.com/takahirox
 *
 * parameters = {
 *  color: <hex>,
 *  specular: <hex>,
 *  shininess: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *  gradientMap: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */function MeshToonMaterial(parameters){Material.call(this);this.defines={'TOON':''};this.type='MeshToonMaterial';this.color=new Color(0xffffff);this.specular=new Color(0x111111);this.shininess=30;this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshToonMaterial.prototype=Object.create(Material.prototype);MeshToonMaterial.prototype.constructor=MeshToonMaterial;MeshToonMaterial.prototype.isMeshToonMaterial=true;MeshToonMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.gradientMap=source.gradientMap;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  opacity: <float>,
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */function MeshNormalMaterial(parameters){Material.call(this);this.type='MeshNormalMaterial';this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshNormalMaterial.prototype=Object.create(Material.prototype);MeshNormalMaterial.prototype.constructor=MeshNormalMaterial;MeshNormalMaterial.prototype.isMeshNormalMaterial=true;MeshNormalMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */function MeshLambertMaterial(parameters){Material.call(this);this.type='MeshLambertMaterial';this.color=new Color(0xffffff);// diffuse
this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshLambertMaterial.prototype=Object.create(Material.prototype);MeshLambertMaterial.prototype.constructor=MeshLambertMaterial;MeshLambertMaterial.prototype.isMeshLambertMaterial=true;MeshLambertMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  matcap: new THREE.Texture( <Image> ),
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */function MeshMatcapMaterial(parameters){Material.call(this);this.defines={'MATCAP':''};this.type='MeshMatcapMaterial';this.color=new Color(0xffffff);// diffuse
this.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshMatcapMaterial.prototype=Object.create(Material.prototype);MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial;MeshMatcapMaterial.prototype.isMeshMatcapMaterial=true;MeshMatcapMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={'MATCAP':''};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *
 *  scale: <float>,
 *  dashSize: <float>,
 *  gapSize: <float>
 * }
 */function LineDashedMaterial(parameters){LineBasicMaterial.call(this);this.type='LineDashedMaterial';this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(parameters);}LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype);LineDashedMaterial.prototype.constructor=LineDashedMaterial;LineDashedMaterial.prototype.isLineDashedMaterial=true;LineDashedMaterial.prototype.copy=function(source){LineBasicMaterial.prototype.copy.call(this,source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this;};var Materials=/*#__PURE__*/Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});/**
 * @author tschw
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 */var AnimationUtils={// same as Array.prototype.slice, but also works on typed arrays
arraySlice:function arraySlice(array,from,to){if(AnimationUtils.isTypedArray(array)){// in ios9 array.subarray(from, undefined) will return empty array
// but array.subarray(from) or array.subarray(from, len) is correct
return new array.constructor(array.subarray(from,to!==undefined?to:array.length));}return array.slice(from,to);},// converts an array to a specific type
convertArray:function convertArray(array,type,forceClone){if(!array||// let 'undefined' and 'null' pass
!forceClone&&array.constructor===type)return array;if(typeof type.BYTES_PER_ELEMENT==='number'){return new type(array);// create typed array
}return Array.prototype.slice.call(array);// create Array
},isTypedArray:function isTypedArray(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView);},// returns an array by which times and values can be sorted
getKeyframeOrder:function getKeyframeOrder(times){function compareTime(i,j){return times[i]-times[j];}var n=times.length;var result=new Array(n);for(var i=0;i!==n;++i){result[i]=i;}result.sort(compareTime);return result;},// uses the array previously returned by 'getKeyframeOrder' to sort data
sortedArray:function sortedArray(values,stride,order){var nValues=values.length;var result=new values.constructor(nValues);for(var i=0,dstOffset=0;dstOffset!==nValues;++i){var srcOffset=order[i]*stride;for(var j=0;j!==stride;++j){result[dstOffset++]=values[srcOffset+j];}}return result;},// function for parsing AOS keyframe formats
flattenJSON:function flattenJSON(jsonKeys,times,values,valuePropertyName){var i=1,key=jsonKeys[0];while(key!==undefined&&key[valuePropertyName]===undefined){key=jsonKeys[i++];}if(key===undefined)return;// no data
var value=key[valuePropertyName];if(value===undefined)return;// no data
if(Array.isArray(value)){do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push.apply(values,value);// push all elements
}key=jsonKeys[i++];}while(key!==undefined);}else if(value.toArray!==undefined){// ...assume THREE.Math-ish
do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);value.toArray(values,values.length);}key=jsonKeys[i++];}while(key!==undefined);}else{// otherwise push as-is
do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push(value);}key=jsonKeys[i++];}while(key!==undefined);}},subclip:function subclip(sourceClip,name,startFrame,endFrame,fps){fps=fps||30;var clip=sourceClip.clone();clip.name=name;var tracks=[];for(var i=0;i<clip.tracks.length;++i){var track=clip.tracks[i];var valueSize=track.getValueSize();var times=[];var values=[];for(var j=0;j<track.times.length;++j){var frame=track.times[j]*fps;if(frame<startFrame||frame>=endFrame)continue;times.push(track.times[j]);for(var k=0;k<valueSize;++k){values.push(track.values[j*valueSize+k]);}}if(times.length===0)continue;track.times=AnimationUtils.convertArray(times,track.times.constructor);track.values=AnimationUtils.convertArray(values,track.values.constructor);tracks.push(track);}clip.tracks=tracks;// find minimum .times value across all tracks in the trimmed clip
var minStartTime=Infinity;for(var i=0;i<clip.tracks.length;++i){if(minStartTime>clip.tracks[i].times[0]){minStartTime=clip.tracks[i].times[0];}}// shift all tracks such that clip begins at t=0
for(var i=0;i<clip.tracks.length;++i){clip.tracks[i].shift(-1*minStartTime);}clip.resetDuration();return clip;},makeClipAdditive:function makeClipAdditive(targetClip,referenceFrame,referenceClip,fps){if(referenceFrame===undefined)referenceFrame=0;if(referenceClip===undefined)referenceClip=targetClip;if(fps===undefined||fps<=0)fps=30;var numTracks=targetClip.tracks.length;var referenceTime=referenceFrame/fps;// Make each track's values relative to the values at the reference frame
for(var i=0;i<numTracks;++i){var referenceTrack=referenceClip.tracks[i];var referenceTrackType=referenceTrack.ValueTypeName;// Skip this track if it's non-numeric
if(referenceTrackType==='bool'||referenceTrackType==='string')continue;// Find the track in the target clip whose name and type matches the reference track
var targetTrack=targetClip.tracks.find(function(track){return track.name===referenceTrack.name&&track.ValueTypeName===referenceTrackType;});if(targetTrack===undefined)continue;var valueSize=referenceTrack.getValueSize();var lastIndex=referenceTrack.times.length-1;var referenceValue;// Find the value to subtract out of the track
if(referenceTime<=referenceTrack.times[0]){// Reference frame is earlier than the first keyframe, so just use the first keyframe
referenceValue=AnimationUtils.arraySlice(referenceTrack.values,0,referenceTrack.valueSize);}else if(referenceTime>=referenceTrack.times[lastIndex]){// Reference frame is after the last keyframe, so just use the last keyframe
var startIndex=lastIndex*valueSize;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex);}else{// Interpolate to the reference value
var interpolant=referenceTrack.createInterpolant();interpolant.evaluate(referenceTime);referenceValue=interpolant.resultBuffer;}// Conjugate the quaternion
if(referenceTrackType==='quaternion'){var referenceQuat=new Quaternion(referenceValue[0],referenceValue[1],referenceValue[2],referenceValue[3]).normalize().conjugate();referenceQuat.toArray(referenceValue);}// Subtract the reference value from all of the track values
var numTimes=targetTrack.times.length;for(var j=0;j<numTimes;++j){var valueStart=j*valueSize;if(referenceTrackType==='quaternion'){// Multiply the conjugate for quaternion track types
Quaternion.multiplyQuaternionsFlat(targetTrack.values,valueStart,referenceValue,0,targetTrack.values,valueStart);}else{// Subtract each value for all other numeric track types
for(var k=0;k<valueSize;++k){targetTrack.values[valueStart+k]-=referenceValue[k];}}}}targetClip.blendMode=AdditiveAnimationBlendMode;return targetClip;}};/**
 * Abstract base class of interpolants over parametric samples.
 *
 * The parameter domain is one dimensional, typically the time or a path
 * along a curve defined by the data.
 *
 * The sample values can have any dimensionality and derived classes may
 * apply special interpretations to the data.
 *
 * This class provides the interval seek in a Template Method, deferring
 * the actual interpolation to derived classes.
 *
 * Time complexity is O(1) for linear access crossing at most two points
 * and O(log N) for random access, where N is the number of positions.
 *
 * References:
 *
 * 		http://www.oodesign.com/template-method-pattern.html
 *
 * @author tschw
 */function Interpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=resultBuffer!==undefined?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize;}Object.assign(Interpolant.prototype,{evaluate:function evaluate(t){var pp=this.parameterPositions,i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];validate_interval:{seek:{var right;linear_scan:{//- See http://jsperf.com/comparison-to-undefined/3
//- slower code:
//-
//- 				if ( t >= t1 || t1 === undefined ) {
forward_scan:if(!(t<t1)){for(var giveUpAt=i1+2;;){if(t1===undefined){if(t<t0)break forward_scan;// after end
i1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t,t0);}if(i1===giveUpAt)break;// this loop
t0=t1;t1=pp[++i1];if(t<t1){// we have arrived at the sought interval
break seek;}}// prepare binary search on the right side of the index
right=pp.length;break linear_scan;}//- slower code:
//-					if ( t < t0 || t0 === undefined ) {
if(!(t>=t0)){// looping?
var t1global=pp[1];if(t<t1global){i1=2;// + 1, using the scan for the details
t0=t1global;}// linear reverse scan
for(var giveUpAt=i1-2;;){if(t0===undefined){// before start
this._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(i1===giveUpAt)break;// this loop
t1=t0;t0=pp[--i1-1];if(t>=t0){// we have arrived at the sought interval
break seek;}}// prepare binary search on the left side of the index
right=i1;i1=0;break linear_scan;}// the interval is valid
break validate_interval;}// linear scan
// binary search
while(i1<right){var mid=i1+right>>>1;if(t<pp[mid]){right=mid;}else{i1=mid+1;}}t1=pp[i1];t0=pp[i1-1];// check boundary cases, again
if(t0===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(t1===undefined){i1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t0,t);}}// seek
this._cachedIndex=i1;this.intervalChanged_(i1,t0,t1);}// validate_interval
return this.interpolate_(i1,t0,t,t1);},settings:null,// optional, subclass-specific settings structure
// Note: The indirection allows central control of many interpolants.
// --- Protected interface
DefaultSettings_:{},getSettings_:function getSettings_(){return this.settings||this.DefaultSettings_;},copySampleValue_:function copySampleValue_(index){// copies a sample value to the result buffer
var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=index*stride;for(var i=0;i!==stride;++i){result[i]=values[offset+i];}return result;},// Template methods for derived classes:
interpolate_:function interpolate_()/* i1, t0, t, t1 */{throw new Error('call to abstract method');// implementations shall return this.resultBuffer
},intervalChanged_:function intervalChanged_()/* i1, t0, t1 */{// empty
}});// DECLARE ALIAS AFTER assign prototype
Object.assign(Interpolant.prototype,{//( 0, t, t0 ), returns this.resultBuffer
beforeStart_:Interpolant.prototype.copySampleValue_,//( N-1, tN-1, t ), returns this.resultBuffer
afterEnd_:Interpolant.prototype.copySampleValue_});/**
 * Fast and simple cubic spline interpolant.
 *
 * It was derived from a Hermitian construction setting the first derivative
 * at each sample position to the linear slope between neighboring positions
 * over their parameter interval.
 *
 * @author tschw
 */function CubicInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;}CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},intervalChanged_:function intervalChanged_(i1,t0,t1){var pp=this.parameterPositions,iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(tPrev===undefined){switch(this.getSettings_().endingStart){case ZeroSlopeEnding:// f'(t0) = 0
iPrev=i1;tPrev=2*t0-t1;break;case WrapAroundEnding:// use the other end of the curve
iPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:// ZeroCurvatureEnding
// f''(t0) = 0 a.k.a. Natural Spline
iPrev=i1;tPrev=t1;}}if(tNext===undefined){switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:// f'(tN) = 0
iNext=i1;tNext=2*t1-t0;break;case WrapAroundEnding:// use the other end of the curve
iNext=1;tNext=t1+pp[1]-pp[0];break;default:// ZeroCurvatureEnding
// f''(tN) = 0, a.k.a. Natural Spline
iNext=i1-1;tNext=t0;}}var halfDt=(t1-t0)*0.5,stride=this.valueSize;this._weightPrev=halfDt/(t0-tPrev);this._weightNext=halfDt/(tNext-t1);this._offsetPrev=iPrev*stride;this._offsetNext=iNext*stride;},interpolate_:function interpolate_(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,o1=i1*stride,o0=o1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0),pp=p*p,ppp=pp*p;// evaluate polynomials
var sP=-wP*ppp+2*wP*pp-wP*p;var s0=(1+wP)*ppp+(-1.5-2*wP)*pp+(-0.5+wP)*p+1;var s1=(-1-wN)*ppp+(1.5+wN)*pp+0.5*p;var sN=wN*ppp-wN*pp;// combine data linearly
for(var i=0;i!==stride;++i){result[i]=sP*values[oP+i]+s0*values[o0+i]+s1*values[o1+i]+sN*values[oN+i];}return result;}});/**
 * @author tschw
 */function LinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function interpolate_(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset1=i1*stride,offset0=offset1-stride,weight1=(t-t0)/(t1-t0),weight0=1-weight1;for(var i=0;i!==stride;++i){result[i]=values[offset0+i]*weight0+values[offset1+i]*weight1;}return result;}});/**
 *
 * Interpolant that evaluates to the sample value at the position preceeding
 * the parameter.
 *
 * @author tschw
 */function DiscreteInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function interpolate_(i1/*, t0, t, t1 */){return this.copySampleValue_(i1-1);}});/**
 *
 * A timed sequence of keyframes for a specific property.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function KeyframeTrack(name,times,values,interpolation){if(name===undefined)throw new Error('THREE.KeyframeTrack: track name is undefined');if(times===undefined||times.length===0)throw new Error('THREE.KeyframeTrack: no keyframes in track named '+name);this.name=name;this.times=AnimationUtils.convertArray(times,this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation);}// Static methods
Object.assign(KeyframeTrack,{// Serialization (in static context, because of constructor invocation
// and automatic invocation of .toJSON):
toJSON:function toJSON(track){var trackType=track.constructor;var json;// derived classes can define a static toJSON method
if(trackType.toJSON!==undefined){json=trackType.toJSON(track);}else{// by default, we assume the data can be serialized as-is
json={'name':track.name,'times':AnimationUtils.convertArray(track.times,Array),'values':AnimationUtils.convertArray(track.values,Array)};var interpolation=track.getInterpolation();if(interpolation!==track.DefaultInterpolation){json.interpolation=interpolation;}}json.type=track.ValueTypeName;// mandatory
return json;}});Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodDiscrete:function InterpolantFactoryMethodDiscrete(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodLinear:function InterpolantFactoryMethodLinear(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodSmooth:function InterpolantFactoryMethodSmooth(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result);},setInterpolation:function setInterpolation(interpolation){var factoryMethod;switch(interpolation){case InterpolateDiscrete:factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:factoryMethod=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:factoryMethod=this.InterpolantFactoryMethodSmooth;break;}if(factoryMethod===undefined){var message="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined){// fall back to default, unless the default itself is messed up
if(interpolation!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation);}else{throw new Error(message);// fatal, in this case
}}console.warn('THREE.KeyframeTrack:',message);return this;}this.createInterpolant=factoryMethod;return this;},getInterpolation:function getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth;}},getValueSize:function getValueSize(){return this.values.length/this.times.length;},// move all keyframes either forwards or backwards in time
shift:function shift(timeOffset){if(timeOffset!==0.0){var times=this.times;for(var i=0,n=times.length;i!==n;++i){times[i]+=timeOffset;}}return this;},// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
scale:function scale(timeScale){if(timeScale!==1.0){var times=this.times;for(var i=0,n=times.length;i!==n;++i){times[i]*=timeScale;}}return this;},// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
trim:function trim(startTime,endTime){var times=this.times,nKeys=times.length,from=0,to=nKeys-1;while(from!==nKeys&&times[from]<startTime){++from;}while(to!==-1&&times[to]>endTime){--to;}++to;// inclusive -> exclusive bound
if(from!==0||to!==nKeys){// empty tracks are forbidden, so keep at least one keyframe
if(from>=to){to=Math.max(to,1);from=to-1;}var stride=this.getValueSize();this.times=AnimationUtils.arraySlice(times,from,to);this.values=AnimationUtils.arraySlice(this.values,from*stride,to*stride);}return this;},// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
validate:function validate(){var valid=true;var valueSize=this.getValueSize();if(valueSize-Math.floor(valueSize)!==0){console.error('THREE.KeyframeTrack: Invalid value size in track.',this);valid=false;}var times=this.times,values=this.values,nKeys=times.length;if(nKeys===0){console.error('THREE.KeyframeTrack: Track is empty.',this);valid=false;}var prevTime=null;for(var i=0;i!==nKeys;i++){var currTime=times[i];if(typeof currTime==='number'&&isNaN(currTime)){console.error('THREE.KeyframeTrack: Time is not a valid number.',this,i,currTime);valid=false;break;}if(prevTime!==null&&prevTime>currTime){console.error('THREE.KeyframeTrack: Out of order keys.',this,i,currTime,prevTime);valid=false;break;}prevTime=currTime;}if(values!==undefined){if(AnimationUtils.isTypedArray(values)){for(var i=0,n=values.length;i!==n;++i){var value=values[i];if(isNaN(value)){console.error('THREE.KeyframeTrack: Value is not a valid number.',this,i,value);valid=false;break;}}}}return valid;},// removes equivalent sequential keys as common in morph target sequences
// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
optimize:function optimize(){// times or values may be shared with other tracks, so overwriting is unsafe
var times=AnimationUtils.arraySlice(this.times),values=AnimationUtils.arraySlice(this.values),stride=this.getValueSize(),smoothInterpolation=this.getInterpolation()===InterpolateSmooth,writeIndex=1,lastIndex=times.length-1;for(var i=1;i<lastIndex;++i){var keep=false;var time=times[i];var timeNext=times[i+1];// remove adjacent keyframes scheduled at the same time
if(time!==timeNext&&(i!==1||time!==time[0])){if(!smoothInterpolation){// remove unnecessary keyframes same as their neighbors
var offset=i*stride,offsetP=offset-stride,offsetN=offset+stride;for(var j=0;j!==stride;++j){var value=values[offset+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=true;break;}}}else{keep=true;}}// in-place compaction
if(keep){if(i!==writeIndex){times[writeIndex]=times[i];var readOffset=i*stride,writeOffset=writeIndex*stride;for(var j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}}++writeIndex;}}// flush last keyframe (compaction looks ahead)
if(lastIndex>0){times[writeIndex]=times[lastIndex];for(var readOffset=lastIndex*stride,writeOffset=writeIndex*stride,j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}++writeIndex;}if(writeIndex!==times.length){this.times=AnimationUtils.arraySlice(times,0,writeIndex);this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride);}else{this.times=times;this.values=values;}return this;},clone:function clone(){var times=AnimationUtils.arraySlice(this.times,0);var values=AnimationUtils.arraySlice(this.values,0);var TypedKeyframeTrack=this.constructor;var track=new TypedKeyframeTrack(this.name,times,values);// Interpolant argument to constructor is not saved, so copy the factory method directly.
track.createInterpolant=this.createInterpolant;return track;}});/**
 *
 * A Track of Boolean keyframe values.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function BooleanKeyframeTrack(name,times,values){KeyframeTrack.call(this,name,times,values);}BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:'bool',ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined// Note: Actually this track could have a optimized / compressed
// representation of a single value and a custom interpolant that
// computes "firstValue ^ isOdd( index )".
});/**
 *
 * A Track of keyframe values that represent color.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function ColorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:'color'// ValueBufferType is inherited
// DefaultInterpolation is inherited
// Note: Very basic implementation and nothing special yet.
// However, this is the place for color space parameterization.
});/**
 *
 * A Track of numeric keyframe values.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function NumberKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:'number'// ValueBufferType is inherited
// DefaultInterpolation is inherited
});/**
 * Spherical linear unit quaternion interpolant.
 *
 * @author tschw
 */function QuaternionLinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function interpolate_(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=i1*stride,alpha=(t-t0)/(t1-t0);for(var end=offset+stride;offset!==end;offset+=4){Quaternion.slerpFlat(result,0,values,offset-stride,values,offset,alpha);}return result;}});/**
 *
 * A Track of quaternion keyframe values.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function QuaternionKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:'quaternion',// ValueBufferType is inherited
DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodLinear:function InterpolantFactoryMethodLinear(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodSmooth:undefined// not yet implemented
});/**
 *
 * A Track that interpolates Strings
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function StringKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:'string',ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});/**
 *
 * A Track of vectored keyframe values.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function VectorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:'vector'// ValueBufferType is inherited
// DefaultInterpolation is inherited
});/**
 *
 * Reusable set of Tracks that represent an animation.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 */function AnimationClip(name,duration,tracks,blendMode){this.name=name;this.tracks=tracks;this.duration=duration!==undefined?duration:-1;this.blendMode=blendMode!==undefined?blendMode:NormalAnimationBlendMode;this.uuid=MathUtils.generateUUID();// this means it should figure out its duration by scanning the tracks
if(this.duration<0){this.resetDuration();}}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return NumberKeyframeTrack;case'vector':case'vector2':case'vector3':case'vector4':return VectorKeyframeTrack;case'color':return ColorKeyframeTrack;case'quaternion':return QuaternionKeyframeTrack;case'bool':case'boolean':return BooleanKeyframeTrack;case'string':return StringKeyframeTrack;}throw new Error('THREE.KeyframeTrack: Unsupported typeName: '+typeName);}function parseKeyframeTrack(json){if(json.type===undefined){throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');}var trackType=getTrackTypeForValueTypeName(json.type);if(json.times===undefined){var times=[],values=[];AnimationUtils.flattenJSON(json.keys,times,values,'value');json.times=times;json.values=values;}// derived classes can define a static parse method
if(trackType.parse!==undefined){return trackType.parse(json);}else{// by default, we assume a constructor compatible with the base
return new trackType(json.name,json.times,json.values,json.interpolation);}}Object.assign(AnimationClip,{parse:function parse(json){var tracks=[],jsonTracks=json.tracks,frameTime=1.0/(json.fps||1.0);for(var i=0,n=jsonTracks.length;i!==n;++i){tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));}return new AnimationClip(json.name,json.duration,tracks,json.blendMode);},toJSON:function toJSON(clip){var tracks=[],clipTracks=clip.tracks;var json={'name':clip.name,'duration':clip.duration,'tracks':tracks,'uuid':clip.uuid,'blendMode':clip.blendMode};for(var i=0,n=clipTracks.length;i!==n;++i){tracks.push(KeyframeTrack.toJSON(clipTracks[i]));}return json;},CreateFromMorphTargetSequence:function CreateFromMorphTargetSequence(name,morphTargetSequence,fps,noLoop){var numMorphTargets=morphTargetSequence.length;var tracks=[];for(var i=0;i<numMorphTargets;i++){var times=[];var values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+1)%numMorphTargets);values.push(0,1,0);var order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);// if there is a key at the first frame, duplicate it as the
// last frame as well for perfect loop.
if(!noLoop&&times[0]===0){times.push(numMorphTargets);values.push(values[0]);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluences['+morphTargetSequence[i].name+']',times,values).scale(1.0/fps));}return new AnimationClip(name,-1,tracks);},findByName:function findByName(objectOrClipArray,name){var clipArray=objectOrClipArray;if(!Array.isArray(objectOrClipArray)){var o=objectOrClipArray;clipArray=o.geometry&&o.geometry.animations||o.animations;}for(var i=0;i<clipArray.length;i++){if(clipArray[i].name===name){return clipArray[i];}}return null;},CreateClipsFromMorphTargetSequences:function CreateClipsFromMorphTargetSequences(morphTargets,fps,noLoop){var animationToMorphTargets={};// tested with https://regex101.com/ on trick sequences
// such flamingo_flyA_003, flamingo_run1_003, crdeath0059
var pattern=/^([\w-]*?)([\d]+)$/;// sort morph target names into animation groups based
// patterns like Walk_001, Walk_002, Run_001, Run_002
for(var i=0,il=morphTargets.length;i<il;i++){var morphTarget=morphTargets[i];var parts=morphTarget.name.match(pattern);if(parts&&parts.length>1){var name=parts[1];var animationMorphTargets=animationToMorphTargets[name];if(!animationMorphTargets){animationToMorphTargets[name]=animationMorphTargets=[];}animationMorphTargets.push(morphTarget);}}var clips=[];for(var name in animationToMorphTargets){clips.push(AnimationClip.CreateFromMorphTargetSequence(name,animationToMorphTargets[name],fps,noLoop));}return clips;},// parse the animation.hierarchy format
parseAnimation:function parseAnimation(animation,bones){if(!animation){console.error('THREE.AnimationClip: No animation in JSONLoader data.');return null;}var addNonemptyTrack=function addNonemptyTrack(trackType,trackName,animationKeys,propertyName,destTracks){// only return track if there are actually keys.
if(animationKeys.length!==0){var times=[];var values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);// empty keys are filtered out, so check again
if(times.length!==0){destTracks.push(new trackType(trackName,times,values));}}};var tracks=[];var clipName=animation.name||'default';// automatic length determination in AnimationClip.
var duration=animation.length||-1;var fps=animation.fps||30;var blendMode=animation.blendMode;var hierarchyTracks=animation.hierarchy||[];for(var h=0;h<hierarchyTracks.length;h++){var animationKeys=hierarchyTracks[h].keys;// skip empty tracks
if(!animationKeys||animationKeys.length===0)continue;// process morph targets
if(animationKeys[0].morphTargets){// figure out all morph targets used in this track
var morphTargetNames={};for(var k=0;k<animationKeys.length;k++){if(animationKeys[k].morphTargets){for(var m=0;m<animationKeys[k].morphTargets.length;m++){morphTargetNames[animationKeys[k].morphTargets[m]]=-1;}}}// create a track for each morph target with all zero
// morphTargetInfluences except for the keys in which
// the morphTarget is named.
for(var morphTargetName in morphTargetNames){var times=[];var values=[];for(var m=0;m!==animationKeys[k].morphTargets.length;++m){var animationKey=animationKeys[k];times.push(animationKey.time);values.push(animationKey.morphTarget===morphTargetName?1:0);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluence['+morphTargetName+']',times,values));}duration=morphTargetNames.length*(fps||1.0);}else{// ...assume skeletal animation
var boneName='.bones['+bones[h].name+']';addNonemptyTrack(VectorKeyframeTrack,boneName+'.position',animationKeys,'pos',tracks);addNonemptyTrack(QuaternionKeyframeTrack,boneName+'.quaternion',animationKeys,'rot',tracks);addNonemptyTrack(VectorKeyframeTrack,boneName+'.scale',animationKeys,'scl',tracks);}}if(tracks.length===0){return null;}var clip=new AnimationClip(clipName,duration,tracks,blendMode);return clip;}});Object.assign(AnimationClip.prototype,{resetDuration:function resetDuration(){var tracks=this.tracks,duration=0;for(var i=0,n=tracks.length;i!==n;++i){var track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1]);}this.duration=duration;return this;},trim:function trim(){for(var i=0;i<this.tracks.length;i++){this.tracks[i].trim(0,this.duration);}return this;},validate:function validate(){var valid=true;for(var i=0;i<this.tracks.length;i++){valid=valid&&this.tracks[i].validate();}return valid;},optimize:function optimize(){for(var i=0;i<this.tracks.length;i++){this.tracks[i].optimize();}return this;},clone:function clone(){var tracks=[];for(var i=0;i<this.tracks.length;i++){tracks.push(this.tracks[i].clone());}return new AnimationClip(this.name,this.duration,tracks,this.blendMode);}});/**
 * @author mrdoob / http://mrdoob.com/
 */var Cache={enabled:false,files:{},add:function add(key,file){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Adding key:', key );
this.files[key]=file;},get:function get(key){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Checking key:', key );
return this.files[key];},remove:function remove(key){delete this.files[key];},clear:function clear(){this.files={};}};/**
 * @author mrdoob / http://mrdoob.com/
 */function LoadingManager(onLoad,onProgress,onError){var scope=this;var isLoading=false;var itemsLoaded=0;var itemsTotal=0;var urlModifier=undefined;var handlers=[];// Refer to #5689 for the reason why we don't set .onStart
// in the constructor
this.onStart=undefined;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){itemsTotal++;if(isLoading===false){if(scope.onStart!==undefined){scope.onStart(url,itemsLoaded,itemsTotal);}}isLoading=true;};this.itemEnd=function(url){itemsLoaded++;if(scope.onProgress!==undefined){scope.onProgress(url,itemsLoaded,itemsTotal);}if(itemsLoaded===itemsTotal){isLoading=false;if(scope.onLoad!==undefined){scope.onLoad();}}};this.itemError=function(url){if(scope.onError!==undefined){scope.onError(url);}};this.resolveURL=function(url){if(urlModifier){return urlModifier(url);}return url;};this.setURLModifier=function(transform){urlModifier=transform;return this;};this.addHandler=function(regex,loader){handlers.push(regex,loader);return this;};this.removeHandler=function(regex){var index=handlers.indexOf(regex);if(index!==-1){handlers.splice(index,2);}return this;};this.getHandler=function(file){for(var i=0,l=handlers.length;i<l;i+=2){var regex=handlers[i];var loader=handlers[i+1];if(regex.global)regex.lastIndex=0;// see #17920
if(regex.test(file)){return loader;}}return null;};}var DefaultLoadingManager=new LoadingManager();/**
 * @author alteredq / http://alteredqualia.com/
 */function Loader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;this.crossOrigin='anonymous';this.path='';this.resourcePath='';this.requestHeader={};}Object.assign(Loader.prototype,{load:function load()/* url, onLoad, onProgress, onError */{},loadAsync:function loadAsync(url,onProgress){var scope=this;return new Promise(function(resolve,reject){scope.load(url,resolve,onProgress,reject);});},parse:function parse()/* data */{},setCrossOrigin:function setCrossOrigin(crossOrigin){this.crossOrigin=crossOrigin;return this;},setPath:function setPath(path){this.path=path;return this;},setResourcePath:function setResourcePath(resourcePath){this.resourcePath=resourcePath;return this;},setRequestHeader:function setRequestHeader(requestHeader){this.requestHeader=requestHeader;return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 */var loading={};function FileLoader(manager){Loader.call(this,manager);}FileLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FileLoader,load:function load(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}// Check if request is duplicate
if(loading[url]!==undefined){loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});return;}// Check for data: URI
var dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/;var dataUriRegexResult=url.match(dataUriRegex);// Safari can not handle Data URIs through XMLHttpRequest so process manually
if(dataUriRegexResult){var mimeType=dataUriRegexResult[1];var isBase64=!!dataUriRegexResult[2];var data=dataUriRegexResult[3];data=decodeURIComponent(data);if(isBase64)data=atob(data);try{var response;var responseType=(this.responseType||'').toLowerCase();switch(responseType){case'arraybuffer':case'blob':var view=new Uint8Array(data.length);for(var i=0;i<data.length;i++){view[i]=data.charCodeAt(i);}if(responseType==='blob'){response=new Blob([view.buffer],{type:mimeType});}else{response=view.buffer;}break;case'document':var parser=new DOMParser();response=parser.parseFromString(data,mimeType);break;case'json':response=JSON.parse(data);break;default:// 'text' or other
response=data;break;}// Wait for next browser tick like standard XMLHttpRequest event dispatching does
setTimeout(function(){if(onLoad)onLoad(response);scope.manager.itemEnd(url);},0);}catch(error){// Wait for next browser tick like standard XMLHttpRequest event dispatching does
setTimeout(function(){if(onError)onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url);},0);}}else{// Initialise array for duplicate requests
loading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});var request=new XMLHttpRequest();request.open('GET',url,true);request.addEventListener('load',function(event){var response=this.response;var callbacks=loading[url];delete loading[url];if(this.status===200||this.status===0){// Some browsers return HTTP Status 0 when using non-http protocol
// e.g. 'file://' or 'data://'. Handle as success.
if(this.status===0)console.warn('THREE.FileLoader: HTTP Status 0 received.');// Add to cache only on HTTP success, so that we do not cache
// error response bodies as proper responses to requests.
Cache.add(url,response);for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onLoad)callback.onLoad(response);}scope.manager.itemEnd(url);}else{for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);}},false);request.addEventListener('progress',function(event){var callbacks=loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onProgress)callback.onProgress(event);}},false);request.addEventListener('error',function(event){var callbacks=loading[url];delete loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);request.addEventListener('abort',function(event){var callbacks=loading[url];delete loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);if(this.responseType!==undefined)request.responseType=this.responseType;if(this.withCredentials!==undefined)request.withCredentials=this.withCredentials;if(request.overrideMimeType)request.overrideMimeType(this.mimeType!==undefined?this.mimeType:'text/plain');for(var header in this.requestHeader){request.setRequestHeader(header,this.requestHeader[header]);}request.send(null);}scope.manager.itemStart(url);return request;},setResponseType:function setResponseType(value){this.responseType=value;return this;},setWithCredentials:function setWithCredentials(value){this.withCredentials=value;return this;},setMimeType:function setMimeType(value){this.mimeType=value;return this;}});/**
 * @author bhouston / http://clara.io/
 */function AnimationLoader(manager){Loader.call(this,manager);}AnimationLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AnimationLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);},parse:function parse(json){var animations=[];for(var i=0;i<json.length;i++){var clip=AnimationClip.parse(json[i]);animations.push(clip);}return animations;}});/**
 * @author mrdoob / http://mrdoob.com/
 *
 * Abstract Base class to block based textures loader (dds, pvr, ...)
 *
 * Sub classes have to implement the parse() method which will be used in load().
 */function CompressedTextureLoader(manager){Loader.call(this,manager);}CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var images=[];var texture=new CompressedTexture();texture.image=images;var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');function loadTexture(i){loader.load(url[i],function(buffer){var texDatas=scope.parse(buffer,true);images[i]={width:texDatas.width,height:texDatas.height,format:texDatas.format,mipmaps:texDatas.mipmaps};loaded+=1;if(loaded===6){if(texDatas.mipmapCount===1)texture.minFilter=LinearFilter;texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}},onProgress,onError);}if(Array.isArray(url)){var loaded=0;for(var i=0,il=url.length;i<il;++i){loadTexture(i);}}else{// compressed cubemap texture stored in a single DDS file
loader.load(url,function(buffer){var texDatas=scope.parse(buffer,true);if(texDatas.isCubemap){var faces=texDatas.mipmaps.length/texDatas.mipmapCount;for(var f=0;f<faces;f++){images[f]={mipmaps:[]};for(var i=0;i<texDatas.mipmapCount;i++){images[f].mipmaps.push(texDatas.mipmaps[f*texDatas.mipmapCount+i]);images[f].format=texDatas.format;images[f].width=texDatas.width;images[f].height=texDatas.height;}}}else{texture.image.width=texDatas.width;texture.image.height=texDatas.height;texture.mipmaps=texDatas.mipmaps;}if(texDatas.mipmapCount===1){texture.minFilter=LinearFilter;}texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);},onProgress,onError);}return texture;}});/**
 * @author Nikos M. / https://github.com/foo123/
 *
 * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
 *
 * Sub classes have to implement the parse() method which will be used in load().
 */function DataTextureLoader(manager){Loader.call(this,manager);}DataTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DataTextureLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var texture=new DataTexture();var loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setPath(this.path);loader.load(url,function(buffer){var texData=scope.parse(buffer);if(!texData)return;if(texData.image!==undefined){texture.image=texData.image;}else if(texData.data!==undefined){texture.image.width=texData.width;texture.image.height=texData.height;texture.image.data=texData.data;}texture.wrapS=texData.wrapS!==undefined?texData.wrapS:ClampToEdgeWrapping;texture.wrapT=texData.wrapT!==undefined?texData.wrapT:ClampToEdgeWrapping;texture.magFilter=texData.magFilter!==undefined?texData.magFilter:LinearFilter;texture.minFilter=texData.minFilter!==undefined?texData.minFilter:LinearFilter;texture.anisotropy=texData.anisotropy!==undefined?texData.anisotropy:1;if(texData.format!==undefined){texture.format=texData.format;}if(texData.type!==undefined){texture.type=texData.type;}if(texData.mipmaps!==undefined){texture.mipmaps=texData.mipmaps;texture.minFilter=LinearMipmapLinearFilter;// presumably...
}if(texData.mipmapCount===1){texture.minFilter=LinearFilter;}texture.needsUpdate=true;if(onLoad)onLoad(texture,texData);},onProgress,onError);return texture;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function ImageLoader(manager){Loader.call(this,manager);}ImageLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageLoader,load:function load(url,onLoad,onProgress,onError){if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}var image=document.createElementNS('http://www.w3.org/1999/xhtml','img');function onImageLoad(){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);Cache.add(url,this);if(onLoad)onLoad(this);scope.manager.itemEnd(url);}function onImageError(event){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);if(onError)onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url);}image.addEventListener('load',onImageLoad,false);image.addEventListener('error',onImageError,false);if(url.substr(0,5)!=='data:'){if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;}scope.manager.itemStart(url);image.src=url;return image;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function CubeTextureLoader(manager){Loader.call(this,manager);}CubeTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CubeTextureLoader,load:function load(urls,onLoad,onProgress,onError){var texture=new CubeTexture();var loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);var loaded=0;function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;if(loaded===6){texture.needsUpdate=true;if(onLoad)onLoad(texture);}},undefined,onError);}for(var i=0;i<urls.length;++i){loadTexture(i);}return texture;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function TextureLoader(manager){Loader.call(this,manager);}TextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:TextureLoader,load:function load(url,onLoad,onProgress,onError){var texture=new Texture();var loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
var isJPEG=url.search(/\.jpe?g($|\?)/i)>0||url.search(/^data\:image\/jpeg/)===0;texture.format=isJPEG?RGBFormat:RGBAFormat;texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}},onProgress,onError);return texture;}});/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Extensible curve object
 *
 * Some common of curve methods:
 * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )
 * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )
 * .getPoints(), .getSpacedPoints()
 * .getLength()
 * .updateArcLengths()
 *
 * This following curves inherit from THREE.Curve:
 *
 * -- 2D curves --
 * THREE.ArcCurve
 * THREE.CubicBezierCurve
 * THREE.EllipseCurve
 * THREE.LineCurve
 * THREE.QuadraticBezierCurve
 * THREE.SplineCurve
 *
 * -- 3D curves --
 * THREE.CatmullRomCurve3
 * THREE.CubicBezierCurve3
 * THREE.LineCurve3
 * THREE.QuadraticBezierCurve3
 *
 * A series of curves can be represented as a THREE.CurvePath.
 *
 **/ /**************************************************************
 *	Abstract Curve base class
 **************************************************************/function Curve(){this.type='Curve';this.arcLengthDivisions=200;}Object.assign(Curve.prototype,{// Virtual base class method to overwrite and implement in subclasses
//	- t [0 .. 1]
getPoint:function getPoint()/* t, optionalTarget */{console.warn('THREE.Curve: .getPoint() not implemented.');return null;},// Get point at relative position in curve according to arc length
// - u [0 .. 1]
getPointAt:function getPointAt(u,optionalTarget){var t=this.getUtoTmapping(u);return this.getPoint(t,optionalTarget);},// Get sequence of points using getPoint( t )
getPoints:function getPoints(divisions){if(divisions===undefined)divisions=5;var points=[];for(var d=0;d<=divisions;d++){points.push(this.getPoint(d/divisions));}return points;},// Get sequence of points using getPointAt( u )
getSpacedPoints:function getSpacedPoints(divisions){if(divisions===undefined)divisions=5;var points=[];for(var d=0;d<=divisions;d++){points.push(this.getPointAt(d/divisions));}return points;},// Get total curve arc length
getLength:function getLength(){var lengths=this.getLengths();return lengths[lengths.length-1];},// Get list of cumulative segment lengths
getLengths:function getLengths(divisions){if(divisions===undefined)divisions=this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate){return this.cacheArcLengths;}this.needsUpdate=false;var cache=[];var current,last=this.getPoint(0);var p,sum=0;cache.push(0);for(p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current;}this.cacheArcLengths=cache;return cache;// { sums: cache, sum: sum }; Sum is in the last element.
},updateArcLengths:function updateArcLengths(){this.needsUpdate=true;this.getLengths();},// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant
getUtoTmapping:function getUtoTmapping(u,distance){var arcLengths=this.getLengths();var i=0,il=arcLengths.length;var targetArcLength;// The targeted u distance value to get
if(distance){targetArcLength=distance;}else{targetArcLength=u*arcLengths[il-1];}// binary search for the index with largest value smaller than target u distance
var low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats
comparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;}else if(comparison>0){high=i-1;}else{high=i;break;// DONE
}}i=high;if(arcLengths[i]===targetArcLength){return i/(il-1);}// we could get finer grain at lengths, or use simple interpolation between two points
var lengthBefore=arcLengths[i];var lengthAfter=arcLengths[i+1];var segmentLength=lengthAfter-lengthBefore;// determine where we are between the 'before' and 'after' points
var segmentFraction=(targetArcLength-lengthBefore)/segmentLength;// add that fractional amount to t
var t=(i+segmentFraction)/(il-1);return t;},// Returns a unit vector tangent at t
// In case any sub curve does not implement its tangent derivation,
// 2 points a small delta apart will be used to find its gradient
// which seems to give a reasonable approximation
getTangent:function getTangent(t,optionalTarget){var delta=0.0001;var t1=t-delta;var t2=t+delta;// Capping in case of danger
if(t1<0)t1=0;if(t2>1)t2=1;var pt1=this.getPoint(t1);var pt2=this.getPoint(t2);var tangent=optionalTarget||(pt1.isVector2?new Vector2():new Vector3$1());tangent.copy(pt2).sub(pt1).normalize();return tangent;},getTangentAt:function getTangentAt(u,optionalTarget){var t=this.getUtoTmapping(u);return this.getTangent(t,optionalTarget);},computeFrenetFrames:function computeFrenetFrames(segments,closed){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf
var normal=new Vector3$1();var tangents=[];var normals=[];var binormals=[];var vec=new Vector3$1();var mat=new Matrix4();var i,u,theta;// compute the tangent vectors for each segment on the curve
for(i=0;i<=segments;i++){u=i/segments;tangents[i]=this.getTangentAt(u,new Vector3$1());tangents[i].normalize();}// select an initial normal vector perpendicular to the first tangent vector,
// and in the direction of the minimum tangent xyz component
normals[0]=new Vector3$1();binormals[0]=new Vector3$1();var min=Number.MAX_VALUE;var tx=Math.abs(tangents[0].x);var ty=Math.abs(tangents[0].y);var tz=Math.abs(tangents[0].z);if(tx<=min){min=tx;normal.set(1,0,0);}if(ty<=min){min=ty;normal.set(0,1,0);}if(tz<=min){normal.set(0,0,1);}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);// compute the slowly-varying normal and binormal vectors for each segment on the curve
for(i=1;i<=segments;i++){normals[i]=normals[i-1].clone();binormals[i]=binormals[i-1].clone();vec.crossVectors(tangents[i-1],tangents[i]);if(vec.length()>Number.EPSILON){vec.normalize();theta=Math.acos(MathUtils.clamp(tangents[i-1].dot(tangents[i]),-1,1));// clamp for floating pt errors
normals[i].applyMatrix4(mat.makeRotationAxis(vec,theta));}binormals[i].crossVectors(tangents[i],normals[i]);}// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same
if(closed===true){theta=Math.acos(MathUtils.clamp(normals[0].dot(normals[segments]),-1,1));theta/=segments;if(tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))>0){theta=-theta;}for(i=1;i<=segments;i++){// twist a little...
normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i));binormals[i].crossVectors(tangents[i],normals[i]);}}return{tangents:tangents,normals:normals,binormals:binormals};},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(source){this.arcLengthDivisions=source.arcLengthDivisions;return this;},toJSON:function toJSON(){var data={metadata:{version:4.5,type:'Curve',generator:'Curve.toJSON'}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data;},fromJSON:function fromJSON(json){this.arcLengthDivisions=json.arcLengthDivisions;return this;}});function EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){Curve.call(this);this.type='EllipseCurve';this.aX=aX||0;this.aY=aY||0;this.xRadius=xRadius||1;this.yRadius=yRadius||1;this.aStartAngle=aStartAngle||0;this.aEndAngle=aEndAngle||2*Math.PI;this.aClockwise=aClockwise||false;this.aRotation=aRotation||0;}EllipseCurve.prototype=Object.create(Curve.prototype);EllipseCurve.prototype.constructor=EllipseCurve;EllipseCurve.prototype.isEllipseCurve=true;EllipseCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();var twoPi=Math.PI*2;var deltaAngle=this.aEndAngle-this.aStartAngle;var samePoints=Math.abs(deltaAngle)<Number.EPSILON;// ensures that deltaAngle is 0 .. 2 PI
while(deltaAngle<0){deltaAngle+=twoPi;}while(deltaAngle>twoPi){deltaAngle-=twoPi;}if(deltaAngle<Number.EPSILON){if(samePoints){deltaAngle=0;}else{deltaAngle=twoPi;}}if(this.aClockwise===true&&!samePoints){if(deltaAngle===twoPi){deltaAngle=-twoPi;}else{deltaAngle=deltaAngle-twoPi;}}var angle=this.aStartAngle+t*deltaAngle;var x=this.aX+this.xRadius*Math.cos(angle);var y=this.aY+this.yRadius*Math.sin(angle);if(this.aRotation!==0){var cos=Math.cos(this.aRotation);var sin=Math.sin(this.aRotation);var tx=x-this.aX;var ty=y-this.aY;// Rotate the point about the center of the ellipse.
x=tx*cos-ty*sin+this.aX;y=tx*sin+ty*cos+this.aY;}return point.set(x,y);};EllipseCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this;};EllipseCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data;};EllipseCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this;};function ArcCurve(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){EllipseCurve.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);this.type='ArcCurve';}ArcCurve.prototype=Object.create(EllipseCurve.prototype);ArcCurve.prototype.constructor=ArcCurve;ArcCurve.prototype.isArcCurve=true;/**
 * @author zz85 https://github.com/zz85
 *
 * Centripetal CatmullRom Curve - which is useful for avoiding
 * cusps and self-intersections in non-uniform catmull rom curves.
 * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
 *
 * curve.type accepts centripetal(default), chordal and catmullrom
 * curve.tension is used for catmullrom which defaults to 0.5
 */ /*
Based on an optimized c++ solution in
 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
 - http://ideone.com/NoEbVM

This CubicPoly class could be used for reusing some variables and calculations,
but for three.js curve use, it could be possible inlined and flatten into a single function call
which can be placed in CurveUtils.
*/function CubicPoly(){var c0=0,c1=0,c2=0,c3=0;/*
	 * Compute coefficients for a cubic polynomial
	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
	 * such that
	 *   p(0) = x0, p(1) = x1
	 *  and
	 *   p'(0) = t0, p'(1) = t1.
	 */function init(x0,x1,t0,t1){c0=x0;c1=t0;c2=-3*x0+3*x1-2*t0-t1;c3=2*x0-2*x1+t0+t1;}return{initCatmullRom:function initCatmullRom(x0,x1,x2,x3,tension){init(x1,x2,tension*(x2-x0),tension*(x3-x1));},initNonuniformCatmullRom:function initNonuniformCatmullRom(x0,x1,x2,x3,dt0,dt1,dt2){// compute tangents when parameterized in [t1,t2]
var t1=(x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1;var t2=(x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2;// rescale tangents for parametrization in [0,1]
t1*=dt1;t2*=dt1;init(x1,x2,t1,t2);},calc:function calc(t){var t2=t*t;var t3=t2*t;return c0+c1*t+c2*t2+c3*t3;}};}//
var tmp=new Vector3$1();var px=new CubicPoly(),py=new CubicPoly(),pz=new CubicPoly();function CatmullRomCurve3(points,closed,curveType,tension){Curve.call(this);this.type='CatmullRomCurve3';this.points=points||[];this.closed=closed||false;this.curveType=curveType||'centripetal';this.tension=tension||0.5;}CatmullRomCurve3.prototype=Object.create(Curve.prototype);CatmullRomCurve3.prototype.constructor=CatmullRomCurve3;CatmullRomCurve3.prototype.isCatmullRomCurve3=true;CatmullRomCurve3.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector3$1();var points=this.points;var l=points.length;var p=(l-(this.closed?0:1))*t;var intPoint=Math.floor(p);var weight=p-intPoint;if(this.closed){intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/l)+1)*l;}else if(weight===0&&intPoint===l-1){intPoint=l-2;weight=1;}var p0,p1,p2,p3;// 4 points
if(this.closed||intPoint>0){p0=points[(intPoint-1)%l];}else{// extrapolate first point
tmp.subVectors(points[0],points[1]).add(points[0]);p0=tmp;}p1=points[intPoint%l];p2=points[(intPoint+1)%l];if(this.closed||intPoint+2<l){p3=points[(intPoint+2)%l];}else{// extrapolate last point
tmp.subVectors(points[l-1],points[l-2]).add(points[l-1]);p3=tmp;}if(this.curveType==='centripetal'||this.curveType==='chordal'){// init Centripetal / Chordal Catmull-Rom
var pow=this.curveType==='chordal'?0.5:0.25;var dt0=Math.pow(p0.distanceToSquared(p1),pow);var dt1=Math.pow(p1.distanceToSquared(p2),pow);var dt2=Math.pow(p2.distanceToSquared(p3),pow);// safety check for repeated points
if(dt1<1e-4)dt1=1.0;if(dt0<1e-4)dt0=dt1;if(dt2<1e-4)dt2=dt1;px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,p3.x,dt0,dt1,dt2);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,p3.y,dt0,dt1,dt2);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,p3.z,dt0,dt1,dt2);}else if(this.curveType==='catmullrom'){px.initCatmullRom(p0.x,p1.x,p2.x,p3.x,this.tension);py.initCatmullRom(p0.y,p1.y,p2.y,p3.y,this.tension);pz.initCatmullRom(p0.z,p1.z,p2.z,p3.z,this.tension);}point.set(px.calc(weight),py.calc(weight),pz.calc(weight));return point;};CatmullRomCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var i=0,l=source.points.length;i<l;i++){var point=source.points[i];this.points.push(point.clone());}this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this;};CatmullRomCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.points=[];for(var i=0,l=this.points.length;i<l;i++){var point=this.points[i];data.points.push(point.toArray());}data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data;};CatmullRomCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var i=0,l=json.points.length;i<l;i++){var point=json.points[i];this.points.push(new Vector3$1().fromArray(point));}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this;};/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Bezier Curves formulas obtained from
 * http://en.wikipedia.org/wiki/Bézier_curve
 */function CatmullRom(t,p0,p1,p2,p3){var v0=(p2-p0)*0.5;var v1=(p3-p1)*0.5;var t2=t*t;var t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1;}//
function QuadraticBezierP0(t,p){var k=1-t;return k*k*p;}function QuadraticBezierP1(t,p){return 2*(1-t)*t*p;}function QuadraticBezierP2(t,p){return t*t*p;}function QuadraticBezier(t,p0,p1,p2){return QuadraticBezierP0(t,p0)+QuadraticBezierP1(t,p1)+QuadraticBezierP2(t,p2);}//
function CubicBezierP0(t,p){var k=1-t;return k*k*k*p;}function CubicBezierP1(t,p){var k=1-t;return 3*k*k*t*p;}function CubicBezierP2(t,p){return 3*(1-t)*t*t*p;}function CubicBezierP3(t,p){return t*t*t*p;}function CubicBezier(t,p0,p1,p2,p3){return CubicBezierP0(t,p0)+CubicBezierP1(t,p1)+CubicBezierP2(t,p2)+CubicBezierP3(t,p3);}function CubicBezierCurve(v0,v1,v2,v3){Curve.call(this);this.type='CubicBezierCurve';this.v0=v0||new Vector2();this.v1=v1||new Vector2();this.v2=v2||new Vector2();this.v3=v3||new Vector2();}CubicBezierCurve.prototype=Object.create(Curve.prototype);CubicBezierCurve.prototype.constructor=CubicBezierCurve;CubicBezierCurve.prototype.isCubicBezierCurve=true;CubicBezierCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return point;};CubicBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;};CubicBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;};CubicBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;};function CubicBezierCurve3(v0,v1,v2,v3){Curve.call(this);this.type='CubicBezierCurve3';this.v0=v0||new Vector3$1();this.v1=v1||new Vector3$1();this.v2=v2||new Vector3$1();this.v3=v3||new Vector3$1();}CubicBezierCurve3.prototype=Object.create(Curve.prototype);CubicBezierCurve3.prototype.constructor=CubicBezierCurve3;CubicBezierCurve3.prototype.isCubicBezierCurve3=true;CubicBezierCurve3.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector3$1();var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return point;};CubicBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;};CubicBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;};CubicBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;};function LineCurve(v1,v2){Curve.call(this);this.type='LineCurve';this.v1=v1||new Vector2();this.v2=v2||new Vector2();}LineCurve.prototype=Object.create(Curve.prototype);LineCurve.prototype.constructor=LineCurve;LineCurve.prototype.isLineCurve=true;LineCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;};// Line curve is linear, so we can overwrite default getPointAt
LineCurve.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget);};LineCurve.prototype.getTangent=function(t,optionalTarget){var tangent=optionalTarget||new Vector2();var tangent=tangent.copy(this.v2).sub(this.v1).normalize();return tangent;};LineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};LineCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};LineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function LineCurve3(v1,v2){Curve.call(this);this.type='LineCurve3';this.v1=v1||new Vector3$1();this.v2=v2||new Vector3$1();}LineCurve3.prototype=Object.create(Curve.prototype);LineCurve3.prototype.constructor=LineCurve3;LineCurve3.prototype.isLineCurve3=true;LineCurve3.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector3$1();if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;};// Line curve is linear, so we can overwrite default getPointAt
LineCurve3.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget);};LineCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};LineCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};LineCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function QuadraticBezierCurve(v0,v1,v2){Curve.call(this);this.type='QuadraticBezierCurve';this.v0=v0||new Vector2();this.v1=v1||new Vector2();this.v2=v2||new Vector2();}QuadraticBezierCurve.prototype=Object.create(Curve.prototype);QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve;QuadraticBezierCurve.prototype.isQuadraticBezierCurve=true;QuadraticBezierCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();var v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return point;};QuadraticBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};QuadraticBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};QuadraticBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function QuadraticBezierCurve3(v0,v1,v2){Curve.call(this);this.type='QuadraticBezierCurve3';this.v0=v0||new Vector3$1();this.v1=v1||new Vector3$1();this.v2=v2||new Vector3$1();}QuadraticBezierCurve3.prototype=Object.create(Curve.prototype);QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3;QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=true;QuadraticBezierCurve3.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector3$1();var v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return point;};QuadraticBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};QuadraticBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};QuadraticBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function SplineCurve(points/* array of Vector2 */){Curve.call(this);this.type='SplineCurve';this.points=points||[];}SplineCurve.prototype=Object.create(Curve.prototype);SplineCurve.prototype.constructor=SplineCurve;SplineCurve.prototype.isSplineCurve=true;SplineCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();var points=this.points;var p=(points.length-1)*t;var intPoint=Math.floor(p);var weight=p-intPoint;var p0=points[intPoint===0?intPoint:intPoint-1];var p1=points[intPoint];var p2=points[intPoint>points.length-2?points.length-1:intPoint+1];var p3=points[intPoint>points.length-3?points.length-1:intPoint+2];point.set(CatmullRom(weight,p0.x,p1.x,p2.x,p3.x),CatmullRom(weight,p0.y,p1.y,p2.y,p3.y));return point;};SplineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var i=0,l=source.points.length;i<l;i++){var point=source.points[i];this.points.push(point.clone());}return this;};SplineCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.points=[];for(var i=0,l=this.points.length;i<l;i++){var point=this.points[i];data.points.push(point.toArray());}return data;};SplineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var i=0,l=json.points.length;i<l;i++){var point=json.points[i];this.points.push(new Vector2().fromArray(point));}return this;};var Curves=/*#__PURE__*/Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 **/ /**************************************************************
 *	Curved Path - a curve path is simply a array of connected
 *  curves, but retains the api of a curve
 **************************************************************/function CurvePath(){Curve.call(this);this.type='CurvePath';this.curves=[];this.autoClose=false;// Automatically closes the path
}CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function add(curve){this.curves.push(curve);},closePath:function closePath(){// Add a line curve if start and end of lines are not connected
var startPoint=this.curves[0].getPoint(0);var endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new LineCurve(endPoint,startPoint));}},// To get accurate point with reference to
// entire path distance at time t,
// following has to be done:
// 1. Length of each sub path have to be known
// 2. Locate and identify type of curve
// 3. Get t for the curve
// 4. Return curve.getPointAt(t')
getPoint:function getPoint(t){var d=t*this.getLength();var curveLengths=this.getCurveLengths();var i=0;// To think about boundaries points.
while(i<curveLengths.length){if(curveLengths[i]>=d){var diff=curveLengths[i]-d;var curve=this.curves[i];var segmentLength=curve.getLength();var u=segmentLength===0?0:1-diff/segmentLength;return curve.getPointAt(u);}i++;}return null;// loop where sum != 0, sum > d , sum+1 <d
},// We cannot use the default THREE.Curve getPoint() with getLength() because in
// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
// getPoint() depends on getLength
getLength:function getLength(){var lens=this.getCurveLengths();return lens[lens.length-1];},// cacheLengths must be recalculated.
updateArcLengths:function updateArcLengths(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths();},// Compute lengths and cache them
// We cannot overwrite getLengths() because UtoT mapping uses it.
getCurveLengths:function getCurveLengths(){// We use cache values if curves and cache array are same length
if(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths;}// Get length of sub-curve
// Push sums into cached array
var lengths=[],sums=0;for(var i=0,l=this.curves.length;i<l;i++){sums+=this.curves[i].getLength();lengths.push(sums);}this.cacheLengths=lengths;return lengths;},getSpacedPoints:function getSpacedPoints(divisions){if(divisions===undefined)divisions=40;var points=[];for(var i=0;i<=divisions;i++){points.push(this.getPoint(i/divisions));}if(this.autoClose){points.push(points[0]);}return points;},getPoints:function getPoints(divisions){divisions=divisions||12;var points=[],last;for(var i=0,curves=this.curves;i<curves.length;i++){var curve=curves[i];var resolution=curve&&curve.isEllipseCurve?divisions*2:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions;var pts=curve.getPoints(resolution);for(var j=0;j<pts.length;j++){var point=pts[j];if(last&&last.equals(point))continue;// ensures no consecutive points are duplicates
points.push(point);last=point;}}if(this.autoClose&&points.length>1&&!points[points.length-1].equals(points[0])){points.push(points[0]);}return points;},copy:function copy(source){Curve.prototype.copy.call(this,source);this.curves=[];for(var i=0,l=source.curves.length;i<l;i++){var curve=source.curves[i];this.curves.push(curve.clone());}this.autoClose=source.autoClose;return this;},toJSON:function toJSON(){var data=Curve.prototype.toJSON.call(this);data.autoClose=this.autoClose;data.curves=[];for(var i=0,l=this.curves.length;i<l;i++){var curve=this.curves[i];data.curves.push(curve.toJSON());}return data;},fromJSON:function fromJSON(json){Curve.prototype.fromJSON.call(this,json);this.autoClose=json.autoClose;this.curves=[];for(var i=0,l=json.curves.length;i<l;i++){var curve=json.curves[i];this.curves.push(new Curves[curve.type]().fromJSON(curve));}return this;}});/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Creates free form 2d path using series of points, lines or curves.
 **/function Path(points){CurvePath.call(this);this.type='Path';this.currentPoint=new Vector2();if(points){this.setFromPoints(points);}}Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function setFromPoints(points){this.moveTo(points[0].x,points[0].y);for(var i=1,l=points.length;i<l;i++){this.lineTo(points[i].x,points[i].y);}return this;},moveTo:function moveTo(x,y){this.currentPoint.set(x,y);// TODO consider referencing vectors instead of copying?
return this;},lineTo:function lineTo(x,y){var curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y);return this;},quadraticCurveTo:function quadraticCurveTo(aCPx,aCPy,aX,aY){var curve=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;},bezierCurveTo:function bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){var curve=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;},splineThru:function splineThru(pts/*Array of Vector*/){var npts=[this.currentPoint.clone()].concat(pts);var curve=new SplineCurve(npts);this.curves.push(curve);this.currentPoint.copy(pts[pts.length-1]);return this;},arc:function arc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){var x0=this.currentPoint.x;var y0=this.currentPoint.y;this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise);return this;},absarc:function absarc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);return this;},ellipse:function ellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){var x0=this.currentPoint.x;var y0=this.currentPoint.y;this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);return this;},absellipse:function absellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){var curve=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);if(this.curves.length>0){// if a previous curve is present, attempt to join
var firstPoint=curve.getPoint(0);if(!firstPoint.equals(this.currentPoint)){this.lineTo(firstPoint.x,firstPoint.y);}}this.curves.push(curve);var lastPoint=curve.getPoint(1);this.currentPoint.copy(lastPoint);return this;},copy:function copy(source){CurvePath.prototype.copy.call(this,source);this.currentPoint.copy(source.currentPoint);return this;},toJSON:function toJSON(){var data=CurvePath.prototype.toJSON.call(this);data.currentPoint=this.currentPoint.toArray();return data;},fromJSON:function fromJSON(json){CurvePath.prototype.fromJSON.call(this,json);this.currentPoint.fromArray(json.currentPoint);return this;}});/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Defines a 2d shape plane using paths.
 **/ // STEP 1 Create a path.
// STEP 2 Turn path into shape.
// STEP 3 ExtrudeGeometry takes in Shape/Shapes
// STEP 3a - Extract points from each shape, turn to vertices
// STEP 3b - Triangulate each shape, add faces.
function Shape(points){Path.call(this,points);this.uuid=MathUtils.generateUUID();this.type='Shape';this.holes=[];}Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function getPointsHoles(divisions){var holesPts=[];for(var i=0,l=this.holes.length;i<l;i++){holesPts[i]=this.holes[i].getPoints(divisions);}return holesPts;},// get points of shape and holes (keypoints based on segments parameter)
extractPoints:function extractPoints(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)};},copy:function copy(source){Path.prototype.copy.call(this,source);this.holes=[];for(var i=0,l=source.holes.length;i<l;i++){var hole=source.holes[i];this.holes.push(hole.clone());}return this;},toJSON:function toJSON(){var data=Path.prototype.toJSON.call(this);data.uuid=this.uuid;data.holes=[];for(var i=0,l=this.holes.length;i<l;i++){var hole=this.holes[i];data.holes.push(hole.toJSON());}return data;},fromJSON:function fromJSON(json){Path.prototype.fromJSON.call(this,json);this.uuid=json.uuid;this.holes=[];for(var i=0,l=json.holes.length;i<l;i++){var hole=json.holes[i];this.holes.push(new Path().fromJSON(hole));}return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */function Light(color,intensity){Object3D.call(this);this.type='Light';this.color=new Color(color);this.intensity=intensity!==undefined?intensity:1;this.receiveShadow=undefined;}Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:true,copy:function copy(source){Object3D.prototype.copy.call(this,source);this.color.copy(source.color);this.intensity=source.intensity;return this;},toJSON:function toJSON(meta){var data=Object3D.prototype.toJSON.call(this,meta);data.object.color=this.color.getHex();data.object.intensity=this.intensity;if(this.groundColor!==undefined)data.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)data.object.distance=this.distance;if(this.angle!==undefined)data.object.angle=this.angle;if(this.decay!==undefined)data.object.decay=this.decay;if(this.penumbra!==undefined)data.object.penumbra=this.penumbra;if(this.shadow!==undefined)data.object.shadow=this.shadow.toJSON();return data;}});/**
 * @author alteredq / http://alteredqualia.com/
 */function HemisphereLight(skyColor,groundColor,intensity){Light.call(this,skyColor,intensity);this.type='HemisphereLight';this.castShadow=undefined;this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.groundColor=new Color(groundColor);}HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:true,copy:function copy(source){Light.prototype.copy.call(this,source);this.groundColor.copy(source.groundColor);return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function LightShadow(camera){this.camera=camera;this.bias=0;this.radius=1;this.mapSize=new Vector2(512,512);this.map=null;this.mapPass=null;this.matrix=new Matrix4();this._frustum=new Frustum();this._frameExtents=new Vector2(1,1);this._viewportCount=1;this._viewports=[new Vector4(0,0,1,1)];}Object.assign(LightShadow.prototype,{_projScreenMatrix:new Matrix4(),_lightPositionWorld:new Vector3$1(),_lookTarget:new Vector3$1(),getViewportCount:function getViewportCount(){return this._viewportCount;},getFrustum:function getFrustum(){return this._frustum;},updateMatrices:function updateMatrices(light){var shadowCamera=this.camera,shadowMatrix=this.matrix,projScreenMatrix=this._projScreenMatrix,lookTarget=this._lookTarget,lightPositionWorld=this._lightPositionWorld;lightPositionWorld.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(lightPositionWorld);lookTarget.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(lookTarget);shadowCamera.updateMatrixWorld();projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(projScreenMatrix);shadowMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);},getViewport:function getViewport(viewportIndex){return this._viewports[viewportIndex];},getFrameExtents:function getFrameExtents(){return this._frameExtents;},copy:function copy(source){this.camera=source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this;},clone:function clone(){return new this.constructor().copy(this);},toJSON:function toJSON(){var object={};if(this.bias!==0)object.bias=this.bias;if(this.radius!==1)object.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(false).object;delete object.camera.matrix;return object;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,0.5,500));}SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:true,updateMatrices:function updateMatrices(light){var camera=this.camera;var fov=MathUtils.RAD2DEG*2*light.angle;var aspect=this.mapSize.width/this.mapSize.height;var far=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||far!==camera.far){camera.fov=fov;camera.aspect=aspect;camera.far=far;camera.updateProjectionMatrix();}LightShadow.prototype.updateMatrices.call(this,light);}});/**
 * @author alteredq / http://alteredqualia.com/
 */function SpotLight(color,intensity,distance,angle,penumbra,decay){Light.call(this,color,intensity);this.type='SpotLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();Object.defineProperty(this,'power',{get:function get(){// intensity = power per solid angle.
// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
return this.intensity*Math.PI;},set:function set(power){// intensity = power per solid angle.
// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
this.intensity=power/Math.PI;}});this.distance=distance!==undefined?distance:0;this.angle=angle!==undefined?angle:Math.PI/3;this.penumbra=penumbra!==undefined?penumbra:0;this.decay=decay!==undefined?decay:1;// for physically correct lights, should be 2.
this.shadow=new SpotLightShadow();}SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:true,copy:function copy(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}});function PointLightShadow(){LightShadow.call(this,new PerspectiveCamera(90,1,0.5,500));this._frameExtents=new Vector2(4,2);this._viewportCount=6;this._viewports=[// These viewports map a cube-map onto a 2D texture with the
// following orientation:
//
//  xzXZ
//   y Y
//
// X - Positive x direction
// x - Negative x direction
// Y - Positive y direction
// y - Negative y direction
// Z - Positive z direction
// z - Negative z direction
// positive X
new Vector4(2,1,1,1),// negative X
new Vector4(0,1,1,1),// positive Z
new Vector4(3,1,1,1),// negative Z
new Vector4(1,1,1,1),// positive Y
new Vector4(3,0,1,1),// negative Y
new Vector4(1,0,1,1)];this._cubeDirections=[new Vector3$1(1,0,0),new Vector3$1(-1,0,0),new Vector3$1(0,0,1),new Vector3$1(0,0,-1),new Vector3$1(0,1,0),new Vector3$1(0,-1,0)];this._cubeUps=[new Vector3$1(0,1,0),new Vector3$1(0,1,0),new Vector3$1(0,1,0),new Vector3$1(0,1,0),new Vector3$1(0,0,1),new Vector3$1(0,0,-1)];}PointLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:PointLightShadow,isPointLightShadow:true,updateMatrices:function updateMatrices(light,viewportIndex){if(viewportIndex===undefined)viewportIndex=0;var camera=this.camera,shadowMatrix=this.matrix,lightPositionWorld=this._lightPositionWorld,lookTarget=this._lookTarget,projScreenMatrix=this._projScreenMatrix;lightPositionWorld.setFromMatrixPosition(light.matrixWorld);camera.position.copy(lightPositionWorld);lookTarget.copy(camera.position);lookTarget.add(this._cubeDirections[viewportIndex]);camera.up.copy(this._cubeUps[viewportIndex]);camera.lookAt(lookTarget);camera.updateMatrixWorld();shadowMatrix.makeTranslation(-lightPositionWorld.x,-lightPositionWorld.y,-lightPositionWorld.z);projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(projScreenMatrix);}});/**
 * @author mrdoob / http://mrdoob.com/
 */function PointLight(color,intensity,distance,decay){Light.call(this,color,intensity);this.type='PointLight';Object.defineProperty(this,'power',{get:function get(){// intensity = power per solid angle.
// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
return this.intensity*4*Math.PI;},set:function set(power){// intensity = power per solid angle.
// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
this.intensity=power/(4*Math.PI);}});this.distance=distance!==undefined?distance:0;this.decay=decay!==undefined?decay:1;// for physically correct lights, should be 2.
this.shadow=new PointLightShadow();}PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:true,copy:function copy(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this;}});/**
 * @author alteredq / http://alteredqualia.com/
 * @author arose / http://github.com/arose
 */function OrthographicCamera(left,right,top,bottom,near,far){Camera.call(this);this.type='OrthographicCamera';this.zoom=1;this.view=null;this.left=left!==undefined?left:-1;this.right=right!==undefined?right:1;this.top=top!==undefined?top:1;this.bottom=bottom!==undefined?bottom:-1;this.near=near!==undefined?near:0.1;this.far=far!==undefined?far:2000;this.updateProjectionMatrix();}OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:true,copy:function copy(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=source.view===null?null:Object.assign({},source.view);return this;},setViewOffset:function setViewOffset(fullWidth,fullHeight,x,y,width,height){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();},clearViewOffset:function clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();},updateProjectionMatrix:function updateProjectionMatrix(){var dx=(this.right-this.left)/(2*this.zoom);var dy=(this.top-this.bottom)/(2*this.zoom);var cx=(this.right+this.left)/2;var cy=(this.top+this.bottom)/2;var left=cx-dx;var right=cx+dx;var top=cy+dy;var bottom=cy-dy;if(this.view!==null&&this.view.enabled){var scaleW=(this.right-this.left)/this.view.fullWidth/this.zoom;var scaleH=(this.top-this.bottom)/this.view.fullHeight/this.zoom;left+=scaleW*this.view.offsetX;right=left+scaleW*this.view.width;top-=scaleH*this.view.offsetY;bottom=top-scaleH*this.view.height;}this.projectionMatrix.makeOrthographic(left,right,top,bottom,this.near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix);},toJSON:function toJSON(meta){var data=Object3D.prototype.toJSON.call(this,meta);data.object.zoom=this.zoom;data.object.left=this.left;data.object.right=this.right;data.object.top=this.top;data.object.bottom=this.bottom;data.object.near=this.near;data.object.far=this.far;if(this.view!==null)data.object.view=Object.assign({},this.view);return data;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,0.5,500));}DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow,isDirectionalLightShadow:true,updateMatrices:function updateMatrices(light){LightShadow.prototype.updateMatrices.call(this,light);}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */function DirectionalLight(color,intensity){Light.call(this,color,intensity);this.type='DirectionalLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.shadow=new DirectionalLightShadow();}DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:true,copy:function copy(source){Light.prototype.copy.call(this,source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function AmbientLight(color,intensity){Light.call(this,color,intensity);this.type='AmbientLight';this.castShadow=undefined;}AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:true});/**
 * @author abelnation / http://github.com/abelnation
 */function RectAreaLight(color,intensity,width,height){Light.call(this,color,intensity);this.type='RectAreaLight';this.width=width!==undefined?width:10;this.height=height!==undefined?height:10;}RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:true,copy:function copy(source){Light.prototype.copy.call(this,source);this.width=source.width;this.height=source.height;return this;},toJSON:function toJSON(meta){var data=Light.prototype.toJSON.call(this,meta);data.object.width=this.width;data.object.height=this.height;return data;}});/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * Primary reference:
 *   https://graphics.stanford.edu/papers/envmap/envmap.pdf
 *
 * Secondary reference:
 *   https://www.ppsloan.org/publications/StupidSH36.pdf
 */ // 3-band SH defined by 9 coefficients
function SphericalHarmonics3(){this.coefficients=[];for(var i=0;i<9;i++){this.coefficients.push(new Vector3$1());}}Object.assign(SphericalHarmonics3.prototype,{isSphericalHarmonics3:true,set:function set(coefficients){for(var i=0;i<9;i++){this.coefficients[i].copy(coefficients[i]);}return this;},zero:function zero(){for(var i=0;i<9;i++){this.coefficients[i].set(0,0,0);}return this;},// get the radiance in the direction of the normal
// target is a Vector3
getAt:function getAt(normal,target){// normal is assumed to be unit length
var x=normal.x,y=normal.y,z=normal.z;var coeff=this.coefficients;// band 0
target.copy(coeff[0]).multiplyScalar(0.282095);// band 1
target.addScaledVector(coeff[1],0.488603*y);target.addScaledVector(coeff[2],0.488603*z);target.addScaledVector(coeff[3],0.488603*x);// band 2
target.addScaledVector(coeff[4],1.092548*(x*y));target.addScaledVector(coeff[5],1.092548*(y*z));target.addScaledVector(coeff[6],0.315392*(3.0*z*z-1.0));target.addScaledVector(coeff[7],1.092548*(x*z));target.addScaledVector(coeff[8],0.546274*(x*x-y*y));return target;},// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal
// target is a Vector3
// https://graphics.stanford.edu/papers/envmap/envmap.pdf
getIrradianceAt:function getIrradianceAt(normal,target){// normal is assumed to be unit length
var x=normal.x,y=normal.y,z=normal.z;var coeff=this.coefficients;// band 0
target.copy(coeff[0]).multiplyScalar(0.886227);// π * 0.282095
// band 1
target.addScaledVector(coeff[1],2.0*0.511664*y);// ( 2 * π / 3 ) * 0.488603
target.addScaledVector(coeff[2],2.0*0.511664*z);target.addScaledVector(coeff[3],2.0*0.511664*x);// band 2
target.addScaledVector(coeff[4],2.0*0.429043*x*y);// ( π / 4 ) * 1.092548
target.addScaledVector(coeff[5],2.0*0.429043*y*z);target.addScaledVector(coeff[6],0.743125*z*z-0.247708);// ( π / 4 ) * 0.315392 * 3
target.addScaledVector(coeff[7],2.0*0.429043*x*z);target.addScaledVector(coeff[8],0.429043*(x*x-y*y));// ( π / 4 ) * 0.546274
return target;},add:function add(sh){for(var i=0;i<9;i++){this.coefficients[i].add(sh.coefficients[i]);}return this;},addScaledSH:function addScaledSH(sh,s){for(var i=0;i<9;i++){this.coefficients[i].addScaledVector(sh.coefficients[i],s);}return this;},scale:function scale(s){for(var i=0;i<9;i++){this.coefficients[i].multiplyScalar(s);}return this;},lerp:function lerp(sh,alpha){for(var i=0;i<9;i++){this.coefficients[i].lerp(sh.coefficients[i],alpha);}return this;},equals:function equals(sh){for(var i=0;i<9;i++){if(!this.coefficients[i].equals(sh.coefficients[i])){return false;}}return true;},copy:function copy(sh){return this.set(sh.coefficients);},clone:function clone(){return new this.constructor().copy(this);},fromArray:function fromArray(array,offset){if(offset===undefined)offset=0;var coefficients=this.coefficients;for(var i=0;i<9;i++){coefficients[i].fromArray(array,offset+i*3);}return this;},toArray:function toArray(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;var coefficients=this.coefficients;for(var i=0;i<9;i++){coefficients[i].toArray(array,offset+i*3);}return array;}});Object.assign(SphericalHarmonics3,{// evaluate the basis functions
// shBasis is an Array[ 9 ]
getBasisAt:function getBasisAt(normal,shBasis){// normal is assumed to be unit length
var x=normal.x,y=normal.y,z=normal.z;// band 0
shBasis[0]=0.282095;// band 1
shBasis[1]=0.488603*y;shBasis[2]=0.488603*z;shBasis[3]=0.488603*x;// band 2
shBasis[4]=1.092548*x*y;shBasis[5]=1.092548*y*z;shBasis[6]=0.315392*(3*z*z-1);shBasis[7]=1.092548*x*z;shBasis[8]=0.546274*(x*x-y*y);}});/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * A LightProbe is a source of indirect-diffuse light
 */function LightProbe(sh,intensity){Light.call(this,undefined,intensity);this.type='LightProbe';this.sh=sh!==undefined?sh:new SphericalHarmonics3();}LightProbe.prototype=Object.assign(Object.create(Light.prototype),{constructor:LightProbe,isLightProbe:true,copy:function copy(source){Light.prototype.copy.call(this,source);this.sh.copy(source.sh);return this;},fromJSON:function fromJSON(json){this.intensity=json.intensity;// TODO: Move this bit to Light.fromJSON();
this.sh.fromArray(json.sh);return this;},toJSON:function toJSON(meta){var data=Light.prototype.toJSON.call(this,meta);data.object.sh=this.sh.toArray();return data;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function MaterialLoader(manager){Loader.call(this,manager);this.textures={};}MaterialLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:MaterialLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);},parse:function parse(json){var textures=this.textures;function getTexture(name){if(textures[name]===undefined){console.warn('THREE.MaterialLoader: Undefined texture',name);}return textures[name];}var material=new Materials[json.type]();if(json.uuid!==undefined)material.uuid=json.uuid;if(json.name!==undefined)material.name=json.name;if(json.color!==undefined)material.color.setHex(json.color);if(json.roughness!==undefined)material.roughness=json.roughness;if(json.metalness!==undefined)material.metalness=json.metalness;if(json.sheen!==undefined)material.sheen=new Color().setHex(json.sheen);if(json.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined)material.specular.setHex(json.specular);if(json.shininess!==undefined)material.shininess=json.shininess;if(json.clearcoat!==undefined)material.clearcoat=json.clearcoat;if(json.clearcoatRoughness!==undefined)material.clearcoatRoughness=json.clearcoatRoughness;if(json.fog!==undefined)material.fog=json.fog;if(json.flatShading!==undefined)material.flatShading=json.flatShading;if(json.blending!==undefined)material.blending=json.blending;if(json.combine!==undefined)material.combine=json.combine;if(json.side!==undefined)material.side=json.side;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.alphaTest!==undefined)material.alphaTest=json.alphaTest;if(json.depthTest!==undefined)material.depthTest=json.depthTest;if(json.depthWrite!==undefined)material.depthWrite=json.depthWrite;if(json.colorWrite!==undefined)material.colorWrite=json.colorWrite;if(json.stencilWrite!==undefined)material.stencilWrite=json.stencilWrite;if(json.stencilWriteMask!==undefined)material.stencilWriteMask=json.stencilWriteMask;if(json.stencilFunc!==undefined)material.stencilFunc=json.stencilFunc;if(json.stencilRef!==undefined)material.stencilRef=json.stencilRef;if(json.stencilFuncMask!==undefined)material.stencilFuncMask=json.stencilFuncMask;if(json.stencilFail!==undefined)material.stencilFail=json.stencilFail;if(json.stencilZFail!==undefined)material.stencilZFail=json.stencilZFail;if(json.stencilZPass!==undefined)material.stencilZPass=json.stencilZPass;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.wireframeLinewidth!==undefined)material.wireframeLinewidth=json.wireframeLinewidth;if(json.wireframeLinecap!==undefined)material.wireframeLinecap=json.wireframeLinecap;if(json.wireframeLinejoin!==undefined)material.wireframeLinejoin=json.wireframeLinejoin;if(json.rotation!==undefined)material.rotation=json.rotation;if(json.linewidth!==1)material.linewidth=json.linewidth;if(json.dashSize!==undefined)material.dashSize=json.dashSize;if(json.gapSize!==undefined)material.gapSize=json.gapSize;if(json.scale!==undefined)material.scale=json.scale;if(json.polygonOffset!==undefined)material.polygonOffset=json.polygonOffset;if(json.polygonOffsetFactor!==undefined)material.polygonOffsetFactor=json.polygonOffsetFactor;if(json.polygonOffsetUnits!==undefined)material.polygonOffsetUnits=json.polygonOffsetUnits;if(json.skinning!==undefined)material.skinning=json.skinning;if(json.morphTargets!==undefined)material.morphTargets=json.morphTargets;if(json.morphNormals!==undefined)material.morphNormals=json.morphNormals;if(json.dithering!==undefined)material.dithering=json.dithering;if(json.vertexTangents!==undefined)material.vertexTangents=json.vertexTangents;if(json.visible!==undefined)material.visible=json.visible;if(json.toneMapped!==undefined)material.toneMapped=json.toneMapped;if(json.userData!==undefined)material.userData=json.userData;if(json.vertexColors!==undefined){if(typeof json.vertexColors==='number'){material.vertexColors=json.vertexColors>0?true:false;}else{material.vertexColors=json.vertexColors;}}// Shader Material
if(json.uniforms!==undefined){for(var name in json.uniforms){var uniform=json.uniforms[name];material.uniforms[name]={};switch(uniform.type){case't':material.uniforms[name].value=getTexture(uniform.value);break;case'c':material.uniforms[name].value=new Color().setHex(uniform.value);break;case'v2':material.uniforms[name].value=new Vector2().fromArray(uniform.value);break;case'v3':material.uniforms[name].value=new Vector3$1().fromArray(uniform.value);break;case'v4':material.uniforms[name].value=new Vector4().fromArray(uniform.value);break;case'm3':material.uniforms[name].value=new Matrix3().fromArray(uniform.value);case'm4':material.uniforms[name].value=new Matrix4().fromArray(uniform.value);break;default:material.uniforms[name].value=uniform.value;}}}if(json.defines!==undefined)material.defines=json.defines;if(json.vertexShader!==undefined)material.vertexShader=json.vertexShader;if(json.fragmentShader!==undefined)material.fragmentShader=json.fragmentShader;if(json.extensions!==undefined){for(var key in json.extensions){material.extensions[key]=json.extensions[key];}}// Deprecated
if(json.shading!==undefined)material.flatShading=json.shading===1;// THREE.FlatShading
// for PointsMaterial
if(json.size!==undefined)material.size=json.size;if(json.sizeAttenuation!==undefined)material.sizeAttenuation=json.sizeAttenuation;// maps
if(json.map!==undefined)material.map=getTexture(json.map);if(json.matcap!==undefined)material.matcap=getTexture(json.matcap);if(json.alphaMap!==undefined)material.alphaMap=getTexture(json.alphaMap);if(json.bumpMap!==undefined)material.bumpMap=getTexture(json.bumpMap);if(json.bumpScale!==undefined)material.bumpScale=json.bumpScale;if(json.normalMap!==undefined)material.normalMap=getTexture(json.normalMap);if(json.normalMapType!==undefined)material.normalMapType=json.normalMapType;if(json.normalScale!==undefined){var normalScale=json.normalScale;if(Array.isArray(normalScale)===false){// Blender exporter used to export a scalar. See #7459
normalScale=[normalScale,normalScale];}material.normalScale=new Vector2().fromArray(normalScale);}if(json.displacementMap!==undefined)material.displacementMap=getTexture(json.displacementMap);if(json.displacementScale!==undefined)material.displacementScale=json.displacementScale;if(json.displacementBias!==undefined)material.displacementBias=json.displacementBias;if(json.roughnessMap!==undefined)material.roughnessMap=getTexture(json.roughnessMap);if(json.metalnessMap!==undefined)material.metalnessMap=getTexture(json.metalnessMap);if(json.emissiveMap!==undefined)material.emissiveMap=getTexture(json.emissiveMap);if(json.emissiveIntensity!==undefined)material.emissiveIntensity=json.emissiveIntensity;if(json.specularMap!==undefined)material.specularMap=getTexture(json.specularMap);if(json.envMap!==undefined)material.envMap=getTexture(json.envMap);if(json.envMapIntensity!==undefined)material.envMapIntensity=json.envMapIntensity;if(json.reflectivity!==undefined)material.reflectivity=json.reflectivity;if(json.refractionRatio!==undefined)material.refractionRatio=json.refractionRatio;if(json.lightMap!==undefined)material.lightMap=getTexture(json.lightMap);if(json.lightMapIntensity!==undefined)material.lightMapIntensity=json.lightMapIntensity;if(json.aoMap!==undefined)material.aoMap=getTexture(json.aoMap);if(json.aoMapIntensity!==undefined)material.aoMapIntensity=json.aoMapIntensity;if(json.gradientMap!==undefined)material.gradientMap=getTexture(json.gradientMap);if(json.clearcoatMap!==undefined)material.clearcoatMap=getTexture(json.clearcoatMap);if(json.clearcoatRoughnessMap!==undefined)material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap);if(json.clearcoatNormalMap!==undefined)material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap);if(json.clearcoatNormalScale!==undefined)material.clearcoatNormalScale=new Vector2().fromArray(json.clearcoatNormalScale);return material;},setTextures:function setTextures(value){this.textures=value;return this;}});/**
 * @author Don McCurdy / https://www.donmccurdy.com
 */var LoaderUtils={decodeText:function decodeText(array){if(typeof TextDecoder!=='undefined'){return new TextDecoder().decode(array);}// Avoid the String.fromCharCode.apply(null, array) shortcut, which
// throws a "maximum call stack size exceeded" error for large arrays.
var s='';for(var i=0,il=array.length;i<il;i++){// Implicitly assumes little-endian.
s+=String.fromCharCode(array[i]);}try{// merges multi-byte utf-8 characters.
return decodeURIComponent(escape(s));}catch(e){// see #16358
return s;}},extractUrlBase:function extractUrlBase(url){var index=url.lastIndexOf('/');if(index===-1)return'./';return url.substr(0,index+1);}};/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */function InstancedBufferGeometry(){BufferGeometry.call(this);this.type='InstancedBufferGeometry';this.instanceCount=Infinity;}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:true,copy:function copy(source){BufferGeometry.prototype.copy.call(this,source);this.instanceCount=source.instanceCount;return this;},clone:function clone(){return new this.constructor().copy(this);},toJSON:function toJSON(){var data=BufferGeometry.prototype.toJSON.call(this);data.instanceCount=this.instanceCount;data.isInstancedBufferGeometry=true;return data;}});/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */function InstancedBufferAttribute(array,itemSize,normalized,meshPerAttribute){if(typeof normalized==='number'){meshPerAttribute=normalized;normalized=false;console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');}BufferAttribute.call(this,array,itemSize,normalized);this.meshPerAttribute=meshPerAttribute||1;}InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:true,copy:function copy(source){BufferAttribute.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;},toJSON:function toJSON(){var data=BufferAttribute.prototype.toJSON.call(this);data.meshPerAttribute=this.meshPerAttribute;data.isInstancedBufferAttribute=true;return data;}});/**
 * @author mrdoob / http://mrdoob.com/
 */function BufferGeometryLoader(manager){Loader.call(this,manager);}BufferGeometryLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:BufferGeometryLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);},parse:function parse(json){var geometry=json.isInstancedBufferGeometry?new InstancedBufferGeometry():new BufferGeometry();var index=json.data.index;if(index!==undefined){var typedArray=new TYPED_ARRAYS[index.type](index.array);geometry.setIndex(new BufferAttribute(typedArray,1));}var attributes=json.data.attributes;for(var key in attributes){var attribute=attributes[key];var typedArray=new TYPED_ARRAYS[attribute.type](attribute.array);var bufferAttributeConstr=attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute;var bufferAttribute=new bufferAttributeConstr(typedArray,attribute.itemSize,attribute.normalized);if(attribute.name!==undefined)bufferAttribute.name=attribute.name;geometry.setAttribute(key,bufferAttribute);}var morphAttributes=json.data.morphAttributes;if(morphAttributes){for(var key in morphAttributes){var attributeArray=morphAttributes[key];var array=[];for(var i=0,il=attributeArray.length;i<il;i++){var attribute=attributeArray[i];var typedArray=new TYPED_ARRAYS[attribute.type](attribute.array);var bufferAttribute=new BufferAttribute(typedArray,attribute.itemSize,attribute.normalized);if(attribute.name!==undefined)bufferAttribute.name=attribute.name;array.push(bufferAttribute);}geometry.morphAttributes[key]=array;}}var morphTargetsRelative=json.data.morphTargetsRelative;if(morphTargetsRelative){geometry.morphTargetsRelative=true;}var groups=json.data.groups||json.data.drawcalls||json.data.offsets;if(groups!==undefined){for(var i=0,n=groups.length;i!==n;++i){var group=groups[i];geometry.addGroup(group.start,group.count,group.materialIndex);}}var boundingSphere=json.data.boundingSphere;if(boundingSphere!==undefined){var center=new Vector3$1();if(boundingSphere.center!==undefined){center.fromArray(boundingSphere.center);}geometry.boundingSphere=new Sphere(center,boundingSphere.radius);}if(json.name)geometry.name=json.name;if(json.userData)geometry.userData=json.userData;return geometry;}});var TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,// Workaround for IE11 pre KB2929437. See #11440
Uint8ClampedArray:typeof Uint8ClampedArray!=='undefined'?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};/**
 * @author mrdoob / http://mrdoob.com/
 */function ObjectLoader(manager){Loader.call(this,manager);}ObjectLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ObjectLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var path=this.path===''?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;var loader=new FileLoader(scope.manager);loader.setPath(this.path);loader.load(url,function(text){var json=null;try{json=JSON.parse(text);}catch(error){if(onError!==undefined)onError(error);console.error('THREE:ObjectLoader: Can\'t parse '+url+'.',error.message);return;}var metadata=json.metadata;if(metadata===undefined||metadata.type===undefined||metadata.type.toLowerCase()==='geometry'){console.error('THREE.ObjectLoader: Can\'t load '+url);return;}scope.parse(json,onLoad);},onProgress,onError);},parse:function parse(json,onLoad){var shapes=this.parseShape(json.shapes);var geometries=this.parseGeometries(json.geometries,shapes);var images=this.parseImages(json.images,function(){if(onLoad!==undefined)onLoad(object);});var textures=this.parseTextures(json.textures,images);var materials=this.parseMaterials(json.materials,textures);var object=this.parseObject(json.object,geometries,materials);if(json.animations){object.animations=this.parseAnimations(json.animations);}if(json.images===undefined||json.images.length===0){if(onLoad!==undefined)onLoad(object);}return object;},parseShape:function parseShape(json){var shapes={};if(json!==undefined){for(var i=0,l=json.length;i<l;i++){var shape=new Shape().fromJSON(json[i]);shapes[shape.uuid]=shape;}}return shapes;},parseGeometries:function parseGeometries(json,shapes){var geometries={};if(json!==undefined){var bufferGeometryLoader=new BufferGeometryLoader();for(var i=0,l=json.length;i<l;i++){var geometry;var data=json[i];switch(data.type){case'PlaneGeometry':case'PlaneBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case'BoxGeometry':case'BoxBufferGeometry':case'CubeGeometry':// backwards compatible
geometry=new Geometries[data.type](data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case'CircleGeometry':case'CircleBufferGeometry':geometry=new Geometries[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case'CylinderGeometry':case'CylinderBufferGeometry':geometry=new Geometries[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'ConeGeometry':case'ConeBufferGeometry':geometry=new Geometries[data.type](data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'SphereGeometry':case'SphereBufferGeometry':geometry=new Geometries[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case'DodecahedronGeometry':case'DodecahedronBufferGeometry':case'IcosahedronGeometry':case'IcosahedronBufferGeometry':case'OctahedronGeometry':case'OctahedronBufferGeometry':case'TetrahedronGeometry':case'TetrahedronBufferGeometry':geometry=new Geometries[data.type](data.radius,data.detail);break;case'RingGeometry':case'RingBufferGeometry':geometry=new Geometries[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case'TorusGeometry':case'TorusBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case'TorusKnotGeometry':case'TorusKnotBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);break;case'TubeGeometry':case'TubeBufferGeometry':// This only works for built-in curves (e.g. CatmullRomCurve3).
// User defined curves or instances of CurvePath will not be deserialized.
geometry=new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);break;case'LatheGeometry':case'LatheBufferGeometry':geometry=new Geometries[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case'PolyhedronGeometry':case'PolyhedronBufferGeometry':geometry=new Geometries[data.type](data.vertices,data.indices,data.radius,data.details);break;case'ShapeGeometry':case'ShapeBufferGeometry':var geometryShapes=[];for(var j=0,jl=data.shapes.length;j<jl;j++){var shape=shapes[data.shapes[j]];geometryShapes.push(shape);}geometry=new Geometries[data.type](geometryShapes,data.curveSegments);break;case'ExtrudeGeometry':case'ExtrudeBufferGeometry':var geometryShapes=[];for(var j=0,jl=data.shapes.length;j<jl;j++){var shape=shapes[data.shapes[j]];geometryShapes.push(shape);}var extrudePath=data.options.extrudePath;if(extrudePath!==undefined){data.options.extrudePath=new Curves[extrudePath.type]().fromJSON(extrudePath);}geometry=new Geometries[data.type](geometryShapes,data.options);break;case'BufferGeometry':case'InstancedBufferGeometry':geometry=bufferGeometryLoader.parse(data);break;case'Geometry':console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+data.type+'"');continue;}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;if(geometry.isBufferGeometry===true&&data.userData!==undefined)geometry.userData=data.userData;geometries[data.uuid]=geometry;}}return geometries;},parseMaterials:function parseMaterials(json,textures){var cache={};// MultiMaterial
var materials={};if(json!==undefined){var loader=new MaterialLoader();loader.setTextures(textures);for(var i=0,l=json.length;i<l;i++){var data=json[i];if(data.type==='MultiMaterial'){// Deprecated
var array=[];for(var j=0;j<data.materials.length;j++){var material=data.materials[j];if(cache[material.uuid]===undefined){cache[material.uuid]=loader.parse(material);}array.push(cache[material.uuid]);}materials[data.uuid]=array;}else{if(cache[data.uuid]===undefined){cache[data.uuid]=loader.parse(data);}materials[data.uuid]=cache[data.uuid];}}}return materials;},parseAnimations:function parseAnimations(json){var animations=[];for(var i=0;i<json.length;i++){var data=json[i];var clip=AnimationClip.parse(data);if(data.uuid!==undefined)clip.uuid=data.uuid;animations.push(clip);}return animations;},parseImages:function parseImages(json,onLoad){var scope=this;var images={};function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url);},undefined,function(){scope.manager.itemError(url);scope.manager.itemEnd(url);});}if(json!==undefined&&json.length>0){var manager=new LoadingManager(onLoad);var loader=new ImageLoader(manager);loader.setCrossOrigin(this.crossOrigin);for(var i=0,il=json.length;i<il;i++){var image=json[i];var url=image.url;if(Array.isArray(url)){// load array of images e.g CubeTexture
images[image.uuid]=[];for(var j=0,jl=url.length;j<jl;j++){var currentUrl=url[j];var path=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(currentUrl)?currentUrl:scope.resourcePath+currentUrl;images[image.uuid].push(loadImage(path));}}else{// load single image
var path=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(image.url)?image.url:scope.resourcePath+image.url;images[image.uuid]=loadImage(path);}}}return images;},parseTextures:function parseTextures(json,images){function parseConstant(value,type){if(typeof value==='number')return value;console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',value);return type[value];}var textures={};if(json!==undefined){for(var i=0,l=json.length;i<l;i++){var data=json[i];if(data.image===undefined){console.warn('THREE.ObjectLoader: No "image" specified for',data.uuid);}if(images[data.image]===undefined){console.warn('THREE.ObjectLoader: Undefined image',data.image);}var texture;if(Array.isArray(images[data.image])){texture=new CubeTexture(images[data.image]);}else{texture=new Texture(images[data.image]);}texture.needsUpdate=true;texture.uuid=data.uuid;if(data.name!==undefined)texture.name=data.name;if(data.mapping!==undefined)texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING);if(data.offset!==undefined)texture.offset.fromArray(data.offset);if(data.repeat!==undefined)texture.repeat.fromArray(data.repeat);if(data.center!==undefined)texture.center.fromArray(data.center);if(data.rotation!==undefined)texture.rotation=data.rotation;if(data.wrap!==undefined){texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING);texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING);}if(data.format!==undefined)texture.format=data.format;if(data.type!==undefined)texture.type=data.type;if(data.encoding!==undefined)texture.encoding=data.encoding;if(data.minFilter!==undefined)texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER);if(data.magFilter!==undefined)texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER);if(data.anisotropy!==undefined)texture.anisotropy=data.anisotropy;if(data.flipY!==undefined)texture.flipY=data.flipY;if(data.premultiplyAlpha!==undefined)texture.premultiplyAlpha=data.premultiplyAlpha;if(data.unpackAlignment!==undefined)texture.unpackAlignment=data.unpackAlignment;textures[data.uuid]=texture;}}return textures;},parseObject:function parseObject(data,geometries,materials){var object;function getGeometry(name){if(geometries[name]===undefined){console.warn('THREE.ObjectLoader: Undefined geometry',name);}return geometries[name];}function getMaterial(name){if(name===undefined)return undefined;if(Array.isArray(name)){var array=[];for(var i=0,l=name.length;i<l;i++){var uuid=name[i];if(materials[uuid]===undefined){console.warn('THREE.ObjectLoader: Undefined material',uuid);}array.push(materials[uuid]);}return array;}if(materials[name]===undefined){console.warn('THREE.ObjectLoader: Undefined material',name);}return materials[name];}switch(data.type){case'Scene':object=new Scene();if(data.background!==undefined){if(Number.isInteger(data.background)){object.background=new Color(data.background);}}if(data.fog!==undefined){if(data.fog.type==='Fog'){object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far);}else if(data.fog.type==='FogExp2'){object.fog=new FogExp2(data.fog.color,data.fog.density);}}break;case'PerspectiveCamera':object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);if(data.focus!==undefined)object.focus=data.focus;if(data.zoom!==undefined)object.zoom=data.zoom;if(data.filmGauge!==undefined)object.filmGauge=data.filmGauge;if(data.filmOffset!==undefined)object.filmOffset=data.filmOffset;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'OrthographicCamera':object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);if(data.zoom!==undefined)object.zoom=data.zoom;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'AmbientLight':object=new AmbientLight(data.color,data.intensity);break;case'DirectionalLight':object=new DirectionalLight(data.color,data.intensity);break;case'PointLight':object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case'RectAreaLight':object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case'SpotLight':object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case'HemisphereLight':object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case'LightProbe':object=new LightProbe().fromJSON(data);break;case'SkinnedMesh':console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');case'Mesh':var geometry=getGeometry(data.geometry);var material=getMaterial(data.material);object=new Mesh(geometry,material);break;case'InstancedMesh':var geometry=getGeometry(data.geometry);var material=getMaterial(data.material);var count=data.count;var instanceMatrix=data.instanceMatrix;object=new InstancedMesh(geometry,material,count);object.instanceMatrix=new BufferAttribute(new Float32Array(instanceMatrix.array),16);break;case'LOD':object=new LOD();break;case'Line':object=new Line(getGeometry(data.geometry),getMaterial(data.material),data.mode);break;case'LineLoop':object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case'LineSegments':object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case'PointCloud':case'Points':object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case'Sprite':object=new Sprite(getMaterial(data.material));break;case'Group':object=new Group();break;default:object=new Object3D();}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){object.matrix.fromArray(data.matrix);if(data.matrixAutoUpdate!==undefined)object.matrixAutoUpdate=data.matrixAutoUpdate;if(object.matrixAutoUpdate)object.matrix.decompose(object.position,object.quaternion,object.scale);}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.quaternion!==undefined)object.quaternion.fromArray(data.quaternion);if(data.scale!==undefined)object.scale.fromArray(data.scale);}if(data.castShadow!==undefined)object.castShadow=data.castShadow;if(data.receiveShadow!==undefined)object.receiveShadow=data.receiveShadow;if(data.shadow){if(data.shadow.bias!==undefined)object.shadow.bias=data.shadow.bias;if(data.shadow.radius!==undefined)object.shadow.radius=data.shadow.radius;if(data.shadow.mapSize!==undefined)object.shadow.mapSize.fromArray(data.shadow.mapSize);if(data.shadow.camera!==undefined)object.shadow.camera=this.parseObject(data.shadow.camera);}if(data.visible!==undefined)object.visible=data.visible;if(data.frustumCulled!==undefined)object.frustumCulled=data.frustumCulled;if(data.renderOrder!==undefined)object.renderOrder=data.renderOrder;if(data.userData!==undefined)object.userData=data.userData;if(data.layers!==undefined)object.layers.mask=data.layers;if(data.children!==undefined){var children=data.children;for(var i=0;i<children.length;i++){object.add(this.parseObject(children[i],geometries,materials));}}if(data.type==='LOD'){if(data.autoUpdate!==undefined)object.autoUpdate=data.autoUpdate;var levels=data.levels;for(var l=0;l<levels.length;l++){var level=levels[l];var child=object.getObjectByProperty('uuid',level.object);if(child!==undefined){object.addLevel(child,level.distance);}}}return object;}});var TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,SphericalReflectionMapping:SphericalReflectionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping};var TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping$1,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping};var TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};/**
 * @author thespite / http://clicktorelease.com/
 */function ImageBitmapLoader(manager){if(typeof createImageBitmap==='undefined'){console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');}if(typeof fetch==='undefined'){console.warn('THREE.ImageBitmapLoader: fetch() not supported.');}Loader.call(this,manager);this.options=undefined;}ImageBitmapLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageBitmapLoader,setOptions:function setOptions(options){this.options=options;return this;},load:function load(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}fetch(url).then(function(res){return res.blob();}).then(function(blob){if(scope.options===undefined){// Workaround for FireFox. It causes an error if you pass options.
return createImageBitmap(blob);}else{return createImageBitmap(blob,scope.options);}}).then(function(imageBitmap){Cache.add(url,imageBitmap);if(onLoad)onLoad(imageBitmap);scope.manager.itemEnd(url);}).catch(function(e){if(onError)onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url);});scope.manager.itemStart(url);}});/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * minimal class for proxing functions to Path. Replaces old "extractSubpaths()"
 **/function ShapePath(){this.type='ShapePath';this.color=new Color();this.subPaths=[];this.currentPath=null;}Object.assign(ShapePath.prototype,{moveTo:function moveTo(x,y){this.currentPath=new Path();this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);return this;},lineTo:function lineTo(x,y){this.currentPath.lineTo(x,y);return this;},quadraticCurveTo:function quadraticCurveTo(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);return this;},bezierCurveTo:function bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY);return this;},splineThru:function splineThru(pts){this.currentPath.splineThru(pts);return this;},toShapes:function toShapes(isCCW,noHoles){function toShapesNoHoles(inSubpaths){var shapes=[];for(var i=0,l=inSubpaths.length;i<l;i++){var tmpPath=inSubpaths[i];var tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);}return shapes;}function isPointInsidePolygon(inPt,inPolygon){var polyLen=inPolygon.length;// inPt on polygon contour => immediate success    or
// toggling of inside/outside at every single! intersection point of an edge
//  with the horizontal line through inPt, left of inPt
//  not counting lowerY endpoints of edges and whole edges on that line
var inside=false;for(var p=polyLen-1,q=0;q<polyLen;p=q++){var edgeLowPt=inPolygon[p];var edgeHighPt=inPolygon[q];var edgeDx=edgeHighPt.x-edgeLowPt.x;var edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){// not parallel
if(edgeDy<0){edgeLowPt=inPolygon[q];edgeDx=-edgeDx;edgeHighPt=inPolygon[p];edgeDy=-edgeDy;}if(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return true;// inPt is on contour ?
// continue;				// no intersection or edgeLowPt => doesn't count !!!
}else{var perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(perpEdge===0)return true;// inPt is on contour ?
if(perpEdge<0)continue;inside=!inside;// true intersection left of inPt
}}else{// parallel or collinear
if(inPt.y!==edgeLowPt.y)continue;// parallel
// edge lies on the same horizontal line as inPt
if(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return true;// inPt: Point on contour !
// continue;
}}return inside;}var isClockWise=ShapeUtils.isClockWise;var subPaths=this.subPaths;if(subPaths.length===0)return[];if(noHoles===true)return toShapesNoHoles(subPaths);var solid,tmpPath,tmpShape,shapes=[];if(subPaths.length===1){tmpPath=subPaths[0];tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes;}var holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;// console.log("Holes first", holesFirst);
var betterShapeHoles=[];var newShapes=[];var newShapeHoles=[];var mainIdx=0;var tmpPoints;newShapes[mainIdx]=undefined;newShapeHoles[mainIdx]=[];for(var i=0,l=subPaths.length;i<l;i++){tmpPath=subPaths[i];tmpPoints=tmpPath.getPoints();solid=isClockWise(tmpPoints);solid=isCCW?!solid:solid;if(solid){if(!holesFirst&&newShapes[mainIdx])mainIdx++;newShapes[mainIdx]={s:new Shape(),p:tmpPoints};newShapes[mainIdx].s.curves=tmpPath.curves;if(holesFirst)mainIdx++;newShapeHoles[mainIdx]=[];//console.log('cw', i);
}else{newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});//console.log('ccw', i);
}}// only Holes? -> probably all Shapes with wrong orientation
if(!newShapes[0])return toShapesNoHoles(subPaths);if(newShapes.length>1){var ambiguous=false;var toChange=[];for(var sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){betterShapeHoles[sIdx]=[];}for(var sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){var sho=newShapeHoles[sIdx];for(var hIdx=0;hIdx<sho.length;hIdx++){var ho=sho[hIdx];var hole_unassigned=true;for(var s2Idx=0;s2Idx<newShapes.length;s2Idx++){if(isPointInsidePolygon(ho.p,newShapes[s2Idx].p)){if(sIdx!==s2Idx)toChange.push({froms:sIdx,tos:s2Idx,hole:hIdx});if(hole_unassigned){hole_unassigned=false;betterShapeHoles[s2Idx].push(ho);}else{ambiguous=true;}}}if(hole_unassigned){betterShapeHoles[sIdx].push(ho);}}}// console.log("ambiguous: ", ambiguous);
if(toChange.length>0){// console.log("to change: ", toChange);
if(!ambiguous)newShapeHoles=betterShapeHoles;}}var tmpHoles;for(var i=0,il=newShapes.length;i<il;i++){tmpShape=newShapes[i].s;shapes.push(tmpShape);tmpHoles=newShapeHoles[i];for(var j=0,jl=tmpHoles.length;j<jl;j++){tmpShape.holes.push(tmpHoles[j].h);}}//console.log("shape", shapes);
return shapes;}});/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author mrdoob / http://mrdoob.com/
 */function Font(data){this.type='Font';this.data=data;}Object.assign(Font.prototype,{isFont:true,generateShapes:function generateShapes(text,size){if(size===undefined)size=100;var shapes=[];var paths=createPaths(text,size,this.data);for(var p=0,pl=paths.length;p<pl;p++){Array.prototype.push.apply(shapes,paths[p].toShapes());}return shapes;}});function createPaths(text,size,data){var chars=Array.from?Array.from(text):String(text).split('');// workaround for IE11, see #13988
var scale=size/data.resolution;var line_height=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*scale;var paths=[];var offsetX=0,offsetY=0;for(var i=0;i<chars.length;i++){var char=chars[i];if(char==='\n'){offsetX=0;offsetY-=line_height;}else{var ret=createPath(char,scale,offsetX,offsetY,data);offsetX+=ret.offsetX;paths.push(ret.path);}}return paths;}function createPath(char,scale,offsetX,offsetY,data){var glyph=data.glyphs[char]||data.glyphs['?'];if(!glyph){console.error('THREE.Font: character "'+char+'" does not exists in font family '+data.familyName+'.');return;}var path=new ShapePath();var x,y,cpx,cpy,cpx1,cpy1,cpx2,cpy2;if(glyph.o){var outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(' '));for(var i=0,l=outline.length;i<l;){var action=outline[i++];switch(action){case'm':// moveTo
x=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.moveTo(x,y);break;case'l':// lineTo
x=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.lineTo(x,y);break;case'q':// quadraticCurveTo
cpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case'b':// bezierCurveTo
cpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;cpx2=outline[i++]*scale+offsetX;cpy2=outline[i++]*scale+offsetY;path.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy);break;}}}return{offsetX:glyph.ha*scale,path:path};}/**
 * @author mrdoob / http://mrdoob.com/
 */function FontLoader(manager){Loader.call(this,manager);}FontLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FontLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.load(url,function(text){var json;try{json=JSON.parse(text);}catch(e){console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');json=JSON.parse(text.substring(65,text.length-2));}var font=scope.parse(json);if(onLoad)onLoad(font);},onProgress,onError);},parse:function parse(json){return new Font(json);}});/**
 * @author mrdoob / http://mrdoob.com/
 */var _context;var AudioContext={getContext:function getContext(){if(_context===undefined){_context=new(window.AudioContext||window.webkitAudioContext)();}return _context;},setContext:function setContext(value){_context=value;}};/**
 * @author Reece Aaron Lecrivain / http://reecenotes.com/
 */function AudioLoader(manager){Loader.call(this,manager);}AudioLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AudioLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setResponseType('arraybuffer');loader.setPath(scope.path);loader.load(url,function(buffer){try{// Create a copy of the buffer. The `decodeAudioData` method
// detaches the buffer when complete, preventing reuse.
var bufferCopy=buffer.slice(0);var context=AudioContext.getContext();context.decodeAudioData(bufferCopy,function(audioBuffer){onLoad(audioBuffer);});}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}});/**
 * @author WestLangley / http://github.com/WestLangley
 */function HemisphereLightProbe(skyColor,groundColor,intensity){LightProbe.call(this,undefined,intensity);var color1=new Color().set(skyColor);var color2=new Color().set(groundColor);var sky=new Vector3$1(color1.r,color1.g,color1.b);var ground=new Vector3$1(color2.r,color2.g,color2.b);// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );
var c0=Math.sqrt(Math.PI);var c1=c0*Math.sqrt(0.75);this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);}HemisphereLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:HemisphereLightProbe,isHemisphereLightProbe:true,copy:function copy(source){// modifying colors not currently supported
LightProbe.prototype.copy.call(this,source);return this;},toJSON:function toJSON(meta){var data=LightProbe.prototype.toJSON.call(this,meta);// data.sh = this.sh.toArray(); // todo
return data;}});/**
 * @author WestLangley / http://github.com/WestLangley
 */function AmbientLightProbe(color,intensity){LightProbe.call(this,undefined,intensity);var color1=new Color().set(color);// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );
this.sh.coefficients[0].set(color1.r,color1.g,color1.b).multiplyScalar(2*Math.sqrt(Math.PI));}AmbientLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:AmbientLightProbe,isAmbientLightProbe:true,copy:function copy(source){// modifying color not currently supported
LightProbe.prototype.copy.call(this,source);return this;},toJSON:function toJSON(meta){var data=LightProbe.prototype.toJSON.call(this,meta);// data.sh = this.sh.toArray(); // todo
return data;}});var _eyeRight=new Matrix4();var _eyeLeft=new Matrix4();/**
 * @author mrdoob / http://mrdoob.com/
 */function StereoCamera(){this.type='StereoCamera';this.aspect=1;this.eyeSep=0.064;this.cameraL=new PerspectiveCamera();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new PerspectiveCamera();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null};}Object.assign(StereoCamera.prototype,{update:function update(camera){var cache=this._cache;var needsUpdate=cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep;if(needsUpdate){cache.focus=camera.focus;cache.fov=camera.fov;cache.aspect=camera.aspect*this.aspect;cache.near=camera.near;cache.far=camera.far;cache.zoom=camera.zoom;cache.eyeSep=this.eyeSep;// Off-axis stereoscopic effect based on
// http://paulbourke.net/stereographics/stereorender/
var projectionMatrix=camera.projectionMatrix.clone();var eyeSepHalf=cache.eyeSep/2;var eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus;var ymax=cache.near*Math.tan(MathUtils.DEG2RAD*cache.fov*0.5)/cache.zoom;var xmin,xmax;// translate xOffset
_eyeLeft.elements[12]=-eyeSepHalf;_eyeRight.elements[12]=eyeSepHalf;// for left eye
xmin=-ymax*cache.aspect+eyeSepOnProjection;xmax=ymax*cache.aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraL.projectionMatrix.copy(projectionMatrix);// for right eye
xmin=-ymax*cache.aspect-eyeSepOnProjection;xmax=ymax*cache.aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraR.projectionMatrix.copy(projectionMatrix);}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);}});/**
 * @author alteredq / http://alteredqualia.com/
 */function Clock(autoStart){this.autoStart=autoStart!==undefined?autoStart:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;}Object.assign(Clock.prototype,{start:function start(){this.startTime=(typeof performance==='undefined'?Date:performance).now();// see #10732
this.oldTime=this.startTime;this.elapsedTime=0;this.running=true;},stop:function stop(){this.getElapsedTime();this.running=false;this.autoStart=false;},getElapsedTime:function getElapsedTime(){this.getDelta();return this.elapsedTime;},getDelta:function getDelta(){var diff=0;if(this.autoStart&&!this.running){this.start();return 0;}if(this.running){var newTime=(typeof performance==='undefined'?Date:performance).now();diff=(newTime-this.oldTime)/1000;this.oldTime=newTime;this.elapsedTime+=diff;}return diff;}});/**
 * @author mrdoob / http://mrdoob.com/
 */var _position$2=new Vector3$1();var _quaternion$3=new Quaternion();var _scale$1=new Vector3$1();var _orientation=new Vector3$1();function AudioListener(){Object3D.call(this);this.type='AudioListener';this.context=AudioContext.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;// private
this._clock=new Clock();}AudioListener.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:AudioListener,getInput:function getInput(){return this.gain;},removeFilter:function removeFilter(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null;}return this;},getFilter:function getFilter(){return this.filter;},setFilter:function setFilter(value){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);}else{this.gain.disconnect(this.context.destination);}this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this;},getMasterVolume:function getMasterVolume(){return this.gain.gain.value;},setMasterVolume:function setMasterVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;},updateMatrixWorld:function updateMatrixWorld(force){Object3D.prototype.updateMatrixWorld.call(this,force);var listener=this.context.listener;var up=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$2,_quaternion$3,_scale$1);_orientation.set(0,0,-1).applyQuaternion(_quaternion$3);if(listener.positionX){// code path for Chrome (see #14393)
var endTime=this.context.currentTime+this.timeDelta;listener.positionX.linearRampToValueAtTime(_position$2.x,endTime);listener.positionY.linearRampToValueAtTime(_position$2.y,endTime);listener.positionZ.linearRampToValueAtTime(_position$2.z,endTime);listener.forwardX.linearRampToValueAtTime(_orientation.x,endTime);listener.forwardY.linearRampToValueAtTime(_orientation.y,endTime);listener.forwardZ.linearRampToValueAtTime(_orientation.z,endTime);listener.upX.linearRampToValueAtTime(up.x,endTime);listener.upY.linearRampToValueAtTime(up.y,endTime);listener.upZ.linearRampToValueAtTime(up.z,endTime);}else{listener.setPosition(_position$2.x,_position$2.y,_position$2.z);listener.setOrientation(_orientation.x,_orientation.y,_orientation.z,up.x,up.y,up.z);}}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author Reece Aaron Lecrivain / http://reecenotes.com/
 */function Audio(listener){Object3D.call(this);this.type='Audio';this.listener=listener;this.context=listener.context;this.gain=this.context.createGain();this.gain.connect(listener.getInput());this.autoplay=false;this.buffer=null;this.detune=0;this.loop=false;this.loopStart=0;this.loopEnd=0;this.offset=0;this.duration=undefined;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.sourceType='empty';this._startedAt=0;this._progress=0;this.filters=[];}Audio.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Audio,getOutput:function getOutput(){return this.gain;},setNodeSource:function setNodeSource(audioNode){this.hasPlaybackControl=false;this.sourceType='audioNode';this.source=audioNode;this.connect();return this;},setMediaElementSource:function setMediaElementSource(mediaElement){this.hasPlaybackControl=false;this.sourceType='mediaNode';this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this;},setMediaStreamSource:function setMediaStreamSource(mediaStream){this.hasPlaybackControl=false;this.sourceType='mediaStreamNode';this.source=this.context.createMediaStreamSource(mediaStream);this.connect();return this;},setBuffer:function setBuffer(audioBuffer){this.buffer=audioBuffer;this.sourceType='buffer';if(this.autoplay)this.play();return this;},play:function play(delay){if(delay===undefined)delay=0;if(this.isPlaying===true){console.warn('THREE.Audio: Audio is already playing.');return;}if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._startedAt=this.context.currentTime+delay;var source=this.context.createBufferSource();source.buffer=this.buffer;source.loop=this.loop;source.loopStart=this.loopStart;source.loopEnd=this.loopEnd;source.onended=this.onEnded.bind(this);source.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=source;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect();},pause:function pause(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}if(this.isPlaying===true){// update current progress
this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){// ensure _progress does not exceed duration with looped audios
this._progress=this._progress%(this.duration||this.buffer.duration);}this.source.stop();this.source.onended=null;this.isPlaying=false;}return this;},stop:function stop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._progress=0;this.source.stop();this.source.onended=null;this.isPlaying=false;return this;},connect:function connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var i=1,l=this.filters.length;i<l;i++){this.filters[i-1].connect(this.filters[i]);}this.filters[this.filters.length-1].connect(this.getOutput());}else{this.source.connect(this.getOutput());}return this;},disconnect:function disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var i=1,l=this.filters.length;i<l;i++){this.filters[i-1].disconnect(this.filters[i]);}this.filters[this.filters.length-1].disconnect(this.getOutput());}else{this.source.disconnect(this.getOutput());}return this;},getFilters:function getFilters(){return this.filters;},setFilters:function setFilters(value){if(!value)value=[];if(this.isPlaying===true){this.disconnect();this.filters=value;this.connect();}else{this.filters=value;}return this;},setDetune:function setDetune(value){this.detune=value;if(this.source.detune===undefined)return;// only set detune when available
if(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,0.01);}return this;},getDetune:function getDetune(){return this.detune;},getFilter:function getFilter(){return this.getFilters()[0];},setFilter:function setFilter(filter){return this.setFilters(filter?[filter]:[]);},setPlaybackRate:function setPlaybackRate(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.playbackRate=value;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,0.01);}return this;},getPlaybackRate:function getPlaybackRate(){return this.playbackRate;},onEnded:function onEnded(){this.isPlaying=false;},getLoop:function getLoop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return false;}return this.loop;},setLoop:function setLoop(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.loop=value;if(this.isPlaying===true){this.source.loop=this.loop;}return this;},setLoopStart:function setLoopStart(value){this.loopStart=value;return this;},setLoopEnd:function setLoopEnd(value){this.loopEnd=value;return this;},getVolume:function getVolume(){return this.gain.gain.value;},setVolume:function setVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 */var _position$3=new Vector3$1();var _quaternion$4=new Quaternion();var _scale$2=new Vector3$1();var _orientation$1=new Vector3$1();function PositionalAudio(listener){Audio.call(this,listener);this.panner=this.context.createPanner();this.panner.panningModel='HRTF';this.panner.connect(this.gain);}PositionalAudio.prototype=Object.assign(Object.create(Audio.prototype),{constructor:PositionalAudio,getOutput:function getOutput(){return this.panner;},getRefDistance:function getRefDistance(){return this.panner.refDistance;},setRefDistance:function setRefDistance(value){this.panner.refDistance=value;return this;},getRolloffFactor:function getRolloffFactor(){return this.panner.rolloffFactor;},setRolloffFactor:function setRolloffFactor(value){this.panner.rolloffFactor=value;return this;},getDistanceModel:function getDistanceModel(){return this.panner.distanceModel;},setDistanceModel:function setDistanceModel(value){this.panner.distanceModel=value;return this;},getMaxDistance:function getMaxDistance(){return this.panner.maxDistance;},setMaxDistance:function setMaxDistance(value){this.panner.maxDistance=value;return this;},setDirectionalCone:function setDirectionalCone(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this;},updateMatrixWorld:function updateMatrixWorld(force){Object3D.prototype.updateMatrixWorld.call(this,force);if(this.hasPlaybackControl===true&&this.isPlaying===false)return;this.matrixWorld.decompose(_position$3,_quaternion$4,_scale$2);_orientation$1.set(0,0,1).applyQuaternion(_quaternion$4);var panner=this.panner;if(panner.positionX){// code path for Chrome and Firefox (see #14393)
var endTime=this.context.currentTime+this.listener.timeDelta;panner.positionX.linearRampToValueAtTime(_position$3.x,endTime);panner.positionY.linearRampToValueAtTime(_position$3.y,endTime);panner.positionZ.linearRampToValueAtTime(_position$3.z,endTime);panner.orientationX.linearRampToValueAtTime(_orientation$1.x,endTime);panner.orientationY.linearRampToValueAtTime(_orientation$1.y,endTime);panner.orientationZ.linearRampToValueAtTime(_orientation$1.z,endTime);}else{panner.setPosition(_position$3.x,_position$3.y,_position$3.z);panner.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z);}}});/**
 * @author mrdoob / http://mrdoob.com/
 */function AudioAnalyser(audio,fftSize){this.analyser=audio.context.createAnalyser();this.analyser.fftSize=fftSize!==undefined?fftSize:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser);}Object.assign(AudioAnalyser.prototype,{getFrequencyData:function getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data;},getAverageFrequency:function getAverageFrequency(){var value=0,data=this.getFrequencyData();for(var i=0;i<data.length;i++){value+=data[i];}return value/data.length;}});/**
 *
 * Buffered scene graph property that allows weighted accumulation.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function PropertyMixer(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;var mixFunction,mixFunctionAdditive,setIdentity;// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]
//
// interpolators can use .buffer as their .result
// the data then goes to 'incoming'
//
// 'accu0' and 'accu1' are used frame-interleaved for
// the cumulative result and are compared to detect
// changes
//
// 'orig' stores the original state of the property
//
// 'add' is used for additive cumulative results
//
// 'work' is optional and is only present for quaternion types. It is used
// to store intermediate quaternion multiplication results
switch(typeName){case'quaternion':mixFunction=this._slerp;mixFunctionAdditive=this._slerpAdditive;setIdentity=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(valueSize*6);this._workIndex=5;break;case'string':case'bool':mixFunction=this._select;// Use the regular mix function and for additive on these types,
// additive is not relevant for non-numeric types
mixFunctionAdditive=this._select;setIdentity=this._setAdditiveIdentityOther;this.buffer=new Array(valueSize*5);break;default:mixFunction=this._lerp;mixFunctionAdditive=this._lerpAdditive;setIdentity=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(valueSize*5);}this._mixBufferRegion=mixFunction;this._mixBufferRegionAdditive=mixFunctionAdditive;this._setIdentity=setIdentity;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0;}Object.assign(PropertyMixer.prototype,{// accumulate data in the 'incoming' region into 'accu<i>'
accumulate:function accumulate(accuIndex,weight){// note: happily accumulating nothing when weight = 0, the caller knows
// the weight and shouldn't have made the call in the first place
var buffer=this.buffer,stride=this.valueSize,offset=accuIndex*stride+stride,currentWeight=this.cumulativeWeight;if(currentWeight===0){// accuN := incoming * weight
for(var i=0;i!==stride;++i){buffer[offset+i]=buffer[i];}currentWeight=weight;}else{// accuN := accuN + incoming * weight
currentWeight+=weight;var mix=weight/currentWeight;this._mixBufferRegion(buffer,offset,0,mix,stride);}this.cumulativeWeight=currentWeight;},// accumulate data in the 'incoming' region into 'add'
accumulateAdditive:function accumulateAdditive(weight){var buffer=this.buffer,stride=this.valueSize,offset=stride*this._addIndex;if(this.cumulativeWeightAdditive===0){// add = identity
this._setIdentity();}// add := add + incoming * weight
this._mixBufferRegionAdditive(buffer,offset,0,weight,stride);this.cumulativeWeightAdditive+=weight;},// apply the state of 'accu<i>' to the binding when accus differ
apply:function apply(accuIndex){var stride=this.valueSize,buffer=this.buffer,offset=accuIndex*stride+stride,weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(weight<1){// accuN := accuN + original * ( 1 - cumulativeWeight )
var originalValueOffset=stride*this._origIndex;this._mixBufferRegion(buffer,offset,originalValueOffset,1-weight,stride);}if(weightAdditive>0){// accuN := accuN + additive accuN
this._mixBufferRegionAdditive(buffer,offset,this._addIndex*stride,1,stride);}for(var i=stride,e=stride+stride;i!==e;++i){if(buffer[i]!==buffer[i+stride]){// value has changed -> update scene graph
binding.setValue(buffer,offset);break;}}},// remember the state of the bound property and copy it to both accus
saveOriginalState:function saveOriginalState(){var binding=this.binding;var buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;binding.getValue(buffer,originalValueOffset);// accu[0..1] := orig -- initially detect changes against the original
for(var i=stride,e=originalValueOffset;i!==e;++i){buffer[i]=buffer[originalValueOffset+i%stride];}// Add to identity for additive
this._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;},// apply the state previously taken via 'saveOriginalState' to the binding
restoreOriginalState:function restoreOriginalState(){var originalValueOffset=this.valueSize*3;this.binding.setValue(this.buffer,originalValueOffset);},_setAdditiveIdentityNumeric:function _setAdditiveIdentityNumeric(){var startIndex=this._addIndex*this.valueSize;var endIndex=startIndex+this.valueSize;for(var i=startIndex;i<endIndex;i++){this.buffer[i]=0;}},_setAdditiveIdentityQuaternion:function _setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*4+3]=1;},_setAdditiveIdentityOther:function _setAdditiveIdentityOther(){var startIndex=this._origIndex*this.valueSize;var targetIndex=this._addIndex*this.valueSize;for(var i=0;i<this.valueSize;i++){this.buffer[targetIndex+i]=this.buffer[startIndex+i];}},// mix functions
_select:function _select(buffer,dstOffset,srcOffset,t,stride){if(t>=0.5){for(var i=0;i!==stride;++i){buffer[dstOffset+i]=buffer[srcOffset+i];}}},_slerp:function _slerp(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t);},_slerpAdditive:function _slerpAdditive(buffer,dstOffset,srcOffset,t,stride){var workOffset=this._workIndex*stride;// Store result in intermediate buffer offset
Quaternion.multiplyQuaternionsFlat(buffer,workOffset,buffer,dstOffset,buffer,srcOffset);// Slerp to the intermediate result
Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,workOffset,t);},_lerp:function _lerp(buffer,dstOffset,srcOffset,t,stride){var s=1-t;for(var i=0;i!==stride;++i){var j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t;}},_lerpAdditive:function _lerpAdditive(buffer,dstOffset,srcOffset,t,stride){for(var i=0;i!==stride;++i){var j=dstOffset+i;buffer[j]=buffer[j]+buffer[srcOffset+i]*t;}}});/**
 *
 * A reference to a real property in the scene graph.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */ // Characters [].:/ are reserved for track binding syntax.
var _RESERVED_CHARS_RE='\\[\\]\\.:\\/';var _reservedRe=new RegExp('['+_RESERVED_CHARS_RE+']','g');// Attempts to allow node names from any language. ES5's `\w` regexp matches
// only latin characters, and the unicode \p{L} is not yet supported. So
// instead, we exclude reserved characters and match everything else.
var _wordChar='[^'+_RESERVED_CHARS_RE+']';var _wordCharOrDot='[^'+_RESERVED_CHARS_RE.replace('\\.','')+']';// Parent directories, delimited by '/' or ':'. Currently unused, but must
// be matched to parse the rest of the track name.
var _directoryRe=/((?:WC+[\/:])*)/.source.replace('WC',_wordChar);// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.
var _nodeRe=/(WCOD+)?/.source.replace('WCOD',_wordCharOrDot);// Object on target node, and accessor. May not contain reserved
// characters. Accessor may contain any character except closing bracket.
var _objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace('WC',_wordChar);// Property and accessor. May not contain reserved characters. Accessor may
// contain any non-bracket characters.
var _propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace('WC',_wordChar);var _trackRe=new RegExp(''+'^'+_directoryRe+_nodeRe+_objectRe+_propertyRe+'$');var _supportedObjectNames=['material','materials','bones'];function Composite(targetGroup,path,optionalParsedPath){var parsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,parsedPath);}Object.assign(Composite.prototype,{getValue:function getValue(array,offset){this.bind();// bind all binding
var firstValidIndex=this._targetGroup.nCachedObjects_,binding=this._bindings[firstValidIndex];// and only call .getValue on the first
if(binding!==undefined)binding.getValue(array,offset);},setValue:function setValue(array,offset){var bindings=this._bindings;for(var i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].setValue(array,offset);}},bind:function bind(){var bindings=this._bindings;for(var i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].bind();}},unbind:function unbind(){var bindings=this._bindings;for(var i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].unbind();}}});function PropertyBinding(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=rootNode;}Object.assign(PropertyBinding,{Composite:Composite,create:function create(root,path,parsedPath){if(!(root&&root.isAnimationObjectGroup)){return new PropertyBinding(root,path,parsedPath);}else{return new PropertyBinding.Composite(root,path,parsedPath);}},/**
	 * Replaces spaces with underscores and removes unsupported characters from
	 * node names, to ensure compatibility with parseTrackName().
	 *
	 * @param {string} name Node name to be sanitized.
	 * @return {string}
	 */sanitizeNodeName:function sanitizeNodeName(name){return name.replace(/\s/g,'_').replace(_reservedRe,'');},parseTrackName:function parseTrackName(trackName){var matches=_trackRe.exec(trackName);if(!matches){throw new Error('PropertyBinding: Cannot parse trackName: '+trackName);}var results={// directoryName: matches[ 1 ], // (tschw) currently unused
nodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],// required
propertyIndex:matches[6]};var lastDot=results.nodeName&&results.nodeName.lastIndexOf('.');if(lastDot!==undefined&&lastDot!==-1){var objectName=results.nodeName.substring(lastDot+1);// Object names must be checked against a whitelist. Otherwise, there
// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
// 'bar' could be the objectName, or part of a nodeName (which can
// include '.' characters).
if(_supportedObjectNames.indexOf(objectName)!==-1){results.nodeName=results.nodeName.substring(0,lastDot);results.objectName=objectName;}}if(results.propertyName===null||results.propertyName.length===0){throw new Error('PropertyBinding: can not parse propertyName from trackName: '+trackName);}return results;},findNode:function findNode(root,nodeName){if(!nodeName||nodeName===""||nodeName==="."||nodeName===-1||nodeName===root.name||nodeName===root.uuid){return root;}// search into skeleton bones.
if(root.skeleton){var bone=root.skeleton.getBoneByName(nodeName);if(bone!==undefined){return bone;}}// search into node subtree.
if(root.children){var searchNodeSubtree=function searchNodeSubtree(children){for(var i=0;i<children.length;i++){var childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName){return childNode;}var result=searchNodeSubtree(childNode.children);if(result)return result;}return null;};var subTreeNode=searchNodeSubtree(root.children);if(subTreeNode){return subTreeNode;}}return null;}});Object.assign(PropertyBinding.prototype,{// prototype, continued
// these are used to "bind" a nonexistent property
_getValue_unavailable:function _getValue_unavailable(){},_setValue_unavailable:function _setValue_unavailable(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function getValue_direct(buffer,offset){buffer[offset]=this.node[this.propertyName];},function getValue_array(buffer,offset){var source=this.resolvedProperty;for(var i=0,n=source.length;i!==n;++i){buffer[offset++]=source[i];}},function getValue_arrayElement(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex];},function getValue_toArray(buffer,offset){this.resolvedProperty.toArray(buffer,offset);}],SetterByBindingTypeAndVersioning:[[// Direct
function setValue_direct(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];},function setValue_direct_setNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=true;},function setValue_direct_setMatrixWorldNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}],[// EntireArray
function setValue_array(buffer,offset){var dest=this.resolvedProperty;for(var i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}},function setValue_array_setNeedsUpdate(buffer,offset){var dest=this.resolvedProperty;for(var i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.needsUpdate=true;},function setValue_array_setMatrixWorldNeedsUpdate(buffer,offset){var dest=this.resolvedProperty;for(var i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.matrixWorldNeedsUpdate=true;}],[// ArrayElement
function setValue_arrayElement(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];},function setValue_arrayElement_setNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=true;},function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}],[// HasToFromArray
function setValue_fromArray(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);},function setValue_fromArray_setNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=true;},function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=true;}]],getValue:function getValue_unbound(targetArray,offset){this.bind();this.getValue(targetArray,offset);// Note: This class uses a State pattern on a per-method basis:
// 'bind' sets 'this.getValue' / 'setValue' and shadows the
// prototype version of these methods with one that represents
// the bound state. When the property is not found, the methods
// become no-ops.
},setValue:function getValue_unbound(sourceArray,offset){this.bind();this.setValue(sourceArray,offset);},// create getter / setter pair for a property in the scene graph
bind:function bind(){var targetObject=this.node,parsedPath=this.parsedPath,objectName=parsedPath.objectName,propertyName=parsedPath.propertyName,propertyIndex=parsedPath.propertyIndex;if(!targetObject){targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode;this.node=targetObject;}// set fail state so we can just 'return' on error
this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;// ensure there is a value node
if(!targetObject){console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\'t found.');return;}if(objectName){var objectIndex=parsedPath.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....
switch(objectName){case'materials':if(!targetObject.material){console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);return;}if(!targetObject.material.materials){console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);return;}targetObject=targetObject.material.materials;break;case'bones':if(!targetObject.skeleton){console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);return;}// potential future optimization: skip this if propertyIndex is already an integer
// and convert the integer string to a true integer.
targetObject=targetObject.skeleton.bones;// support resolving morphTarget names into indices.
for(var i=0;i<targetObject.length;i++){if(targetObject[i].name===objectIndex){objectIndex=i;break;}}break;default:if(targetObject[objectName]===undefined){console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);return;}targetObject=targetObject[objectName];}if(objectIndex!==undefined){if(targetObject[objectIndex]===undefined){console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,targetObject);return;}targetObject=targetObject[objectIndex];}}// resolve property
var nodeProperty=targetObject[propertyName];if(nodeProperty===undefined){var nodeName=parsedPath.nodeName;console.error('THREE.PropertyBinding: Trying to update property for track: '+nodeName+'.'+propertyName+' but it wasn\'t found.',targetObject);return;}// determine versioning scheme
var versioning=this.Versioning.None;this.targetObject=targetObject;if(targetObject.needsUpdate!==undefined){// material
versioning=this.Versioning.NeedsUpdate;}else if(targetObject.matrixWorldNeedsUpdate!==undefined){// node transform
versioning=this.Versioning.MatrixWorldNeedsUpdate;}// determine how the property gets bound
var bindingType=this.BindingType.Direct;if(propertyIndex!==undefined){// access a sub element of the property array (only primitives are supported right now)
if(propertyName==="morphTargetInfluences"){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.
// support resolving morphTarget names into indices.
if(!targetObject.geometry){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);return;}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);return;}if(targetObject.morphTargetDictionary[propertyIndex]!==undefined){propertyIndex=targetObject.morphTargetDictionary[propertyIndex];}}else{console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',this);return;}}bindingType=this.BindingType.ArrayElement;this.resolvedProperty=nodeProperty;this.propertyIndex=propertyIndex;}else if(nodeProperty.fromArray!==undefined&&nodeProperty.toArray!==undefined){// must use copy for Object3D.Euler/Quaternion
bindingType=this.BindingType.HasFromToArray;this.resolvedProperty=nodeProperty;}else if(Array.isArray(nodeProperty)){bindingType=this.BindingType.EntireArray;this.resolvedProperty=nodeProperty;}else{this.propertyName=propertyName;}// select getter / setter
this.getValue=this.GetterByBindingType[bindingType];this.setValue=this.SetterByBindingTypeAndVersioning[bindingType][versioning];},unbind:function unbind(){this.node=null;// back to the prototype version of getValue / setValue
// note: avoiding to mutate the shape of 'this' via 'delete'
this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}});// DECLARE ALIAS AFTER assign prototype
Object.assign(PropertyBinding.prototype,{// initial state of these methods that calls 'bind'
_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue});/**
 *
 * A group of objects that receives a shared animation state.
 *
 * Usage:
 *
 *  - Add objects you would otherwise pass as 'root' to the
 *    constructor or the .clipAction method of AnimationMixer.
 *
 *  - Instead pass this object as 'root'.
 *
 *  - You can also add and remove objects later when the mixer
 *    is running.
 *
 * Note:
 *
 *    Objects of this class appear as one object to the mixer,
 *    so cache control of the individual objects must be done
 *    on the group.
 *
 * Limitation:
 *
 *  - The animated properties must be compatible among the
 *    all objects in the group.
 *
 *  - A single property can either be controlled through a
 *    target group or directly, but not both.
 *
 * @author tschw
 */function AnimationObjectGroup(){this.uuid=MathUtils.generateUUID();// cached objects followed by the active ones
this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;// threshold
// note: read by PropertyBinding.Composite
var indices={};this._indicesByUUID=indices;// for bookkeeping
for(var i=0,n=arguments.length;i!==n;++i){indices[arguments[i].uuid]=i;}this._paths=[];// inside: string
this._parsedPaths=[];// inside: { we don't care, here }
this._bindings=[];// inside: Array< PropertyBinding >
this._bindingsIndicesByPath={};// inside: indices in these arrays
var scope=this;this.stats={objects:{get total(){return scope._objects.length;},get inUse(){return this.total-scope.nCachedObjects_;}},get bindingsPerObject(){return scope._bindings.length;}};}Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:true,add:function add(){var objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length,knownObject=undefined;for(var i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index===undefined){// unknown object -> add it to the ACTIVE region
index=nObjects++;indicesByUUID[uuid]=index;objects.push(object);// accounting is done, now do the same for all bindings
for(var j=0,m=nBindings;j!==m;++j){bindings[j].push(new PropertyBinding(object,paths[j],parsedPaths[j]));}}else if(index<nCachedObjects){knownObject=objects[index];// move existing object to the ACTIVE region
var firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=firstActiveIndex;objects[firstActiveIndex]=object;// accounting is done, now do the same for all bindings
for(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],binding=bindingsForPath[index];bindingsForPath[index]=lastCached;if(binding===undefined){// since we do not bother to create new bindings
// for objects that are cached, the binding may
// or may not exist
binding=new PropertyBinding(object,paths[j],parsedPaths[j]);}bindingsForPath[firstActiveIndex]=binding;}}else if(objects[index]!==knownObject){console.error('THREE.AnimationObjectGroup: Different objects with the same UUID '+'detected. Clean the caches or recreate your infrastructure when reloading scenes.');}// else the object is already where we want it to be
}// for arguments
this.nCachedObjects_=nCachedObjects;},remove:function remove(){var objects=this._objects,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;for(var i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined&&index>=nCachedObjects){// move existing object into the CACHED region
var lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=lastCachedIndex;objects[lastCachedIndex]=object;// accounting is done, now do the same for all bindings
for(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j],firstActive=bindingsForPath[lastCachedIndex],binding=bindingsForPath[index];bindingsForPath[index]=firstActive;bindingsForPath[lastCachedIndex]=binding;}}}// for arguments
this.nCachedObjects_=nCachedObjects;},// remove & forget
uncache:function uncache(){var objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;for(var i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined){delete indicesByUUID[uuid];if(index<nCachedObjects){// object is cached, shrink the CACHED region
var firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex],lastIndex=--nObjects,lastObject=objects[lastIndex];// last cached object takes this object's place
indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;// last object goes to the activated slot and pop
indicesByUUID[lastObject.uuid]=firstActiveIndex;objects[firstActiveIndex]=lastObject;objects.pop();// accounting is done, now do the same for all bindings
for(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],last=bindingsForPath[lastIndex];bindingsForPath[index]=lastCached;bindingsForPath[firstActiveIndex]=last;bindingsForPath.pop();}}else{// object is active, just swap with the last and pop
var lastIndex=--nObjects,lastObject=objects[lastIndex];indicesByUUID[lastObject.uuid]=index;objects[index]=lastObject;objects.pop();// accounting is done, now do the same for all bindings
for(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j];bindingsForPath[index]=bindingsForPath[lastIndex];bindingsForPath.pop();}}// cached or active
}// if object is known
}// for arguments
this.nCachedObjects_=nCachedObjects;},// Internal interface used by befriended PropertyBinding.Composite:
subscribe_:function subscribe_(path,parsedPath){// returns an array of bindings for the given path that is changed
// according to the contained objects in the group
var indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path],bindings=this._bindings;if(index!==undefined)return bindings[index];var paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,bindingsForPath=new Array(nObjects);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);for(var i=nCachedObjects,n=objects.length;i!==n;++i){var object=objects[i];bindingsForPath[i]=new PropertyBinding(object,path,parsedPath);}return bindingsForPath;},unsubscribe_:function unsubscribe_(path){// tells the group to forget about a property path and no longer
// update the array previously obtained with 'subscribe_'
var indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(index!==undefined){var paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex],lastBindingsPath=path[lastBindingsIndex];indicesByPath[lastBindingsPath]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();paths[index]=paths[lastBindingsIndex];paths.pop();}}});/**
 *
 * Action provided by AnimationMixer for scheduling clip playback on specific
 * objects.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 *
 */function AnimationAction(mixer,clip,localRoot,blendMode){this._mixer=mixer;this._clip=clip;this._localRoot=localRoot||null;this.blendMode=blendMode||clip.blendMode;var tracks=clip.tracks,nTracks=tracks.length,interpolants=new Array(nTracks);var interpolantSettings={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(var i=0;i!==nTracks;++i){var interpolant=tracks[i].createInterpolant(null);interpolants[i]=interpolant;interpolant.settings=interpolantSettings;}this._interpolantSettings=interpolantSettings;this._interpolants=interpolants;// bound by the mixer
// inside: PropertyMixer (managed by the mixer)
this._propertyBindings=new Array(nTracks);this._cacheIndex=null;// for the memory manager
this._byClipCacheIndex=null;// for the memory manager
this._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=LoopRepeat;this._loopCount=-1;// global mixer time when the action is to be started
// it's set back to 'null' upon start of the action
this._startTime=null;// scaled local time of the action
// gets clamped or wrapped to 0..clip.duration according to loop
this.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;// no. of repetitions when looping
this.paused=false;// true -> zero effective time scale
this.enabled=true;// false -> zero effective weight
this.clampWhenFinished=false;// keep feeding the last frame?
this.zeroSlopeAtStart=true;// for smooth interpolation w/o separate
this.zeroSlopeAtEnd=true;// clips for start, loop and end
}Object.assign(AnimationAction.prototype,{// State & Scheduling
play:function play(){this._mixer._activateAction(this);return this;},stop:function stop(){this._mixer._deactivateAction(this);return this.reset();},reset:function reset(){this.paused=false;this.enabled=true;this.time=0;// restart clip
this._loopCount=-1;// forget previous loops
this._startTime=null;// forget scheduling
return this.stopFading().stopWarping();},isRunning:function isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);},// return true when play has been called
isScheduled:function isScheduled(){return this._mixer._isActiveAction(this);},startAt:function startAt(time){this._startTime=time;return this;},setLoop:function setLoop(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this;},// Weight
// set the weight stopping any scheduled fading
// although .enabled = false yields an effective weight of zero, this
// method does *not* change .enabled, because it would be confusing
setEffectiveWeight:function setEffectiveWeight(weight){this.weight=weight;// note: same logic as when updated at runtime
this._effectiveWeight=this.enabled?weight:0;return this.stopFading();},// return the weight considering fading and .enabled
getEffectiveWeight:function getEffectiveWeight(){return this._effectiveWeight;},fadeIn:function fadeIn(duration){return this._scheduleFading(duration,0,1);},fadeOut:function fadeOut(duration){return this._scheduleFading(duration,1,0);},crossFadeFrom:function crossFadeFrom(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){var fadeInDuration=this._clip.duration,fadeOutDuration=fadeOutAction._clip.duration,startEndRatio=fadeOutDuration/fadeInDuration,endStartRatio=fadeInDuration/fadeOutDuration;fadeOutAction.warp(1.0,startEndRatio,duration);this.warp(endStartRatio,1.0,duration);}return this;},crossFadeTo:function crossFadeTo(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp);},stopFading:function stopFading(){var weightInterpolant=this._weightInterpolant;if(weightInterpolant!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(weightInterpolant);}return this;},// Time Scale Control
// set the time scale stopping any scheduled warping
// although .paused = true yields an effective time scale of zero, this
// method does *not* change .paused, because it would be confusing
setEffectiveTimeScale:function setEffectiveTimeScale(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping();},// return the time scale considering warping and .paused
getEffectiveTimeScale:function getEffectiveTimeScale(){return this._effectiveTimeScale;},setDuration:function setDuration(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping();},syncWith:function syncWith(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping();},halt:function halt(duration){return this.warp(this._effectiveTimeScale,0,duration);},warp:function warp(startTimeScale,endTimeScale,duration){var mixer=this._mixer,now=mixer.time,interpolant=this._timeScaleInterpolant,timeScale=this.timeScale;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._timeScaleInterpolant=interpolant;}var times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;times[1]=now+duration;values[0]=startTimeScale/timeScale;values[1]=endTimeScale/timeScale;return this;},stopWarping:function stopWarping(){var timeScaleInterpolant=this._timeScaleInterpolant;if(timeScaleInterpolant!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(timeScaleInterpolant);}return this;},// Object Accessors
getMixer:function getMixer(){return this._mixer;},getClip:function getClip(){return this._clip;},getRoot:function getRoot(){return this._localRoot||this._mixer._root;},// Interna
_update:function _update(time,deltaTime,timeDirection,accuIndex){// called by the mixer
if(!this.enabled){// call ._updateWeight() to update ._effectiveWeight
this._updateWeight(time);return;}var startTime=this._startTime;if(startTime!==null){// check for scheduled start of action
var timeRunning=(time-startTime)*timeDirection;if(timeRunning<0||timeDirection===0){return;// yet to come / don't decide when delta = 0
}// start
this._startTime=null;// unschedule
deltaTime=timeDirection*timeRunning;}// apply time scale and advance time
deltaTime*=this._updateTimeScale(time);var clipTime=this._updateTime(deltaTime);// note: _updateTime may disable the action resulting in
// an effective weight of 0
var weight=this._updateWeight(time);if(weight>0){var interpolants=this._interpolants;var propertyMixers=this._propertyBindings;switch(this.blendMode){case AdditiveAnimationBlendMode:for(var j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulateAdditive(weight);}break;case NormalAnimationBlendMode:default:for(var j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulate(accuIndex,weight);}}}},_updateWeight:function _updateWeight(time){var weight=0;if(this.enabled){weight=this.weight;var interpolant=this._weightInterpolant;if(interpolant!==null){var interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopFading();if(interpolantValue===0){// faded out, disable
this.enabled=false;}}}}this._effectiveWeight=weight;return weight;},_updateTimeScale:function _updateTimeScale(time){var timeScale=0;if(!this.paused){timeScale=this.timeScale;var interpolant=this._timeScaleInterpolant;if(interpolant!==null){var interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopWarping();if(timeScale===0){// motion has halted, pause
this.paused=true;}else{// warp done - apply final time scale
this.timeScale=timeScale;}}}}this._effectiveTimeScale=timeScale;return timeScale;},_updateTime:function _updateTime(deltaTime){var time=this.time+deltaTime;var duration=this._clip.duration;var loop=this.loop;var loopCount=this._loopCount;var pingPong=loop===LoopPingPong;if(deltaTime===0){if(loopCount===-1)return time;return pingPong&&(loopCount&1)===1?duration-time:time;}if(loop===LoopOnce){if(loopCount===-1){// just started
this._loopCount=0;this._setEndings(true,true,false);}handle_stop:{if(time>=duration){time=duration;}else if(time<0){time=0;}else{this.time=time;break handle_stop;}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime<0?-1:1});}}else{// repetitive Repeat or PingPong
if(loopCount===-1){// just started
if(deltaTime>=0){loopCount=0;this._setEndings(true,this.repetitions===0,pingPong);}else{// when looping in reverse direction, the initial
// transition through zero counts as a repetition,
// so leave loopCount at -1
this._setEndings(this.repetitions===0,true,pingPong);}}if(time>=duration||time<0){// wrap around
var loopDelta=Math.floor(time/duration);// signed
time-=duration*loopDelta;loopCount+=Math.abs(loopDelta);var pending=this.repetitions-loopCount;if(pending<=0){// have to stop (switch state, clamp time, fire event)
if(this.clampWhenFinished)this.paused=true;else this.enabled=false;time=deltaTime>0?duration:0;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime>0?1:-1});}else{// keep running
if(pending===1){// entering the last round
var atStart=deltaTime<0;this._setEndings(atStart,!atStart,pingPong);}else{this._setEndings(false,false,pingPong);}this._loopCount=loopCount;this.time=time;this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:loopDelta});}}else{this.time=time;}if(pingPong&&(loopCount&1)===1){// invert time for the "pong round"
return duration-time;}}return time;},_setEndings:function _setEndings(atStart,atEnd,pingPong){var settings=this._interpolantSettings;if(pingPong){settings.endingStart=ZeroSlopeEnding;settings.endingEnd=ZeroSlopeEnding;}else{// assuming for LoopOnce atStart == atEnd == true
if(atStart){settings.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingStart=WrapAroundEnding;}if(atEnd){settings.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingEnd=WrapAroundEnding;}}},_scheduleFading:function _scheduleFading(duration,weightNow,weightThen){var mixer=this._mixer,now=mixer.time,interpolant=this._weightInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._weightInterpolant=interpolant;}var times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;values[0]=weightNow;times[1]=now+duration;values[1]=weightThen;return this;}});/**
 *
 * Player for AnimationClips.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */function AnimationMixer(root){this._root=root;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1.0;}AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function _bindAction(action,prototypeAction){var root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings,interpolants=action._interpolants,rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName,bindingsByName=bindingsByRoot[rootUuid];if(bindingsByName===undefined){bindingsByName={};bindingsByRoot[rootUuid]=bindingsByName;}for(var i=0;i!==nTracks;++i){var track=tracks[i],trackName=track.name,binding=bindingsByName[trackName];if(binding!==undefined){bindings[i]=binding;}else{binding=bindings[i];if(binding!==undefined){// existing binding, make sure the cache knows
if(binding._cacheIndex===null){++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);}continue;}var path=prototypeAction&&prototypeAction._propertyBindings[i].binding.parsedPath;binding=new PropertyMixer(PropertyBinding.create(root,trackName,path),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);bindings[i]=binding;}interpolants[i].resultBuffer=binding.buffer;}},_activateAction:function _activateAction(action){if(!this._isActiveAction(action)){if(action._cacheIndex===null){// this action has been forgotten by the cache, but the user
// appears to be still using it -> rebind
var rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid);}var bindings=action._propertyBindings;// increment reference counts / sort out state
for(var i=0,n=bindings.length;i!==n;++i){var binding=bindings[i];if(binding.useCount++===0){this._lendBinding(binding);binding.saveOriginalState();}}this._lendAction(action);}},_deactivateAction:function _deactivateAction(action){if(this._isActiveAction(action)){var bindings=action._propertyBindings;// decrement reference counts / sort out state
for(var i=0,n=bindings.length;i!==n;++i){var binding=bindings[i];if(--binding.useCount===0){binding.restoreOriginalState();this._takeBackBinding(binding);}}this._takeBackAction(action);}},// Memory manager
_initMemoryManager:function _initMemoryManager(){this._actions=[];// 'nActiveActions' followed by inactive ones
this._nActiveActions=0;this._actionsByClip={};// inside:
// {
// 	knownActions: Array< AnimationAction > - used as prototypes
// 	actionByRoot: AnimationAction - lookup
// }
this._bindings=[];// 'nActiveBindings' followed by inactive ones
this._nActiveBindings=0;this._bindingsByRootAndName={};// inside: Map< name, PropertyMixer >
this._controlInterpolants=[];// same game as above
this._nActiveControlInterpolants=0;var scope=this;this.stats={actions:{get total(){return scope._actions.length;},get inUse(){return scope._nActiveActions;}},bindings:{get total(){return scope._bindings.length;},get inUse(){return scope._nActiveBindings;}},controlInterpolants:{get total(){return scope._controlInterpolants.length;},get inUse(){return scope._nActiveControlInterpolants;}}};},// Memory management for AnimationAction objects
_isActiveAction:function _isActiveAction(action){var index=action._cacheIndex;return index!==null&&index<this._nActiveActions;},_addInactiveAction:function _addInactiveAction(action,clipUuid,rootUuid){var actions=this._actions,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip===undefined){actionsForClip={knownActions:[action],actionByRoot:{}};action._byClipCacheIndex=0;actionsByClip[clipUuid]=actionsForClip;}else{var knownActions=actionsForClip.knownActions;action._byClipCacheIndex=knownActions.length;knownActions.push(action);}action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action;},_removeInactiveAction:function _removeInactiveAction(action){var actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;var clipUuid=action._clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid],knownActionsForClip=actionsForClip.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;var actionByRoot=actionsForClip.actionByRoot,rootUuid=(action._localRoot||this._root).uuid;delete actionByRoot[rootUuid];if(knownActionsForClip.length===0){delete actionsByClip[clipUuid];}this._removeInactiveBindingsForAction(action);},_removeInactiveBindingsForAction:function _removeInactiveBindingsForAction(action){var bindings=action._propertyBindings;for(var i=0,n=bindings.length;i!==n;++i){var binding=bindings[i];if(--binding.referenceCount===0){this._removeInactiveBinding(binding);}}},_lendAction:function _lendAction(action){// [ active actions |  inactive actions  ]
// [  active actions >| inactive actions ]
//                 s        a
//                  <-swap->
//                 a        s
var actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction;},_takeBackAction:function _takeBackAction(action){// [  active actions  | inactive actions ]
// [ active actions |< inactive actions  ]
//        a        s
//         <-swap->
//        s        a
var actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction;},// Memory management for PropertyMixer objects
_addInactiveBinding:function _addInactiveBinding(binding,rootUuid,trackName){var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],bindings=this._bindings;if(bindingByName===undefined){bindingByName={};bindingsByRoot[rootUuid]=bindingByName;}bindingByName[trackName]=binding;binding._cacheIndex=bindings.length;bindings.push(binding);},_removeInactiveBinding:function _removeInactiveBinding(binding){var bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid,trackName=propBinding.path,bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1],cacheIndex=binding._cacheIndex;lastInactiveBinding._cacheIndex=cacheIndex;bindings[cacheIndex]=lastInactiveBinding;bindings.pop();delete bindingByName[trackName];if(Object.keys(bindingByName).length===0){delete bindingsByRoot[rootUuid];}},_lendBinding:function _lendBinding(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding;},_takeBackBinding:function _takeBackBinding(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding;},// Memory management of Interpolants for weight and time scale
_lendControlInterpolant:function _lendControlInterpolant(){var interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++,interpolant=interpolants[lastActiveIndex];if(interpolant===undefined){interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);interpolant.__cacheIndex=lastActiveIndex;interpolants[lastActiveIndex]=interpolant;}return interpolant;},_takeBackControlInterpolant:function _takeBackControlInterpolant(interpolant){var interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant;},_controlInterpolantsResultBuffer:new Float32Array(1),// return an action for a clip optionally using a custom root target
// object (this method allocates a lot of dynamic memory in case a
// previously unknown clip/root combination is specified)
clipAction:function clipAction(clip,optionalRoot,blendMode){var root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject!==null?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid],prototypeAction=null;if(blendMode===undefined){if(clipObject!==null){blendMode=clipObject.blendMode;}else{blendMode=NormalAnimationBlendMode;}}if(actionsForClip!==undefined){var existingAction=actionsForClip.actionByRoot[rootUuid];if(existingAction!==undefined&&existingAction.blendMode===blendMode){return existingAction;}// we know the clip, so we don't have to parse all
// the bindings again but can just copy
prototypeAction=actionsForClip.knownActions[0];// also, take the clip from the prototype action
if(clipObject===null)clipObject=prototypeAction._clip;}// clip must be known when specified via string
if(clipObject===null)return null;// allocate all resources required to run it
var newAction=new AnimationAction(this,clipObject,optionalRoot,blendMode);this._bindAction(newAction,prototypeAction);// and make the action known to the memory manager
this._addInactiveAction(newAction,clipUuid,rootUuid);return newAction;},// get an existing action
existingAction:function existingAction(clip,optionalRoot){var root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];if(actionsForClip!==undefined){return actionsForClip.actionByRoot[rootUuid]||null;}return null;},// deactivates all previously scheduled actions
stopAllAction:function stopAllAction(){var actions=this._actions,nActions=this._nActiveActions;for(var i=nActions-1;i>=0;--i){actions[i].stop();}return this;},// advance the time and update apply the animation
update:function update(deltaTime){deltaTime*=this.timeScale;var actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1;// run active actions
for(var i=0;i!==nActions;++i){var action=actions[i];action._update(time,deltaTime,timeDirection,accuIndex);}// update scene graph
var bindings=this._bindings,nBindings=this._nActiveBindings;for(var i=0;i!==nBindings;++i){bindings[i].apply(accuIndex);}return this;},// Allows you to seek to a specific time in an animation.
setTime:function setTime(timeInSeconds){this.time=0;// Zero out time attribute for AnimationMixer object;
for(var i=0;i<this._actions.length;i++){this._actions[i].time=0;// Zero out time attribute for all associated AnimationAction objects.
}return this.update(timeInSeconds);// Update used to set exact time. Returns "this" AnimationMixer object.
},// return this mixer's root target object
getRoot:function getRoot(){return this._root;},// free all resources specific to a particular clip
uncacheClip:function uncacheClip(clip){var actions=this._actions,clipUuid=clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip!==undefined){// note: just calling _removeInactiveAction would mess up the
// iteration state and also require updating the state we can
// just throw away
var actionsToRemove=actionsForClip.knownActions;for(var i=0,n=actionsToRemove.length;i!==n;++i){var action=actionsToRemove[i];this._deactivateAction(action);var cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action);}delete actionsByClip[clipUuid];}},// free all resources specific to a particular root target object
uncacheRoot:function uncacheRoot(root){var rootUuid=root.uuid,actionsByClip=this._actionsByClip;for(var clipUuid in actionsByClip){var actionByRoot=actionsByClip[clipUuid].actionByRoot,action=actionByRoot[rootUuid];if(action!==undefined){this._deactivateAction(action);this._removeInactiveAction(action);}}var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid];if(bindingByName!==undefined){for(var trackName in bindingByName){var binding=bindingByName[trackName];binding.restoreOriginalState();this._removeInactiveBinding(binding);}}},// remove a targeted clip from the cache
uncacheAction:function uncacheAction(clip,optionalRoot){var action=this.existingAction(clip,optionalRoot);if(action!==null){this._deactivateAction(action);this._removeInactiveAction(action);}}});/**
 * @author mrdoob / http://mrdoob.com/
 */function Uniform(value){if(typeof value==='string'){console.warn('THREE.Uniform: Type parameter is no longer needed.');value=arguments[1];}this.value=value;}Uniform.prototype.clone=function(){return new Uniform(this.value.clone===undefined?this.value:this.value.clone());};/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */function InstancedInterleavedBuffer(array,stride,meshPerAttribute){InterleavedBuffer.call(this,array,stride);this.meshPerAttribute=meshPerAttribute||1;}InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:true,copy:function copy(source){InterleavedBuffer.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author bhouston / http://clara.io/
 * @author stephomi / http://stephaneginier.com/
 */function Raycaster(origin,direction,near,far){this.ray=new Ray(origin,direction);// direction is assumed to be normalized (for accurate distance calculations)
this.near=near||0;this.far=far||Infinity;this.camera=null;this.layers=new Layers();this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function get(){console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');return this.Points;}}});}function ascSort(a,b){return a.distance-b.distance;}function _intersectObject(object,raycaster,intersects,recursive){if(object.layers.test(raycaster.layers)){object.raycast(raycaster,intersects);}if(recursive===true){var children=object.children;for(var i=0,l=children.length;i<l;i++){_intersectObject(children[i],raycaster,intersects,true);}}}Object.assign(Raycaster.prototype,{set:function set(origin,direction){// direction is assumed to be normalized (for accurate distance calculations)
this.ray.set(origin,direction);},setFromCamera:function setFromCamera(coords,camera){if(camera&&camera.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(camera.matrixWorld);this.ray.direction.set(coords.x,coords.y,0.5).unproject(camera).sub(this.ray.origin).normalize();this.camera=camera;}else if(camera&&camera.isOrthographicCamera){this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera);// set origin in plane of camera
this.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld);this.camera=camera;}else{console.error('THREE.Raycaster: Unsupported camera type.');}},intersectObject:function intersectObject(object,recursive,optionalTarget){var intersects=optionalTarget||[];_intersectObject(object,this,intersects,recursive);intersects.sort(ascSort);return intersects;},intersectObjects:function intersectObjects(objects,recursive,optionalTarget){var intersects=optionalTarget||[];if(Array.isArray(objects)===false){console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');return intersects;}for(var i=0,l=objects.length;i<l;i++){_intersectObject(objects[i],this,intersects,recursive);}intersects.sort(ascSort);return intersects;}});/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
 *
 * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.
 * The azimuthal angle (theta) is measured from the positive z-axis.
 */function Spherical(radius,phi,theta){this.radius=radius!==undefined?radius:1.0;this.phi=phi!==undefined?phi:0;// polar angle
this.theta=theta!==undefined?theta:0;// azimuthal angle
return this;}Object.assign(Spherical.prototype,{set:function set(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this;},// restrict phi to be betwee EPS and PI-EPS
makeSafe:function makeSafe(){var EPS=0.000001;this.phi=Math.max(EPS,Math.min(Math.PI-EPS,this.phi));return this;},setFromVector3:function setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);},setFromCartesianCoords:function setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);if(this.radius===0){this.theta=0;this.phi=0;}else{this.theta=Math.atan2(x,z);this.phi=Math.acos(MathUtils.clamp(y/this.radius,-1,1));}return this;}});/**
 * @author Mugen87 / https://github.com/Mugen87
 *
 * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
 *
 */function Cylindrical(radius,theta,y){this.radius=radius!==undefined?radius:1.0;// distance from the origin to a point in the x-z plane
this.theta=theta!==undefined?theta:0;// counterclockwise angle in the x-z plane measured in radians from the positive z-axis
this.y=y!==undefined?y:0;// height above the x-z plane
return this;}Object.assign(Cylindrical.prototype,{set:function set(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this;},setFromVector3:function setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);},setFromCartesianCoords:function setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this;}});/**
 * @author bhouston / http://clara.io
 */var _vector$7=new Vector2();function Box2(min,max){this.min=min!==undefined?min:new Vector2(+Infinity,+Infinity);this.max=max!==undefined?max:new Vector2(-Infinity,-Infinity);}Object.assign(Box2.prototype,{set:function set(min,max){this.min.copy(min);this.max.copy(max);return this;},setFromPoints:function setFromPoints(points){this.makeEmpty();for(var i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;},setFromCenterAndSize:function setFromCenterAndSize(center,size){var halfSize=_vector$7.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;},makeEmpty:function makeEmpty(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this;},isEmpty:function isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y;},getCenter:function getCenter(target){if(target===undefined){console.warn('THREE.Box2: .getCenter() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);},getSize:function getSize(target){if(target===undefined){console.warn('THREE.Box2: .getSize() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min);},expandByPoint:function expandByPoint(point){this.min.min(point);this.max.max(point);return this;},expandByVector:function expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;},expandByScalar:function expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;},containsPoint:function containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?false:true;},containsBox:function containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y;},getParameter:function getParameter(point,target){// This can potentially have a divide by zero if the box
// has a size dimension of 0.
if(target===undefined){console.warn('THREE.Box2: .getParameter() target is now required');target=new Vector2();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y));},intersectsBox:function intersectsBox(box){// using 4 splitting planes to rule out intersections
return box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?false:true;},clampPoint:function clampPoint(point,target){if(target===undefined){console.warn('THREE.Box2: .clampPoint() target is now required');target=new Vector2();}return target.copy(point).clamp(this.min,this.max);},distanceToPoint:function distanceToPoint(point){var clampedPoint=_vector$7.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();},intersect:function intersect(box){this.min.max(box.min);this.max.min(box.max);return this;},union:function union(box){this.min.min(box.min);this.max.max(box.max);return this;},translate:function translate(offset){this.min.add(offset);this.max.add(offset);return this;},equals:function equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}});/**
 * @author bhouston / http://clara.io
 */var _startP=new Vector3$1();var _startEnd=new Vector3$1();function Line3(start,end){this.start=start!==undefined?start:new Vector3$1();this.end=end!==undefined?end:new Vector3$1();}Object.assign(Line3.prototype,{set:function set(start,end){this.start.copy(start);this.end.copy(end);return this;},clone:function clone(){return new this.constructor().copy(this);},copy:function copy(line){this.start.copy(line.start);this.end.copy(line.end);return this;},getCenter:function getCenter(target){if(target===undefined){console.warn('THREE.Line3: .getCenter() target is now required');target=new Vector3$1();}return target.addVectors(this.start,this.end).multiplyScalar(0.5);},delta:function delta(target){if(target===undefined){console.warn('THREE.Line3: .delta() target is now required');target=new Vector3$1();}return target.subVectors(this.end,this.start);},distanceSq:function distanceSq(){return this.start.distanceToSquared(this.end);},distance:function distance(){return this.start.distanceTo(this.end);},at:function at(t,target){if(target===undefined){console.warn('THREE.Line3: .at() target is now required');target=new Vector3$1();}return this.delta(target).multiplyScalar(t).add(this.start);},closestPointToPointParameter:function closestPointToPointParameter(point,clampToLine){_startP.subVectors(point,this.start);_startEnd.subVectors(this.end,this.start);var startEnd2=_startEnd.dot(_startEnd);var startEnd_startP=_startEnd.dot(_startP);var t=startEnd_startP/startEnd2;if(clampToLine){t=MathUtils.clamp(t,0,1);}return t;},closestPointToPoint:function closestPointToPoint(point,clampToLine,target){var t=this.closestPointToPointParameter(point,clampToLine);if(target===undefined){console.warn('THREE.Line3: .closestPointToPoint() target is now required');target=new Vector3$1();}return this.delta(target).multiplyScalar(t).add(this.start);},applyMatrix4:function applyMatrix4(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this;},equals:function equals(line){return line.start.equals(this.start)&&line.end.equals(this.end);}});/**
 * @author alteredq / http://alteredqualia.com/
 */function ImmediateRenderObject(material){Object3D.call(this);this.material=material;this.render=function()/* renderCallback */{};this.hasPositions=false;this.hasNormals=false;this.hasColors=false;this.hasUvs=false;this.positionArray=null;this.normalArray=null;this.colorArray=null;this.uvArray=null;this.count=0;}ImmediateRenderObject.prototype=Object.create(Object3D.prototype);ImmediateRenderObject.prototype.constructor=ImmediateRenderObject;ImmediateRenderObject.prototype.isImmediateRenderObject=true;/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */var _vector$8=new Vector3$1();function SpotLightHelper(light,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;var geometry=new BufferGeometry();var positions=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var i=0,j=1,l=32;i<l;i++,j++){var p1=i/l*Math.PI*2;var p2=j/l*Math.PI*2;positions.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1);}geometry.setAttribute('position',new Float32BufferAttribute(positions,3));var material=new LineBasicMaterial({fog:false,toneMapped:false});this.cone=new LineSegments(geometry,material);this.add(this.cone);this.update();}SpotLightHelper.prototype=Object.create(Object3D.prototype);SpotLightHelper.prototype.constructor=SpotLightHelper;SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose();};SpotLightHelper.prototype.update=function(){this.light.updateMatrixWorld();var coneLength=this.light.distance?this.light.distance:1000;var coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);_vector$8.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$8);if(this.color!==undefined){this.cone.material.color.set(this.color);}else{this.cone.material.color.copy(this.light.color);}};/**
 * @author Sean Griffin / http://twitter.com/sgrif
 * @author Michael Guerrero / http://realitymeltdown.com
 * @author mrdoob / http://mrdoob.com/
 * @author ikerr / http://verold.com
 * @author Mugen87 / https://github.com/Mugen87
 */var _vector$9=new Vector3$1();var _boneMatrix=new Matrix4();var _matrixWorldInv=new Matrix4();function getBoneList(object){var boneList=[];if(object&&object.isBone){boneList.push(object);}for(var i=0;i<object.children.length;i++){boneList.push.apply(boneList,getBoneList(object.children[i]));}return boneList;}function SkeletonHelper(object){var bones=getBoneList(object);var geometry=new BufferGeometry();var vertices=[];var colors=[];var color1=new Color(0,0,1);var color2=new Color(0,1,0);for(var i=0;i<bones.length;i++){var bone=bones[i];if(bone.parent&&bone.parent.isBone){vertices.push(0,0,0);vertices.push(0,0,0);colors.push(color1.r,color1.g,color1.b);colors.push(color2.r,color2.g,color2.b);}}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:true,depthTest:false,depthWrite:false,toneMapped:false,transparent:true});LineSegments.call(this,geometry,material);this.type='SkeletonHelper';this.root=object;this.bones=bones;this.matrix=object.matrixWorld;this.matrixAutoUpdate=false;}SkeletonHelper.prototype=Object.create(LineSegments.prototype);SkeletonHelper.prototype.constructor=SkeletonHelper;SkeletonHelper.prototype.isSkeletonHelper=true;SkeletonHelper.prototype.updateMatrixWorld=function(force){var bones=this.bones;var geometry=this.geometry;var position=geometry.getAttribute('position');_matrixWorldInv.getInverse(this.root.matrixWorld);for(var i=0,j=0;i<bones.length;i++){var bone=bones[i];if(bone.parent&&bone.parent.isBone){_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld);_vector$9.setFromMatrixPosition(_boneMatrix);position.setXYZ(j,_vector$9.x,_vector$9.y,_vector$9.z);_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.parent.matrixWorld);_vector$9.setFromMatrixPosition(_boneMatrix);position.setXYZ(j+1,_vector$9.x,_vector$9.y,_vector$9.z);j+=2;}}geometry.getAttribute('position').needsUpdate=true;Object3D.prototype.updateMatrixWorld.call(this,force);};/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */function PointLightHelper(light,sphereSize,color){this.light=light;this.light.updateMatrixWorld();this.color=color;var geometry=new SphereBufferGeometry(sphereSize,4,2);var material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});Mesh.call(this,geometry,material);this.type='PointLightHelper';this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update();/*
	var distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );
	var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );

	this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );
	this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );

	var d = light.distance;

	if ( d === 0.0 ) {

		this.lightDistance.visible = false;

	} else {

		this.lightDistance.scale.set( d, d, d );

	}

	this.add( this.lightDistance );
	*/}PointLightHelper.prototype=Object.create(Mesh.prototype);PointLightHelper.prototype.constructor=PointLightHelper;PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose();};PointLightHelper.prototype.update=function(){if(this.color!==undefined){this.material.color.set(this.color);}else{this.material.color.copy(this.light.color);}/*
	var d = this.light.distance;

	if ( d === 0.0 ) {

		this.lightDistance.visible = false;

	} else {

		this.lightDistance.visible = true;
		this.lightDistance.scale.set( d, d, d );

	}
	*/};/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */var _vector$a=new Vector3$1();var _color1=new Color();var _color2=new Color();function HemisphereLightHelper(light,size,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;var geometry=new OctahedronBufferGeometry(size);geometry.rotateY(Math.PI*0.5);this.material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});if(this.color===undefined)this.material.vertexColors=true;var position=geometry.getAttribute('position');var colors=new Float32Array(position.count*3);geometry.setAttribute('color',new BufferAttribute(colors,3));this.add(new Mesh(geometry,this.material));this.update();}HemisphereLightHelper.prototype=Object.create(Object3D.prototype);HemisphereLightHelper.prototype.constructor=HemisphereLightHelper;HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose();};HemisphereLightHelper.prototype.update=function(){var mesh=this.children[0];if(this.color!==undefined){this.material.color.set(this.color);}else{var colors=mesh.geometry.getAttribute('color');_color1.copy(this.light.color);_color2.copy(this.light.groundColor);for(var i=0,l=colors.count;i<l;i++){var color=i<l/2?_color1:_color2;colors.setXYZ(i,color.r,color.g,color.b);}colors.needsUpdate=true;}mesh.lookAt(_vector$a.setFromMatrixPosition(this.light.matrixWorld).negate());};/**
 * @author mrdoob / http://mrdoob.com/
 */function GridHelper(size,divisions,color1,color2){size=size||10;divisions=divisions||10;color1=new Color(color1!==undefined?color1:0x444444);color2=new Color(color2!==undefined?color2:0x888888);var center=divisions/2;var step=size/divisions;var halfSize=size/2;var vertices=[],colors=[];for(var i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){vertices.push(-halfSize,0,k,halfSize,0,k);vertices.push(k,0,-halfSize,k,0,halfSize);var color=i===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;}var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:true,toneMapped:false});LineSegments.call(this,geometry,material);this.type='GridHelper';}GridHelper.prototype=Object.assign(Object.create(LineSegments.prototype),{constructor:GridHelper,copy:function copy(source){LineSegments.prototype.copy.call(this,source);this.geometry.copy(source.geometry);this.material.copy(source.material);return this;},clone:function clone(){return new this.constructor().copy(this);}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 * @author Hectate / http://www.github.com/Hectate
 */function PolarGridHelper(radius,radials,circles,divisions,color1,color2){radius=radius||10;radials=radials||16;circles=circles||8;divisions=divisions||64;color1=new Color(color1!==undefined?color1:0x444444);color2=new Color(color2!==undefined?color2:0x888888);var vertices=[];var colors=[];var x,z;var v,i,j,r,color;// create the radials
for(i=0;i<=radials;i++){v=i/radials*(Math.PI*2);x=Math.sin(v)*radius;z=Math.cos(v)*radius;vertices.push(0,0,0);vertices.push(x,0,z);color=i&1?color1:color2;colors.push(color.r,color.g,color.b);colors.push(color.r,color.g,color.b);}// create the circles
for(i=0;i<=circles;i++){color=i&1?color1:color2;r=radius-radius/circles*i;for(j=0;j<divisions;j++){// first vertex
v=j/divisions*(Math.PI*2);x=Math.sin(v)*r;z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);// second vertex
v=(j+1)/divisions*(Math.PI*2);x=Math.sin(v)*r;z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);}}var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:true,toneMapped:false});LineSegments.call(this,geometry,material);this.type='PolarGridHelper';}PolarGridHelper.prototype=Object.create(LineSegments.prototype);PolarGridHelper.prototype.constructor=PolarGridHelper;/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */var _v1$5=new Vector3$1();var _v2$3=new Vector3$1();var _v3$1=new Vector3$1();function DirectionalLightHelper(light,size,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;if(size===undefined)size=1;var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));var material=new LineBasicMaterial({fog:false,toneMapped:false});this.lightPlane=new Line(geometry,material);this.add(this.lightPlane);geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,0,1],3));this.targetLine=new Line(geometry,material);this.add(this.targetLine);this.update();}DirectionalLightHelper.prototype=Object.create(Object3D.prototype);DirectionalLightHelper.prototype.constructor=DirectionalLightHelper;DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();};DirectionalLightHelper.prototype.update=function(){_v1$5.setFromMatrixPosition(this.light.matrixWorld);_v2$3.setFromMatrixPosition(this.light.target.matrixWorld);_v3$1.subVectors(_v2$3,_v1$5);this.lightPlane.lookAt(_v2$3);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color);}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color);}this.targetLine.lookAt(_v2$3);this.targetLine.scale.z=_v3$1.length();};/**
 * @author alteredq / http://alteredqualia.com/
 * @author Mugen87 / https://github.com/Mugen87
 *
 *	- shows frustum, line of sight and up of the camera
 *	- suitable for fast updates
 * 	- based on frustum visualization in lightgl.js shadowmap example
 *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
 */var _vector$b=new Vector3$1();var _camera=new Camera();function CameraHelper(camera){var geometry=new BufferGeometry();var material=new LineBasicMaterial({color:0xffffff,vertexColors:true,toneMapped:false});var vertices=[];var colors=[];var pointMap={};// colors
var colorFrustum=new Color(0xffaa00);var colorCone=new Color(0xff0000);var colorUp=new Color(0x00aaff);var colorTarget=new Color(0xffffff);var colorCross=new Color(0x333333);// near
addLine('n1','n2',colorFrustum);addLine('n2','n4',colorFrustum);addLine('n4','n3',colorFrustum);addLine('n3','n1',colorFrustum);// far
addLine('f1','f2',colorFrustum);addLine('f2','f4',colorFrustum);addLine('f4','f3',colorFrustum);addLine('f3','f1',colorFrustum);// sides
addLine('n1','f1',colorFrustum);addLine('n2','f2',colorFrustum);addLine('n3','f3',colorFrustum);addLine('n4','f4',colorFrustum);// cone
addLine('p','n1',colorCone);addLine('p','n2',colorCone);addLine('p','n3',colorCone);addLine('p','n4',colorCone);// up
addLine('u1','u2',colorUp);addLine('u2','u3',colorUp);addLine('u3','u1',colorUp);// target
addLine('c','t',colorTarget);addLine('p','c',colorCross);// cross
addLine('cn1','cn2',colorCross);addLine('cn3','cn4',colorCross);addLine('cf1','cf2',colorCross);addLine('cf3','cf4',colorCross);function addLine(a,b,color){addPoint(a,color);addPoint(b,color);}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,color.g,color.b);if(pointMap[id]===undefined){pointMap[id]=[];}pointMap[id].push(vertices.length/3-1);}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));LineSegments.call(this,geometry,material);this.type='CameraHelper';this.camera=camera;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=camera.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=pointMap;this.update();}CameraHelper.prototype=Object.create(LineSegments.prototype);CameraHelper.prototype.constructor=CameraHelper;CameraHelper.prototype.update=function(){var geometry=this.geometry;var pointMap=this.pointMap;var w=1,h=1;// we need just camera projection matrix inverse
// world matrix must be identity
_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);// center / target
setPoint('c',pointMap,geometry,_camera,0,0,-1);setPoint('t',pointMap,geometry,_camera,0,0,1);// near
setPoint('n1',pointMap,geometry,_camera,-w,-h,-1);setPoint('n2',pointMap,geometry,_camera,w,-h,-1);setPoint('n3',pointMap,geometry,_camera,-w,h,-1);setPoint('n4',pointMap,geometry,_camera,w,h,-1);// far
setPoint('f1',pointMap,geometry,_camera,-w,-h,1);setPoint('f2',pointMap,geometry,_camera,w,-h,1);setPoint('f3',pointMap,geometry,_camera,-w,h,1);setPoint('f4',pointMap,geometry,_camera,w,h,1);// up
setPoint('u1',pointMap,geometry,_camera,w*0.7,h*1.1,-1);setPoint('u2',pointMap,geometry,_camera,-w*0.7,h*1.1,-1);setPoint('u3',pointMap,geometry,_camera,0,h*2,-1);// cross
setPoint('cf1',pointMap,geometry,_camera,-w,0,1);setPoint('cf2',pointMap,geometry,_camera,w,0,1);setPoint('cf3',pointMap,geometry,_camera,0,-h,1);setPoint('cf4',pointMap,geometry,_camera,0,h,1);setPoint('cn1',pointMap,geometry,_camera,-w,0,-1);setPoint('cn2',pointMap,geometry,_camera,w,0,-1);setPoint('cn3',pointMap,geometry,_camera,0,-h,-1);setPoint('cn4',pointMap,geometry,_camera,0,h,-1);geometry.getAttribute('position').needsUpdate=true;};function setPoint(point,pointMap,geometry,camera,x,y,z){_vector$b.set(x,y,z).unproject(camera);var points=pointMap[point];if(points!==undefined){var position=geometry.getAttribute('position');for(var i=0,l=points.length;i<l;i++){position.setXYZ(points[i],_vector$b.x,_vector$b.y,_vector$b.z);}}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 */var _box$3=new Box3();function BoxHelper(object,color){this.object=object;if(color===undefined)color=0xffff00;var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=new Float32Array(8*3);var geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new BufferAttribute(positions,3));LineSegments.call(this,geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.type='BoxHelper';this.matrixAutoUpdate=false;this.update();}BoxHelper.prototype=Object.create(LineSegments.prototype);BoxHelper.prototype.constructor=BoxHelper;BoxHelper.prototype.update=function(object){if(object!==undefined){console.warn('THREE.BoxHelper: .update() has no longer arguments.');}if(this.object!==undefined){_box$3.setFromObject(this.object);}if(_box$3.isEmpty())return;var min=_box$3.min;var max=_box$3.max;/*
	  5____4
	1/___0/|
	| 6__|_7
	2/___3/

	0: max.x, max.y, max.z
	1: min.x, max.y, max.z
	2: min.x, min.y, max.z
	3: max.x, min.y, max.z
	4: max.x, max.y, min.z
	5: min.x, max.y, min.z
	6: min.x, min.y, min.z
	7: max.x, min.y, min.z
	*/var position=this.geometry.attributes.position;var array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=min.x;array[4]=max.y;array[5]=max.z;array[6]=min.x;array[7]=min.y;array[8]=max.z;array[9]=max.x;array[10]=min.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=min.z;array[15]=min.x;array[16]=max.y;array[17]=min.z;array[18]=min.x;array[19]=min.y;array[20]=min.z;array[21]=max.x;array[22]=min.y;array[23]=min.z;position.needsUpdate=true;this.geometry.computeBoundingSphere();};BoxHelper.prototype.setFromObject=function(object){this.object=object;this.update();return this;};BoxHelper.prototype.copy=function(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;return this;};BoxHelper.prototype.clone=function(){return new this.constructor().copy(this);};/**
 * @author WestLangley / http://github.com/WestLangley
 */function Box3Helper(box,color){this.type='Box3Helper';this.box=box;color=color||0xffff00;var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];var geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new Float32BufferAttribute(positions,3));LineSegments.call(this,geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.type='Box3Helper';this.geometry.computeBoundingSphere();}Box3Helper.prototype=Object.create(LineSegments.prototype);Box3Helper.prototype.constructor=Box3Helper;Box3Helper.prototype.updateMatrixWorld=function(force){var box=this.box;if(box.isEmpty())return;box.getCenter(this.position);box.getSize(this.scale);this.scale.multiplyScalar(0.5);Object3D.prototype.updateMatrixWorld.call(this,force);};/**
 * @author WestLangley / http://github.com/WestLangley
 */function PlaneHelper(plane,size,hex){this.plane=plane;this.size=size===undefined?1:size;var color=hex!==undefined?hex:0xffff00;var positions=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(positions,3));geometry.computeBoundingSphere();Line.call(this,geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.type='PlaneHelper';//
var positions2=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];var geometry2=new BufferGeometry();geometry2.setAttribute('position',new Float32BufferAttribute(positions2,3));geometry2.computeBoundingSphere();this.add(new Mesh(geometry2,new MeshBasicMaterial({color:color,opacity:0.2,transparent:true,depthWrite:false,toneMapped:false})));}PlaneHelper.prototype=Object.create(Line.prototype);PlaneHelper.prototype.constructor=PlaneHelper;PlaneHelper.prototype.updateMatrixWorld=function(force){var scale=-this.plane.constant;if(Math.abs(scale)<1e-8)scale=1e-8;// sign does not matter
this.scale.set(0.5*this.size,0.5*this.size,scale);this.children[0].material.side=scale<0?BackSide:FrontSide;// renderer flips side when determinant < 0; flipping not wanted here
this.lookAt(this.plane.normal);Object3D.prototype.updateMatrixWorld.call(this,force);};/**
 * @author WestLangley / http://github.com/WestLangley
 * @author zz85 / http://github.com/zz85
 * @author bhouston / http://clara.io
 *
 * Creates an arrow for visualizing directions
 *
 * Parameters:
 *  dir - Vector3
 *  origin - Vector3
 *  length - Number
 *  color - color in hex value
 *  headLength - Number
 *  headWidth - Number
 */var _axis=new Vector3$1();var _lineGeometry,_coneGeometry;function ArrowHelper(dir,origin,length,color,headLength,headWidth){// dir is assumed to be normalized
Object3D.call(this);this.type='ArrowHelper';if(dir===undefined)dir=new Vector3$1(0,0,1);if(origin===undefined)origin=new Vector3$1(0,0,0);if(length===undefined)length=1;if(color===undefined)color=0xffff00;if(headLength===undefined)headLength=0.2*length;if(headWidth===undefined)headWidth=0.2*headLength;if(_lineGeometry===undefined){_lineGeometry=new BufferGeometry();_lineGeometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,1,0],3));_coneGeometry=new CylinderBufferGeometry(0,0.5,1,5,1);_coneGeometry.translate(0,-0.5,0);}this.position.copy(origin);this.line=new Line(_lineGeometry,new LineBasicMaterial({color:color,toneMapped:false}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:color,toneMapped:false}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth);}ArrowHelper.prototype=Object.create(Object3D.prototype);ArrowHelper.prototype.constructor=ArrowHelper;ArrowHelper.prototype.setDirection=function(dir){// dir is assumed to be normalized
if(dir.y>0.99999){this.quaternion.set(0,0,0,1);}else if(dir.y<-0.99999){this.quaternion.set(1,0,0,0);}else{_axis.set(dir.z,0,-dir.x).normalize();var radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(_axis,radians);}};ArrowHelper.prototype.setLength=function(length,headLength,headWidth){if(headLength===undefined)headLength=0.2*length;if(headWidth===undefined)headWidth=0.2*headLength;this.line.scale.set(1,Math.max(0.0001,length-headLength),1);// see #17458
this.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix();};ArrowHelper.prototype.setColor=function(color){this.line.material.color.set(color);this.cone.material.color.set(color);};ArrowHelper.prototype.copy=function(source){Object3D.prototype.copy.call(this,source,false);this.line.copy(source.line);this.cone.copy(source.cone);return this;};ArrowHelper.prototype.clone=function(){return new this.constructor().copy(this);};/**
 * @author sroucheray / http://sroucheray.org/
 * @author mrdoob / http://mrdoob.com/
 */function AxesHelper(size){size=size||1;var vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];var colors=[1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1];var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:true,toneMapped:false});LineSegments.call(this,geometry,material);this.type='AxesHelper';}AxesHelper.prototype=Object.create(LineSegments.prototype);AxesHelper.prototype.constructor=AxesHelper;/**
 * @author Emmett Lalish / elalish
 *
 * This class generates a Prefiltered, Mipmapped Radiance Environment Map
 * (PMREM) from a cubeMap environment texture. This allows different levels of
 * blur to be quickly accessed based on material roughness. It is packed into a
 * special CubeUV format that allows us to perform custom interpolation so that
 * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap
 * chain, it only goes down to the LOD_MIN level (above), and then creates extra
 * even more filtered 'mips' at the same LOD_MIN resolution, associated with
 * higher roughness levels. In this way we maintain resolution to smoothly
 * interpolate diffuse lighting while limiting sampling computation.
 */var LOD_MIN=4;var LOD_MAX=8;// The standard deviations (radians) associated with the extra mips. These are
// chosen to approximate a Trowbridge-Reitz distribution function times the
// geometric shadowing function. These sigma values squared must match the
// variance #defines in cube_uv_reflection_fragment.glsl.js.
var EXTRA_LOD_SIGMA=[0.125,0.215,0.35,0.446,0.526,0.582];var TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length;var _flatCamera=new OrthographicCamera();var _createPlanes2=_createPlanes(),_lodPlanes=_createPlanes2._lodPlanes,_sizeLods=_createPlanes2._sizeLods,_sigmas=_createPlanes2._sigmas;function _createPlanes(){var _lodPlanes=[];var _sizeLods=[];var _sigmas=[];var lod=LOD_MAX;for(var i=0;i<TOTAL_LODS;i++){var sizeLod=Math.pow(2,lod);_sizeLods.push(sizeLod);var sigma=1.0/sizeLod;if(i>LOD_MAX-LOD_MIN){sigma=EXTRA_LOD_SIGMA[i-LOD_MAX+LOD_MIN-1];}else if(i==0){sigma=0;}_sigmas.push(sigma);var texelSize=1.0/(sizeLod-1);var min=-texelSize/2;var max=1+texelSize/2;var uv1=[min,min,max,min,max,max,min,min,max,max,min,max];var cubeFaces=6;var vertices=6;var positionSize=3;var uvSize=2;var faceIndexSize=1;var position=new Float32Array(positionSize*vertices*cubeFaces);var uv=new Float32Array(uvSize*vertices*cubeFaces);var faceIndex=new Float32Array(faceIndexSize*vertices*cubeFaces);for(var face=0;face<cubeFaces;face++){var x=face%3*2/3-1;var y=face>2?0:-1;var coordinates=[x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0];position.set(coordinates,positionSize*vertices*face);uv.set(uv1,uvSize*vertices*face);var fill=[face,face,face,face,face,face];faceIndex.set(fill,faceIndexSize*vertices*face);}var planes=new BufferGeometry();planes.setAttribute('position',new BufferAttribute(position,positionSize));planes.setAttribute('uv',new BufferAttribute(uv,uvSize));planes.setAttribute('faceIndex',new BufferAttribute(faceIndex,faceIndexSize));_lodPlanes.push(planes);if(lod>LOD_MIN){lod--;}}return{_lodPlanes:_lodPlanes,_sizeLods:_sizeLods,_sigmas:_sigmas};}var VertexColors=2;//
Curve.create=function(construct,getPoint){console.log('THREE.Curve.create() has been deprecated');construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct;};//
Object.assign(CurvePath.prototype,{createPointsGeometry:function createPointsGeometry(divisions){console.warn('THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');// generate geometry from path points (for Line or Points objects)
var pts=this.getPoints(divisions);return this.createGeometry(pts);},createSpacedPointsGeometry:function createSpacedPointsGeometry(divisions){console.warn('THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');// generate geometry from equidistant sampling along the path
var pts=this.getSpacedPoints(divisions);return this.createGeometry(pts);},createGeometry:function createGeometry(points){console.warn('THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');var geometry=new Geometry();for(var i=0,l=points.length;i<l;i++){var point=points[i];geometry.vertices.push(new Vector3$1(point.x,point.y,point.z||0));}return geometry;}});//
Object.assign(Path.prototype,{fromPoints:function fromPoints(points){console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');return this.setFromPoints(points);}});//
function Spline(points){console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');CatmullRomCurve3.call(this,points);this.type='catmullrom';}Spline.prototype=Object.create(CatmullRomCurve3.prototype);Object.assign(Spline.prototype,{initFromArray:function initFromArray()/* a */{console.error('THREE.Spline: .initFromArray() has been removed.');},getControlPointsArray:function getControlPointsArray()/* optionalTarget */{console.error('THREE.Spline: .getControlPointsArray() has been removed.');},reparametrizeByArcLength:function reparametrizeByArcLength()/* samplingCoef */{console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');}});GridHelper.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');};SkeletonHelper.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.');};//
Object.assign(Loader.prototype,{extractUrlBase:function extractUrlBase(url){console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');return LoaderUtils.extractUrlBase(url);}});Loader.Handlers={add:function add()/* regex, loader */{console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');},get:function get()/* file */{console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');}};Object.assign(ObjectLoader.prototype,{setTexturePath:function setTexturePath(value){console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');return this.setResourcePath(value);}});//
Object.assign(Box2.prototype,{center:function center(optionalTarget){console.warn('THREE.Box2: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);},empty:function empty(){console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');return this.isEmpty();},isIntersectionBox:function isIntersectionBox(box){console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},size:function size(optionalTarget){console.warn('THREE.Box2: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);}});Object.assign(Box3.prototype,{center:function center(optionalTarget){console.warn('THREE.Box3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);},empty:function empty(){console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');return this.isEmpty();},isIntersectionBox:function isIntersectionBox(box){console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},isIntersectionSphere:function isIntersectionSphere(sphere){console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);},size:function size(optionalTarget){console.warn('THREE.Box3: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);}});Object.assign(Sphere.prototype,{empty:function empty(){console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');return this.isEmpty();}});Frustum.prototype.setFromMatrix=function(m){console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');return this.setFromProjectionMatrix(m);};Line3.prototype.center=function(optionalTarget){console.warn('THREE.Line3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Object.assign(MathUtils,{random16:function random16(){console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');return Math.random();},nearestPowerOfTwo:function nearestPowerOfTwo(value){console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');return MathUtils.floorPowerOfTwo(value);},nextPowerOfTwo:function nextPowerOfTwo(value){console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');return MathUtils.ceilPowerOfTwo(value);}});Object.assign(Matrix3.prototype,{flattenToArrayOffset:function flattenToArrayOffset(array,offset){console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(array,offset);},multiplyVector3:function multiplyVector3(vector){console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return vector.applyMatrix3(this);},multiplyVector3Array:function multiplyVector3Array()/* a */{console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');},applyToBufferAttribute:function applyToBufferAttribute(attribute){console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');return attribute.applyMatrix3(this);},applyToVector3Array:function applyToVector3Array()/* array, offset, length */{console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');}});Object.assign(Matrix4.prototype,{extractPosition:function extractPosition(m){console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(m);},flattenToArrayOffset:function flattenToArrayOffset(array,offset){console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(array,offset);},getPosition:function getPosition(){console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');return new Vector3$1().setFromMatrixColumn(this,3);},setRotationFromQuaternion:function setRotationFromQuaternion(q){console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');return this.makeRotationFromQuaternion(q);},multiplyToArray:function multiplyToArray(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');},multiplyVector3:function multiplyVector3(vector){console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},multiplyVector4:function multiplyVector4(vector){console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},multiplyVector3Array:function multiplyVector3Array()/* a */{console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');},rotateAxis:function rotateAxis(v){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');v.transformDirection(this);},crossVector:function crossVector(vector){console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},translate:function translate(){console.error('THREE.Matrix4: .translate() has been removed.');},rotateX:function rotateX(){console.error('THREE.Matrix4: .rotateX() has been removed.');},rotateY:function rotateY(){console.error('THREE.Matrix4: .rotateY() has been removed.');},rotateZ:function rotateZ(){console.error('THREE.Matrix4: .rotateZ() has been removed.');},rotateByAxis:function rotateByAxis(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.');},applyToBufferAttribute:function applyToBufferAttribute(attribute){console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');return attribute.applyMatrix4(this);},applyToVector3Array:function applyToVector3Array()/* array, offset, length */{console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');},makeFrustum:function makeFrustum(left,right,bottom,top,near,far){console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');return this.makePerspective(left,right,top,bottom,near,far);}});Plane.prototype.isIntersectionLine=function(line){console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');return this.intersectsLine(line);};Quaternion.prototype.multiplyVector3=function(vector){console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return vector.applyQuaternion(this);};Object.assign(Ray.prototype,{isIntersectionBox:function isIntersectionBox(box){console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},isIntersectionPlane:function isIntersectionPlane(plane){console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');return this.intersectsPlane(plane);},isIntersectionSphere:function isIntersectionSphere(sphere){console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);}});Object.assign(Triangle.prototype,{area:function area(){console.warn('THREE.Triangle: .area() has been renamed to .getArea().');return this.getArea();},barycoordFromPoint:function barycoordFromPoint(point,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return this.getBarycoord(point,target);},midpoint:function midpoint(target){console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');return this.getMidpoint(target);},normal:function normal(target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return this.getNormal(target);},plane:function plane(target){console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');return this.getPlane(target);}});Object.assign(Triangle,{barycoordFromPoint:function barycoordFromPoint(point,a,b,c,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return Triangle.getBarycoord(point,a,b,c,target);},normal:function normal(a,b,c,target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return Triangle.getNormal(a,b,c,target);}});Object.assign(Shape.prototype,{extractAllPoints:function extractAllPoints(divisions){console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');return this.extractPoints(divisions);},extrude:function extrude(options){console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');return new ExtrudeGeometry(this,options);},makeGeometry:function makeGeometry(options){console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');return new ShapeGeometry(this,options);}});Object.assign(Vector2.prototype,{fromAttribute:function fromAttribute(attribute,index,offset){console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},distanceToManhattan:function distanceToManhattan(v){console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);},lengthManhattan:function lengthManhattan(){console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});Object.assign(Vector3$1.prototype,{setEulerFromRotationMatrix:function setEulerFromRotationMatrix(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');},setEulerFromQuaternion:function setEulerFromQuaternion(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');},getPositionFromMatrix:function getPositionFromMatrix(m){console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');return this.setFromMatrixPosition(m);},getScaleFromMatrix:function getScaleFromMatrix(m){console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');return this.setFromMatrixScale(m);},getColumnFromMatrix:function getColumnFromMatrix(index,matrix){console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');return this.setFromMatrixColumn(matrix,index);},applyProjection:function applyProjection(m){console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');return this.applyMatrix4(m);},fromAttribute:function fromAttribute(attribute,index,offset){console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},distanceToManhattan:function distanceToManhattan(v){console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);},lengthManhattan:function lengthManhattan(){console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});Object.assign(Vector4.prototype,{fromAttribute:function fromAttribute(attribute,index,offset){console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},lengthManhattan:function lengthManhattan(){console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});//
Object.assign(Geometry.prototype,{computeTangents:function computeTangents(){console.error('THREE.Geometry: .computeTangents() has been removed.');},computeLineDistances:function computeLineDistances(){console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.');},applyMatrix:function applyMatrix(matrix){console.warn('THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);}});Object.assign(Object3D.prototype,{getChildByName:function getChildByName(name){console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(name);},renderDepth:function renderDepth(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');},translate:function translate(distance,axis){console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');return this.translateOnAxis(axis,distance);},getWorldRotation:function getWorldRotation(){console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');},applyMatrix:function applyMatrix(matrix){console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);}});Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function get(){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');return this.rotation.order;},set:function set(value){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');this.rotation.order=value;}},useQuaternion:{get:function get(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');},set:function set(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');}}});Object.assign(Mesh.prototype,{setDrawMode:function setDrawMode(){console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');}});Object.defineProperties(Mesh.prototype,{drawMode:{get:function get(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');return TrianglesDrawMode;},set:function set(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');}}});Object.defineProperties(LOD.prototype,{objects:{get:function get(){console.warn('THREE.LOD: .objects has been renamed to .levels.');return this.levels;}}});Object.defineProperty(Skeleton.prototype,'useVertexTexture',{get:function get(){console.warn('THREE.Skeleton: useVertexTexture has been removed.');},set:function set(){console.warn('THREE.Skeleton: useVertexTexture has been removed.');}});SkinnedMesh.prototype.initBones=function(){console.error('THREE.SkinnedMesh: initBones() has been removed.');};Object.defineProperty(Curve.prototype,'__arcLengthDivisions',{get:function get(){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');return this.arcLengthDivisions;},set:function set(value){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');this.arcLengthDivisions=value;}});//
PerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn("THREE.PerspectiveCamera.setLens is deprecated. "+"Use .setFocalLength and .filmGauge for a photographic setup.");if(filmGauge!==undefined)this.filmGauge=filmGauge;this.setFocalLength(focalLength);};//
Object.defineProperties(Light.prototype,{onlyShadow:{set:function set(){console.warn('THREE.Light: .onlyShadow has been removed.');}},shadowCameraFov:{set:function set(value){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');this.shadow.camera.fov=value;}},shadowCameraLeft:{set:function set(value){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');this.shadow.camera.left=value;}},shadowCameraRight:{set:function set(value){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');this.shadow.camera.right=value;}},shadowCameraTop:{set:function set(value){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');this.shadow.camera.top=value;}},shadowCameraBottom:{set:function set(value){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');this.shadow.camera.bottom=value;}},shadowCameraNear:{set:function set(value){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');this.shadow.camera.near=value;}},shadowCameraFar:{set:function set(value){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');this.shadow.camera.far=value;}},shadowCameraVisible:{set:function set(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');}},shadowBias:{set:function set(value){console.warn('THREE.Light: .shadowBias is now .shadow.bias.');this.shadow.bias=value;}},shadowDarkness:{set:function set(){console.warn('THREE.Light: .shadowDarkness has been removed.');}},shadowMapWidth:{set:function set(value){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');this.shadow.mapSize.width=value;}},shadowMapHeight:{set:function set(value){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');this.shadow.mapSize.height=value;}}});//
Object.defineProperties(BufferAttribute.prototype,{length:{get:function get(){console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');return this.array.length;}},dynamic:{get:function get(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function set()/* value */{console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');this.setUsage(DynamicDrawUsage);}}});Object.assign(BufferAttribute.prototype,{setDynamic:function setDynamic(value){console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;},copyIndicesArray:function copyIndicesArray()/* indices */{console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');},setArray:function setArray()/* array */{console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');}});Object.assign(BufferGeometry.prototype,{addIndex:function addIndex(index){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');this.setIndex(index);},addAttribute:function addAttribute(name,attribute){console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');if(!(attribute&&attribute.isBufferAttribute)&&!(attribute&&attribute.isInterleavedBufferAttribute)){console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');return this.setAttribute(name,new BufferAttribute(arguments[1],arguments[2]));}if(name==='index'){console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');this.setIndex(attribute);return this;}return this.setAttribute(name,attribute);},addDrawCall:function addDrawCall(start,count,indexOffset){if(indexOffset!==undefined){console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');}console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');this.addGroup(start,count);},clearDrawCalls:function clearDrawCalls(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');this.clearGroups();},computeTangents:function computeTangents(){console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');},computeOffsets:function computeOffsets(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');},removeAttribute:function removeAttribute(name){console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');return this.deleteAttribute(name);},applyMatrix:function applyMatrix(matrix){console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);}});Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function get(){console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');return this.groups;}},offsets:{get:function get(){console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');return this.groups;}}});Object.defineProperties(InstancedBufferGeometry.prototype,{maxInstancedCount:{get:function get(){console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');return this.instanceCount;},set:function set(value){console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');this.instanceCount=value;}}});Object.defineProperties(Raycaster.prototype,{linePrecision:{get:function get(){console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');return this.params.Line.threshold;},set:function set(value){console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');this.params.Line.threshold=value;}}});Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function get(){console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function set(value){console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');this.setUsage(value);}}});Object.assign(InterleavedBuffer.prototype,{setDynamic:function setDynamic(value){console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;},setArray:function setArray()/* array */{console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');}});//
Object.assign(ExtrudeBufferGeometry.prototype,{getArrays:function getArrays(){console.error('THREE.ExtrudeBufferGeometry: .getArrays() has been removed.');},addShapeList:function addShapeList(){console.error('THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.');},addShape:function addShape(){console.error('THREE.ExtrudeBufferGeometry: .addShape() has been removed.');}});//
Object.defineProperties(Uniform.prototype,{dynamic:{set:function set(){console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');}},onUpdate:{value:function value(){console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');return this;}}});//
Object.defineProperties(Material.prototype,{wrapAround:{get:function get(){console.warn('THREE.Material: .wrapAround has been removed.');},set:function set(){console.warn('THREE.Material: .wrapAround has been removed.');}},overdraw:{get:function get(){console.warn('THREE.Material: .overdraw has been removed.');},set:function set(){console.warn('THREE.Material: .overdraw has been removed.');}},wrapRGB:{get:function get(){console.warn('THREE.Material: .wrapRGB has been removed.');return new Color();}},shading:{get:function get(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');},set:function set(value){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=value===FlatShading;}},stencilMask:{get:function get(){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');return this.stencilFuncMask;},set:function set(value){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');this.stencilFuncMask=value;}}});Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function get(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');return false;},set:function set(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function get(){console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');return this.extensions.derivatives;},set:function set(value){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');this.extensions.derivatives=value;}}});//
Object.assign(WebGLRenderer.prototype,{clearTarget:function clearTarget(renderTarget,color,depth,stencil){console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');this.setRenderTarget(renderTarget);this.clear(color,depth,stencil);},animate:function animate(callback){console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');this.setAnimationLoop(callback);},getCurrentRenderTarget:function getCurrentRenderTarget(){console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');return this.getRenderTarget();},getMaxAnisotropy:function getMaxAnisotropy(){console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');return this.capabilities.getMaxAnisotropy();},getPrecision:function getPrecision(){console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');return this.capabilities.precision;},resetGLState:function resetGLState(){console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');return this.state.reset();},supportsFloatTextures:function supportsFloatTextures(){console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).');return this.extensions.get('OES_texture_float');},supportsHalfFloatTextures:function supportsHalfFloatTextures(){console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).');return this.extensions.get('OES_texture_half_float');},supportsStandardDerivatives:function supportsStandardDerivatives(){console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).');return this.extensions.get('OES_standard_derivatives');},supportsCompressedTextureS3TC:function supportsCompressedTextureS3TC(){console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).');return this.extensions.get('WEBGL_compressed_texture_s3tc');},supportsCompressedTexturePVRTC:function supportsCompressedTexturePVRTC(){console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).');return this.extensions.get('WEBGL_compressed_texture_pvrtc');},supportsBlendMinMax:function supportsBlendMinMax(){console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).');return this.extensions.get('EXT_blend_minmax');},supportsVertexTextures:function supportsVertexTextures(){console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');return this.capabilities.vertexTextures;},supportsInstancedArrays:function supportsInstancedArrays(){console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).');return this.extensions.get('ANGLE_instanced_arrays');},enableScissorTest:function enableScissorTest(boolean){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');this.setScissorTest(boolean);},initMaterial:function initMaterial(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');},addPrePlugin:function addPrePlugin(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');},addPostPlugin:function addPostPlugin(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');},updateShadowMap:function updateShadowMap(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');},setFaceCulling:function setFaceCulling(){console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');},allocTextureUnit:function allocTextureUnit(){console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');},setTexture:function setTexture(){console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');},setTexture2D:function setTexture2D(){console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');},setTextureCube:function setTextureCube(){console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');},getActiveMipMapLevel:function getActiveMipMapLevel(){console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');return this.getActiveMipmapLevel();}});Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function get(){return this.shadowMap.enabled;},set:function set(value){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');this.shadowMap.enabled=value;}},shadowMapType:{get:function get(){return this.shadowMap.type;},set:function set(value){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');this.shadowMap.type=value;}},shadowMapCullFace:{get:function get(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function set()/* value */{console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');}},context:{get:function get(){console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');return this.getContext();}},vr:{get:function get(){console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');return this.xr;}},gammaInput:{get:function get(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');return false;},set:function set(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');}},gammaOutput:{get:function get(){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');return false;},set:function set(value){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');this.outputEncoding=value===true?sRGBEncoding:LinearEncoding;}}});Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function get(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function set()/* cullFace */{console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');}},renderReverseSided:{get:function get(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function set(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');}},renderSingleSided:{get:function get(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function set(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');}}});//
Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function get(){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');return this.texture.wrapS;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');this.texture.wrapS=value;}},wrapT:{get:function get(){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');return this.texture.wrapT;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');this.texture.wrapT=value;}},magFilter:{get:function get(){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');return this.texture.magFilter;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');this.texture.magFilter=value;}},minFilter:{get:function get(){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');return this.texture.minFilter;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');this.texture.minFilter=value;}},anisotropy:{get:function get(){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');return this.texture.anisotropy;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');this.texture.anisotropy=value;}},offset:{get:function get(){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');return this.texture.offset;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');this.texture.offset=value;}},repeat:{get:function get(){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');return this.texture.repeat;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');this.texture.repeat=value;}},format:{get:function get(){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');return this.texture.format;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');this.texture.format=value;}},type:{get:function get(){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');return this.texture.type;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');this.texture.type=value;}},generateMipmaps:{get:function get(){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');return this.texture.generateMipmaps;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');this.texture.generateMipmaps=value;}}});//
Object.defineProperties(Audio.prototype,{load:{value:function value(file){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');var scope=this;var audioLoader=new AudioLoader();audioLoader.load(file,function(buffer){scope.setBuffer(buffer);});return this;}},startTime:{set:function set(){console.warn('THREE.Audio: .startTime is now .play( delay ).');}}});AudioAnalyser.prototype.getData=function(){console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');return this.getFrequencyData();};//
CubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');return this.update(renderer,scene);};ImageUtils.crossOrigin=undefined;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');var loader=new TextureLoader();loader.setCrossOrigin(this.crossOrigin);var texture=loader.load(url,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');var loader=new CubeTextureLoader();loader.setCrossOrigin(this.crossOrigin);var texture=loader.load(urls,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadCompressedTexture=function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');};ImageUtils.loadCompressedTextureCube=function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');};if(typeof __THREE_DEVTOOLS__!=='undefined'){/* eslint-disable no-undef */__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register',{detail:{revision:REVISION}}));/* eslint-enable no-undef */}var upperCaseFirst=function upperCaseFirst(){var sentence=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return sentence&&typeof sentence==='string'&&sentence.length?"".concat(sentence[0].toUpperCase()).concat(sentence.slice(1,sentence.length)):'';};var removeFirst=function removeFirst(sentence){return sentence.slice(1,sentence.length);};var strings=/*#__PURE__*/Object.freeze({__proto__:null,upperCaseFirst:upperCaseFirst,removeFirst:removeFirst});var isClassname=function isClassname(word){return word.startsWith('.');};var isId=function isId(word){return word.startsWith('#');};var DEFAULT_FULL_SIZE_STYLE={position:'absolute',height:'100%',width:'100%',margin:'0'};var createElementFromSelector$1=function createElementFromSelector(selector){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'div';var style=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_FULL_SIZE_STYLE;var element=document.createElement(type);Object.keys(style).forEach(function(property){element.style.setProperty(property,style[property]);});if(isClassname(selector)){element.classname=removeFirst(selector);}else if(isId(selector)){element.id=removeFirst(selector);}return element;};var getWindow=function getWindow(){try{var win=window||global.window;return win;}catch(e){return null;}};var DEFAULT_HEIGHT=600;var DEFAULT_WIDTH=800;var DEFAULT_RATIO=DEFAULT_WIDTH/DEFAULT_HEIGHT;var Config$1=/*#__PURE__*/function(){function Config(){_classCallCheck(this,Config);var win=getWindow();this.default={tests:[],screen:{frameRate:60,alpha:true},fog:{enabled:false,density:0,color:'#ffffff'},lights:{shadows:true},physics:{enabled:false,path:'./mage.physics.js'},tween:{enabled:false},camera:{//handling useful informations about our camera.
fov:75,near:0.1,far:100},ui:{}};this.isDefault=true;}_createClass(Config,[{key:"setContainer",value:function setContainer(container){this._container=container;}},{key:"setConfig",value:function setConfig(config){if(this.isDefault){this.isDefault=false;this.config=_objectSpread2({},this.default,{},config);}else{this.config=_objectSpread2({},this.config,{config:config});}}},{key:"container",value:function container(){var container=document&&document.querySelector(this._container);if(!container){container=createElementFromSelector$1(this._container);document.body.appendChild(container);}return container;}},{key:"tests",value:function tests(){return this.config.tests;}},{key:"lights",value:function lights(){return this.config.lights;}},{key:"fog",value:function fog(){return this.config.fog;}},{key:"getContainerSize",value:function getContainerSize(){var container=this.container();if(!container)return false;var height=container.offsetHeight;var width=container.offsetWidth;var ratio=width/height;return{h:height,w:width,ratio:ratio};}},{key:"getWindowSize",value:function getWindowSize(){var win=getWindow();if(!win)return false;var height=win.innerHeight;var width=win.innerWidth;var ratio=width/height;return{h:height,w:width,ratio:ratio};}},{key:"getDefaults",value:function getDefaults(){return{h:DEFAULT_HEIGHT,w:DEFAULT_WIDTH,ratio:DEFAULT_RATIO};}},{key:"screen",value:function screen(){var _ref=this.getContainerSize()||this.getWindowSize()||this.getDefaults(),h=_ref.h,w=_ref.w,ratio=_ref.ratio;this.config.screen=_objectSpread2({},this.config.screen,{h:h,w:w,ratio:ratio,devicePixelRatio:window.devicePixelRatio});return this.config.screen;}},{key:"ui",value:function ui(){return this.config.ui;}},{key:"tween",value:function tween(){return this.config.tween;}},{key:"physics",value:function physics(){return this.config.physics;}},{key:"camera",value:function camera(){return this.config.camera;}}]);return Config;}();var Config$2=new Config$1();var BaseScript=/*#__PURE__*/function(){_createClass(BaseScript,[{key:"__check",value:function __check(){return true;}},{key:"__hasStarted",value:function __hasStarted(flag){this.hasStarted=flag;}}]);function BaseScript(name){_classCallCheck(this,BaseScript);this.__name=name||this.contructor.name;this.hasStarted=false;this.options={};}_createClass(BaseScript,[{key:"name",value:function name(){return this.__name;}},{key:"start",value:function start(element,options){}},{key:"update",value:function update(dt){}},{key:"onDispose",value:function onDispose(){}},{key:"toJSON",value:function toJSON(){return{name:this.name()};}}]);return BaseScript;}();/*!
 * hotkeys-js v3.7.2
 * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies.
 * 
 * Copyright (c) 2019 kenny wong <wowohoo@qq.com>
 * http://jaywcjlove.github.io/hotkeys
 * 
 * Licensed under the MIT license.
 */function _typeof$1(obj){if(typeof Symbol==="function"&&_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(Symbol.iterator)==="symbol"){_typeof$1=function _typeof$1(obj){return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(obj);};}else{_typeof$1=function _typeof$1(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(obj);};}return _typeof$1(obj);}var isff=typeof navigator!=='undefined'?navigator.userAgent.toLowerCase().indexOf('firefox')>0:false;// 绑定事件
function addEvent(object,event,method){if(object.addEventListener){object.addEventListener(event,method,false);}else if(object.attachEvent){object.attachEvent("on".concat(event),function(){method(window.event);});}}// 修饰键转换成对应的键码
function getMods(modifier,key){var mods=key.slice(0,key.length-1);for(var i=0;i<mods.length;i++){mods[i]=modifier[mods[i].toLowerCase()];}return mods;}// 处理传的key字符串转换成数组
function getKeys(key){if(typeof key!=='string')key='';key=key.replace(/\s/g,'');// 匹配任何空白字符,包括空格、制表符、换页符等等
var keys=key.split(',');// 同时设置多个快捷键，以','分割
var index=keys.lastIndexOf('');// 快捷键可能包含','，需特殊处理
for(;index>=0;){keys[index-1]+=',';keys.splice(index,1);index=keys.lastIndexOf('');}return keys;}// 比较修饰键的数组
function compareArray(a1,a2){var arr1=a1.length>=a2.length?a1:a2;var arr2=a1.length>=a2.length?a2:a1;var isIndex=true;for(var i=0;i<arr1.length;i++){if(arr2.indexOf(arr1[i])===-1)isIndex=false;}return isIndex;}var _keyMap={backspace:8,tab:9,clear:12,enter:13,"return":13,esc:27,escape:27,space:32,left:37,up:38,right:39,down:40,del:46,"delete":46,ins:45,insert:45,home:36,end:35,pageup:33,pagedown:34,capslock:20,'⇪':20,',':188,'.':190,'/':191,'`':192,'-':isff?173:189,'=':isff?61:187,';':isff?59:186,'\'':222,'[':219,']':221,'\\':220};// Modifier Keys
var _modifier={// shiftKey
'⇧':16,shift:16,// altKey
'⌥':18,alt:18,option:18,// ctrlKey
'⌃':17,ctrl:17,control:17,// metaKey
'⌘':91,cmd:91,command:91};var modifierMap={16:'shiftKey',18:'altKey',17:'ctrlKey',91:'metaKey',shiftKey:16,ctrlKey:17,altKey:18,metaKey:91};var _mods={16:false,18:false,17:false,91:false};var _handlers={};// F1~F12 special key
for(var k=1;k<20;k++){_keyMap["f".concat(k)]=111+k;}var _downKeys=[];// 记录摁下的绑定键
var _scope='all';// 默认热键范围
var elementHasBindEvent=[];// 已绑定事件的节点记录
// 返回键码
var code=function code(x){return _keyMap[x.toLowerCase()]||_modifier[x.toLowerCase()]||x.toUpperCase().charCodeAt(0);};// 设置获取当前范围（默认为'所有'）
function setScope(scope){_scope=scope||'all';}// 获取当前范围
function getScope(){return _scope||'all';}// 获取摁下绑定键的键值
function getPressedKeyCodes(){return _downKeys.slice(0);}// 表单控件控件判断 返回 Boolean
// hotkey is effective only when filter return true
function filter(event){var target=event.target||event.srcElement;var tagName=target.tagName;var flag=true;// ignore: isContentEditable === 'true', <input> and <textarea> when readOnly state is false, <select>
if(target.isContentEditable||tagName==='TEXTAREA'||(tagName==='INPUT'||tagName==='TEXTAREA')&&!target.readOnly){flag=false;}return flag;}// 判断摁下的键是否为某个键，返回true或者false
function isPressed(keyCode){if(typeof keyCode==='string'){keyCode=code(keyCode);// 转换成键码
}return _downKeys.indexOf(keyCode)!==-1;}// 循环删除handlers中的所有 scope(范围)
function deleteScope(scope,newScope){var handlers;var i;// 没有指定scope，获取scope
if(!scope)scope=getScope();for(var key in _handlers){if(Object.prototype.hasOwnProperty.call(_handlers,key)){handlers=_handlers[key];for(i=0;i<handlers.length;){if(handlers[i].scope===scope)handlers.splice(i,1);else i++;}}}// 如果scope被删除，将scope重置为all
if(getScope()===scope)setScope(newScope||'all');}// 清除修饰键
function clearModifier(event){var key=event.keyCode||event.which||event.charCode;var i=_downKeys.indexOf(key);// 从列表中清除按压过的键
if(i>=0){_downKeys.splice(i,1);}// 特殊处理 cmmand 键，在 cmmand 组合快捷键 keyup 只执行一次的问题
if(event.key&&event.key.toLowerCase()==='meta'){_downKeys.splice(0,_downKeys.length);}// 修饰键 shiftKey altKey ctrlKey (command||metaKey) 清除
if(key===93||key===224)key=91;if(key in _mods){_mods[key]=false;// 将修饰键重置为false
for(var k in _modifier){if(_modifier[k]===key)hotkeys[k]=false;}}}function unbind(keysInfo){// unbind(), unbind all keys
if(!keysInfo){Object.keys(_handlers).forEach(function(key){return delete _handlers[key];});}else if(Array.isArray(keysInfo)){// support like : unbind([{key: 'ctrl+a', scope: 's1'}, {key: 'ctrl-a', scope: 's2', splitKey: '-'}])
keysInfo.forEach(function(info){if(info.key)eachUnbind(info);});}else if(_typeof$1(keysInfo)==='object'){// support like unbind({key: 'ctrl+a, ctrl+b', scope:'abc'})
if(keysInfo.key)eachUnbind(keysInfo);}else if(typeof keysInfo==='string'){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}// support old method
// eslint-disable-line
var scope=args[0],method=args[1];if(typeof scope==='function'){method=scope;scope='';}eachUnbind({key:keysInfo,scope:scope,method:method,splitKey:'+'});}}// 解除绑定某个范围的快捷键
var eachUnbind=function eachUnbind(_ref){var key=_ref.key,scope=_ref.scope,method=_ref.method,_ref$splitKey=_ref.splitKey,splitKey=_ref$splitKey===void 0?'+':_ref$splitKey;var multipleKeys=getKeys(key);multipleKeys.forEach(function(originKey){var unbindKeys=originKey.split(splitKey);var len=unbindKeys.length;var lastKey=unbindKeys[len-1];var keyCode=lastKey==='*'?'*':code(lastKey);if(!_handlers[keyCode])return;// 判断是否传入范围，没有就获取范围
if(!scope)scope=getScope();var mods=len>1?getMods(_modifier,unbindKeys):[];_handlers[keyCode]=_handlers[keyCode].map(function(record){// 通过函数判断，是否解除绑定，函数相等直接返回
var isMatchingMethod=method?record.method===method:true;if(isMatchingMethod&&record.scope===scope&&compareArray(record.mods,mods)){return{};}return record;});});};// 对监听对应快捷键的回调函数进行处理
function eventHandler(event,handler,scope){var modifiersMatch;// 看它是否在当前范围
if(handler.scope===scope||handler.scope==='all'){// 检查是否匹配修饰符（如果有返回true）
modifiersMatch=handler.mods.length>0;for(var y in _mods){if(Object.prototype.hasOwnProperty.call(_mods,y)){if(!_mods[y]&&handler.mods.indexOf(+y)>-1||_mods[y]&&handler.mods.indexOf(+y)===-1){modifiersMatch=false;}}}// 调用处理程序，如果是修饰键不做处理
if(handler.mods.length===0&&!_mods[16]&&!_mods[18]&&!_mods[17]&&!_mods[91]||modifiersMatch||handler.shortcut==='*'){if(handler.method(event,handler)===false){if(event.preventDefault)event.preventDefault();else event.returnValue=false;if(event.stopPropagation)event.stopPropagation();if(event.cancelBubble)event.cancelBubble=true;}}}}// 处理keydown事件
function dispatch(event){var asterisk=_handlers['*'];var key=event.keyCode||event.which||event.charCode;// 表单控件过滤 默认表单控件不触发快捷键
if(!hotkeys.filter.call(this,event))return;// Gecko(Firefox)的command键值224，在Webkit(Chrome)中保持一致
// Webkit左右 command 键值不一样
if(key===93||key===224)key=91;/**
   * Collect bound keys
   * If an Input Method Editor is processing key input and the event is keydown, return 229.
   * https://stackoverflow.com/questions/25043934/is-it-ok-to-ignore-keydown-events-with-keycode-229
   * http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html
   */if(_downKeys.indexOf(key)===-1&&key!==229)_downKeys.push(key);/**
   * Jest test cases are required.
   * ===============================
   */['ctrlKey','altKey','shiftKey','metaKey'].forEach(function(keyName){var keyNum=modifierMap[keyName];if(event[keyName]&&_downKeys.indexOf(keyNum)===-1){_downKeys.push(keyNum);}else if(!event[keyName]&&_downKeys.indexOf(keyNum)>-1){_downKeys.splice(_downKeys.indexOf(keyNum),1);}});/**
   * -------------------------------
   */if(key in _mods){_mods[key]=true;// 将特殊字符的key注册到 hotkeys 上
for(var k in _modifier){if(_modifier[k]===key)hotkeys[k]=true;}if(!asterisk)return;}// 将 modifierMap 里面的修饰键绑定到 event 中
for(var e in _mods){if(Object.prototype.hasOwnProperty.call(_mods,e)){_mods[e]=event[modifierMap[e]];}}// 获取范围 默认为 `all`
var scope=getScope();// 对任何快捷键都需要做的处理
if(asterisk){for(var i=0;i<asterisk.length;i++){if(asterisk[i].scope===scope&&(event.type==='keydown'&&asterisk[i].keydown||event.type==='keyup'&&asterisk[i].keyup)){eventHandler(event,asterisk[i],scope);}}}// key 不在 _handlers 中返回
if(!(key in _handlers))return;for(var _i=0;_i<_handlers[key].length;_i++){if(event.type==='keydown'&&_handlers[key][_i].keydown||event.type==='keyup'&&_handlers[key][_i].keyup){if(_handlers[key][_i].key){var record=_handlers[key][_i];var splitKey=record.splitKey;var keyShortcut=record.key.split(splitKey);var _downKeysCurrent=[];// 记录当前按键键值
for(var a=0;a<keyShortcut.length;a++){_downKeysCurrent.push(code(keyShortcut[a]));}if(_downKeysCurrent.sort().join('')===_downKeys.sort().join('')){// 找到处理内容
eventHandler(event,record,scope);}}}}}// 判断 element 是否已经绑定事件
function isElementBind(element){return elementHasBindEvent.indexOf(element)>-1;}function hotkeys(key,option,method){_downKeys=[];var keys=getKeys(key);// 需要处理的快捷键列表
var mods=[];var scope='all';// scope默认为all，所有范围都有效
var element=document;// 快捷键事件绑定节点
var i=0;var keyup=false;var keydown=true;var splitKey='+';// 对为设定范围的判断
if(method===undefined&&typeof option==='function'){method=option;}if(Object.prototype.toString.call(option)==='[object Object]'){if(option.scope)scope=option.scope;// eslint-disable-line
if(option.element)element=option.element;// eslint-disable-line
if(option.keyup)keyup=option.keyup;// eslint-disable-line
if(option.keydown!==undefined)keydown=option.keydown;// eslint-disable-line
if(typeof option.splitKey==='string')splitKey=option.splitKey;// eslint-disable-line
}if(typeof option==='string')scope=option;// 对于每个快捷键进行处理
for(;i<keys.length;i++){key=keys[i].split(splitKey);// 按键列表
mods=[];// 如果是组合快捷键取得组合快捷键
if(key.length>1)mods=getMods(_modifier,key);// 将非修饰键转化为键码
key=key[key.length-1];key=key==='*'?'*':code(key);// *表示匹配所有快捷键
// 判断key是否在_handlers中，不在就赋一个空数组
if(!(key in _handlers))_handlers[key]=[];_handlers[key].push({keyup:keyup,keydown:keydown,scope:scope,mods:mods,shortcut:keys[i],method:method,key:keys[i],splitKey:splitKey});}// 在全局document上设置快捷键
if(typeof element!=='undefined'&&!isElementBind(element)&&window){elementHasBindEvent.push(element);addEvent(element,'keydown',function(e){dispatch(e);});addEvent(window,'focus',function(){_downKeys=[];});addEvent(element,'keyup',function(e){dispatch(e);clearModifier(e);});}}var _api={setScope:setScope,getScope:getScope,deleteScope:deleteScope,getPressedKeyCodes:getPressedKeyCodes,isPressed:isPressed,filter:filter,unbind:unbind};for(var a in _api){if(Object.prototype.hasOwnProperty.call(_api,a)){hotkeys[a]=_api[a];}}if(typeof window!=='undefined'){var _hotkeys=window.hotkeys;hotkeys.noConflict=function(deep){if(deep&&window.hotkeys===hotkeys){window.hotkeys=_hotkeys;}return hotkeys;};window.hotkeys=hotkeys;}var PREFIX='[Mage]';var ONCREATE_NOT_AVAILABLE="".concat(PREFIX," Your scene needs a onCreate method.");var PATH_NOT_FOUND="".concat(PREFIX," can't find requested path");var STORE_DOESNT_EXIST="".concat(PREFIX," Store hasn't been created yet.");var LOCALSTORAGE_NOT_AVAILABLE="".concat(PREFIX," localStorage is not available.");var WORKERS_NOT_AVAILABLE="".concat(PREFIX," Your browser doesn't support Workers.");var INVALID_EMITTER_ID="".concat(PREFIX," The selected emitter id is not valid.");var FEATURE_NOT_SUPPORTED="".concat(PREFIX," The following features are not supported: ");var ANIMATION_NOT_FOUND="".concat(PREFIX," Required animation can't be found.");var ANIMATION_HANDLER_NOT_FOUND="".concat(PREFIX," AnimationHander hasn't been defined yet.");var ELEMENT_NOT_SET="".concat(PREFIX," Body hasn't been defined yet.");var ELEMENT_NAME_NOT_PROVIDED="".concat(PREFIX," Desired element name wasn't provided.");var ELEMENT_NO_GEOMETRY_SET="".concat(PREFIX," This element doesn't have a geometry.");var ELEMENT_NO_MATERIAL_CANT_SET_TEXTURE="".concat(PREFIX," This element doesn't have a material, can't set texture.");var ELEMENT_SET_COLOR_MISSING_COLOR="".concat(PREFIX," Can't set color for this element, missing color");var TAG_CANT_BE_REMOVED="".concat(PREFIX," The default tag can't be removed.");var TAG_ALREADY_EXISTS="".concat(PREFIX," The following tag has already been added: ");var TAG_NOT_EXISTING_REMOVAL="".concat(PREFIX," The following tag has can't be removed because it hasnt been added: ");var STATE_MACHINE_NOT_AVAILABLE="".concat(PREFIX," State Machine is not enabled.");var EFFECT_COULD_NOT_BE_CREATED="".concat(PREFIX,"  Could not create requested effect.");var EFFECT_UNAVAILABLE="".concat(PREFIX,"  Requested effect is not available.");var SCRIPT_NOT_FOUND="".concat(PREFIX," Could not find desired script.");var KEYBOARD_COMBO_ALREADY_REGISTERED="".concat(PREFIX," Keyboard combo already registered.");var KEYBOARD_COMBO_IS_INVALID="".concat(PREFIX," Keyboard combo is not valid.");var DEFAULT_OPTIONS={keyup:true,keydown:true};var COMBINATION_DIVIDER='+';var Keyboard=/*#__PURE__*/function(){function Keyboard(){var _this=this;_classCallCheck(this,Keyboard);_defineProperty(this,"handler",function(event,handler){if(!_this.enabled)return;_this.listener(event,handler);// this stops propagation and deafult OS handling for events like cmd + s, cmd + r
return false;});this.keys=['q','w','e','r','t','y','u','i','o','p','l','k','j','h','g','f','d','s','a','z','x','c','v','b','n','m'];this.specials=['esc','escape','enter','space'];this.symbols=[];this.numbers=['1','2','3','4','5','6','7','8','9','0'];this.combos=[].concat(_toConsumableArray(this.keys),_toConsumableArray(this.numbers),_toConsumableArray(this.specials),_toConsumableArray(this.symbols));this.enabled=false;this.listener=undefined;}_createClass(Keyboard,[{key:"register",value:function register(combo,handler){if(this.enabled){if(this.combos.includes(combo)){console.warn(KEYBOARD_COMBO_ALREADY_REGISTERED);return;}this.combos.push(combo);hotkeys(combo,DEFAULT_OPTIONS,handler||this.handler);}}},{key:"registerCombination",value:function registerCombination(){var combo=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var handler=arguments.length>1?arguments[1]:undefined;if(combo instanceof Array&&combo.length>1){this.register(combo.join(COMBINATION_DIVIDER),handler);}else{console.warn(KEYBOARD_COMBO_IS_INVALID,combo);}}},{key:"enable",value:function enable(){var _this2=this;var cb=arguments.length>0&&arguments[0]!==undefined?arguments[0]:function(f){return f;};this.enabled=true;this.listener=cb;this.combos.forEach(function(combo){hotkeys(combo,DEFAULT_OPTIONS,_this2.handler);});}},{key:"disable",value:function disable(){this.enabled=false;this.listener=undefined;this.combos.forEach(function(combo){hotkeys.unbind(combo);});}},{key:"isPressed",value:function isPressed(key){return hotkeys.isPressed(key);}}],[{key:"KEYDOWN",get:function get(){return'keydown';}},{key:"KEYUP",get:function get(){return'keyup';}}]);return Keyboard;}();var Universe=/*#__PURE__*/function(){function Universe(){var _this=this;_classCallCheck(this,Universe);_defineProperty(this,"reset",function(){_this.reality={};_this.realityUUID={};});_defineProperty(this,"forEach",function(callback){var keys=Object.keys(_this.reality);keys.forEach(function(k){return callback(_this.reality[k]);});});_defineProperty(this,"forEachAsync",function(callback){var keys=Object.keys(_this.reality);return new Promise(function(resolve){Promise.all(keys.map(function(k){return callback(_this.reality[k]);})).then(resolve);});});_defineProperty(this,"bigfreeze",function(){_this.forEach(function(o){return o.dispose();});_this.reset();});this.reality={};this.realityUUID={};this.worker=undefined;}_createClass(Universe,[{key:"get",value:function get(id){return this.reality[id];}},{key:"getByUUID",value:function getByUUID(uuid){var id=this.realityUUID[uuid.toString()];if(id){return this.get(id);}}},{key:"getByTag",value:function getByTag(tagName){var elements=[];this.forEach(function(element){if(element.hasTag(tagName)){elements.push(element);}});return elements;}},{key:"set",value:function set(id,value){this.reality[id]=value;}},{key:"storeUUIDToElementNameReference",value:function storeUUIDToElementNameReference(uuid,name){this.realityUUID[uuid]=name;}},{key:"remove",value:function remove(id){delete this.reality[id];}},{key:"update",value:function update(dt){var _this2=this;return new Promise(function(resolve){Object.keys(_this2.reality).forEach(function(k){return _this2.reality[k].update(dt);});resolve();});}},{key:"toJSON",value:function toJSON(){var _this3=this;var elements=Object.keys(this.reality).map(function(k){return _this3.get(k);}).filter(function(element){return element.serializable&&element.isMesh();}).map(function(element){return element.toJSON();});return{elements:elements};}}]);return Universe;}();var Universe$1=new Universe();var generateUUID=function generateUUID(){var s4=function s4(){return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);};return s4()+s4();};var uuid=/*#__PURE__*/Object.freeze({__proto__:null,generateUUID:generateUUID});var SHADOW_TYPES={basic:BasicShadowMap,soft:PCFSoftShadowMap,hard:PCFShadowMap};var DEFAULT_SHADOWTYPE='soft';var Scene$1=/*#__PURE__*/function(){function Scene$1(){var _this=this;_classCallCheck(this,Scene$1);_defineProperty(this,"setShadowType",function(){var type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_SHADOWTYPE;if(Object.keys(SHADOW_TYPES).includes(type)){_this.shadowMap=SHADOW_TYPES[type];_this.setRendererShadowMap();}});_defineProperty(this,"setRendererShadowMap",function(){_this.renderer.shadowMap.enabled=true;_this.renderer.shadowMap.type=_this.shadowType;_this.renderer.sortObjects=false;});_defineProperty(this,"onResize",function(){var _Config$screen=Config$2.screen(),h=_Config$screen.h,w=_Config$screen.w,ratio=_Config$screen.ratio;if(!_this.camera||!_this.renderer)return;_this.camera.getBody().aspect=ratio;_this.camera.getBody().updateProjectionMatrix();_this.renderer.setSize(w,h);});_defineProperty(this,"render",function(){_this.renderer.setClearColor(_this.clearColor);_this.renderer.clear();_this.renderer.setRenderTarget(null);_this.renderer.render(_this.scene,_this.camera.getBody());});this.clock=new Clock();this.rendererElements={};this.clearColor=0x000000;this.shadowType=SHADOW_TYPES[DEFAULT_SHADOWTYPE];}_createClass(Scene$1,[{key:"createScene",value:function createScene(){var fog=Config$2.fog();this.scene=new Scene();if(fog.enabled){this.fog(fog.color,fog.density);}}},{key:"getScene",value:function getScene(){return this.scene;}},{key:"getChildren",value:function getChildren(){return this.scene.children;}},{key:"updateChildren",value:function updateChildren(){for(var i in this.scene.children){if(this.scene.children[i].material){this.scene.children[i].material.needsUpdate=true;}}}},{key:"add",value:function add(body,element){var addUniverse=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;this.scene.add(body);if(addUniverse){Universe$1.set(element.getName(),element);Universe$1.storeUUIDToElementNameReference(body.uuid,element.getName());}}},{key:"remove",value:function remove(body){this.scene.remove(body);Universe$1.remove(body.name);}},{key:"setClearColor",value:function setClearColor(value){if(this.renderer){this.clearColor=value;this.renderer.setClearColor(value);}}},{key:"create",value:function create(){this.createScene();this.createCamera();this.createRenderer();this.listenToResizeEvent();}},{key:"listenToResizeEvent",value:function listenToResizeEvent(){var win=getWindow();if(win){win.addEventListener('resize',this.onResize);}}},{key:"stopResizeListener",value:function stopResizeListener(){var win=getWindow();if(win){win.removeEventListener('resize',this.onResize);}}},{key:"dispose",value:function dispose(){// destroy scene
this.scene.dispose();// destroy renderer
this.renderer.dispose();// remove listener to resize
this.stopResizeListener();}},{key:"createCamera",value:function createCamera(){var _Config$screen2=Config$2.screen(),ratio=_Config$screen2.ratio;var _Config$camera=Config$2.camera(),fov=_Config$camera.fov,near=_Config$camera.near,far=_Config$camera.far;this.camera=new Camera$1({fov:fov,ratio:ratio,near:near,far:far});}},{key:"getCamera",value:function getCamera(){return this.camera;}},{key:"getCameraBody",value:function getCameraBody(){return this.camera.getBody();}},{key:"getRenderer",value:function getRenderer(){return this.renderer;}},{key:"removeExistingRendererElements",value:function removeExistingRendererElements(){Object.keys(this.rendererElements).forEach(function(k){var element=document.body.querySelector("#".concat(k));if(element){element.remove();}});}},{key:"storeRenderer",value:function storeRenderer(rendererElement){var id="renderer_".concat(generateUUID());this.rendererElements[id]=rendererElement;return id;}},{key:"createRenderer",value:function createRenderer(){var _Config$lights=Config$2.lights(),shadows=_Config$lights.shadows;var _Config$screen3=Config$2.screen(),alpha=_Config$screen3.alpha,w=_Config$screen3.w,h=_Config$screen3.h;var container=Config$2.container();this.renderer=new WebGLRenderer({alpha:alpha,antialias:true});if(shadows){this.setRendererShadowMap();}this.renderer.setPixelRatio(window.devicePixelRatio);this.renderer.setSize(w,h);this.renderer.domElement.id=this.storeRenderer(this.renderer.domElement);this.removeExistingRendererElements();if(!container){document.body.appendChild(this.renderer.domElement);}else{container.appendChild(this.renderer.domElement);}}},{key:"fog",value:function fog(color,density){this.scene.fog=new FogExp2(color,density);Config$2.setConfig({fog:{enabled:true,color:color,density:density}});}},{key:"update",value:function update(dt){Universe$1.update(dt);if(Config$2.tween().enabled&&TWEEN){TWEEN.update();}//updating camera if we need to do so.
if(this.camera.update){this.camera.update(dt);}}}]);return Scene$1;}();var Scene$2=new Scene$1();function _createSuper2(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var MOUSE_DOWN='mouseDown';var MOUSE_UP='mouseUp';var MOUSE_MOVE='mouseMove';var ELEMENT_CLICK='elementClick';var ELEMENT_DESELECT='elementDeselect';var Mouse=/*#__PURE__*/function(_EventDispatcher){_inherits(Mouse,_EventDispatcher);var _super=_createSuper2(Mouse);function Mouse(){var _this;_classCallCheck(this,Mouse);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"parseMouseEvent",function(event){var _this$getRelativeMous=_this.getRelativeMousePosition(event),x=_this$getRelativeMous.x,y=_this$getRelativeMous.y;_this.normalizeMouse(x,y);return{x:x,y:y,normalized:_objectSpread2({},_this.mouse)};});_defineProperty(_assertThisInitialized(_this),"onMouseMove",function(event){if(!_this.enabled)return;event.preventDefault();_this.mouseMoveEvent.mouse=_this.parseMouseEvent(event);_this.dispatchEvent(_this.mouseMoveEvent);});_defineProperty(_assertThisInitialized(_this),"onMouseUp",function(event){if(!_this.enabled)return;event.preventDefault();_this.mouseUpEvent.mouse=_this.parseMouseEvent(event);_this.dispatchEvent(_this.mouseUpEvent);});_defineProperty(_assertThisInitialized(_this),"isIntersectionAMeshOrSprite",function(o){return!!o.object.isMesh||!!o.object.isSprite;});_defineProperty(_assertThisInitialized(_this),"getMeshFromUniverse",function(_ref){var _ref$object=_ref.object;_ref$object=_ref$object===void 0?{}:_ref$object;var name=_ref$object.name,face=_ref.face,point=_ref.point;return{face:face,position:point,name:name,element:Universe$1.get(name)};});_defineProperty(_assertThisInitialized(_this),"elementExists",function(_ref2){var element=_ref2.element;return!!element;});_defineProperty(_assertThisInitialized(_this),"getIntersections",function(){if(_this.hasRaycaster()){_this.raycaster.setFromCamera(_this.mouse,Scene$2.getCameraBody());return _this.raycaster.intersectObjects(Scene$2.getChildren()).filter(_this.isIntersectionAMeshOrSprite).map(_this.getMeshFromUniverse).filter(_this.elementExists);}});_defineProperty(_assertThisInitialized(_this),"onMouseDown",function(event){if(!_this.enabled)return;event.preventDefault();var mouseEvent=_this.parseMouseEvent(event);_this.mouseDownEvent.mouse=mouseEvent;_this.elementClickEvent.mouse=mouseEvent;_this.dispatchEvent(_this.mouseDownEvent);var elements=_this.getIntersections();_this.elementClickEvent.elementes=elements;if(!elements.length){_this.dispatchEvent(_this.elementDeselectEvent);}else{_this.dispatchEvent(_this.elementClickEvent);}});_this.enabled=false;_this.mouseMoveIntersectionEnabled=false;_this.mouse=new Vector2();_this.mouseDownEvent={type:MOUSE_DOWN};_this.mouseUpEvent={type:MOUSE_UP};_this.mouseMoveEvent={type:MOUSE_MOVE};_this.elementClickEvent={type:ELEMENT_CLICK};_this.elementDeselectEvent={type:ELEMENT_DESELECT};return _this;}_createClass(Mouse,[{key:"hasRaycaster",value:function hasRaycaster(){return Boolean(this.raycaster);}},{key:"createRayCaster",value:function createRayCaster(){if(!this.hasRaycaster()){this.raycaster=new Raycaster();this.raycaster.setFromCamera(this.mouse,Scene$2.getCameraBody());}}},{key:"enable",value:function enable(){this.enabled=true;this.createRayCaster();Scene$2.renderer.domElement.addEventListener('mousemove',this.onMouseMove);Scene$2.renderer.domElement.addEventListener('mousedown',this.onMouseDown);document.addEventListener('mouseup',this.onMouseUp);}},{key:"enableMouseMoveIntersection",value:function enableMouseMoveIntersection(){this.mouseMoveIntersectionEnabled=true;}},{key:"disable",value:function disable(){this.enabled=false;this.mouseMoveIntersectionEnabled=false;document.removeEventListener('mouseup',this.onMouseUp);Scene$2.renderer.domElement.removeEventListener('mousemove',this.onMouseMove);Scene$2.renderer.domElement.removeEventListener('mousedown',this.onMouseDown);}},{key:"getRelativeMousePosition",value:function getRelativeMousePosition(event){var rect=Config$2.container().getBoundingClientRect();var x=event.clientX-rect.left;var y=event.clientY-rect.top;return{x:x,y:y};}},{key:"normalizeMouse",value:function normalizeMouse(x,y){var _Config$screen=Config$2.screen(),w=_Config$screen.w,h=_Config$screen.h;this.mouse.x=x/w*2-1;this.mouse.y=-(y/h)*2+1;}}]);return Mouse;}(EventDispatcher);var FEATURES={WEBGL:'webgl',WEBAUDIOAPI:'webaudioapi',WEBWORKER:'webworker',LOCALSTORAGE:'localStorage',AJAX:'ajax',OFFSCREENCANVAS:'offscreenCanvas',GAMEPADAPI:'gamepadapi'};var Features=/*#__PURE__*/function(){function Features(){_classCallCheck(this,Features);this.tests=[FEATURES.WEBGL,FEATURES.WEBAUDIOAPI,FEATURES.WEBWORKER,FEATURES.LOCALSTORAGE,FEATURES.AJAX];}_createClass(Features,[{key:"setUpPolyfills",value:function setUpPolyfills(){var frameRate=Config$2.screen().frameRate;window.requestNextFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback,element){window.setTimeout(callback,1000/frameRate);};}();}},{key:"isFeatureSupported",value:function isFeatureSupported(feature){if(typeof this[feature]==='function'){var _this$feature=this[feature](),success=_this$feature.success;return success;}return false;}},{key:"checkSupportedFeatures",value:function checkSupportedFeatures(){var _this=this;var configTests=Config$2.tests()||[];var tests=[].concat(_toConsumableArray(this.tests),_toConsumableArray(configTests));if(tests.indexOf(FEATURES.WEBGL)==-1){tests.push(FEATURES.WEBGL);}var failures=tests.map(function(test){return _this[test]&&_this[test]();}).reduce(function(acc,result){if(!result.success){acc.push(result.name);}return acc;},[]);return failures.length?Promise.reject(failures):Promise.resolve();}},{key:"localStorage",value:function localStorage(){if(window&&window.localStorage&&typeof window.localStorage.setItem==='function'&&typeof window.localStorage.getItem==='function'&&typeof window.localStorage.removeItem==='function'&&typeof window.localStorage.clear==='function'){return{success:true,name:FEATURES.LOCALSTORAGE};}else{return{success:false,name:FEATURES.LOCALSTORAGE};}}},{key:"offscreenCanvas",value:function offscreenCanvas(){var hasOffscreenCanvas=!!window.OffscreenCanvas;return{success:hasOffscreenCanvas,name:FEATURES.OFFSCREENCANVAS};}},{key:"webgl",value:function webgl(){try{var canvas=document.createElement("canvas");var context=canvas.getContext("webgl")||canvas.getContext("experimental-webgl");if(context){return{success:true,name:FEATURES.WEBGL};}else{return{success:false,name:FEATURES.WEBGL};}}catch(e){return{success:false,name:FEATURES.WEBGL};}}},{key:"webaudioapi",value:function webaudioapi(){try{var hasWebAudioApi=!!(window.webkitAudioContext||window.AudioContext);if(hasWebAudioApi){return{success:true,name:FEATURES.WEBAUDIOAPI};}else{return{success:false,name:FEATURES.WEBAUDIOAPI};}}catch(e){return{success:false,name:FEATURES.WEBAUDIOAPI};}}},{key:"webworker",value:function webworker(){try{var hasWorkers=!!window.Worker;if(hasWorkers){return{success:true,name:FEATURES.WEBWORKER};}else{return{success:true,name:FEATURES.WEBWORKER};}}catch(e){return{success:false,name:FEATURES.WEBWORKER};}}},{key:"ajax",value:function ajax(){try{var xhr=null;try{xhr=new XMLHttpRequest();}catch(e){}try{xhr=new ActiveXObject("Microsoft.XMLHTTP");}catch(e){}try{xhr=new ActiveXObject("Msxml2.XMLHTTP");}catch(e){}if(xhr){return{success:true,name:FEATURES.AJAX};}else{return{success:false,name:FEATURES.AJAX};}}catch(e){return{success:false,name:FEATURES.AJAX};}}},{key:"gamepadapi",value:function gamepadapi(){try{if(navigator&&(navigator.getGamepads||navigator.webkitGetGamepads)&&window.Gamepad&&window.GamepadButton){return{success:true,name:FEATURES.GAMEPADAPI};}else{return{success:true,name:FEATURES.GAMEPADAPI};}}catch(e){return{success:false,name:FEATURES.GAMEPADAPI};}}}]);return Features;}();var Features$1=new Features();var SAVE_STARTED='SAVE_STARTED';var SAVE_COMPLETED='SAVE_COMPLETED';var SAVE_ERROR='SAVE_ERROR';var LOAD_STARTED='LOAD_STARTED';var LOAD_COMPLETED='LOAD_COMPLETED';var LOAD_ERROR='LOAD_ERROR';var KEYBOARD_ENABLED='KEYBOARD_ENABLED';var MOUSE_ENABLED='MOUSE_ENABLED';var GAMEPAD_ENABLED='GAMEPAD_ENABLED';var INPUT_ENABLED='INPUT_ENABLED';var KEYBOARD_DISABLED='KEYBOARD_DISABLED';var MOUSE_DISABLED='MOUSE_DISABLED';var GAMEPAD_DISABLED='GAMEPAD_DISABLED';var INPUT_DISABLED='INPUT_DISABLED';var GAMEPAD_CONNECTED='GAMEPAD_CONNECTED';var GAMEPAD_DISCONNECTED='GAMEPAD_DISCONNECTED';var NETWORK_CHANGED='NETWORK_CHANGED';var UI_LOADING_SCREEN='UI_LOADING_SCREEN';var RESET='RESET';var inputEnabled=function inputEnabled(){return{type:INPUT_ENABLED};};var keyboardEnabled=function keyboardEnabled(){return{type:KEYBOARD_ENABLED};};var mouseEnabled=function mouseEnabled(){return{type:MOUSE_ENABLED};};var gamepadEnabled=function gamepadEnabled(){return{type:GAMEPAD_ENABLED};};var inputDisabled=function inputDisabled(){return{type:INPUT_DISABLED};};var keyboardDisabled=function keyboardDisabled(){return{type:KEYBOARD_DISABLED};};var mouseDisabled=function mouseDisabled(){return{type:MOUSE_DISABLED};};var gamepadDisabled=function gamepadDisabled(){return{type:GAMEPAD_DISABLED};};var gamepadConnected=function gamepadConnected(gamepads){return{type:GAMEPAD_CONNECTED,gamepads:gamepads};};var gamepadDisconnected=function gamepadDisconnected(gamepads){return{type:GAMEPAD_DISCONNECTED,gamepads:gamepads};};function symbolObservablePonyfill(root){var result;var _Symbol=root.Symbol;if(typeof _Symbol==='function'){if(_Symbol.observable){result=_Symbol.observable;}else{result=_Symbol('observable');_Symbol.observable=result;}}else{result='@@observable';}return result;}/* global window */var root;if(typeof self!=='undefined'){root=self;}else if(typeof window!=='undefined'){root=window;}else if(typeof global!=='undefined'){root=global;}else if(true){root=module;}else{}var result=symbolObservablePonyfill(root);/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */var randomString=function randomString(){return Math.random().toString(36).substring(7).split('').join('.');};var ActionTypes$1={INIT:"@@redux/INIT"+randomString(),REPLACE:"@@redux/REPLACE"+randomString(),PROBE_UNKNOWN_ACTION:function PROBE_UNKNOWN_ACTION(){return"@@redux/PROBE_UNKNOWN_ACTION"+randomString();}};/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */function isPlainObject(obj){if(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(obj)!=='object'||obj===null)return false;var proto=obj;while(Object.getPrototypeOf(proto)!==null){proto=Object.getPrototypeOf(proto);}return Object.getPrototypeOf(obj)===proto;}/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */function createStore(reducer,preloadedState,enhancer){var _ref2;if(typeof preloadedState==='function'&&typeof enhancer==='function'||typeof enhancer==='function'&&typeof arguments[3]==='function'){throw new Error('It looks like you are passing several store enhancers to '+'createStore(). This is not supported. Instead, compose them '+'together to a single function.');}if(typeof preloadedState==='function'&&typeof enhancer==='undefined'){enhancer=preloadedState;preloadedState=undefined;}if(typeof enhancer!=='undefined'){if(typeof enhancer!=='function'){throw new Error('Expected the enhancer to be a function.');}return enhancer(createStore)(reducer,preloadedState);}if(typeof reducer!=='function'){throw new Error('Expected the reducer to be a function.');}var currentReducer=reducer;var currentState=preloadedState;var currentListeners=[];var nextListeners=currentListeners;var isDispatching=false;/**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */function ensureCanMutateNextListeners(){if(nextListeners===currentListeners){nextListeners=currentListeners.slice();}}/**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */function getState(){if(isDispatching){throw new Error('You may not call store.getState() while the reducer is executing. '+'The reducer has already received the state as an argument. '+'Pass it down from the top reducer instead of reading it from the store.');}return currentState;}/**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */function subscribe(listener){if(typeof listener!=='function'){throw new Error('Expected the listener to be a function.');}if(isDispatching){throw new Error('You may not call store.subscribe() while the reducer is executing. '+'If you would like to be notified after the store has been updated, subscribe from a '+'component and invoke store.getState() in the callback to access the latest state. '+'See https://redux.js.org/api-reference/store#subscribelistener for more details.');}var isSubscribed=true;ensureCanMutateNextListeners();nextListeners.push(listener);return function unsubscribe(){if(!isSubscribed){return;}if(isDispatching){throw new Error('You may not unsubscribe from a store listener while the reducer is executing. '+'See https://redux.js.org/api-reference/store#subscribelistener for more details.');}isSubscribed=false;ensureCanMutateNextListeners();var index=nextListeners.indexOf(listener);nextListeners.splice(index,1);currentListeners=null;};}/**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */function dispatch(action){if(!isPlainObject(action)){throw new Error('Actions must be plain objects. '+'Use custom middleware for async actions.');}if(typeof action.type==='undefined'){throw new Error('Actions may not have an undefined "type" property. '+'Have you misspelled a constant?');}if(isDispatching){throw new Error('Reducers may not dispatch actions.');}try{isDispatching=true;currentState=currentReducer(currentState,action);}finally{isDispatching=false;}var listeners=currentListeners=nextListeners;for(var i=0;i<listeners.length;i++){var listener=listeners[i];listener();}return action;}/**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */function replaceReducer(nextReducer){if(typeof nextReducer!=='function'){throw new Error('Expected the nextReducer to be a function.');}currentReducer=nextReducer;// This action has a similiar effect to ActionTypes.INIT.
// Any reducers that existed in both the new and old rootReducer
// will receive the previous state. This effectively populates
// the new state tree with any relevant data from the old one.
dispatch({type:ActionTypes$1.REPLACE});}/**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */function observable(){var _ref;var outerSubscribe=subscribe;return _ref={/**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */subscribe:function subscribe(observer){if(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(observer)!=='object'||observer===null){throw new TypeError('Expected the observer to be an object.');}function observeState(){if(observer.next){observer.next(getState());}}observeState();var unsubscribe=outerSubscribe(observeState);return{unsubscribe:unsubscribe};}},_ref[result]=function(){return this;},_ref;}// When a store is created, an "INIT" action is dispatched so that every
// reducer returns their initial state. This effectively populates
// the initial state tree.
dispatch({type:ActionTypes$1.INIT});return _ref2={dispatch:dispatch,subscribe:subscribe,getState:getState,replaceReducer:replaceReducer},_ref2[result]=observable,_ref2;}/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */function warning(message){/* eslint-disable no-console */if(typeof console!=='undefined'&&typeof console.error==='function'){console.error(message);}/* eslint-enable no-console */try{// This error was thrown as a convenience so that if you enable
// "break on all exceptions" in your console,
// it would pause the execution at this line.
throw new Error(message);}catch(e){}// eslint-disable-line no-empty
}function getUndefinedStateErrorMessage(key,action){var actionType=action&&action.type;var actionDescription=actionType&&"action \""+String(actionType)+"\""||'an action';return"Given "+actionDescription+", reducer \""+key+"\" returned undefined. "+"To ignore an action, you must explicitly return the previous state. "+"If you want this reducer to hold no value, you can return null instead of undefined.";}function getUnexpectedStateShapeWarningMessage(inputState,reducers,action,unexpectedKeyCache){var reducerKeys=Object.keys(reducers);var argumentName=action&&action.type===ActionTypes$1.INIT?'preloadedState argument passed to createStore':'previous state received by the reducer';if(reducerKeys.length===0){return'Store does not have a valid reducer. Make sure the argument passed '+'to combineReducers is an object whose values are reducers.';}if(!isPlainObject(inputState)){return"The "+argumentName+" has unexpected type of \""+{}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1]+"\". Expected argument to be an object with the following "+("keys: \""+reducerKeys.join('", "')+"\"");}var unexpectedKeys=Object.keys(inputState).filter(function(key){return!reducers.hasOwnProperty(key)&&!unexpectedKeyCache[key];});unexpectedKeys.forEach(function(key){unexpectedKeyCache[key]=true;});if(action&&action.type===ActionTypes$1.REPLACE)return;if(unexpectedKeys.length>0){return"Unexpected "+(unexpectedKeys.length>1?'keys':'key')+" "+("\""+unexpectedKeys.join('", "')+"\" found in "+argumentName+". ")+"Expected to find one of the known reducer keys instead: "+("\""+reducerKeys.join('", "')+"\". Unexpected keys will be ignored.");}}function assertReducerShape(reducers){Object.keys(reducers).forEach(function(key){var reducer=reducers[key];var initialState=reducer(undefined,{type:ActionTypes$1.INIT});if(typeof initialState==='undefined'){throw new Error("Reducer \""+key+"\" returned undefined during initialization. "+"If the state passed to the reducer is undefined, you must "+"explicitly return the initial state. The initial state may "+"not be undefined. If you don't want to set a value for this reducer, "+"you can use null instead of undefined.");}if(typeof reducer(undefined,{type:ActionTypes$1.PROBE_UNKNOWN_ACTION()})==='undefined'){throw new Error("Reducer \""+key+"\" returned undefined when probed with a random type. "+("Don't try to handle "+ActionTypes$1.INIT+" or other actions in \"redux/*\" ")+"namespace. They are considered private. Instead, you must return the "+"current state for any unknown actions, unless it is undefined, "+"in which case you must return the initial state, regardless of the "+"action type. The initial state may not be undefined, but can be null.");}});}/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */function combineReducers(reducers){var reducerKeys=Object.keys(reducers);var finalReducers={};for(var i=0;i<reducerKeys.length;i++){var key=reducerKeys[i];if(true){if(typeof reducers[key]==='undefined'){warning("No reducer provided for key \""+key+"\"");}}if(typeof reducers[key]==='function'){finalReducers[key]=reducers[key];}}var finalReducerKeys=Object.keys(finalReducers);// This is used to make sure we don't warn about the same
// keys multiple times.
var unexpectedKeyCache;if(true){unexpectedKeyCache={};}var shapeAssertionError;try{assertReducerShape(finalReducers);}catch(e){shapeAssertionError=e;}return function combination(state,action){if(state===void 0){state={};}if(shapeAssertionError){throw shapeAssertionError;}if(true){var warningMessage=getUnexpectedStateShapeWarningMessage(state,finalReducers,action,unexpectedKeyCache);if(warningMessage){warning(warningMessage);}}var hasChanged=false;var nextState={};for(var _i=0;_i<finalReducerKeys.length;_i++){var _key=finalReducerKeys[_i];var reducer=finalReducers[_key];var previousStateForKey=state[_key];var nextStateForKey=reducer(previousStateForKey,action);if(typeof nextStateForKey==='undefined'){var errorMessage=getUndefinedStateErrorMessage(_key,action);throw new Error(errorMessage);}nextState[_key]=nextStateForKey;hasChanged=hasChanged||nextStateForKey!==previousStateForKey;}hasChanged=hasChanged||finalReducerKeys.length!==Object.keys(state).length;return hasChanged?nextState:state;};}function bindActionCreator(actionCreator,dispatch){return function(){return dispatch(actionCreator.apply(this,arguments));};}/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */function bindActionCreators(actionCreators,dispatch){if(typeof actionCreators==='function'){return bindActionCreator(actionCreators,dispatch);}if(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(actionCreators)!=='object'||actionCreators===null){throw new Error("bindActionCreators expected an object or a function, instead received "+(actionCreators===null?'null':_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(actionCreators))+". "+"Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");}var boundActionCreators={};for(var key in actionCreators){var actionCreator=actionCreators[key];if(typeof actionCreator==='function'){boundActionCreators[key]=bindActionCreator(actionCreator,dispatch);}}return boundActionCreators;}function _defineProperty$1(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function ownKeys$1(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){keys.push.apply(keys,Object.getOwnPropertySymbols(object));}if(enumerableOnly)keys=keys.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});return keys;}function _objectSpread2$1(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys$1(source,true).forEach(function(key){_defineProperty$1(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys$1(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */function compose(){for(var _len=arguments.length,funcs=new Array(_len),_key=0;_key<_len;_key++){funcs[_key]=arguments[_key];}if(funcs.length===0){return function(arg){return arg;};}if(funcs.length===1){return funcs[0];}return funcs.reduce(function(a,b){return function(){return a(b.apply(void 0,arguments));};});}/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */function applyMiddleware(){for(var _len=arguments.length,middlewares=new Array(_len),_key=0;_key<_len;_key++){middlewares[_key]=arguments[_key];}return function(createStore){return function(){var store=createStore.apply(void 0,arguments);var _dispatch=function dispatch(){throw new Error('Dispatching while constructing your middleware is not allowed. '+'Other middleware would not be applied to this dispatch.');};var middlewareAPI={getState:store.getState,dispatch:function dispatch(){return _dispatch.apply(void 0,arguments);}};var chain=middlewares.map(function(middleware){return middleware(middlewareAPI);});_dispatch=compose.apply(void 0,chain)(store.dispatch);return _objectSpread2$1({},store,{dispatch:_dispatch});};};}/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */function isCrushed(){}if( true&&typeof isCrushed.name==='string'&&isCrushed.name!=='isCrushed'){warning('You are currently using minified code outside of NODE_ENV === "production". '+'This means that you are running a slower development build of Redux. '+'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify '+'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) '+'to ensure you have the correct code for your production build.');}var redux=/*#__PURE__*/Object.freeze({__proto__:null,__DO_NOT_USE__ActionTypes:ActionTypes$1,applyMiddleware:applyMiddleware,bindActionCreators:bindActionCreators,combineReducers:combineReducers,compose:compose,createStore:createStore});function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){if(typeof action==='function'){return action(dispatch,getState,extraArgument);}return next(action);};};};}var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware;var name="mage-engine";var version="3.5.0";var description="A WebGL Javascript Game Engine, built on top of THREE.js and many other libraries.";var main="dist/mage.js";var author={name:"Marco Stagni",email:"mrc.stagni@gmail.com"};var scripts={preversion:"npm test",version:"npm run build",dev:"npm run build && npm run start",start:"http-server ./ -p 8085","postversion:push":"git push --no-verify && git push --tags --no-verify",postversion:"npm run postversion:push && npm publish",prebuild:"rimraf dist/mage.js",build:"rollup --config config/index.js",test:"echo you should test"};var repository={type:"git",url:"git://github.com/marco-ponds/mage.git"};var license="BSD-3-Clause";var keywords=["mage","marco","stagni","three.js","webgl","game","engine","game engine","javascript","browser","shader"];var dependencies={"@babel/plugin-transform-classes":"^7.9.5","@babel/plugin-transform-runtime":"7.5.0","@babel/runtime":"7.5.0","between.js":"0.1.2-fix.2","hotkeys-js":"3.7.2",inferno:"7.3.2","inferno-create-element":"7.3.3","inferno-redux":"7.4.2","mage-engine.particles":"github:MageStudio/partykals#v2.0.2",oimo:"github:MageStudio/Oimo.js#v1.0.11",redux:"4.0.5","redux-thunk":"^2.3.0",rxjs:"6.5.3",three:"0.117.0",vivifyjs:"*","whatwg-fetch":"3.0.0",xstate:"^4.8.0"};var devDependencies={"@babel/cli":"7.5.0","@babel/core":"7.5.0","@babel/node":"7.6.3","@babel/plugin-proposal-class-properties":"7.5.0","@babel/polyfill":"7.4.4","@babel/preset-env":"7.5.0","@babel/register":"7.4.4","@rollup/plugin-json":"4.0.1","babel-loader":"8.0.6","babel-plugin-inferno":"6.1.0","http-server":"^0.12.3",rimraf:"^3.0.0",rollup:"1.26.3","rollup-plugin-babel":"4.3.3","rollup-plugin-commonjs":"10.1.0","rollup-plugin-node-resolve":"5.2.0","rollup-plugin-terser":"5.2.0"};var packageJSON={name:name,version:version,description:description,main:main,author:author,scripts:scripts,repository:repository,license:license,keywords:keywords,dependencies:dependencies,devDependencies:devDependencies};var DEFAULT_STATE={mage:packageJSON.version};var info=function info(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_STATE;return state;};var DEFAULT_STATE$1={error:false,saving:false,loading:false,errorDetails:'',sceneName:'',currentPath:'/',timestamp:''};var storage=function storage(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_STATE$1;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){case SAVE_STARTED:return _objectSpread2({},state,{saving:true});case SAVE_COMPLETED:return _objectSpread2({},state,{saving:false,error:false,sceneName:action.currentScene,currentPath:action.currentPath,timestamp:action.timestamp});case SAVE_ERROR:return _objectSpread2({},state,{saving:false,error:true,errorDetails:action.errorDetails});case LOAD_STARTED:return _objectSpread2({},state,{loading:true});case LOAD_COMPLETED:return _objectSpread2({},state,{loading:false,error:false});case LOAD_ERROR:return _objectSpread2({},state,{loading:false,error:true,errorDetails:action.errorDetails});default:return state;}};var DEFAULT_STATE$2={keyboard:false,mouse:false,gamepad:false,gamepads:{}};var input=function input(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_STATE$2;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){case INPUT_ENABLED:return _objectSpread2({},state,{keyboard:true,mouse:true,gamepad:true});case KEYBOARD_ENABLED:return _objectSpread2({},state,{keyboard:true});case MOUSE_ENABLED:return _objectSpread2({},state,{mouse:true});case GAMEPAD_ENABLED:return _objectSpread2({},state,{gamepad:true});case INPUT_DISABLED:return _objectSpread2({},state,{keyboard:false,mouse:false,gamepad:false});case KEYBOARD_DISABLED:return _objectSpread2({},state,{keyboard:false});case MOUSE_DISABLED:return _objectSpread2({},state,{mouse:false});case GAMEPAD_DISABLED:return _objectSpread2({},state,{gamepad:false});case GAMEPAD_CONNECTED:case GAMEPAD_DISCONNECTED:return _objectSpread2({},state,{gamepads:action.gamepads});default:return state;}};var DEFAULT_STATE$3={isOnline:true};var network=function network(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_STATE$3;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case NETWORK_CHANGED:return _objectSpread2({},state,{isOnline:action.isOnline});default:return state;}};var DEFAULT_STATE$4={loadingScreenVisible:false};var ui=function ui(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_STATE$4;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){case UI_LOADING_SCREEN:return _objectSpread2({},state,{loadingScreenVisible:action.loadingScreenVisible});default:return state;}};var createRootReducer=function createRootReducer(combinedReducer){return function(state,action){switch(action.type){case RESET:if(Object.keys(action.state).length>0){return _objectSpread2({},state,{},action.state);}else{return state;}default:return combinedReducer(state,action);}};};var _this=undefined;var debounce=function debounce(func,wait,immediate){var context=arguments.length>3&&arguments[3]!==undefined?arguments[3]:_this;var timeout;return function(){var args=arguments;var later=function later(){timeout=null;if(!immediate)func.apply(context,args);};var callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow)func.apply(context,args);};};var NOOP=function NOOP(f){return f;};var functions=/*#__PURE__*/Object.freeze({__proto__:null,debounce:debounce,NOOP:NOOP});var store;var DEFAULT_REDUCERS={info:info,input:input,storage:storage,network:network,ui:ui};var unsubscribe=NOOP;var subscribers={};var applyMiddlewares=function applyMiddlewares(mdws,debug){if(debug){return compose(applyMiddleware.apply(redux,_toConsumableArray(mdws)),window.__REDUX_DEVTOOLS_EXTENSION__?window.__REDUX_DEVTOOLS_EXTENSION__():function(f){return f;});}return applyMiddleware.apply(redux,_toConsumableArray(mdws));};var defaultMiddleware=function defaultMiddleware(){return[thunk];};var combineReducers$1=function combineReducers$1(){var reducers=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return combineReducers(_objectSpread2({},reducers,{},DEFAULT_REDUCERS));};var getState=function getState(){if(store){return store.getState();}else{console.log(STORE_DOESNT_EXIST);}};var getStore=function getStore(){return store;};var handleSubscriptions=function handleSubscriptions(){return Object.keys(subscribers).forEach(function(path){if(subscribers[path]&&subscribers[path].onStateChange){subscribers[path].onStateChange(getState());}});};var createStore$1=function createStore$1(reducers){var initialState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var debug=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var storeReducers=combineReducers$1(reducers);if(!store){store=createStore(createRootReducer(storeReducers),initialState,applyMiddlewares(defaultMiddleware(),debug));unsubscribe=store.subscribe(handleSubscriptions);}};var subscribeScene=function subscribeScene(path,scene){return subscribers[path]=scene;};var unsubScribeScene=function unsubScribeScene(path){return delete subscribers[path];};var dispatch$1=function dispatch(action){if(store&&action){store.dispatch(action);}};var STANDARD='STANDARD';var GAMEPAD_BUTTON_MAPPINGS=_defineProperty({},STANDARD,['X','B','A','Y','L1','R1',null,null,'SELECT','START']);function _createSuper2$1(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var WINDOW_GAMEPAD_CONNECTED_EVENT='gamepadconnected';var WINDOW_GAMEPAD_DISCONNECTED_EVENT='gamepaddisconnected';var GAMEPAD_CONNECTED_EVENT='gamepadConnected';var GAMEPAD_DISCONNECTED_EVENT='gamepadDisconnected';var AXIS_CHANGE_EVENT='axisChange';var BUTTON_PRESSED_EVENT='gamepadButtonPressed';var BUTTON_RELEASED_EVENT='gamepadButtonReleased';var isValidGamepad=function isValidGamepad(gamepad){return!!gamepad;};var getConnectedGamepads=function getConnectedGamepads(){var list=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():[];if(typeof list==='array')return list;var gamepads=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=navigator.getGamepads()[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var gamepad=_step.value;if(isValidGamepad(gamepad)){gamepads.push(gamepad);}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return gamepads;};var mapButtonIndexToKey=function mapButtonIndexToKey(gamepad,index){return(GAMEPAD_BUTTON_MAPPINGS[gamepad.id]||GAMEPAD_BUTTON_MAPPINGS[STANDARD])[index];};var parseButton=function parseButton(button,index){if(typeof button==='number'){return{pressed:button===1.0,value:button,index:index,key:mapButtonIndexToKey(index)};}return{pressed:button.pressed,value:button.value,index:index,key:mapButtonIndexToKey(index)};};var Gamepad=/*#__PURE__*/function(_EventDispatcher){_inherits(Gamepad,_EventDispatcher);var _super=_createSuper2$1(Gamepad);function Gamepad(){var _this;_classCallCheck(this,Gamepad);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"transformGamepadsForEvent",function(){return Object.keys(_this.gamepads).reduce(function(acc,index){var _this$gamepads$index=_this.gamepads[index],gamepadIndex=_this$gamepads$index.index,connected=_this$gamepads$index.connected,timestamp=_this$gamepads$index.timestamp,id=_this$gamepads$index.id,mapping=_this$gamepads$index.mapping;acc[index]={index:gamepadIndex,connected:connected,timestamp:timestamp,id:id,mapping:mapping};return acc;},{});});_defineProperty(_assertThisInitialized(_this),"onGamepadConnected",function(e){_this.addGamepad(e.gamepad);_this.dispatchEvent({type:GAMEPAD_CONNECTED_EVENT,gamepad:e.gamepad});dispatch$1(gamepadConnected(_this.transformGamepadsForEvent()));});_defineProperty(_assertThisInitialized(_this),"onGamepadDisconnected",function(e){_this.removeGamepad(e.gamepad);_this.dispatchEvent({type:GAMEPAD_DISCONNECTED_EVENT,gamepad:e.gamepad});dispatch$1(gamepadDisconnected(_this.transformGamepadsForEvent()));});_defineProperty(_assertThisInitialized(_this),"evaluateGamepads",function(previousGamepads){Object.keys(_this.gamepads).forEach(function(index){var gamepad=_this.gamepads[index];var previousButtons=previousGamepads[index].buttons;_this.evaluateButtonsChange(previousButtons,gamepad);_this.evaluateAxesChange(gamepad);});});_defineProperty(_assertThisInitialized(_this),"evaluateButtonsChange",function(previousButtons,gamepad){gamepad.buttons.forEach(function(button,index){var current=parseButton(button,index);var previous=parseButton(previousButtons[index],index);if(current.pressed){_this.dispatchEvent({type:BUTTON_PRESSED_EVENT,button:current,gamepad:gamepad});}else if(previous.pressed){_this.dispatchEvent({type:BUTTON_RELEASED_EVENT,button:current,gamepad:gamepad});}});});_defineProperty(_assertThisInitialized(_this),"evaluateAxesChange",function(gamepad){var toFloat=function toFloat(number,fixed){return parseFloat(number.toFixed(fixed));};var joystick=0;var axes=gamepad.axes;for(var i=0;i<axes.length;i+=2){var x=toFloat(axes[i],2);var y=toFloat(axes[i+1],2);_this.dispatchEvent({type:AXIS_CHANGE_EVENT,value:{x:x,y:y},gamepad:gamepad,joystick:joystick});joystick++;}});_this.enabled=false;_this.gamepads={};return _this;}_createClass(Gamepad,[{key:"reset",value:function reset(){this.enabled=false;this.gamepads={};}},{key:"isEnabled",value:function isEnabled(){return this.enabled;}},{key:"enable",value:function enable(){if(Features$1.isFeatureSupported(FEATURES.GAMEPADAPI)){this.enabled=true;window.addEventListener(WINDOW_GAMEPAD_CONNECTED_EVENT,this.onGamepadConnected);window.addEventListener(WINDOW_GAMEPAD_DISCONNECTED_EVENT,this.onGamepadDisconnected);}}},{key:"disable",value:function disable(){this.reset();window.removeEventListener(WINDOW_GAMEPAD_CONNECTED_EVENT,this.onGamepadConnected);window.removeEventListener(WINDOW_GAMEPAD_DISCONNECTED_EVENT,this.onGamepadDisconnected);}},{key:"getConnectedGamepads",value:function getConnectedGamepads(){return this.gamepads;}},{key:"addGamepad",value:function addGamepad(gamepad){this.gamepads[gamepad.index]=gamepad;}},{key:"removeGamepad",value:function removeGamepad(gamepad){delete this.gamepads[gamepad.index];}},{key:"updateGamepadWithIndex",value:function updateGamepadWithIndex(index,gamepad){this.gamepads[index]=gamepad;}},{key:"hasGamepadWithIndex",value:function hasGamepadWithIndex(index){return!!(index in this.gamepads);}},{key:"updateGamepads",value:function updateGamepads(){var _this2=this;getConnectedGamepads().filter(isValidGamepad).forEach(function(gamepad){if(!_this2.hasGamepadWithIndex(gamepad.index)){_this2.addGamepad(gamepad);}else{_this2.updateGamepadWithIndex(gamepad.index,gamepad);}});}},{key:"update",value:function update(){if(this.enabled){var previous=_objectSpread2({},this.gamepads);this.updateGamepads();this.evaluateGamepads(previous);}}}]);return Gamepad;}(EventDispatcher);function _createSuper2$2(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var KEY_PRESS='keyPress';var KEY_DOWN='keyDown';var KEY_UP='keyUp';var INPUT_EVENTS=[KEY_PRESS,KEY_DOWN,KEY_UP,MOUSE_DOWN,MOUSE_UP,MOUSE_DOWN,ELEMENT_CLICK,ELEMENT_DESELECT,GAMEPAD_CONNECTED_EVENT,GAMEPAD_DISCONNECTED_EVENT,BUTTON_PRESSED_EVENT,BUTTON_RELEASED_EVENT,AXIS_CHANGE_EVENT];var Input=/*#__PURE__*/function(_EventDispatcher){_inherits(Input,_EventDispatcher);var _super=_createSuper2$2(Input);function Input(){var _this;_classCallCheck(this,Input);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"propagate",function(event){_this.dispatchEvent(event);});_defineProperty(_assertThisInitialized(_this),"handleKeyBoardEvent",function(event,handler){if(event.type===Keyboard.KEYDOWN){_this.dispatchEvent({type:KEY_DOWN,event:_objectSpread2({},event,{},handler)});}if(event.type===Keyboard.KEYUP){_this.dispatchEvent({type:KEY_UP,event:_objectSpread2({},event,{},handler)});}_this.dispatchEvent({type:KEY_PRESS,event:_objectSpread2({},event,{},handler)});});_this.enabled=false;return _this;}_createClass(Input,[{key:"enable",value:function enable(){if(!this.enabled){dispatch$1(inputEnabled());this.mouse=new Mouse();this.keyboard=new Keyboard();this.gamepad=new Gamepad();this.enableGamepad();this.enableKeyboard();this.enableMouse();this.enabled=true;}}},{key:"disable",value:function disable(){if(this.enabled){dispatch$1(inputDisabled());this.disableKeyboard();this.disableMouse();this.disableGamepad();this.enabled=false;}}},{key:"isEnabled",value:function isEnabled(){return this.enabled;}},{key:"enableGamepad",value:function enableGamepad(){dispatch$1(gamepadEnabled());this.gamepad.enable();this.gamepad.addEventListener(GAMEPAD_CONNECTED_EVENT,this.propagate.bind(this));this.gamepad.addEventListener(GAMEPAD_DISCONNECTED_EVENT,this.propagate.bind(this));this.gamepad.addEventListener(BUTTON_RELEASED_EVENT,this.propagate.bind(this));this.gamepad.addEventListener(BUTTON_PRESSED_EVENT,this.propagate.bind(this));this.gamepad.addEventListener(BUTTON_RELEASED_EVENT,this.propagate.bind(this));this.gamepad.addEventListener(AXIS_CHANGE_EVENT,this.propagate.bind(this));}},{key:"enableKeyboard",value:function enableKeyboard(){dispatch$1(keyboardEnabled());this.keyboard.enable(this.handleKeyBoardEvent.bind(this));}},{key:"enableMouse",value:function enableMouse(){dispatch$1(mouseEnabled());this.mouse.enable();this.mouse.addEventListener(MOUSE_DOWN,this.propagate.bind(this));this.mouse.addEventListener(MOUSE_UP,this.propagate.bind(this));this.mouse.addEventListener(MOUSE_MOVE,this.propagate.bind(this));this.mouse.addEventListener(ELEMENT_CLICK,this.propagate.bind(this));this.mouse.addEventListener(ELEMENT_DESELECT,this.propagate.bind(this));}},{key:"disableKeyboard",value:function disableKeyboard(){dispatch$1(keyboardDisabled());this.keyboard.disable();this.keyboard=undefined;}},{key:"disableMouse",value:function disableMouse(){dispatch$1(mouseDisabled());this.mouse.disable();this.mouse.removeEventListener(MOUSE_DOWN,this.propagate.bind(this));this.mouse.removeEventListener(MOUSE_UP,this.propagate.bind(this));this.mouse.removeEventListener(MOUSE_MOVE,this.propagate.bind(this));this.mouse.removeEventListener(ELEMENT_CLICK,this.propagate.bind(this));this.mouse.removeEventListener(ELEMENT_DESELECT,this.propagate.bind(this));this.mouse=undefined;}},{key:"disableGamepad",value:function disableGamepad(){dispatch$1(gamepadDisabled());this.gamepad.disable();this.gamepad.removeEventListener(GAMEPAD_CONNECTED_EVENT,this.propagate.bind(this));this.gamepad.removeEventListener(GAMEPAD_DISCONNECTED_EVENT,this.propagate.bind(this));this.gamepad.removeEventListener(BUTTON_PRESSED_EVENT,this.propagate.bind(this));this.gamepad.removeEventListener(BUTTON_RELEASED_EVENT,this.propagate.bind(this));this.gamepad.removeEventListener(AXIS_CHANGE_EVENT,this.propagate.bind(this));this.gamepad=null;}},{key:"update",value:function update(){if(this.isEnabled()&&this.gamepad.isEnabled()){this.gamepad.update();}}},{key:"EVENTS",get:function get(){var _ref;return _ref={KEY_PRESS:KEY_PRESS,KEY_DOWN:KEY_DOWN,KEY_UP:KEY_UP,MOUSE_DOWN:MOUSE_DOWN,MOUSE_UP:MOUSE_UP},_defineProperty(_ref,"MOUSE_DOWN",MOUSE_DOWN),_defineProperty(_ref,"ELEMENT_CLICK",ELEMENT_CLICK),_defineProperty(_ref,"ELEMENT_DESELECT",ELEMENT_DESELECT),_defineProperty(_ref,"GAMEPAD_CONNECTED_EVENT",GAMEPAD_CONNECTED_EVENT),_defineProperty(_ref,"GAMEPAD_DISCONNECTED_EVENT",GAMEPAD_DISCONNECTED_EVENT),_defineProperty(_ref,"BUTTON_PRESSED_EVENT",BUTTON_PRESSED_EVENT),_defineProperty(_ref,"BUTTON_RELEASED_EVENT",BUTTON_RELEASED_EVENT),_defineProperty(_ref,"AXIS_CHANGE_EVENT",AXIS_CHANGE_EVENT),_ref;}}]);return Input;}(EventDispatcher);var Input$1=new Input();var support={searchParams:'URLSearchParams'in self,iterable:'Symbol'in self&&'iterator'in Symbol,blob:'FileReader'in self&&'Blob'in self&&function(){try{new Blob();return true;}catch(e){return false;}}(),formData:'FormData'in self,arrayBuffer:'ArrayBuffer'in self};function isDataView(obj){return obj&&DataView.prototype.isPrototypeOf(obj);}if(support.arrayBuffer){var viewClasses=['[object Int8Array]','[object Uint8Array]','[object Uint8ClampedArray]','[object Int16Array]','[object Uint16Array]','[object Int32Array]','[object Uint32Array]','[object Float32Array]','[object Float64Array]'];var isArrayBufferView=ArrayBuffer.isView||function(obj){return obj&&viewClasses.indexOf(Object.prototype.toString.call(obj))>-1;};}function normalizeName(name){if(typeof name!=='string'){name=String(name);}if(/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)){throw new TypeError('Invalid character in header field name');}return name.toLowerCase();}function normalizeValue(value){if(typeof value!=='string'){value=String(value);}return value;}// Build a destructive iterator for the value list
function iteratorFor(items){var iterator={next:function next(){var value=items.shift();return{done:value===undefined,value:value};}};if(support.iterable){iterator[Symbol.iterator]=function(){return iterator;};}return iterator;}function Headers(headers){this.map={};if(headers instanceof Headers){headers.forEach(function(value,name){this.append(name,value);},this);}else if(Array.isArray(headers)){headers.forEach(function(header){this.append(header[0],header[1]);},this);}else if(headers){Object.getOwnPropertyNames(headers).forEach(function(name){this.append(name,headers[name]);},this);}}Headers.prototype.append=function(name,value){name=normalizeName(name);value=normalizeValue(value);var oldValue=this.map[name];this.map[name]=oldValue?oldValue+', '+value:value;};Headers.prototype['delete']=function(name){delete this.map[normalizeName(name)];};Headers.prototype.get=function(name){name=normalizeName(name);return this.has(name)?this.map[name]:null;};Headers.prototype.has=function(name){return this.map.hasOwnProperty(normalizeName(name));};Headers.prototype.set=function(name,value){this.map[normalizeName(name)]=normalizeValue(value);};Headers.prototype.forEach=function(callback,thisArg){for(var name in this.map){if(this.map.hasOwnProperty(name)){callback.call(thisArg,this.map[name],name,this);}}};Headers.prototype.keys=function(){var items=[];this.forEach(function(value,name){items.push(name);});return iteratorFor(items);};Headers.prototype.values=function(){var items=[];this.forEach(function(value){items.push(value);});return iteratorFor(items);};Headers.prototype.entries=function(){var items=[];this.forEach(function(value,name){items.push([name,value]);});return iteratorFor(items);};if(support.iterable){Headers.prototype[Symbol.iterator]=Headers.prototype.entries;}function consumed(body){if(body.bodyUsed){return Promise.reject(new TypeError('Already read'));}body.bodyUsed=true;}function fileReaderReady(reader){return new Promise(function(resolve,reject){reader.onload=function(){resolve(reader.result);};reader.onerror=function(){reject(reader.error);};});}function readBlobAsArrayBuffer(blob){var reader=new FileReader();var promise=fileReaderReady(reader);reader.readAsArrayBuffer(blob);return promise;}function readBlobAsText(blob){var reader=new FileReader();var promise=fileReaderReady(reader);reader.readAsText(blob);return promise;}function readArrayBufferAsText(buf){var view=new Uint8Array(buf);var chars=new Array(view.length);for(var i=0;i<view.length;i++){chars[i]=String.fromCharCode(view[i]);}return chars.join('');}function bufferClone(buf){if(buf.slice){return buf.slice(0);}else{var view=new Uint8Array(buf.byteLength);view.set(new Uint8Array(buf));return view.buffer;}}function Body(){this.bodyUsed=false;this._initBody=function(body){this._bodyInit=body;if(!body){this._bodyText='';}else if(typeof body==='string'){this._bodyText=body;}else if(support.blob&&Blob.prototype.isPrototypeOf(body)){this._bodyBlob=body;}else if(support.formData&&FormData.prototype.isPrototypeOf(body)){this._bodyFormData=body;}else if(support.searchParams&&URLSearchParams.prototype.isPrototypeOf(body)){this._bodyText=body.toString();}else if(support.arrayBuffer&&support.blob&&isDataView(body)){this._bodyArrayBuffer=bufferClone(body.buffer);// IE 10-11 can't handle a DataView body.
this._bodyInit=new Blob([this._bodyArrayBuffer]);}else if(support.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(body)||isArrayBufferView(body))){this._bodyArrayBuffer=bufferClone(body);}else{this._bodyText=body=Object.prototype.toString.call(body);}if(!this.headers.get('content-type')){if(typeof body==='string'){this.headers.set('content-type','text/plain;charset=UTF-8');}else if(this._bodyBlob&&this._bodyBlob.type){this.headers.set('content-type',this._bodyBlob.type);}else if(support.searchParams&&URLSearchParams.prototype.isPrototypeOf(body)){this.headers.set('content-type','application/x-www-form-urlencoded;charset=UTF-8');}}};if(support.blob){this.blob=function(){var rejected=consumed(this);if(rejected){return rejected;}if(this._bodyBlob){return Promise.resolve(this._bodyBlob);}else if(this._bodyArrayBuffer){return Promise.resolve(new Blob([this._bodyArrayBuffer]));}else if(this._bodyFormData){throw new Error('could not read FormData body as blob');}else{return Promise.resolve(new Blob([this._bodyText]));}};this.arrayBuffer=function(){if(this._bodyArrayBuffer){return consumed(this)||Promise.resolve(this._bodyArrayBuffer);}else{return this.blob().then(readBlobAsArrayBuffer);}};}this.text=function(){var rejected=consumed(this);if(rejected){return rejected;}if(this._bodyBlob){return readBlobAsText(this._bodyBlob);}else if(this._bodyArrayBuffer){return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));}else if(this._bodyFormData){throw new Error('could not read FormData body as text');}else{return Promise.resolve(this._bodyText);}};if(support.formData){this.formData=function(){return this.text().then(decode);};}this.json=function(){return this.text().then(JSON.parse);};return this;}// HTTP methods whose capitalization should be normalized
var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];function normalizeMethod(method){var upcased=method.toUpperCase();return methods.indexOf(upcased)>-1?upcased:method;}function Request(input,options){options=options||{};var body=options.body;if(input instanceof Request){if(input.bodyUsed){throw new TypeError('Already read');}this.url=input.url;this.credentials=input.credentials;if(!options.headers){this.headers=new Headers(input.headers);}this.method=input.method;this.mode=input.mode;this.signal=input.signal;if(!body&&input._bodyInit!=null){body=input._bodyInit;input.bodyUsed=true;}}else{this.url=String(input);}this.credentials=options.credentials||this.credentials||'same-origin';if(options.headers||!this.headers){this.headers=new Headers(options.headers);}this.method=normalizeMethod(options.method||this.method||'GET');this.mode=options.mode||this.mode||null;this.signal=options.signal||this.signal;this.referrer=null;if((this.method==='GET'||this.method==='HEAD')&&body){throw new TypeError('Body not allowed for GET or HEAD requests');}this._initBody(body);}Request.prototype.clone=function(){return new Request(this,{body:this._bodyInit});};function decode(body){var form=new FormData();body.trim().split('&').forEach(function(bytes){if(bytes){var split=bytes.split('=');var name=split.shift().replace(/\+/g,' ');var value=split.join('=').replace(/\+/g,' ');form.append(decodeURIComponent(name),decodeURIComponent(value));}});return form;}function parseHeaders(rawHeaders){var headers=new Headers();// Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
// https://tools.ietf.org/html/rfc7230#section-3.2
var preProcessedHeaders=rawHeaders.replace(/\r?\n[\t ]+/g,' ');preProcessedHeaders.split(/\r?\n/).forEach(function(line){var parts=line.split(':');var key=parts.shift().trim();if(key){var value=parts.join(':').trim();headers.append(key,value);}});return headers;}Body.call(Request.prototype);function Response(bodyInit,options){if(!options){options={};}this.type='default';this.status=options.status===undefined?200:options.status;this.ok=this.status>=200&&this.status<300;this.statusText='statusText'in options?options.statusText:'OK';this.headers=new Headers(options.headers);this.url=options.url||'';this._initBody(bodyInit);}Body.call(Response.prototype);Response.prototype.clone=function(){return new Response(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Headers(this.headers),url:this.url});};Response.error=function(){var response=new Response(null,{status:0,statusText:''});response.type='error';return response;};var redirectStatuses=[301,302,303,307,308];Response.redirect=function(url,status){if(redirectStatuses.indexOf(status)===-1){throw new RangeError('Invalid status code');}return new Response(null,{status:status,headers:{location:url}});};var DOMException=self.DOMException;try{new DOMException();}catch(err){DOMException=function DOMException(message,name){this.message=message;this.name=name;var error=Error(message);this.stack=error.stack;};DOMException.prototype=Object.create(Error.prototype);DOMException.prototype.constructor=DOMException;}function fetch$1(input,init){return new Promise(function(resolve,reject){var request=new Request(input,init);if(request.signal&&request.signal.aborted){return reject(new DOMException('Aborted','AbortError'));}var xhr=new XMLHttpRequest();function abortXhr(){xhr.abort();}xhr.onload=function(){var options={status:xhr.status,statusText:xhr.statusText,headers:parseHeaders(xhr.getAllResponseHeaders()||'')};options.url='responseURL'in xhr?xhr.responseURL:options.headers.get('X-Request-URL');var body='response'in xhr?xhr.response:xhr.responseText;resolve(new Response(body,options));};xhr.onerror=function(){reject(new TypeError('Network request failed'));};xhr.ontimeout=function(){reject(new TypeError('Network request failed'));};xhr.onabort=function(){reject(new DOMException('Aborted','AbortError'));};xhr.open(request.method,request.url,true);if(request.credentials==='include'){xhr.withCredentials=true;}else if(request.credentials==='omit'){xhr.withCredentials=false;}if('responseType'in xhr&&support.blob){xhr.responseType='blob';}request.headers.forEach(function(value,name){xhr.setRequestHeader(name,value);});if(request.signal){request.signal.addEventListener('abort',abortXhr);xhr.onreadystatechange=function(){// DONE (success or failure)
if(xhr.readyState===4){request.signal.removeEventListener('abort',abortXhr);}};}xhr.send(typeof request._bodyInit==='undefined'?null:request._bodyInit);});}fetch$1.polyfill=true;if(!self.fetch){self.fetch=fetch$1;self.Headers=Headers;self.Request=Request;self.Response=Response;}function _createSuper2$3(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var BaseCar=/*#__PURE__*/function(_BaseScript){_inherits(BaseCar,_BaseScript);var _super=_createSuper2$3(BaseCar);function BaseCar(){_classCallCheck(this,BaseCar);return _super.apply(this,arguments);}_createClass(BaseCar,[{key:"start",value:function start(element,options){var wheels=options.wheels,_options$acceleration=options.accelerationKey,accelerationKey=_options$acceleration===void 0?'w':_options$acceleration,_options$breakingKey=options.breakingKey,breakingKey=_options$breakingKey===void 0?'s':_options$breakingKey,_options$rightKey=options.rightKey,rightKey=_options$rightKey===void 0?'a':_options$rightKey,_options$leftKey=options.leftKey,leftKey=_options$leftKey===void 0?'d':_options$leftKey;this.car=element;this.wheels=wheels;this.state={acceleration:false,breaking:false,right:false,left:false};this.accelerationKey=accelerationKey;this.breakingKey=breakingKey;this.rightKey=rightKey;this.leftKey=leftKey;Input$1.enable();Physics.addCar(this.car,{wheels:wheels.map(function(w){return w.uuid();})});}},{key:"handleInput",value:function handleInput(){this.state.acceleration=Input$1.isPressing(this.accelerationKey);this.state.breaking=Input$1.isPressing(this.breakingKey);this.state.right=Input$1.isPressing(this.rightKey);this.state.left=Input$1.isPressing(this.leftKey);}},{key:"sendCarUpdate",value:function sendCarUpdate(){Physics.updateBody(this.car,_objectSpread2({},this.state));}},{key:"update",value:function update(dt){this.handleInput();}}]);return BaseCar;}(BaseScript);var Scripts=/*#__PURE__*/function(){function Scripts(){var _this=this;_classCallCheck(this,Scripts);_defineProperty(this,"load",function(scripts,level){_this.scripts=scripts;var keys=Object.keys(scripts);if(!keys.length){return Promise.resolve('scripts');}return Promise.all(keys.map(function(name){return _this.loadSingleScript(name,level);}));});_defineProperty(this,"loadSingleScript",function(name,level){var path=_this.scripts[name];return new Promise(function(resolve){fetch$1(path).then(function(response){return response.text();}).then(function(text){_this.createFromString(text);resolve();});});});this.map={'BaseCar':BaseCar};}_createClass(Scripts,[{key:"update",value:function update(){}},{key:"set",value:function set(id,ScriptClass){this.map[id]=ScriptClass;}},{key:"get",value:function get(id){var ScriptClass=this.map[id];if(ScriptClass){return new ScriptClass();}return false;}},{key:"parseScript",value:function parseScript(content){// does this mean we can send whatever we want down to the script?
return new Function('Script','Input','return '+content+';')(BaseScript,Input$1);}},{key:"createFromString",value:function createFromString(stringContent){var Script=this.parseScript(stringContent);var s=new Script();this.set(s.name(),s);return s;}},{key:"create",value:function create(name,ScriptClass){if(ScriptClass){var script=new ScriptClass();if(script.__check&&script.__check()){this.set(name,ScriptClass);}else{console.error('[Mage] Script:',name,'needs to be an instance of Script.');}}else{console.error('[Mage] Script not provided.');}}}]);return Scripts;}();var Scripts$1=new Scripts();var UP='UP';var DOWN='DOWN';var LEFT='LEFT';var RIGHT='RIGHT';var FRONT='FRONT';var BACK='BACK';var VECTOR_UP={type:UP,vector:new Vector3$1(0,1,0)};var VECTOR_DOWN={type:DOWN,vector:new Vector3$1(0,-1,0)};var VECTOR_LEFT={type:LEFT,vector:new Vector3$1(1,0,0)};var VECTOR_RIGHT={type:RIGHT,vector:new Vector3$1(-1,0,0)};var VECTOR_FRONT={type:FRONT,vector:new Vector3$1(0,0,1)};var VECTOR_BACK={type:BACK,vector:new Vector3$1(0,0,-1)};var ORIGIN={x:0,y:0,z:0};var MATERIALS={LAMBERT:0,PHONG:1,DEPTH:2,STANDARD:3,BASIC:4};var EFFECTS={SEPIA:'SEPIAEFFECT',HUE_SATURATION:'HUESATURATIONEFFECT',BLOOM:'BLOOM',DEPTH_OF_FIELD:'DOF',SELECTIVE_OUTLINE:'SELECTIVEOUTLINE',GLITCH:'GLITCH',PIXEL:'PIXEL'};var COLLISION_EVENT='COLLISION_EVENT';var COLORS={WHITE:'#ffffff',BLACK:'#000000'};var ASSETS_TYPES={AUDIO:'audio',VIDEO:'video',IMAGES:'images',TEXTURES:'textures',MODELS:'models',PARTICLES:'particles',SCRIPTS:'scripts',SHADERS:'shaders'};var ROOT='/';var DIVIDER='/';var HASH='#';var EMPTY='';var DEFAULT_SELECTOR='#gameContainer';var BEFORE_UNLOAD='beforeunload';var HASH_CHANGE='hashchange';var constants=/*#__PURE__*/Object.freeze({__proto__:null,UP:UP,DOWN:DOWN,LEFT:LEFT,RIGHT:RIGHT,FRONT:FRONT,BACK:BACK,VECTOR_UP:VECTOR_UP,VECTOR_DOWN:VECTOR_DOWN,VECTOR_LEFT:VECTOR_LEFT,VECTOR_RIGHT:VECTOR_RIGHT,VECTOR_FRONT:VECTOR_FRONT,VECTOR_BACK:VECTOR_BACK,ORIGIN:ORIGIN,MATERIALS:MATERIALS,EFFECTS:EFFECTS,COLLISION_EVENT:COLLISION_EVENT,COLORS:COLORS,ASSETS_TYPES:ASSETS_TYPES,ROOT:ROOT,DIVIDER:DIVIDER,HASH:HASH,EMPTY:EMPTY,DEFAULT_SELECTOR:DEFAULT_SELECTOR,BEFORE_UNLOAD:BEFORE_UNLOAD,HASH_CHANGE:HASH_CHANGE});var buildAssetId=function buildAssetId(name,level){return level?"".concat(level,"_").concat(name):name;};var isLevelName=function isLevelName(level){return level.startsWith(DIVIDER);};var TIME_FOR_UPDATE=150;var Audio$1=/*#__PURE__*/function(){function Audio(){var _this=this;_classCallCheck(this,Audio);_defineProperty(this,"setCurrentLevel",function(level){_this.currentLevel=level;});_defineProperty(this,"load",function(){var audio=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var level=arguments.length>1?arguments[1]:undefined;_this.audio=audio;_this.createAudioContext();if(Object.keys(_this.audio).length===0){return Promise.resolve('audio');}return Promise.all(Object.keys(_this.audio).map(function(id){return _this.loadSingleFile(id,level);}));});_defineProperty(this,"loadSingleFile",function(name,level){var path=_this.audio[name];var request=new XMLHttpRequest();var id=buildAssetId(name,level);return new Promise(function(resolve){request.open("GET",path,true);request.responseType="arraybuffer";request.onreadystatechange=function(e){if(request.readyState===4&&request.status===200){_this.context.decodeAudioData(request.response,function(buffer){_this.map[id]=buffer;resolve();},function(){_this.map[id]=null;resolve();});}};request.send();});});this.DELAY_FACTOR=0.02;this.DELAY_STEP=1;//millis
this.DELAY_MIN_VALUE=0.2;this.DELAY_NORMAL_VALUE=40;this.VOLUME=20;this._volume=20;this.numSound=0;this.soundLoaded=0;this.sounds=[];this.map={};this.currentLevel=ROOT;}_createClass(Audio,[{key:"createAudioContext",value:function createAudioContext(){var AudioContext=window.AudioContext||window.webkitAudioContext||null;if(AudioContext){//creating a new audio context if it's available.
this.context=new AudioContext();//creating a gain node to control volume
this.volume=this.context.createGain();this.volume.gain.value=this.getVolume();//connecting volume node to context destination
this.volume.connect(this.context.destination);}else{console.error("No Audio Context available, sorry.");}}},{key:"getVolume",value:function getVolume(){if(this._volume){return this._volume;}}},{key:"setVolume",value:function setVolume(value){this._volume=value;this.volume.gain.value=this._volume;}},{key:"get",value:function get(id){return this.map[id]||this.map[buildAssetId(id,this.currentLevel)]||false;}},{key:"add",value:function add(sound){this.sounds.push(sound);}},{key:"update",value:function update(dt){var _this2=this;return new Promise(function(resolve){var start=new Date();for(var index in _this2.sounds){var sound=_this2.sounds[index];sound.update(dt);//now handling listener
Scene$2.getCameraBody().updateMatrixWorld();var p=new Vector3$1();p.setFromMatrixPosition(Scene$2.getCameraBody().matrixWorld);//setting audio engine context listener position on camera position
_this2.context.listener.setPosition(p.x,p.y,p.z);//this is to add up and down vector to our camera
// The camera's world matrix is named "matrix".
var m=Scene$2.getCameraBody().matrix;var mx=m.elements[12],my=m.elements[13],mz=m.elements[14];m.elements[12]=m.elements[13]=m.elements[14]=0;// Multiply the orientation vector by the world matrix of the camera.
var vec=new Vector3$1(0,0,1);vec.applyMatrix4(m);vec.normalize();// Multiply the up vector by the world matrix.
var up=new Vector3$1(0,-1,0);up.applyMatrix4(m);up.normalize();// Set the orientation and the up-vector for the listener.
_this2.context.listener.setOrientation(vec.x,vec.y,vec.z,up.x,up.y,up.z);m.elements[12]=mx;m.elements[13]=my;m.elements[14]=mz;if(+new Date()-start>TIME_FOR_UPDATE)break;}resolve();});}}]);return Audio;}();var Audio$2=new Audio$1();var Beat=/*#__PURE__*/function(){function Beat(name){_classCallCheck(this,Beat);this.name=name;//this sound name should already be loaded by our engine
this.sound={};this.sound.source=Audio$2.context.createBufferSource();this.sound.volume=Audio$2.context.createGain();this.sound.volume.gain.value=Audio$2.getVolume();this.buffer=null;//setting listeners
this.setListeners();// Connect the sound source to the volume control.
this.sound.source.connect(this.sound.volume);// Hook up the sound volume control to the main volume.
this.sound.volume.connect(Audio$2.volume);}_createClass(Beat,[{key:"setListeners",value:function setListeners(){//setting listeners
this.sound.source._caller=this;//this.sound.source.onended = this.onEnd;
//this.sound.source.loopEnd = this.onLoopEnd;
//this.sound.source.loopStart = this.onLoopstart;
}},{key:"reset",value:function reset(){this.sound.source.disconnect();this.sound.source=Audio$2.context.createBufferSource();this.sound.source.connect(this.sound.volume);//setting listeners
this.setListeners();}},{key:"setVolume",value:function setVolume(value){this.sound.volume.gain.value=value;}},{key:"hasBuffer",value:function hasBuffer(){return!!this.buffer;}},{key:"setBuffer",value:function setBuffer(){var buffer=Audio$2.get(this.name);if(!buffer){console.error("Unable to load sound, sorry.");return;}this.buffer=buffer;this.sound.source.buffer=buffer;}},{key:"play",value:function play(){var _this=this;if(!this.hasBuffer()){this.setBuffer();}this.sound.volume.gain.value=0;this.sound.source.start(Audio$2.context.currentTime);var delay=function delay(){_this.sound.volume.gain.value=_this.sound.volume.gain.value+Audio$2.DELAY_FACTOR;if(_this.sound.volume.gain.value<Audio$2.getVolume()){setTimeout(delay,Audio$2.DELAY_STEP);}};delay();}},{key:"stop",value:function stop(){var _this2=this;var delay=function delay(){_this2.sound.volume.gain.value=_this2.sound.volume.gain.value-Audio$2.DELAY_FACTOR;if(_this2.sound.volume.gain.value>Audio$2.DELAY_MIN_VALUE){setTimeout(delay,Audio$2.DELAY_STEP);}else{_this2.sound.source.stop();}};delay();}},{key:"detune",value:function detune(value){if(this.sound.source){this.sound.source.detune.value=value;}}},{key:"onEnd",value:function onEnd(){if(this._caller.onEndCallback){this._caller.onEndCallback();}this._caller.reset();}},{key:"onLoopEnd",value:function onLoopEnd(){if(this._caller.onLoopEndCallback){this._caller.onLoopEndCallback();}}},{key:"onLoopStart",value:function onLoopStart(){if(this._caller.onLoopStartCallback){this._caller.onLoopStartCallback();}}}]);return Beat;}();function _createSuper2$4(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Sound=/*#__PURE__*/function(_Beat){_inherits(Sound,_Beat);var _super=_createSuper2$4(Sound);function Sound(name){var _this;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Sound);_this=_super.call(this,name);var _options$body=options.body,body=_options$body===void 0?null:_options$body,_options$loop=options.loop,loop=_options$loop===void 0?false:_options$loop,_options$effect=options.effect,effect=_options$effect===void 0?false:_options$effect,_options$autoplay=options.autoplay,autoplay=_options$autoplay===void 0?false:_options$autoplay;_this.sound.source.loop=loop;//creating panner, we need to update on object movements.
_this.sound.panner=Audio$2.context.createPanner();//disconnecting from main volume, then connecting to panner and main volume again
_this.sound.volume.disconnect();_this.sound.volume.connect(_this.sound.panner);_this.sound.panner.connect(Audio$2.volume);_this.body=body;if(effect){_this.convolver=Audio$2.context.createConvolver();_this.mixer=Audio$2.createGain();_this.sound.panner.disconnect();_this.sound.panner.connect(_this.mixer);//creating gains
_this.plainGain=Audio$2.context.createGain();_this.convolverGain=Audio$2.context.createGain();//connect mixer to new gains
_this.mixer.connect(plainGain);_this.mixer.connect(convolverGain);_this.plainGain.connect(Audio$2.volume);_this.convolverGain.connect(Audio$2.volume);_this.convolver.buffer=Audio$2.get(effect);_this.convolverGain.gain.value=0.7;_this.plainGain.gain.value=0.3;}if(autoplay){_this.play();}Audio$2.add(_assertThisInitialized(_this));return _this;}_createClass(Sound,[{key:"update",value:function update(dt){if(this.body){var p=new Vector3$1();p.setFromMatrixPosition(this.body.matrixWorld);var px=p.x,py=p.y,pz=p.z;this.body.updateMatrixWorld();var q=new Vector3$1();q.setFromMatrixPosition(this.body.matrixWorld);var dx=q.x-px,dy=q.y-py,dz=q.z-pz;//setting panner position and velocity using doppler effect.
try{this.sound.panner.setPosition(q.x,q.y,q.z);this.sound.panner.setVelocity(dx/dt,dy/dt,dz/dt);}catch(e){// quick and dirty solution.
}}}}]);return Sound;}(Beat);function _createSuper2$5(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DirectionalSound=/*#__PURE__*/function(_Beat){_inherits(DirectionalSound,_Beat);var _super=_createSuper2$5(DirectionalSound);function DirectionalSound(name,angles,options){var _this;_classCallCheck(this,DirectionalSound);_this=_super.call(this,name);//creating panner, we need to update on object movements.
_this.sound.panner=Audio$2.context.createPanner();//disconnecting from main volume, then connecting to panner and main volume again
_this.sound.volume.disconnect();_this.sound.volume.connect(_this.sound.panner);_this.sound.panner.connect(Audio$2.volume);_this.body=options.body;//storing direction
_this.sound.panner.coneInnerAngle=angles.innerAngleInDegrees;_this.sound.panner.coneOuterAngle=angles.outerAngleInDegrees;_this.sound.panner.coneOuterGain=angles.outerGainFactor;if(options.effect){_this.convolver=Audio$2.context.createConvolver();_this.mixer=Audio$2.createGain();_this.sound.panner.disconnect();_this.sound.panner.connect(_this.mixer);//creating gains
_this.plainGain=Audio$2.context.createGain();_this.convolverGain=Audio$2.context.createGain();//connect mixer to new gains
_this.mixer.connect(plainGain);_this.mixer.connect(convolverGain);_this.plainGain.connect(Audio$2.volume);_this.convolverGain.connect(Audio$2.volume);_this.convolver.buffer=Audio$2.get(options.effect);_this.convolverGain.gain.value=0.7;_this.plainGain.gain.value=0.3;}//autoplay option
var autoplay=options.autoplay||false;if(autoplay){_this.play();}//adding this sound to Audio
Audio$2.add(_assertThisInitialized(_this));return _this;}_createClass(DirectionalSound,[{key:"update",value:function update(dt){var p=new Vector3$1();p.setFromMatrixPosition(this.body.matrixWorld);var px=p.x,py=p.y,pz=p.z;this.body.updateMatrixWorld();var q=new Vector3$1();q.setFromMatrixPosition(this.body.matrixWorld);var dx=q.x-px,dy=q.y-py,dz=q.z-pz;//setting panner position and velocity using doppler effect.
this.sound.panner.setPosition(q.x,q.y,q.z);this.sound.panner.setVelocity(dx/dt,dy/dt,dz/dt);var vec=new Vector3$1(0,0,1);var m=this.body.matrixWorld;// Save the translation column and zero it.
var mx=m.elements[12],my=m.elements[13],mz=m.elements[14];m.elements[12]=m.elements[13]=m.elements[14]=0;// Multiply the 0,0,1 vector by the world matrix and normalize the result.
vec.applyProjection(m);vec.normalize();this.sound.panner.setOrientation(vec.x,vec.y,vec.z);// Restore the translation column.
m.elements[12]=mx;m.elements[13]=my;m.elements[14]=mz;}}]);return DirectionalSound;}(Beat);function _createSuper2$6(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var AmbientSound=/*#__PURE__*/function(_Beat){_inherits(AmbientSound,_Beat);var _super=_createSuper2$6(AmbientSound);function AmbientSound(name,options){var _this;_classCallCheck(this,AmbientSound);_this=_super.call(this,name);//use options to choose whether have a loop or not.
_this.sound.source.loop=options.loop||false;//creating panner, we need to update on object movements.
_this.sound.panner=Audio$2.context.createPanner();//disconnecting from main volume, then connecting to panner and main volume again
_this.sound.volume.disconnect();_this.sound.volume.connect(_this.sound.panner);_this.sound.panner.connect(Audio$2.volume);//storing body
_this.body=options.body;//if we set up an effect in our options, we need to create a convolver node
if(options.effect){_this.convolver=Audio$2.context.createConvolver();_this.mixer=Audio$2.context.createGain();_this.sound.panner.disconnect();_this.sound.panner.connect(_this.mixer);//creating gains
_this.plainGain=Audio$2.context.createGain();_this.convolverGain=Audio$2.context.createGain();//connect mixer to new gains
_this.mixer.connect(plainGain);_this.mixer.connect(convolverGain);_this.plainGain.connect(Audio$2.volume);_this.convolverGain.connect(Audio$2.volume);_this.convolver.buffer=Audio$2.get(options.effect);_this.convolverGain.gain.value=0.7;_this.plainGain.gain.value=0.3;}//autoplay option
var autoplay=options.autoplay||false;if(autoplay){_this.play();}//adding this sound to Audio
Audio$2.add(_assertThisInitialized(_this));return _this;}_createClass(AmbientSound,[{key:"update",value:function update(dt){// In the frame handler function, get the object's position.
this.body.updateMatrixWorld();var p=new Vector3$1();p.setFromMatrixPosition(this.body.matrixWorld);// And copy the position over to the sound of the object.
this.sound.panner.setPosition(p.x,p.y,p.z);}}]);return AmbientSound;}(Beat);var BLOB_TYPE='application/javascript';var createBlob=function createBlob(task){return new Blob(['(',task.toString(),')()'],{type:BLOB_TYPE});};var createWorker=function createWorker(task,message){if(Features$1.isFeatureSupported(FEATURES.WEBWORKER)){var url=URL.createObjectURL(createBlob(task));var worker=new Worker(url);// Won't be needing this anymore
URL.revokeObjectURL(url);if(message){worker.postMessage(message);}return worker;}else{console.error(WORKERS_NOT_AVAILABLE);return null;}};var createPromiseWorker=function createPromiseWorker(task,message){return new Promise(function(resolve,reject){var worker=createWorker(task,message);if(worker){worker.onmessage=function(data){resolve(data);worker.terminate();};}else{reject(WORKERS_NOT_AVAILABLE);}});};var workers=/*#__PURE__*/Object.freeze({__proto__:null,createBlob:createBlob,createWorker:createWorker,createPromiseWorker:createPromiseWorker});var worker=createWorker(function(){var LIBRARY_NAME='ammo.js';var TERMINATE_EVENT='TERMINATE_EVENT';var LOAD_EVENT='LOAD_EVENT';var READY_EVENT='READY_EVENT';var UPDATE_BODY_EVENT='UPDATE_BODY_EVENT';var INIT_EVENT='INIT_EVENT';var ADD_BOX_EVENT='ADD_BOX_EVENT';var ADD_VEHICLE_EVENT='ADD_VEHICLE_EVENT';var TYPES={BOX:'BOX',VEHICLE:'VEHICLE'};var handleLoadEvent=function handleLoadEvent(Ammo){var elements={};var DISABLE_DEACTIVATION=4;var GRAVITY=new Ammo.btVector3(0,-10,0);// const TRANSFORM_AUX = new Ammo.btTransform();
var FRONT_LEFT=0;var FRONT_RIGHT=1;var BACK_LEFT=2;var BACK_RIGHT=3;var sendBodyUpdate=function sendBodyUpdate(uuid,position,rotation){postMessage({type:UPDATE_BODY_EVENT,uuid:uuid,position:{x:position.x(),y:position.y(),z:position.z()},quaternion:{x:rotation.x(),y:rotation.y(),z:rotation.z(),w:rotation.w()}});};var sendReadyEvent=function sendReadyEvent(){return postMessage({type:READY_EVENT});};var sendTerminateEvent=function sendTerminateEvent(){return postMessage({type:TERMINATE_EVENT});};var setBody=function setBody(data){elements[data.uuid]=Object.assign({},data);};var updateBody=function updateBody(data){var bodyDescription=Object.assign({},data);delete bodyDescription.type;elements[data.uuid]=bodyDescription;};// let collisionConfiguration, dispatcher, solver, world;
var init=function init(){var collisionConfiguration=new Ammo.btDefaultCollisionConfiguration();var dispatcher=new Ammo.btCollisionDispatcher(collisionConfiguration);var broadphase=new Ammo.btDbvtBroadphase();var solver=new Ammo.btSequentialImpulseConstraintSolver();world=new Ammo.btDiscreteDynamicsWorld(dispatcher,broadphase,solver,collisionConfiguration);world.setGravity(GRAVITY);};var handleBodyUpdate=function handleBodyUpdate(_ref){var body=_ref.body,uuid=_ref.uuid;var motionState=body.getMotionState();var transform=new Ammo.btTransform();if(motionState){motionState.getWorldTransform(transform);var origin=transform.getOrigin();var rotation=transform.getRotation();sendBodyUpdate(uuid,origin,rotation);}};var DEFAULT_VEHICLE_STATE={vehicleSteering:0};var handleVehicleUpdate=function handleVehicleUpdate(_ref2){var vehicle=_ref2.vehicle,wheels=_ref2.wheels,uuid=_ref2.uuid,_ref2$state=_ref2.state,state=_ref2$state===void 0?DEFAULT_VEHICLE_STATE:_ref2$state;var speed=vehicle.getCurrentSpeedKmHour();var breakingForce=0;var engineForce=0;var steeringIncrement=.04;var steeringClamp=.5;var maxEngineForce=2000;var maxBreakingForce=100;if(state.acceleration){if(speed<-1)breakingForce=maxBreakingForce;else engineForce=maxEngineForce;}if(state.braking){if(speed>1)breakingForce=maxBreakingForce;else engineForce=-maxEngineForce/2;}if(state.left){if(state.vehicleSteering<steeringClamp)state.vehicleSteering+=steeringIncrement;}else{if(state.right){if(state.vehicleSteering>-steeringClamp)state.vehicleSteering-=steeringIncrement;}else{if(state.vehicleSteering<-steeringIncrement)state.vehicleSteering+=steeringIncrement;else{if(state.vehicleSteering>steeringIncrement)state.vehicleSteering-=steeringIncrement;else{state.vehicleSteering=0;}}}}vehicle.applyEngineForce(engineForce,BACK_LEFT);vehicle.applyEngineForce(engineForce,BACK_RIGHT);vehicle.setBrake(breakingForce/2,FRONT_LEFT);vehicle.setBrake(breakingForce/2,FRONT_RIGHT);vehicle.setBrake(breakingForce,BACK_LEFT);vehicle.setBrake(breakingForce,BACK_RIGHT);vehicle.setSteeringValue(state.vehicleSteering,FRONT_LEFT);vehicle.setSteeringValue(state.vehicleSteering,FRONT_RIGHT);var tm,p,q,i;var n=vehicle.getNumWheels();for(i=0;i<n;i++){vehicle.updateWheelTransform(i,true);tm=vehicle.getWheelTransformWS(i);p=tm.getOrigin();q=tm.getRotation();var wheelUUID=wheels[i];sendBodyUpdate(wheelUUID,p,q);}tm=vehicle.getChassisWorldTransform();p=tm.getOrigin();q=tm.getRotation();sendBodyUpdate(uuid,p,q);updateBody({uuid:uuid,state:state});};var simulate=function simulate(dt){if(world){world.stepSimulation(dt);Object.keys(elements).forEach(function(uuid){var element=elements[uuid];switch(element.type){case TYPES.BOX:handleBodyUpdate(element);break;case TYPES.VEHICLE:handleVehicleUpdate(element);break;}});}};var addBox=function addBox(data){var uuid=data.uuid,width=data.width,length=data.length,height=data.height,position=data.position,quaternion=data.quaternion,_data$mass=data.mass,mass=_data$mass===void 0?0:_data$mass,_data$friction=data.friction,friction=_data$friction===void 0?2:_data$friction;var geometry=new Ammo.btBoxShape(new Ammo.btVector3(length*0.5,height*0.5,width*0.5));var transform=new Ammo.btTransform();transform.setIdentity();transform.setOrigin(new Ammo.btVector3(position.x,position.y,position.z));transform.setRotation(new Ammo.btQuaternion(quaternion.x,quaternion.y,quaternion.z,quaternion.w));var motionState=new Ammo.btDefaultMotionState(transform);var localInertia=new Ammo.btVector3(0,0,0);geometry.calculateLocalInertia(mass,localInertia);var rbInfo=new Ammo.btRigidBodyConstructionInfo(mass,motionState,geometry,localInertia);var body=new Ammo.btRigidBody(rbInfo);body.setFriction(friction);//body.setRestitution(.9);
//body.setDamping(0.2, 0.2);
if(mass>0){body.setActivationState(DISABLE_DEACTIVATION);}world.addRigidBody(body);setBody({uuid:uuid,body:body,type:TYPES.BOX});};var addVehicle=function addVehicle(data){var position=data.position,quaternion=data.quaternion,uuid=data.uuid,wheels=data.wheels,_data$mass2=data.mass,mass=_data$mass2===void 0?800:_data$mass2,_data$width=data.width,width=_data$width===void 0?1.8:_data$width,_data$height=data.height,height=_data$height===void 0?.6:_data$height,_data$length=data.length,length=_data$length===void 0?4:_data$length,_data$suspensions=data.suspensions,suspensions=_data$suspensions===void 0?{}:_data$suspensions;var _suspensions$stiffnes=suspensions.stiffness,stiffness=_suspensions$stiffnes===void 0?20.0:_suspensions$stiffnes,_suspensions$damping=suspensions.damping,damping=_suspensions$damping===void 0?2.3:_suspensions$damping,_suspensions$compress=suspensions.compression,compression=_suspensions$compress===void 0?4.4:_suspensions$compress,_suspensions$restLeng=suspensions.restLength,restLength=_suspensions$restLeng===void 0?0.6:_suspensions$restLeng;var wheelAxisPositionBack=-1;var wheelRadiusBack=.4;var wheelHalfTrackBack=1;var wheelAxisHeightBack=.3;var wheelAxisFrontPosition=1.7;var wheelHalfTrackFront=1;var wheelAxisHeightFront=.3;var wheelRadiusFront=.35;var friction=1000;var rollInfluence=0.2;// Chassis
var geometry=new Ammo.btBoxShape(new Ammo.btVector3(width*.5,height*.5,length*.5));var transform=new Ammo.btTransform();transform.setIdentity();transform.setOrigin(new Ammo.btVector3(position.x,position.y,position.z));transform.setRotation(new Ammo.btQuaternion(quaternion.x,quaternion.y,quaternion.z,quaternion.w));var motionState=new Ammo.btDefaultMotionState(transform);var localInertia=new Ammo.btVector3(0,0,0);geometry.calculateLocalInertia(mass,localInertia);var chassis=new Ammo.btRigidBody(new Ammo.btRigidBodyConstructionInfo(mass,motionState,geometry,localInertia));chassis.setActivationState(DISABLE_DEACTIVATION);world.addRigidBody(chassis);// Raycast Vehicle
var tuning=new Ammo.btVehicleTuning();var rayCaster=new Ammo.btDefaultVehicleRaycaster(world);var vehicle=new Ammo.btRaycastVehicle(tuning,chassis,rayCaster);vehicle.setCoordinateSystem(0,1,2);world.addAction(vehicle);var wheelDirectionCS0=new Ammo.btVector3(0,-1,0);var wheelAxleCS=new Ammo.btVector3(-1,0,0);var addWheel=function addWheel(isFront,pos,radius){var wheelInfo=vehicle.addWheel(pos,wheelDirectionCS0,wheelAxleCS,restLength,radius,tuning,isFront);wheelInfo.set_m_suspensionStiffness(stiffness);wheelInfo.set_m_wheelsDampingRelaxation(damping);wheelInfo.set_m_wheelsDampingCompression(compression);wheelInfo.set_m_frictionSlip(friction);wheelInfo.set_m_rollInfluence(rollInfluence);};addWheel(true,new Ammo.btVector3(wheelHalfTrackFront,wheelAxisHeightFront,wheelAxisFrontPosition),wheelRadiusFront);addWheel(true,new Ammo.btVector3(-wheelHalfTrackFront,wheelAxisHeightFront,wheelAxisFrontPosition),wheelRadiusFront);addWheel(false,new Ammo.btVector3(-wheelHalfTrackBack,wheelAxisHeightBack,wheelAxisPositionBack),wheelRadiusBack);addWheel(false,new Ammo.btVector3(wheelHalfTrackBack,wheelAxisHeightBack,wheelAxisPositionBack),wheelRadiusBack);setBody({type:TYPES.VEHICLE,uuid:uuid,vehicle:vehicle,wheels:wheels,state:DEFAULT_VEHICLE_STATE});};var handleTerminateEvent=function handleTerminateEvent(){Ammo.destroy(world);// Ammo.destroy(solver);
// Ammo.destroy(dispatcher);
// Ammo.destroy(collisionConfiguration);
sendTerminateEvent();};onmessage=function onmessage(_ref3){var data=_ref3.data;switch(data.type){case INIT_EVENT:init();break;case ADD_BOX_EVENT:addBox(data);break;case ADD_VEHICLE_EVENT:addVehicle(data);break;case UPDATE_BODY_EVENT:updateBody(data);break;case TERMINATE_EVENT:handleTerminateEvent();}};var last=Date.now();var mainLoop=function mainLoop(){var now=Date.now();simulate(now-last);last=now;};setInterval(mainLoop,1000/60);init();sendReadyEvent();};var loadAmmo=function loadAmmo(_ref4){var _ref4$path=_ref4.path,path=_ref4$path===void 0?LIBRARY_NAME:_ref4$path;importScripts(path);Ammo().then(handleLoadEvent);};onmessage=function onmessage(_ref5){var data=_ref5.data;switch(data.type){case LOAD_EVENT:loadAmmo(data);break;}};});var LOAD_EVENT='LOAD_EVENT';var TERMINATE_EVENT='TERMINATE_EVENT';var READY_EVENT='READY_EVENT';var UPDATE_BODY_EVENT='UPDATE_BODY_EVENT';var ADD_BOX_EVENT='ADD_BOX_EVENT';var ADD_VEHICLE_EVENT='ADD_VEHICLE_EVENT';var DEFAULT_BOX_DESCRIPTION={mass:1,friction:1,width:2,length:2,height:2,quaternion:{x:0,y:0,z:0,w:1},position:{x:0,y:0,z:0}};var parseBoundingBoxSize=function parseBoundingBoxSize(){var boundingBox=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{var _boundingBox$getSize=boundingBox.getSize(),sizeX=_boundingBox$getSize.x,sizeY=_boundingBox$getSize.y,sizeZ=_boundingBox$getSize.z;return{x:sizeX,y:sizeY,z:sizeZ};}catch(e){console.log(BOUNDINGBOX_NOT_AVAILABLE);return{x:1,y:1,z:1};}};var getDescriptionForElement=function getDescriptionForElement(element){var _element$getPosition=element.getPosition(),x=_element$getPosition.x,y=_element$getPosition.y,z=_element$getPosition.z;var quaternion=element.getQuaternion();var boundingBox=element.boundingBox;var size=parseBoundingBoxSize(boundingBox);return _objectSpread2({},DEFAULT_BOX_DESCRIPTION,{width:size.z,height:size.y,length:size.x,size:size,position:{x:x,y:y,z:z},quaternion:{x:quaternion.x,y:quaternion.y,z:quaternion.z,w:quaternion.w}});};function _createSuper2$7(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var TYPES={BOX:'BOX',VEHICLE:'VEHICLE'};var mapTypeToAddEvent=function mapTypeToAddEvent(type){var _TYPES$BOX$TYPES$VEHI;return(_TYPES$BOX$TYPES$VEHI={},_defineProperty(_TYPES$BOX$TYPES$VEHI,TYPES.BOX,ADD_BOX_EVENT),_defineProperty(_TYPES$BOX$TYPES$VEHI,TYPES.VEHICLE,ADD_VEHICLE_EVENT),_TYPES$BOX$TYPES$VEHI)[type]||ADD_BOX_EVENT;};var WORKER_READY_TIMEOUT=200;var Physics$1=/*#__PURE__*/function(_EventDispatcher){_inherits(Physics,_EventDispatcher);var _super=_createSuper2$7(Physics);function Physics(){var _this;_classCallCheck(this,Physics);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"handleWorkerMessages",function(_ref){var data=_ref.data;switch(data.type){case READY_EVENT:_this.workerReady=true;break;case UPDATE_BODY_EVENT:_this.handleBodyUpdate(data);break;case TERMINATE_EVENT:_this.handleTerminateEvent();break;}});_defineProperty(_assertThisInitialized(_this),"handleTerminateEvent",function(){_this.worker.terminate();});_defineProperty(_assertThisInitialized(_this),"handleBodyUpdate",function(_ref2){var quaternion=_ref2.quaternion,position=_ref2.position,uuid=_ref2.uuid;var element=Universe$1.getByUUID(uuid);element.handlePhysicsUpdate(position,quaternion);});_this.worker=worker;_this.elements=[];_this.workerReady=false;_this.worker.onmessage=_this.handleWorkerMessages;return _this;}_createClass(Physics,[{key:"dispose",value:function dispose(){if(Config$2.physics().enabled){this.worker.postMessage({type:TERMINATE_EVENT});}}},{key:"init",value:function init(){var _this2=this;if(Config$2.physics().enabled){this.worker.postMessage({type:LOAD_EVENT,path:Config$2.physics().path});return new Promise(function(resolve){var isWorkerReady=function isWorkerReady(){return _this2.workerReady;};var check=function check(){setTimeout(function(){if(isWorkerReady()){resolve();}else{check();}},WORKER_READY_TIMEOUT);};check();});}return Promise.resolve();}},{key:"add",value:function add(element,description){if(Config$2.physics().enabled){var uuid=element.uuid();this.worker.postMessage(_objectSpread2({type:mapTypeToAddEvent(description.type)},description,{uuid:uuid}));}}},{key:"addCar",value:function addCar(element,wheels){if(Config$2.physics().enabled){var uuid=element.uuid();var description=getDescriptionForElement(element);this.worker.postMessage(_objectSpread2({type:ADD_VEHICLE_EVENT,uuid:uuid,wheels:wheels},description));}}},{key:"updateBody",value:function updateBody(element,data){if(Config$2.physics().enabled){var uuid=element.uuid();this.worker.postMessage(_objectSpread2({type:UPDATE_BODY_EVENT,uuid:uuid},data));}}// applyForce(uuid, force) {
//     if (Config.physics().enabled) {
//         this.worker.postMessage({
//             type: APPLY_FORCE_EVENT,
//             uuid,
//             force
//         });
//     }
// }
// updatePosition(uuid, position) {
//     if (Config.physics().enabled) {
//         this.worker.postMessage({
//             type: POSITION_CHANGE_EVENT,
//             uuid,
//             position
//         });
//     }
// }
// updateRotation(uuid, rotation) {
//     if (Config.physics().enabled) {
//         this.worker.postMessage({
//             type: ROTATION_CHANGE_EVENT,
//             uuid,
//             rotation
//         });
//     }
// }
// updateAngularVelocity(uuid, velocity) {
//     if (Config.physics().enabled) {
//         this.worker.postMessage({
//             type: ANGULAR_VELOCITY_CHANGE_EVENT,
//             uuid,
//             velocity
//         });
//     }
// }
// updateLinearVelocity(uuid, velocity) {
//     if (Config.physics().enabled) {
//         this.worker.postMessage({
//             type: LINEAR_VELOCITY_CHANGE_EVENT,
//             uuid,
//             velocity
//         });
//     }
// }
// update(dt) {
//     if (Config.physics().enabled) {
//         this.worker.postMessage({
//             type: UPDATE_EVENT
//         });
//     }
// }
}]);return Physics;}(EventDispatcher);var Physics$2=new Physics$1();function _createSuper2$8(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var STATE_CHANGE_EVENT={type:'stateChange'};var DEFAULT_POSITION={x:0,y:0,z:0};var DEFAULT_ANGULAR_VELOCITY={x:0,y:0,z:0};var DEFAULT_LINEAR_VELOCITY={x:0,y:0,z:0};var ENTITY_TYPES={MESH:0,LIGHT:1,MODEL:2,SPRITE:3};var DEFAULT_TAG='all';var Entity=/*#__PURE__*/function(_EventDispatcher){_inherits(Entity,_EventDispatcher);var _super=_createSuper2$8(Entity);function Entity(_ref){var _this;var _ref$serializable=_ref.serializable,serializable=_ref$serializable===void 0?true:_ref$serializable,_ref$tag=_ref.tag,tag=_ref$tag===void 0?'':_ref$tag,_ref$tags=_ref.tags,tags=_ref$tags===void 0?[]:_ref$tags;_classCallCheck(this,Entity);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"addTag",function(tagName){if(!tagName)return;if(!_this.hasTag(tagName)){_this.tags.push(tagName);return true;}else{console.log(TAG_ALREADY_EXISTS,tagName);return false;}});_defineProperty(_assertThisInitialized(_this),"hasStateMachine",function(){return!!_this.stateMachine;});_defineProperty(_assertThisInitialized(_this),"hasScripts",function(){return _this.scripts.length>0;});_defineProperty(_assertThisInitialized(_this),"parseScripts",function(list,options,enabled){return list.map(function(name,i){return{script:Script.get(name),name:name,enabled:enabled,options:options[i]};});});_defineProperty(_assertThisInitialized(_this),"setQuaternion",function(_ref2){var x=_ref2.x,y=_ref2.y,z=_ref2.z,w=_ref2.w;_this.body.quaternion.set(x,y,z,w);});_defineProperty(_assertThisInitialized(_this),"setUuid",function(uuid){if(uuid){_this.body.uuid=uuid;}});_this.scripts=[];_this.tags=[];_this.addTags([DEFAULT_TAG,tag].concat(_toConsumableArray(tags)));_this.serializable=serializable;return _this;}_createClass(Entity,[{key:"reset",value:function reset(){this.scripts=[];this.tags=[DEFAULT_TAG];}},{key:"hasBody",value:function hasBody(){return!!this.body;}},{key:"getBody",value:function getBody(){return this.body;}},{key:"addTags",value:function addTags(){var tags=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];tags.forEach(this.addTag);}},{key:"removeTag",value:function removeTag(tagName){if(tagName===DEFAULT_TAG){console.log(TAG_CANT_BE_REMOVED);return;}if(this.hasTag(tagName)){this.tags.splice(this.tags.indexOf(tagName),1);}else{console.log(TAG_NOT_EXISTING_REMOVAL);}}},{key:"removeAllTags",value:function removeAllTags(){this.tags=[DEFAULT_TAG];}},{key:"hasTag",value:function hasTag(tagName){return this.tags.includes(tagName);}},{key:"stopScripts",value:function stopScripts(){if(this.hasScripts()){this.scripts.forEach(function(_ref3){var script=_ref3.script,enabled=_ref3.enabled;if(enabled){script.onDispose();script.__hasStarted(false);}});}}},{key:"start",value:function start(){var _this2=this;if(this.hasScripts()){this.scripts.forEach(function(_ref4){var script=_ref4.script,enabled=_ref4.enabled,options=_ref4.options;if(enabled){script.start(_this2,options);script.__hasStarted(true);}});}}},{key:"update",value:function update(dt){var _this3=this;return new Promise(function(resolve){if(_this3.hasScripts()){_this3.scripts.forEach(function(_ref5){var script=_ref5.script,enabled=_ref5.enabled;if(script&&enabled){script.update(dt);}});}resolve();});}},{key:"dispose",value:function dispose(){if(this.hasBody()){this.stopStateMachine();this.stopScripts();this.reset();}}},{key:"addStateMachine",value:function addStateMachine(description){var _this4=this;this.stateMachine=interpret(createMachine(description)).onTransition(function(state){_this4.dispatchEvent({STATE_CHANGE_EVENT:STATE_CHANGE_EVENT,state:state});});if(description.autostart){this.startStateMachine();}}},{key:"startStateMachine",value:function startStateMachine(){if(this.hasStateMachine()){this.stateMachine.start();}else{console.log(STATE_MACHINE_NOT_AVAILABLE);}}},{key:"stopStateMachine",value:function stopStateMachine(){if(this.hasStateMachine()){this.stateMachine.stop();}else{console.log(STATE_MACHINE_NOT_AVAILABLE);}}},{key:"changeState",value:function changeState(event){if(this.hasStateMachine()){this.stateMachine.send(event);}else{console.log(STATE_MACHINE_NOT_AVAILABLE);}}},{key:"getScript",value:function getScript(name){var script=this.scripts.filter(function(_ref6){var name=_ref6.name;return name===name;})[0];if(script){return script;}else{console.warn(SCRIPT_NOT_FOUND);}}},{key:"addScripts",value:function addScripts(){var _this5=this;var scripts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var enabled=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var parsedScripts=this.parseScripts(scripts,options,enabled);this.scripts=[].concat(_toConsumableArray(this.scripts),[parsedScripts]);if(enabled){parsedScripts.forEach(function(parsed){return parsed.start(_this5,parsed.options);});}}},{key:"addScript",value:function addScript(name){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var script=Scripts$1.get(name);var _options$enabled=options.enabled,enabled=_options$enabled===void 0?true:_options$enabled;if(script){this.scripts.push({script:script,name:name,enabled:enabled,options:options});if(enabled){script.start(this,options);}}return script;}},{key:"enableScripts",value:function enableScripts(){this.scriptsEnabled=true;}},{key:"disableScripts",value:function disableScripts(){this.scriptsEnabled=false;}},{key:"setEntityType",value:function setEntityType(type){switch(type){case ENTITY_TYPES.MESH:this._isMesh=true;break;case ENTITY_TYPES.LIGHT:this._isLight=true;break;case ENTITY_TYPES.MODEL:this._isModel=true;break;case ENTITY_TYPES.SPRITE:this._isSprite=true;}this.entityType=type;}},{key:"getEntityType",value:function getEntityType(){return this.entityType;}},{key:"isMesh",value:function isMesh(){return this._isMesh;}},{key:"isLight",value:function isLight(){return this._isLight;}},{key:"isModel",value:function isModel(){return this._isModel;}},{key:"addSound",value:function addSound(name,options){var _options$autoplay=options.autoplay,autoplay=_options$autoplay===void 0?false:_options$autoplay,opts=_objectWithoutProperties(options,["autoplay"]);this.isPlayingSound=autoplay;this.sound=new Sound(name,_objectSpread2({body:this.body,autoplay:autoplay},opts));return this.sound;}},{key:"addDirectionalSound",value:function addDirectionalSound(name,options){var _options$autoplay2=options.autoplay,autoplay=_options$autoplay2===void 0?false:_options$autoplay2,opts=_objectWithoutProperties(options,["autoplay"]);this.isPlayingSound=autoplay;this.sound=new DirectionalSound(name,_objectSpread2({body:this.body,autoplay:autoplay},opts));return this.sound;}},{key:"addAmbientSound",value:function addAmbientSound(name,options){var _options$autoplay3=options.autoplay,autoplay=_options$autoplay3===void 0?false:_options$autoplay3,opts=_objectWithoutProperties(options,["autoplay"]);this.isPlayingSound=autoplay;this.sound=new AmbientSound(name,_objectSpread2({body:this.body,autoplay:autoplay},opts));return this.sound;}},{key:"addLight",value:function addLight(light){var _this$getPosition=this.getPosition(),x=_this$getPosition.x,y=_this$getPosition.y,z=_this$getPosition.z;light.setPosition({x:x,y:y,z:z});this.light=light;}},{key:"playSound",value:function playSound(){if(this.sound&&!this.isPlayingSound){this.sound.play();this.isPlayingSound=true;}}},{key:"stopSound",value:function stopSound(){if(this.sound&&this.isPlayingSound){this.sound.stop();this.isPlayingSound=false;}}},{key:"getScale",value:function getScale(){return{x:this.body.scale.x,y:this.body.scale.y,z:this.body.scale.z};}},{key:"setScale",value:function setScale(howbig){if(this.hasBody()){var scale=_objectSpread2({},this.getScale(),{},howbig);this.body.scale.set(scale.x,scale.y,scale.z);}}},{key:"getWorldPosition",value:function getWorldPosition(){var vector=new Vector3$1();if(this.hasBody()){var _this$body$getWorldPo=this.body.getWorldPosition(vector),x=_this$body$getWorldPo.x,y=_this$body$getWorldPo.y,z=_this$body$getWorldPo.z;return{x:x,y:y,z:z};}return DEFAULT_POSITION;}},{key:"getQuaternion",value:function getQuaternion(){if(this.hasBody()){return this.getBody().quaternion;}}},{key:"getPosition",value:function getPosition(){return{x:this.body.position.x,y:this.body.position.y,z:this.body.position.z};}},{key:"setPosition",value:function setPosition(where){if(this.hasBody()){var position=_objectSpread2({},this.getPosition(),{},where);this.body.position.set(position.x,position.y,position.z);}}},{key:"getRotation",value:function getRotation(){return{x:this.body.rotation.x,y:this.body.rotation.y,z:this.body.rotation.z};}},{key:"setRotation",value:function setRotation(how){if(this.hasBody()){var rotation=_objectSpread2({},this.getRotation(),{},how);this.body.rotation.set(rotation.x,rotation.y,rotation.z);}}},{key:"getAngularVelocity",value:function getAngularVelocity(){return this.angularVelocity||DEFAULT_ANGULAR_VELOCITY;}},{key:"setAngularVelocity",value:function setAngularVelocity(velocity){this.angularVelocity=velocity;Physics$2.updateAngularVelocity(this.uuid(),velocity);}},{key:"getLinearVelocity",value:function getLinearVelocity(){return this.linearVelocity||DEFAULT_LINEAR_VELOCITY;}},{key:"setLinearVelocity",value:function setLinearVelocity(velocity){this.linearVelocity=velocity;Physics$2.updateLinearVelocity(this.uuid(),velocity);}},{key:"translate",value:function translate(_ref7){var _ref7$x=_ref7.x,x=_ref7$x===void 0?0:_ref7$x,_ref7$y=_ref7.y,y=_ref7$y===void 0?0:_ref7$y,_ref7$z=_ref7.z,z=_ref7$z===void 0?0:_ref7$z;if(this.hasBody()){this.body.translateX(x);this.body.translateY(y);this.body.translateZ(z);}}},{key:"rotateTo",value:function rotateTo(){var _this6=this;var rotation=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.getRotation();var time=arguments.length>1&&arguments[1]!==undefined?arguments[1]:250;var _this$getRotation=this.getRotation(),x=_this$getRotation.x,y=_this$getRotation.y,z=_this$getRotation.z;return new Promise(function(resolve){return new between({x:x,y:y,z:z},rotation).time(time).on('update',function(value){return _this6.setRotation(value);}).on('complete',resolve);});}},{key:"goTo",value:function goTo(){var _this7=this;var position=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.getPosition();var time=arguments.length>1&&arguments[1]!==undefined?arguments[1]:250;var _this$getPosition2=this.getPosition(),x=_this$getPosition2.x,y=_this$getPosition2.y,z=_this$getPosition2.z;return new Promise(function(resolve){return new between({x:x,y:y,z:z},position).time(time).on('update',function(value){return _this7.setPosition(value);}).on('complete',resolve);});}},{key:"uuid",value:function uuid(){return this.body.uuid;}},{key:"equals",value:function equals(entity){try{return entity.uuid?this.uuid()===entity.uuid():false;}catch(e){return false;}}},{key:"setName",value:function setName(name){this.name=name;}},{key:"getName",value:function getName(){return this.name;}},{key:"mapScriptsToJSON",value:function mapScriptsToJSON(){this.scripts.reduce(function(acc,_ref8){var name=_ref8.name,_ref8$options=_ref8.options,options=_ref8$options===void 0?{}:_ref8$options;acc.names.push(name);acc.options.push(options);return acc;},{names:[],options:[]});}}]);return Entity;}(EventDispatcher);var Images=/*#__PURE__*/function(){function Images(){var _this=this;_classCallCheck(this,Images);_defineProperty(this,"setCurrentLevel",function(level){_this.currentLevel=level;});_defineProperty(this,"load",function(){var images=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var textures=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var level=arguments.length>2?arguments[2]:undefined;// extending assets images with our defaults
_this.images=images;_this.textures=textures;if(!(Object.keys(_this.textures).length+Object.keys(_this.images).length)){return Promise.resolve('images');}var promises=Object.keys(_this.textures).map(function(name){return _this.loadSingleTexture(name,level);}).concat(Object.keys(_this.images).map(function(name){return _this.loadSingleImage(name,level);}));return Promise.all(promises);});_defineProperty(this,"loadSingleImage",function(name,level){var id=buildAssetId(name,level);var path=_this.images[name];return new Promise(function(resolve,reject){try{_this.imageLoader.load(path,function(image){_this.add(id,image);resolve(image);},function(){},// displaying progress
function(){resolve();});}catch(e){console.log('[MAGE] error loading image '+id+' at path '+path);reject();}});});_defineProperty(this,"loadSingleTexture",function(name,level){var id=buildAssetId(name,level);var path=_this.textures[name];return new Promise(function(resolve,reject){try{_this.loader.load(path,function(texture){_this.add(id,texture);resolve(texture);},function(){},// displaying progress
function(){console.log('[Mage] error loading texture '+id+' at path '+path);resolve();});}catch(e){console.log('[MAGE] error loading texture '+id+' at path '+path);reject();}});});this.defaults={};this.imagesDefault={};this.map={};this.numImages=0;this.loader=new TextureLoader();this.imageLoader=new ImageLoader();this.images={};this.textures={};this.currentLevel=ROOT;}_createClass(Images,[{key:"get",value:function get(id){return this.map[id]||this.map[buildAssetId(id,this.currentLevel)]||false;}},{key:"add",value:function add(id,image){if(id&&image){this.map[id]=image;}}}]);return Images;}();var Images$1=new Images();var AnimationHandler=/*#__PURE__*/function(){function AnimationHandler(mesh){var animations=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];_classCallCheck(this,AnimationHandler);this.mixer=new AnimationMixer(mesh);this.animations=animations;}_createClass(AnimationHandler,[{key:"getAction",value:function getAction(id){var action;if(typeof id==='number'){action=this.animations[id];}else if(typeof id==='string'){action=AnimationClip.findByName(this.animations,id);}return action;}},{key:"getAvailableAnimations",value:function getAvailableAnimations(){return this.animations.map(function(_ref){var name=_ref.name;return name;});}},{key:"playAnimation",value:function playAnimation(id,options){var action=this.getAction(id);if(this.currentAction){this.fadeToAnimation(action,options);}else if(action){this.currentAction=this.mixer.clipAction(action).play();}else{console.warn(ANIMATION_NOT_FOUND);}}},{key:"fadeToAnimation",value:function fadeToAnimation(action,_ref2){var _ref2$duration=_ref2.duration,duration=_ref2$duration===void 0?0.2:_ref2$duration;var previousAction=this.currentAction;this.currentAction=this.mixer.clipAction(action);if(previousAction!==this.currentAction){previousAction.fadeOut(duration);}this.currentAction.reset().setEffectiveTimeScale(1).setEffectiveWeight(1).fadeIn(duration).play();}},{key:"update",value:function update(dt){this.mixer.update(dt);}}]);return AnimationHandler;}();var PI=Math.PI;var PI_2=PI/2;var degToRad=function degToRad(angle){return angle*(PI/180);};var getProportion=function getProportion(max1,b,max2){return max1*b/max2;};var keepWithinBoundaries=function keepWithinBoundaries(min,max,value){return value<min?min:value>max?max:value;};var getDistance=function getDistance(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref$x=_ref.x,xA=_ref$x===void 0?0:_ref$x,_ref$y=_ref.y,yA=_ref$y===void 0?0:_ref$y,_ref$z=_ref.z,zA=_ref$z===void 0?0:_ref$z;var _ref2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref2$x=_ref2.x,xB=_ref2$x===void 0?0:_ref2$x,_ref2$y=_ref2.y,yB=_ref2$y===void 0?0:_ref2$y,_ref2$z=_ref2.z,zB=_ref2$z===void 0?0:_ref2$z;return Math.sqrt(Math.pow(xA-xB,2)+Math.pow(yA-yB,2)+Math.pow(zA-zB,2));};var findPointBetweenAtDistance=function findPointBetweenAtDistance(){var _ref3=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref3$x=_ref3.x,xC=_ref3$x===void 0?0:_ref3$x,_ref3$y=_ref3.y,yC=_ref3$y===void 0?0:_ref3$y,_ref3$z=_ref3.z,zC=_ref3$z===void 0?0:_ref3$z;var _ref4=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref4$x=_ref4.x,xE=_ref4$x===void 0?0:_ref4$x,_ref4$y=_ref4.y,yE=_ref4$y===void 0?0:_ref4$y,_ref4$z=_ref4.z,zE=_ref4$z===void 0?0:_ref4$z;var distance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var vCenter=new Vector3$1(xC,yC,zC);var vEnd=new Vector3$1(xE,yE,zE);var point=vCenter.add(vEnd.sub(vCenter).normalize().multiplyScalar(distance));return{x:point.x,y:point.y,z:point.z};};var math=/*#__PURE__*/Object.freeze({__proto__:null,PI:PI,PI_2:PI_2,degToRad:degToRad,getProportion:getProportion,keepWithinBoundaries:keepWithinBoundaries,getDistance:getDistance,findPointBetweenAtDistance:findPointBetweenAtDistance});var setUpLightsAndShadows=function setUpLightsAndShadows(mesh){mesh.castShadow=Config$2.lights().shadows;mesh.receiveShadow=Config$2.lights().shadows;};var hasMaterial=function hasMaterial(mesh){return Boolean(mesh.material);};var hasGeometry=function hasGeometry(mesh){return Boolean(mesh.geometry);};var changeMaterialByName=function changeMaterialByName(name,mesh,materialOptions){if(!hasMaterial(mesh))return;switch(name){case MATERIALS.LAMBERT:return cloneMaterial(MeshLambertMaterial,mesh,materialOptions);case MATERIALS.PHONG:return cloneMaterial(MeshPhongMaterial,mesh,materialOptions);case MATERIALS.DEPTH:return cloneMaterial(MeshDepthMaterial,mesh,materialOptions);case MATERIALS.STANDARD:return cloneMaterial(MeshStandardMaterial,mesh,materialOptions);case MATERIALS.BASIC:default:return cloneMaterial(MeshBasicMaterial,mesh,materialOptions);}};var cloneMaterial=function cloneMaterial(MeshMaterial,mesh){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var clone=mesh.material.clone();mesh.material=new MeshMaterial(_objectSpread2({map:clone.map,color:clone.color},options));};var disposeTextures=function disposeTextures(mesh){mesh.material.map.dispose();};var disposeMaterial=function disposeMaterial(mesh){mesh.material.dispose();};var disposeGeometry=function disposeGeometry(mesh){mesh.geometry.dispose();};var prepareModel=function prepareModel(model){setUpLightsAndShadows(model);model.traverse(function(mesh){setUpLightsAndShadows(mesh);});return model;};function _createSuper2$9(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var HIT_BOX_COLOR=0xf368e0;var HIT_BOX_INCREASE=.2;var COLLIDER_TAG='collider';var COLLIDER_COLOR=0xff0000;var DEFAULT_COLLIDER_OFFSET={x:0,y:0,z:0};var Element=/*#__PURE__*/function(_Entity){_inherits(Element,_Entity);var _super=_createSuper2$9(Element);function Element(geometry,material){var _this;var _options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,Element);_this=_super.call(this,_options);_defineProperty(_assertThisInitialized(_this),"getBodyByName",function(name){if(name){if(_this.hasBody()){return _this.body.getObjectByName(name);}else{console.warn(ELEMENT_NOT_SET);}}else{console.warn(ELEMENT_NAME_NOT_PROVIDED);}});_defineProperty(_assertThisInitialized(_this),"hasRayColliders",function(){return _this.colliders.length>0;});_defineProperty(_assertThisInitialized(_this),"areCollisionsEnabled",function(){return _this.collisionsEnabled;});_defineProperty(_assertThisInitialized(_this),"enableCollisions",function(){return _this.collisionsEnabled=true;});_defineProperty(_assertThisInitialized(_this),"disableCollisions",function(){return _this.collisionsEnabled=false;});_defineProperty(_assertThisInitialized(_this),"updateRayColliders",function(){_this.colliders.forEach(function(_ref){var ray=_ref.ray,helper=_ref.helper,_ref$offset=_ref.offset,offset=_ref$offset===void 0?DEFAULT_COLLIDER_OFFSET:_ref$offset;var position=_this.body.position.clone().add(new Vector3$1(offset.x,offset.y,offset.z));if(helper){helper.updatePoints(_this.getPointsFromRayCollider(ray,position));}ray.ray.origin.copy(position);});});_defineProperty(_assertThisInitialized(_this),"getPointsFromRayCollider",function(ray,position){var origin=position.clone();var end=origin.clone().add(ray.ray.direction.clone().multiplyScalar(ray.far));//ray.ray.direction.clone().multiplyScalar(ray.far);
return[origin,end];});_defineProperty(_assertThisInitialized(_this),"createRayColliderFromVector",function(_ref2,near,far,offset,debug){var type=_ref2.type,vector=_ref2.vector;var parsedOffset=_objectSpread2({},DEFAULT_COLLIDER_OFFSET,{},offset);var position=_this.body.position.clone().add(new Vector3$1(parsedOffset.x,parsedOffset.y,parsedOffset.z));var ray=new Raycaster(position,vector,near,far);var helper;if(debug){var points=_this.getPointsFromRayCollider(ray,position);helper=new Line$1(points);helper.addTag(COLLIDER_TAG);helper.setColor(COLLIDER_COLOR);helper.setThickness(4);}if(_this.getEntityType()===ENTITY_TYPES.SPRITE){ray.setFromCamera(position,Scene$2.getCameraBody());}return{type:type,ray:ray,helper:helper,offset:parsedOffset};});_defineProperty(_assertThisInitialized(_this),"setColliders",function(){var vectors=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var colliders=vectors.map(function(vector,i){var _options$i=options[i],_options$i$near=_options$i.near,near=_options$i$near===void 0?0:_options$i$near,_options$i$far=_options$i.far,far=_options$i$far===void 0?10:_options$i$far,_options$i$debug=_options$i.debug,debug=_options$i$debug===void 0?false:_options$i$debug,_options$i$offset=_options$i.offset,offset=_options$i$offset===void 0?DEFAULT_COLLIDER_OFFSET:_options$i$offset;return _this.createRayColliderFromVector(vector,near,far,offset,debug);});_this.colliders=[].concat(_toConsumableArray(_this.colliders),_toConsumableArray(colliders));});_defineProperty(_assertThisInitialized(_this),"checkRayCollider",function(_ref3){var ray=_ref3.ray,type=_ref3.type;var mapCollision=function mapCollision(collision){var distance=collision.distance,object=collision.object;var uuid=object.uuid;return{distance:distance,body:Universe$1.getByUUID(uuid)};};var collisions=ray.intersectObjects(Scene$2.scene.children).filter(function(collision){return collision.object.uuid!==_this.uuid();}).map(mapCollision).filter(function(_ref4){var body=_ref4.body;return!body.hasTag(COLLIDER_TAG);});return{collisions:collisions,type:type};});_defineProperty(_assertThisInitialized(_this),"checkCollisions",function(){var collisions=[];_this.colliders.forEach(function(collider){var collision=_this.checkRayCollider(collider);if(collision){collisions.push(collision);}});if(collisions.length){_this.dispatchEvent({type:COLLISION_EVENT,collisions:collisions});}return collisions;});_defineProperty(_assertThisInitialized(_this),"handlePhysicsUpdate",function(position,quaternion){_this.setPosition(position);_this.setQuaternion(quaternion);});_defineProperty(_assertThisInitialized(_this),"equals",function(object){return _this.name===object.name&&_this.body.uuid===object.body.uuid;});var _options$name=_options.name,_name=_options$name===void 0?"default_".concat(Math.random()):_options$name;_this.texture=undefined;_this.options=_objectSpread2({name:_name},_options);_this.setBody({geometry:geometry,material:material});_this.colliders=[];_this.collisionsEnabled=true;_this.children=[];_this.animationHandler=undefined;_this.setEntityType(ENTITY_TYPES.MESH);return _this;}_createClass(Element,[{key:"addTag",value:function addTag(tag){_get(_getPrototypeOf(Element.prototype),"addTag",this).call(this,tag);var existingTags=this.getBody().userData.tags||[];this.getBody().userData.tags=[].concat(_toConsumableArray(existingTags),[tag]);}},{key:"setBody",value:function setBody(_ref5){var body=_ref5.body,geometry=_ref5.geometry,material=_ref5.material;if(body){this.body=body;}else if(geometry&&material){this.geometry=geometry;this.material=material;this.body=new Mesh(this.geometry,this.material);}if(this.hasBody()){this.postBodyCreation();this.addToScene();}}},{key:"evaluateBoundingBox",value:function evaluateBoundingBox(){if(hasGeometry(this.getBody())){this.body.geometry.computeBoundingBox();this.boundingBox=this.body.geometry.boundingBox;}else{console.warn(ELEMENT_NO_GEOMETRY_SET);}}},{key:"postBodyCreation",value:function postBodyCreation(){var name=this.options.name;this.evaluateBoundingBox();this.setName(name);this.body.castShadow=Config$2.lights().shadows;this.body.receiveShadow=Config$2.lights().shadows;}},{key:"addToScene",value:function addToScene(){var _this$options$addUniv=this.options.addUniverse,addUniverse=_this$options$addUniv===void 0?true:_this$options$addUniv;if(this.hasBody()){Scene$2.add(this.getBody(),this,addUniverse);}else{console.warn(ELEMENT_NOT_SET);}}},{key:"setName",value:function setName(name){var _ref6=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref6$replace=_ref6.replace,replace=_ref6$replace===void 0?false:_ref6$replace;_get(_getPrototypeOf(Element.prototype),"setName",this).call(this,name);if(this.hasBody()){if(replace)this.dispose();this.body.name=name;if(replace)this.addToScene();}}},{key:"setArmature",value:function setArmature(armature){this.armature=armature;Scene$2.add(this.armature,null,false);}},{key:"addAnimationHandler",value:function addAnimationHandler(animations){this.animationHandler=new AnimationHandler(this.getBody(),animations);}},{key:"hasAnimationHandler",value:function hasAnimationHandler(){return!!this.animationHandler;}},{key:"playAnimation",value:function playAnimation(id,options){if(this.hasAnimationHandler()){this.animationHandler.playAnimation(id,options);}else{console.warn(ANIMATION_HANDLER_NOT_FOUND);}}},{key:"getAvailableAnimations",value:function getAvailableAnimations(){if(this.hasAnimationHandler()){return this.animationHandler.getAvailableAnimations();}else{console.warn(ANIMATION_HANDLER_NOT_FOUND);}return[];}},{key:"enablePhysics",value:function enablePhysics(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(Config$2.physics().enabled){var description=_objectSpread2({},getDescriptionForElement(this),{},options);if(options.debug){this.addHitBox(description);}Physics$2.add(this,description);}}},{key:"addHitBox",value:function addHitBox(_ref7){var quaternion=_ref7.quaternion,size=_ref7.size;var scaledSize={x:size.x+HIT_BOX_INCREASE,y:size.y+HIT_BOX_INCREASE,z:size.z+HIT_BOX_INCREASE};var box=new Box(scaledSize.x,scaledSize.y,scaledSize.z,HIT_BOX_COLOR);box.setQuaternion(quaternion);box.setWireframe(true);box.setWireframeLineWidth(2);box.setPosition(ORIGIN);this.add(box);}},{key:"applyForce",value:function applyForce(force){if(Config$2.physics().enabled){Physics$2.applyForce(this.uuid(),force);}}},{key:"update",value:function update(dt){_get(_getPrototypeOf(Element.prototype),"update",this).call(this,dt);if(this.hasRayColliders()&&this.areCollisionsEnabled()){this.updateRayColliders();this.checkCollisions();}if(this.hasAnimationHandler()){this.animationHandler.update(dt);}}},{key:"add",value:function add(element){var _this2=this;if(this.hasBody()){var _add=function _add(body){_this2.children.push(body);_this2.body.add(body.body);};if(Array.isArray(element)){element.forEach(_add);}else{_add(element);}}}},{key:"remove",value:function remove(element){if(this.hasBody()){this.body.remove(element.body);var index=this.children.findIndex(function(m){return m.equals(element);});this.children.splice(index,1);}}},{key:"isCollidingOnDirection",value:function isCollidingOnDirection(direction){var collider=this.colliders.filter(function(_ref8){var type=_ref8.type;return type===direction;})[0];var emptyCollision={collisions:[],type:direction};return collider?this.checkRayCollider(collider):emptyCollision;}},{key:"setColor",value:function setColor(color){if(color){if(hasMaterial(this.body)){this.body.material.color=new Color(color);}else{this.body.traverse(function(child){if(hasMaterial(child)){child.material.color=new Color(color);}});}}else{console.warn(ELEMENT_SET_COLOR_MISSING_COLOR);}}},{key:"setTextureMap",value:function setTextureMap(textureId){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(textureId&&hasMaterial(this.body)){var _options$repeat=options.repeat,repeat=_options$repeat===void 0?{x:1,y:1}:_options$repeat,_options$wrap=options.wrap,wrap=_options$wrap===void 0?RepeatWrapping$1:_options$wrap;var texture=Images$1.get(textureId);this.texture=textureId;texture.wrapS=wrap;texture.wrapT=wrap;texture.repeat.set(repeat.x,repeat.y);this.body.material.map=texture;}else{console.warn(ELEMENT_NO_MATERIAL_CANT_SET_TEXTURE);}}},{key:"setMaterialFromName",value:function setMaterialFromName(materialName){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(hasMaterial(this.getBody())){changeMaterialByName(materialName,this.getBody(),options);}else{this.body.traverse(function(child){if(hasMaterial(child)){changeMaterialByName(materialName,child,options);}});}}},{key:"setOpacity",value:function setOpacity(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1.0;var opacity=keepWithinBoundaries(0,1,value);if(hasMaterial(this.getBody())){this.body.material.transparent=true;this.body.material.opacity=opacity;}else{this.body.traverse(function(child){if(hasMaterial(child)){child.material.transparent=true;child.material.opacity=opacity;}});}}},{key:"setWireframe",value:function setWireframe(){var flag=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;if(hasMaterial(this.getBody())){this.body.material.wireframe=flag;}else{this.body.traverse(function(child){if(hasMaterial(child)){child.material.wireframe=flag;}});}}},{key:"setWireframeLineWidth",value:function setWireframeLineWidth(){var width=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;if(hasMaterial(this.getBody())){this.body.material.wireframeLinewidth=width;}else{this.body.traverse(function(child){if(hasMaterial(child)){child.material.wireframeLinewidth=width;}});}}},{key:"disposeBody",value:function disposeBody(){if(hasMaterial(this.body)){disposeTextures(this.getBody());disposeMaterial(this.getBody());disposeGeometry(this.getBody());}else{this.body.traverse(function(child){if(hasMaterial(child)){disposeTextures(child);disposeMaterial(child);disposeGeometry(child);}});}}},{key:"dispose",value:function dispose(){_get(_getPrototypeOf(Element.prototype),"dispose",this).call(this);if(this.hasBody()){Scene$2.remove(this.body);this.disposeBody();}}},{key:"toJSON",value:function toJSON(){if(this.serializable){return _objectSpread2({body:this.body.toJSON(),scripts:this.mapScriptsToJSON(),texture:this.texture},this.options);}}}]);return Element;}(Entity);function _createSuper2$a(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Camera$1=/*#__PURE__*/function(_Entity){_inherits(Camera,_Entity);var _super=_createSuper2$a(Camera);function Camera(options){var _this;_classCallCheck(this,Camera);var name=options.name||'camera';_this=_super.call(this,{name:name});_this.options=options;_this.body=new PerspectiveCamera(options.fov,options.ratio,options.near,options.far);return _this;}_createClass(Camera,[{key:"getPosition",value:function getPosition(){return{x:this.body.position.x,y:this.body.position.y,z:this.body.position.z};}},{key:"setPosition",value:function setPosition(where){var position=_objectSpread2({},this.getPosition(),{},where);if(this.body){this.body.position.set(position.x,position.y,position.z);}}},{key:"getRotation",value:function getRotation(){return{x:this.body.rotation.x,y:this.body.rotation.y,z:this.body.rotation.z};}},{key:"setRotation",value:function setRotation(how){var rotation=_objectSpread2({},this.getRotation(),{},how);if(this.body){this.body.rotation.set(rotation.x,rotation.y,rotation.z);}}},{key:"lookAt",value:function lookAt(){var position=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _position$x=position.x,x=_position$x===void 0?0:_position$x,_position$y=position.y,y=_position$y===void 0?0:_position$y,_position$z=position.z,z=_position$z===void 0?0:_position$z;this.body.lookAt(x,y,z);}}]);return Camera;}(Entity);var Grid=/*#__PURE__*/function(){function Grid(size,division,color1,color2){_classCallCheck(this,Grid);this.body=new GridHelper(size,division,color1,color2);Scene$2.add(this.body,this,false);}_createClass(Grid,[{key:"update",value:function update(){}},{key:"render",value:function render(){}}]);return Grid;}();function _createSuper2$b(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Cube=/*#__PURE__*/function(_Element){_inherits(Cube,_Element);var _super=_createSuper2$b(Cube);function Cube(){var _this;var side=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var color=arguments.length>1?arguments[1]:undefined;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,Cube);_this=_super.call(this,null,null,options);var geometry=new BoxGeometry(side,side,side);var material=new MeshBasicMaterial(_objectSpread2({color:color,wireframe:false},options));_this.setBody({geometry:geometry,material:material});_this.setEntityType(ENTITY_TYPES.MESH);return _this;}return Cube;}(Element);function _createSuper2$c(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Sphere$1=/*#__PURE__*/function(_Element){_inherits(Sphere,_Element);var _super=_createSuper2$c(Sphere);function Sphere(){var _this;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var color=arguments.length>1?arguments[1]:undefined;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,Sphere);_this=_super.call(this,null,null,options);var segments=32;var geometry=new SphereGeometry(radius,segments,segments);var material=new MeshBasicMaterial(_objectSpread2({color:color,wireframe:false},options));_this.setBody({geometry:geometry,material:material});_this.setEntityType(ENTITY_TYPES.MESH);return _this;}return Sphere;}(Element);function _createSuper2$d(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Cylinder=/*#__PURE__*/function(_Element){_inherits(Cylinder,_Element);var _super=_createSuper2$d(Cylinder);function Cylinder(){var _this;var radiusTop=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var radiusBottom=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;var height=arguments.length>2?arguments[2]:undefined;var color=arguments.length>3?arguments[3]:undefined;var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};_classCallCheck(this,Cylinder);_this=_super.call(this,null,null,options);var segments=32;var geometry=new CylinderGeometry(radiusTop,radiusBottom,height,segments);var material=new MeshBasicMaterial(_objectSpread2({color:color,wireframe:false},options));_this.setBody({geometry:geometry,material:material});_this.setEntityType(ENTITY_TYPES.MESH);return _this;}return Cylinder;}(Element);function _createSuper2$e(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DEFAULT_LINE_COLOR=0xffffff;var DEFAULT_LINE_THICKNESS=2;var Line$1=/*#__PURE__*/function(_Element){_inherits(Line$1,_Element);var _super=_createSuper2$e(Line$1);function Line$1(){var _this;var _points=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Line$1);_this=_super.call(this,null,null,options);_defineProperty(_assertThisInitialized(_this),"updatePoints",function(points){var vectors=points.map(function(_ref){var x=_ref.x,y=_ref.y,z=_ref.z;return new Vector3$1(x,y,z);});_this.body.geometry.vertices=vectors;_this.body.geometry.verticesNeedUpdate=true;});_this.points=_points;var material=_this.getMaterial();var geometry=_this.getGeometryFromPoints();var body=new Line(geometry,material);_this.setBody({body:body});_this.setEntityType(ENTITY_TYPES.MESH);return _this;}_createClass(Line$1,[{key:"postBodyCreation",value:function postBodyCreation(){_get(_getPrototypeOf(Line$1.prototype),"postBodyCreation",this).call(this);var _this$options$dashed=this.options.dashed,dashed=_this$options$dashed===void 0?false:_this$options$dashed;if(dashed){this.body.computeLineDistances();}}},{key:"getMaterial",value:function getMaterial(){var _this$options=this.options,_this$options$color=_this$options.color,color=_this$options$color===void 0?DEFAULT_LINE_COLOR:_this$options$color,_this$options$dashed2=_this$options.dashed,dashed=_this$options$dashed2===void 0?false:_this$options$dashed2,_this$options$thickne=_this$options.thickness,thickness=_this$options$thickne===void 0?DEFAULT_LINE_THICKNESS:_this$options$thickne;return dashed?new LineDashedMaterial({color:color,linewidth:thickness}):new LineBasicMaterial({color:color,linewidth:thickness});}},{key:"getGeometryFromPoints",value:function getGeometryFromPoints(){var vectors=this.points.map(function(_ref2){var _ref2$x=_ref2.x,x=_ref2$x===void 0?0:_ref2$x,_ref2$y=_ref2.y,y=_ref2$y===void 0?0:_ref2$y,_ref2$z=_ref2.z,z=_ref2$z===void 0?0:_ref2$z;return new Vector3$1(x,y,z);});return new BufferGeometry().setFromPoints(vectors);}},{key:"setThickness",value:function setThickness(){var thickness=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_LINE_THICKNESS;this.body.material.linewidth=thickness;}}]);return Line$1;}(Element);function _createSuper2$f(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DEFAULT_CURVE_LINE_DIVISIONS=20;var CurveLine=/*#__PURE__*/function(_Line){_inherits(CurveLine,_Line);var _super=_createSuper2$f(CurveLine);function CurveLine(){var _this;var points=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,CurveLine);var _options$divisions=options.divisions,divisions=_options$divisions===void 0?DEFAULT_CURVE_LINE_DIVISIONS:_options$divisions;var curve=CurveLine.genereateCurve(points,divisions);_this=_super.call(this,curve,options);_this.curve=curve;return _this;}_createClass(CurveLine,null,[{key:"genereateCurve",value:function genereateCurve(points,divisions){return new CatmullRomCurve3(points.map(function(_ref){var x=_ref.x,y=_ref.y,z=_ref.z;return new Vector3$1(x,y,z);})).getPoints(divisions);}}]);return CurveLine;}(Line$1);function _createSuper2$g(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var UP$1=new Vector3$1(0,1,0);var DOWN$1=new Vector3$1(0,-1,0);var Plane$1=/*#__PURE__*/function(_Element){_inherits(Plane,_Element);var _super=_createSuper2$g(Plane);function Plane(height,width){var _this;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,Plane);_this=_super.call(this,null,null,options);var _options$color=options.color,color=_options$color===void 0?0xfffffff:_options$color,_options$transparent=options.transparent,transparent=_options$transparent===void 0?false:_options$transparent,_options$opacity=options.opacity,opacity=_options$opacity===void 0?1:_options$opacity;material=new MeshBasicMaterial({color:color,side:DoubleSide,transparent:transparent,opacity:opacity});geometry=new PlaneGeometry(width,height);_this.setBody({geometry:geometry,material:material});_this.setEntityType(ENTITY_TYPES.MESH);return _this;}_createClass(Plane,[{key:"face",value:function face(direction){var vector=new Vector3$1(direction.x,direction.y,direction.z);this.body.lookAt(vector);}}],[{key:"UP",get:function get(){return UP$1;}},{key:"DOWN",get:function get(){return DOWN$1;}}]);return Plane;}(Element);function _createSuper2$h(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Box=/*#__PURE__*/function(_Element){_inherits(Box,_Element);var _super=_createSuper2$h(Box);function Box(){var _this;var width=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;var depth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:10;var color=arguments.length>3?arguments[3]:undefined;var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};_classCallCheck(this,Box);_this=_super.call(this,null,null,options);var geometry=new BoxGeometry(width,height,depth);var material=new MeshBasicMaterial(_objectSpread2({color:color,wireframe:false},options));_this.setBody({geometry:geometry,material:material});_this.setEntityType(ENTITY_TYPES.MESH);return _this;}return Box;}(Element);function _createSuper2$i(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var validateAnisotropy=function validateAnisotropy(anisotropy){var max=Scene$2.getRenderer().capabilities.getMaxAnisotropy();return anisotropy>max?max:anisotropy;};var Sprite$1=/*#__PURE__*/function(_Element){_inherits(Sprite$1,_Element);var _super=_createSuper2$i(Sprite$1);function Sprite$1(){var _this;var width=arguments.length>0&&arguments[0]!==undefined?arguments[0]:20;var height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;var spriteTexture=arguments.length>2?arguments[2]:undefined;var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};_classCallCheck(this,Sprite$1);_this=_super.call(this,null,null,options);var _options$anisotropy=options.anisotropy,anisotropy=_options$anisotropy===void 0?1:_options$anisotropy,rest=_objectWithoutProperties(options,["anisotropy"]);var texture=Images$1.get(spriteTexture);texture.anisotropy=validateAnisotropy(anisotropy);var material=new SpriteMaterial(_objectSpread2({map:texture},rest));var body=new Sprite(material);body.scale.x=width;body.scale.y=height;_this.setBody({body:body});_this.setEntityType(ENTITY_TYPES.SPRITE);return _this;}_createClass(Sprite$1,[{key:"getRotation",value:function getRotation(){return this.body.material.rotation;}},{key:"setRotation",value:function setRotation(){var rotation=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.getRotation();this.body.material.rotation=rotation;}}]);return Sprite$1;}(Element);function _createSuper2$j(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var BackgroundSound=/*#__PURE__*/function(_Beat){_inherits(BackgroundSound,_Beat);var _super=_createSuper2$j(BackgroundSound);function BackgroundSound(name,options){var _this;_classCallCheck(this,BackgroundSound);_this=_super.call(this,name);//use options to choose whether have a loop or not.
_this.sound.source.loop=options.loop||true;_this.body=options.body;//if we set up an effect in our options, we need to create a convolver node
if(options.effect){_this.convolver=Audio$2.context.createConvolver();_this.mixer=Audio$2.context.createGain();_this.sound.panner.disconnect();_this.sound.panner.connect(_this.mixer);//creating gains
_this.plainGain=Audio$2.context.createGain();_this.convolverGain=Audio$2.context.createGain();//connect mixer to new gains
_this.mixer.connect(plainGain);_this.mixer.connect(convolverGain);_this.plainGain.connect(Audio$2.volume);_this.convolverGain.connect(Audio$2.volume);_this.convolver.buffer=Audio$2.get(options.effect);_this.convolverGain.gain.value=0.7;_this.plainGain.gain.value=0.3;}//autoplay option
var autoplay=options.autoplay||true;if(autoplay){_this.play();}//adding this sound to Audio
Audio$2.add(_assertThisInitialized(_this));return _this;}_createClass(BackgroundSound,[{key:"update",value:function update(dt){}}]);return BackgroundSound;}(Beat);var Video=/*#__PURE__*/function(){function Video(){_classCallCheck(this,Video);}_createClass(Video,[{key:"load",value:function load(){return Promise.resolve('video');}}]);return Video;}();var engine=new Video();var GLTFLoader=function(){function GLTFLoader(manager){Loader.call(this,manager);this.dracoLoader=null;this.ddsLoader=null;}GLTFLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:GLTFLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var resourcePath;if(this.resourcePath!==''){resourcePath=this.resourcePath;}else if(this.path!==''){resourcePath=this.path;}else{resourcePath=LoaderUtils.extractUrlBase(url);}// Tells the LoadingManager to track an extra item, which resolves after
// the model is fully loaded. This means the count of items loaded will
// be incorrect, but ensures manager.onLoad() does not fire early.
scope.manager.itemStart(url);var _onError=function _onError(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);scope.manager.itemEnd(url);};var loader=new FileLoader(scope.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');if(scope.crossOrigin==='use-credentials'){loader.setWithCredentials(true);}loader.load(url,function(data){try{scope.parse(data,resourcePath,function(gltf){onLoad(gltf);scope.manager.itemEnd(url);},_onError);}catch(e){_onError(e);}},onProgress,_onError);},setDRACOLoader:function setDRACOLoader(dracoLoader){this.dracoLoader=dracoLoader;return this;},setDDSLoader:function setDDSLoader(ddsLoader){this.ddsLoader=ddsLoader;return this;},parse:function parse(data,path,onLoad,onError){var content;var extensions={};if(typeof data==='string'){content=data;}else{var magic=LoaderUtils.decodeText(new Uint8Array(data,0,4));if(magic===BINARY_EXTENSION_HEADER_MAGIC){try{extensions[EXTENSIONS.KHR_BINARY_GLTF]=new GLTFBinaryExtension(data);}catch(error){if(onError)onError(error);return;}content=extensions[EXTENSIONS.KHR_BINARY_GLTF].content;}else{content=LoaderUtils.decodeText(new Uint8Array(data));}}var json=JSON.parse(content);if(json.asset===undefined||json.asset.version[0]<2){if(onError)onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));return;}if(json.extensionsUsed){for(var i=0;i<json.extensionsUsed.length;++i){var extensionName=json.extensionsUsed[i];var extensionsRequired=json.extensionsRequired||[];switch(extensionName){case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:extensions[extensionName]=new GLTFLightsExtension(json);break;case EXTENSIONS.KHR_MATERIALS_UNLIT:extensions[extensionName]=new GLTFMaterialsUnlitExtension();break;case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:extensions[extensionName]=new GLTFMaterialsPbrSpecularGlossinessExtension();break;case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:extensions[extensionName]=new GLTFDracoMeshCompressionExtension(json,this.dracoLoader);break;case EXTENSIONS.MSFT_TEXTURE_DDS:extensions[extensionName]=new GLTFTextureDDSExtension(this.ddsLoader);break;case EXTENSIONS.KHR_TEXTURE_TRANSFORM:extensions[extensionName]=new GLTFTextureTransformExtension();break;case EXTENSIONS.KHR_MESH_QUANTIZATION:extensions[extensionName]=new GLTFMeshQuantizationExtension();break;default:if(extensionsRequired.indexOf(extensionName)>=0){console.warn('THREE.GLTFLoader: Unknown extension "'+extensionName+'".');}}}}var parser=new GLTFParser(json,extensions,{path:path||this.resourcePath||'',crossOrigin:this.crossOrigin,manager:this.manager});parser.parse(onLoad,onError);}});/* GLTFREGISTRY */function GLTFRegistry(){var objects={};return{get:function get(key){return objects[key];},add:function add(key,object){objects[key]=object;},remove:function remove(key){delete objects[key];},removeAll:function removeAll(){objects={};}};}/*********************************/ /********** EXTENSIONS ***********/ /*********************************/var EXTENSIONS={KHR_BINARY_GLTF:'KHR_binary_glTF',KHR_DRACO_MESH_COMPRESSION:'KHR_draco_mesh_compression',KHR_LIGHTS_PUNCTUAL:'KHR_lights_punctual',KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:'KHR_materials_pbrSpecularGlossiness',KHR_MATERIALS_UNLIT:'KHR_materials_unlit',KHR_TEXTURE_TRANSFORM:'KHR_texture_transform',KHR_MESH_QUANTIZATION:'KHR_mesh_quantization',MSFT_TEXTURE_DDS:'MSFT_texture_dds'};/**
   * DDS Texture Extension
   *
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds
   *
   */function GLTFTextureDDSExtension(ddsLoader){if(!ddsLoader){throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');}this.name=EXTENSIONS.MSFT_TEXTURE_DDS;this.ddsLoader=ddsLoader;}/**
   * Punctual Lights Extension
   *
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual
   */function GLTFLightsExtension(json){this.name=EXTENSIONS.KHR_LIGHTS_PUNCTUAL;var extension=json.extensions&&json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]||{};this.lightDefs=extension.lights||[];}GLTFLightsExtension.prototype.loadLight=function(lightIndex){var lightDef=this.lightDefs[lightIndex];var lightNode;var color=new Color(0xffffff);if(lightDef.color!==undefined)color.fromArray(lightDef.color);var range=lightDef.range!==undefined?lightDef.range:0;switch(lightDef.type){case'directional':lightNode=new DirectionalLight(color);lightNode.target.position.set(0,0,-1);lightNode.add(lightNode.target);break;case'point':lightNode=new PointLight(color);lightNode.distance=range;break;case'spot':lightNode=new SpotLight(color);lightNode.distance=range;// Handle spotlight properties.
lightDef.spot=lightDef.spot||{};lightDef.spot.innerConeAngle=lightDef.spot.innerConeAngle!==undefined?lightDef.spot.innerConeAngle:0;lightDef.spot.outerConeAngle=lightDef.spot.outerConeAngle!==undefined?lightDef.spot.outerConeAngle:Math.PI/4.0;lightNode.angle=lightDef.spot.outerConeAngle;lightNode.penumbra=1.0-lightDef.spot.innerConeAngle/lightDef.spot.outerConeAngle;lightNode.target.position.set(0,0,-1);lightNode.add(lightNode.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, "'+lightDef.type+'".');}// Some lights (e.g. spot) default to a position other than the origin. Reset the position
// here, because node-level parsing will only override position if explicitly specified.
lightNode.position.set(0,0,0);lightNode.decay=2;if(lightDef.intensity!==undefined)lightNode.intensity=lightDef.intensity;lightNode.name=lightDef.name||'light_'+lightIndex;return Promise.resolve(lightNode);};/**
   * Unlit Materials Extension
   *
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit
   */function GLTFMaterialsUnlitExtension(){this.name=EXTENSIONS.KHR_MATERIALS_UNLIT;}GLTFMaterialsUnlitExtension.prototype.getMaterialType=function(){return MeshBasicMaterial;};GLTFMaterialsUnlitExtension.prototype.extendParams=function(materialParams,materialDef,parser){var pending=[];materialParams.color=new Color(1.0,1.0,1.0);materialParams.opacity=1.0;var metallicRoughness=materialDef.pbrMetallicRoughness;if(metallicRoughness){if(Array.isArray(metallicRoughness.baseColorFactor)){var array=metallicRoughness.baseColorFactor;materialParams.color.fromArray(array);materialParams.opacity=array[3];}if(metallicRoughness.baseColorTexture!==undefined){pending.push(parser.assignTexture(materialParams,'map',metallicRoughness.baseColorTexture));}}return Promise.all(pending);};/* BINARY EXTENSION */var BINARY_EXTENSION_HEADER_MAGIC='glTF';var BINARY_EXTENSION_HEADER_LENGTH=12;var BINARY_EXTENSION_CHUNK_TYPES={JSON:0x4E4F534A,BIN:0x004E4942};function GLTFBinaryExtension(data){this.name=EXTENSIONS.KHR_BINARY_GLTF;this.content=null;this.body=null;var headerView=new DataView(data,0,BINARY_EXTENSION_HEADER_LENGTH);this.header={magic:LoaderUtils.decodeText(new Uint8Array(data.slice(0,4))),version:headerView.getUint32(4,true),length:headerView.getUint32(8,true)};if(this.header.magic!==BINARY_EXTENSION_HEADER_MAGIC){throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');}else if(this.header.version<2.0){throw new Error('THREE.GLTFLoader: Legacy binary file detected.');}var chunkView=new DataView(data,BINARY_EXTENSION_HEADER_LENGTH);var chunkIndex=0;while(chunkIndex<chunkView.byteLength){var chunkLength=chunkView.getUint32(chunkIndex,true);chunkIndex+=4;var chunkType=chunkView.getUint32(chunkIndex,true);chunkIndex+=4;if(chunkType===BINARY_EXTENSION_CHUNK_TYPES.JSON){var contentArray=new Uint8Array(data,BINARY_EXTENSION_HEADER_LENGTH+chunkIndex,chunkLength);this.content=LoaderUtils.decodeText(contentArray);}else if(chunkType===BINARY_EXTENSION_CHUNK_TYPES.BIN){var byteOffset=BINARY_EXTENSION_HEADER_LENGTH+chunkIndex;this.body=data.slice(byteOffset,byteOffset+chunkLength);}// Clients must ignore chunks with unknown types.
chunkIndex+=chunkLength;}if(this.content===null){throw new Error('THREE.GLTFLoader: JSON content not found.');}}/**
   * DRACO Mesh Compression Extension
   *
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression
   */function GLTFDracoMeshCompressionExtension(json,dracoLoader){if(!dracoLoader){throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');}this.name=EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;this.json=json;this.dracoLoader=dracoLoader;this.dracoLoader.preload();}GLTFDracoMeshCompressionExtension.prototype.decodePrimitive=function(primitive,parser){var json=this.json;var dracoLoader=this.dracoLoader;var bufferViewIndex=primitive.extensions[this.name].bufferView;var gltfAttributeMap=primitive.extensions[this.name].attributes;var threeAttributeMap={};var attributeNormalizedMap={};var attributeTypeMap={};for(var attributeName in gltfAttributeMap){var threeAttributeName=ATTRIBUTES[attributeName]||attributeName.toLowerCase();threeAttributeMap[threeAttributeName]=gltfAttributeMap[attributeName];}for(attributeName in primitive.attributes){var threeAttributeName=ATTRIBUTES[attributeName]||attributeName.toLowerCase();if(gltfAttributeMap[attributeName]!==undefined){var accessorDef=json.accessors[primitive.attributes[attributeName]];var componentType=WEBGL_COMPONENT_TYPES[accessorDef.componentType];attributeTypeMap[threeAttributeName]=componentType;attributeNormalizedMap[threeAttributeName]=accessorDef.normalized===true;}}return parser.getDependency('bufferView',bufferViewIndex).then(function(bufferView){return new Promise(function(resolve){dracoLoader.decodeDracoFile(bufferView,function(geometry){for(var attributeName in geometry.attributes){var attribute=geometry.attributes[attributeName];var normalized=attributeNormalizedMap[attributeName];if(normalized!==undefined)attribute.normalized=normalized;}resolve(geometry);},threeAttributeMap,attributeTypeMap);});});};/**
   * Texture Transform Extension
   *
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform
   */function GLTFTextureTransformExtension(){this.name=EXTENSIONS.KHR_TEXTURE_TRANSFORM;}GLTFTextureTransformExtension.prototype.extendTexture=function(texture,transform){texture=texture.clone();if(transform.offset!==undefined){texture.offset.fromArray(transform.offset);}if(transform.rotation!==undefined){texture.rotation=transform.rotation;}if(transform.scale!==undefined){texture.repeat.fromArray(transform.scale);}if(transform.texCoord!==undefined){console.warn('THREE.GLTFLoader: Custom UV sets in "'+this.name+'" extension not yet supported.');}texture.needsUpdate=true;return texture;};/**
   * Specular-Glossiness Extension
   *
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness
   */function GLTFMaterialsPbrSpecularGlossinessExtension(){return{name:EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:['color','map','lightMap','lightMapIntensity','aoMap','aoMapIntensity','emissive','emissiveIntensity','emissiveMap','bumpMap','bumpScale','normalMap','displacementMap','displacementScale','displacementBias','specularMap','specular','glossinessMap','glossiness','alphaMap','envMap','envMapIntensity','refractionRatio'],getMaterialType:function getMaterialType(){return ShaderMaterial;},extendParams:function extendParams(materialParams,materialDef,parser){var pbrSpecularGlossiness=materialDef.extensions[this.name];var shader=ShaderLib['standard'];var uniforms=UniformsUtils.clone(shader.uniforms);var specularMapParsFragmentChunk=['#ifdef USE_SPECULARMAP','	uniform sampler2D specularMap;','#endif'].join('\n');var glossinessMapParsFragmentChunk=['#ifdef USE_GLOSSINESSMAP','	uniform sampler2D glossinessMap;','#endif'].join('\n');var specularMapFragmentChunk=['vec3 specularFactor = specular;','#ifdef USE_SPECULARMAP','	vec4 texelSpecular = texture2D( specularMap, vUv );','	texelSpecular = sRGBToLinear( texelSpecular );','	// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture','	specularFactor *= texelSpecular.rgb;','#endif'].join('\n');var glossinessMapFragmentChunk=['float glossinessFactor = glossiness;','#ifdef USE_GLOSSINESSMAP','	vec4 texelGlossiness = texture2D( glossinessMap, vUv );','	// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture','	glossinessFactor *= texelGlossiness.a;','#endif'].join('\n');var lightPhysicalFragmentChunk=['PhysicalMaterial material;','material.diffuseColor = diffuseColor.rgb;','material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );','material.specularColor = specularFactor.rgb;'].join('\n');var fragmentShader=shader.fragmentShader.replace('uniform float roughness;','uniform vec3 specular;').replace('uniform float metalness;','uniform float glossiness;').replace('#include <roughnessmap_pars_fragment>',specularMapParsFragmentChunk).replace('#include <metalnessmap_pars_fragment>',glossinessMapParsFragmentChunk).replace('#include <roughnessmap_fragment>',specularMapFragmentChunk).replace('#include <metalnessmap_fragment>',glossinessMapFragmentChunk).replace('#include <lights_physical_fragment>',lightPhysicalFragmentChunk);delete uniforms.roughness;delete uniforms.metalness;delete uniforms.roughnessMap;delete uniforms.metalnessMap;uniforms.specular={value:new Color().setHex(0x111111)};uniforms.glossiness={value:0.5};uniforms.specularMap={value:null};uniforms.glossinessMap={value:null};materialParams.vertexShader=shader.vertexShader;materialParams.fragmentShader=fragmentShader;materialParams.uniforms=uniforms;materialParams.defines={'STANDARD':''};materialParams.color=new Color(1.0,1.0,1.0);materialParams.opacity=1.0;var pending=[];if(Array.isArray(pbrSpecularGlossiness.diffuseFactor)){var array=pbrSpecularGlossiness.diffuseFactor;materialParams.color.fromArray(array);materialParams.opacity=array[3];}if(pbrSpecularGlossiness.diffuseTexture!==undefined){pending.push(parser.assignTexture(materialParams,'map',pbrSpecularGlossiness.diffuseTexture));}materialParams.emissive=new Color(0.0,0.0,0.0);materialParams.glossiness=pbrSpecularGlossiness.glossinessFactor!==undefined?pbrSpecularGlossiness.glossinessFactor:1.0;materialParams.specular=new Color(1.0,1.0,1.0);if(Array.isArray(pbrSpecularGlossiness.specularFactor)){materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);}if(pbrSpecularGlossiness.specularGlossinessTexture!==undefined){var specGlossMapDef=pbrSpecularGlossiness.specularGlossinessTexture;pending.push(parser.assignTexture(materialParams,'glossinessMap',specGlossMapDef));pending.push(parser.assignTexture(materialParams,'specularMap',specGlossMapDef));}return Promise.all(pending);},createMaterial:function createMaterial(params){// setup material properties based on MeshStandardMaterial for Specular-Glossiness
var material=new ShaderMaterial({defines:params.defines,vertexShader:params.vertexShader,fragmentShader:params.fragmentShader,uniforms:params.uniforms,fog:true,lights:true,opacity:params.opacity,transparent:params.transparent});material.isGLTFSpecularGlossinessMaterial=true;material.color=params.color;material.map=params.map===undefined?null:params.map;material.lightMap=null;material.lightMapIntensity=1.0;material.aoMap=params.aoMap===undefined?null:params.aoMap;material.aoMapIntensity=1.0;material.emissive=params.emissive;material.emissiveIntensity=1.0;material.emissiveMap=params.emissiveMap===undefined?null:params.emissiveMap;material.bumpMap=params.bumpMap===undefined?null:params.bumpMap;material.bumpScale=1;material.normalMap=params.normalMap===undefined?null:params.normalMap;if(params.normalScale)material.normalScale=params.normalScale;material.displacementMap=null;material.displacementScale=1;material.displacementBias=0;material.specularMap=params.specularMap===undefined?null:params.specularMap;material.specular=params.specular;material.glossinessMap=params.glossinessMap===undefined?null:params.glossinessMap;material.glossiness=params.glossiness;material.alphaMap=null;material.envMap=params.envMap===undefined?null:params.envMap;material.envMapIntensity=1.0;material.refractionRatio=0.98;material.extensions.derivatives=true;return material;},/**
       * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can
       * copy only properties it knows about or inherits, and misses many properties that would
       * normally be defined by MeshStandardMaterial.
       *
       * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of
       * loading a glTF model, but cloning later (e.g. by the user) would require these changes
       * AND also updating `.onBeforeRender` on the parent mesh.
       *
       * @param  {ShaderMaterial} source
       * @return {ShaderMaterial}
       */cloneMaterial:function cloneMaterial(source){var target=source.clone();target.isGLTFSpecularGlossinessMaterial=true;var params=this.specularGlossinessParams;for(var i=0,il=params.length;i<il;i++){var value=source[params[i]];target[params[i]]=value&&value.isColor?value.clone():value;}return target;},// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.
refreshUniforms:function refreshUniforms(renderer,scene,camera,geometry,material){if(material.isGLTFSpecularGlossinessMaterial!==true){return;}var uniforms=material.uniforms;var defines=material.defines;uniforms.opacity.value=material.opacity;uniforms.diffuse.value.copy(material.color);uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);uniforms.map.value=material.map;uniforms.specularMap.value=material.specularMap;uniforms.alphaMap.value=material.alphaMap;uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;// uv repeat and offset setting priorities
// 1. color map
// 2. specular map
// 3. normal map
// 4. bump map
// 5. alpha map
// 6. emissive map
var uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.glossinessMap){uvScaleMap=material.glossinessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}if(uvScaleMap!==undefined){// backwards compatibility
if(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}if(material.envMap){uniforms.envMap.value=material.envMap;uniforms.envMapIntensity.value=material.envMapIntensity;// don't flip CubeTexture envMaps, flip everything else:
//  WebGLRenderTargetCube will be flipped for backwards compatibility
//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture
// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future
uniforms.flipEnvMap.value=material.envMap.isCubeTexture?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;uniforms.maxMipLevel.value=renderer.properties.get(material.envMap).__maxMipLevel;}uniforms.specular.value.copy(material.specular);uniforms.glossiness.value=material.glossiness;uniforms.glossinessMap.value=material.glossinessMap;uniforms.emissiveMap.value=material.emissiveMap;uniforms.bumpMap.value=material.bumpMap;uniforms.normalMap.value=material.normalMap;uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;if(uniforms.glossinessMap.value!==null&&defines.USE_GLOSSINESSMAP===undefined){defines.USE_GLOSSINESSMAP='';// set USE_ROUGHNESSMAP to enable vUv
defines.USE_ROUGHNESSMAP='';}if(uniforms.glossinessMap.value===null&&defines.USE_GLOSSINESSMAP!==undefined){delete defines.USE_GLOSSINESSMAP;delete defines.USE_ROUGHNESSMAP;}}};}/**
   * Mesh Quantization Extension
   *
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization
   */function GLTFMeshQuantizationExtension(){this.name=EXTENSIONS.KHR_MESH_QUANTIZATION;}/*********************************/ /********** INTERPOLATION ********/ /*********************************/ // Spline Interpolation
// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation
function GLTFCubicSplineInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}GLTFCubicSplineInterpolant.prototype=Object.create(Interpolant.prototype);GLTFCubicSplineInterpolant.prototype.constructor=GLTFCubicSplineInterpolant;GLTFCubicSplineInterpolant.prototype.copySampleValue_=function(index){// Copies a sample value to the result buffer. See description of glTF
// CUBICSPLINE values layout in interpolate_() function below.
var result=this.resultBuffer,values=this.sampleValues,valueSize=this.valueSize,offset=index*valueSize*3+valueSize;for(var i=0;i!==valueSize;i++){result[i]=values[offset+i];}return result;};GLTFCubicSplineInterpolant.prototype.beforeStart_=GLTFCubicSplineInterpolant.prototype.copySampleValue_;GLTFCubicSplineInterpolant.prototype.afterEnd_=GLTFCubicSplineInterpolant.prototype.copySampleValue_;GLTFCubicSplineInterpolant.prototype.interpolate_=function(i1,t0,t,t1){var result=this.resultBuffer;var values=this.sampleValues;var stride=this.valueSize;var stride2=stride*2;var stride3=stride*3;var td=t1-t0;var p=(t-t0)/td;var pp=p*p;var ppp=pp*p;var offset1=i1*stride3;var offset0=offset1-stride3;var s2=-2*ppp+3*pp;var s3=ppp-pp;var s0=1-s2;var s1=s3-pp+p;// Layout of keyframe output values for CUBICSPLINE animations:
//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]
for(var i=0;i!==stride;i++){var p0=values[offset0+i+stride];// splineVertex_k
var m0=values[offset0+i+stride2]*td;// outTangent_k * (t_k+1 - t_k)
var p1=values[offset1+i+stride];// splineVertex_k+1
var m1=values[offset1+i]*td;// inTangent_k+1 * (t_k+1 - t_k)
result[i]=s0*p0+s1*m0+s2*p1+s3*m1;}return result;};/*********************************/ /********** INTERNALS ************/ /*********************************/ /* CONSTANTS */var WEBGL_CONSTANTS={FLOAT:5126,//FLOAT_MAT2: 35674,
FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123};var WEBGL_COMPONENT_TYPES={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array};var WEBGL_FILTERS={9728:NearestFilter,9729:LinearFilter,9984:NearestMipmapNearestFilter,9985:LinearMipmapNearestFilter,9986:NearestMipmapLinearFilter,9987:LinearMipmapLinearFilter};var WEBGL_WRAPPINGS={33071:ClampToEdgeWrapping,33648:MirroredRepeatWrapping,10497:RepeatWrapping$1};var WEBGL_TYPE_SIZES={'SCALAR':1,'VEC2':2,'VEC3':3,'VEC4':4,'MAT2':4,'MAT3':9,'MAT4':16};var ATTRIBUTES={POSITION:'position',NORMAL:'normal',TANGENT:'tangent',TEXCOORD_0:'uv',TEXCOORD_1:'uv2',COLOR_0:'color',WEIGHTS_0:'skinWeight',JOINTS_0:'skinIndex'};var PATH_PROPERTIES={scale:'scale',translation:'position',rotation:'quaternion',weights:'morphTargetInfluences'};var INTERPOLATION={CUBICSPLINE:undefined,// We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each
// keyframe track will be initialized with a default interpolation type, then modified.
LINEAR:InterpolateLinear,STEP:InterpolateDiscrete};var ALPHA_MODES={OPAQUE:'OPAQUE',MASK:'MASK',BLEND:'BLEND'};var MIME_TYPE_FORMATS={'image/png':RGBAFormat,'image/jpeg':RGBFormat};/* UTILITY FUNCTIONS */function resolveURL(url,path){// Invalid URL
if(typeof url!=='string'||url==='')return'';// Host Relative URL
if(/^https?:\/\//i.test(path)&&/^\//.test(url)){path=path.replace(/(^https?:\/\/[^\/]+).*/i,'$1');}// Absolute URL http://,https://,//
if(/^(https?:)?\/\//i.test(url))return url;// Data URI
if(/^data:.*,.*$/i.test(url))return url;// Blob URL
if(/^blob:.*$/i.test(url))return url;// Relative URL
return path+url;}/**
   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material
   */function createDefaultMaterial(cache){if(cache['DefaultMaterial']===undefined){cache['DefaultMaterial']=new MeshStandardMaterial({color:0xFFFFFF,emissive:0x000000,metalness:1,roughness:1,transparent:false,depthTest:true,side:FrontSide});}return cache['DefaultMaterial'];}function addUnknownExtensionsToUserData(knownExtensions,object,objectDef){// Add unknown glTF extensions to an object's userData.
for(var name in objectDef.extensions){if(knownExtensions[name]===undefined){object.userData.gltfExtensions=object.userData.gltfExtensions||{};object.userData.gltfExtensions[name]=objectDef.extensions[name];}}}/**
   * @param {Object3D|Material|BufferGeometry} object
   * @param {GLTF.definition} gltfDef
   */function assignExtrasToUserData(object,gltfDef){if(gltfDef.extras!==undefined){if(_typeof(gltfDef.extras)==='object'){Object.assign(object.userData,gltfDef.extras);}else{console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, '+gltfDef.extras);}}}/**
   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets
   *
   * @param {BufferGeometry} geometry
   * @param {Array<GLTF.Target>} targets
   * @param {GLTFParser} parser
   * @return {Promise<BufferGeometry>}
   */function addMorphTargets(geometry,targets,parser){var hasMorphPosition=false;var hasMorphNormal=false;for(var i=0,il=targets.length;i<il;i++){var target=targets[i];if(target.POSITION!==undefined)hasMorphPosition=true;if(target.NORMAL!==undefined)hasMorphNormal=true;if(hasMorphPosition&&hasMorphNormal)break;}if(!hasMorphPosition&&!hasMorphNormal)return Promise.resolve(geometry);var pendingPositionAccessors=[];var pendingNormalAccessors=[];for(var i=0,il=targets.length;i<il;i++){var target=targets[i];if(hasMorphPosition){var pendingAccessor=target.POSITION!==undefined?parser.getDependency('accessor',target.POSITION):geometry.attributes.position;pendingPositionAccessors.push(pendingAccessor);}if(hasMorphNormal){var pendingAccessor=target.NORMAL!==undefined?parser.getDependency('accessor',target.NORMAL):geometry.attributes.normal;pendingNormalAccessors.push(pendingAccessor);}}return Promise.all([Promise.all(pendingPositionAccessors),Promise.all(pendingNormalAccessors)]).then(function(accessors){var morphPositions=accessors[0];var morphNormals=accessors[1];if(hasMorphPosition)geometry.morphAttributes.position=morphPositions;if(hasMorphNormal)geometry.morphAttributes.normal=morphNormals;geometry.morphTargetsRelative=true;return geometry;});}/**
   * @param {Mesh} mesh
   * @param {GLTF.Mesh} meshDef
   */function updateMorphTargets(mesh,meshDef){mesh.updateMorphTargets();if(meshDef.weights!==undefined){for(var i=0,il=meshDef.weights.length;i<il;i++){mesh.morphTargetInfluences[i]=meshDef.weights[i];}}// .extras has user-defined data, so check that .extras.targetNames is an array.
if(meshDef.extras&&Array.isArray(meshDef.extras.targetNames)){var targetNames=meshDef.extras.targetNames;if(mesh.morphTargetInfluences.length===targetNames.length){mesh.morphTargetDictionary={};for(var i=0,il=targetNames.length;i<il;i++){mesh.morphTargetDictionary[targetNames[i]]=i;}}else{console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');}}}function createPrimitiveKey(primitiveDef){var dracoExtension=primitiveDef.extensions&&primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];var geometryKey;if(dracoExtension){geometryKey='draco:'+dracoExtension.bufferView+':'+dracoExtension.indices+':'+createAttributesKey(dracoExtension.attributes);}else{geometryKey=primitiveDef.indices+':'+createAttributesKey(primitiveDef.attributes)+':'+primitiveDef.mode;}return geometryKey;}function createAttributesKey(attributes){var attributesKey='';var keys=Object.keys(attributes).sort();for(var i=0,il=keys.length;i<il;i++){attributesKey+=keys[i]+':'+attributes[keys[i]]+';';}return attributesKey;}/* GLTF PARSER */function GLTFParser(json,extensions,options){this.json=json||{};this.extensions=extensions||{};this.options=options||{};// loader object cache
this.cache=new GLTFRegistry();// BufferGeometry caching
this.primitiveCache={};this.textureLoader=new TextureLoader(this.options.manager);this.textureLoader.setCrossOrigin(this.options.crossOrigin);this.fileLoader=new FileLoader(this.options.manager);this.fileLoader.setResponseType('arraybuffer');if(this.options.crossOrigin==='use-credentials'){this.fileLoader.setWithCredentials(true);}}GLTFParser.prototype.parse=function(onLoad,onError){var parser=this;var json=this.json;var extensions=this.extensions;// Clear the loader cache
this.cache.removeAll();// Mark the special nodes/meshes in json for efficient parse
this.markDefs();Promise.all([this.getDependencies('scene'),this.getDependencies('animation'),this.getDependencies('camera')]).then(function(dependencies){var result={scene:dependencies[0][json.scene||0],scenes:dependencies[0],animations:dependencies[1],cameras:dependencies[2],asset:json.asset,parser:parser,userData:{}};addUnknownExtensionsToUserData(extensions,result,json);assignExtrasToUserData(result,json);onLoad(result);}).catch(onError);};/**
   * Marks the special nodes/meshes in json for efficient parse.
   */GLTFParser.prototype.markDefs=function(){var nodeDefs=this.json.nodes||[];var skinDefs=this.json.skins||[];var meshDefs=this.json.meshes||[];var meshReferences={};var meshUses={};// Nothing in the node definition indicates whether it is a Bone or an
// Object3D. Use the skins' joint references to mark bones.
for(var skinIndex=0,skinLength=skinDefs.length;skinIndex<skinLength;skinIndex++){var joints=skinDefs[skinIndex].joints;for(var i=0,il=joints.length;i<il;i++){nodeDefs[joints[i]].isBone=true;}}// Meshes can (and should) be reused by multiple nodes in a glTF asset. To
// avoid having more than one Mesh with the same name, count
// references and rename instances below.
//
// Example: CesiumMilkTruck sample model reuses "Wheel" meshes.
for(var nodeIndex=0,nodeLength=nodeDefs.length;nodeIndex<nodeLength;nodeIndex++){var nodeDef=nodeDefs[nodeIndex];if(nodeDef.mesh!==undefined){if(meshReferences[nodeDef.mesh]===undefined){meshReferences[nodeDef.mesh]=meshUses[nodeDef.mesh]=0;}meshReferences[nodeDef.mesh]++;// Nothing in the mesh definition indicates whether it is
// a SkinnedMesh or Mesh. Use the node's mesh reference
// to mark SkinnedMesh if node has skin.
if(nodeDef.skin!==undefined){meshDefs[nodeDef.mesh].isSkinnedMesh=true;}}}this.json.meshReferences=meshReferences;this.json.meshUses=meshUses;};/**
   * Requests the specified dependency asynchronously, with caching.
   * @param {string} type
   * @param {number} index
   * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}
   */GLTFParser.prototype.getDependency=function(type,index){var cacheKey=type+':'+index;var dependency=this.cache.get(cacheKey);if(!dependency){switch(type){case'scene':dependency=this.loadScene(index);break;case'node':dependency=this.loadNode(index);break;case'mesh':dependency=this.loadMesh(index);break;case'accessor':dependency=this.loadAccessor(index);break;case'bufferView':dependency=this.loadBufferView(index);break;case'buffer':dependency=this.loadBuffer(index);break;case'material':dependency=this.loadMaterial(index);break;case'texture':dependency=this.loadTexture(index);break;case'skin':dependency=this.loadSkin(index);break;case'animation':dependency=this.loadAnimation(index);break;case'camera':dependency=this.loadCamera(index);break;case'light':dependency=this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);break;default:throw new Error('Unknown type: '+type);}this.cache.add(cacheKey,dependency);}return dependency;};/**
   * Requests all dependencies of the specified type asynchronously, with caching.
   * @param {string} type
   * @return {Promise<Array<Object>>}
   */GLTFParser.prototype.getDependencies=function(type){var dependencies=this.cache.get(type);if(!dependencies){var parser=this;var defs=this.json[type+(type==='mesh'?'es':'s')]||[];dependencies=Promise.all(defs.map(function(def,index){return parser.getDependency(type,index);}));this.cache.add(type,dependencies);}return dependencies;};/**
   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views
   * @param {number} bufferIndex
   * @return {Promise<ArrayBuffer>}
   */GLTFParser.prototype.loadBuffer=function(bufferIndex){var bufferDef=this.json.buffers[bufferIndex];var loader=this.fileLoader;if(bufferDef.type&&bufferDef.type!=='arraybuffer'){throw new Error('THREE.GLTFLoader: '+bufferDef.type+' buffer type is not supported.');}// If present, GLB container is required to be the first buffer.
if(bufferDef.uri===undefined&&bufferIndex===0){return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);}var options=this.options;return new Promise(function(resolve,reject){loader.load(resolveURL(bufferDef.uri,options.path),resolve,undefined,function(){reject(new Error('THREE.GLTFLoader: Failed to load buffer "'+bufferDef.uri+'".'));});});};/**
   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views
   * @param {number} bufferViewIndex
   * @return {Promise<ArrayBuffer>}
   */GLTFParser.prototype.loadBufferView=function(bufferViewIndex){var bufferViewDef=this.json.bufferViews[bufferViewIndex];return this.getDependency('buffer',bufferViewDef.buffer).then(function(buffer){var byteLength=bufferViewDef.byteLength||0;var byteOffset=bufferViewDef.byteOffset||0;return buffer.slice(byteOffset,byteOffset+byteLength);});};/**
   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors
   * @param {number} accessorIndex
   * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}
   */GLTFParser.prototype.loadAccessor=function(accessorIndex){var parser=this;var json=this.json;var accessorDef=this.json.accessors[accessorIndex];if(accessorDef.bufferView===undefined&&accessorDef.sparse===undefined){// Ignore empty accessors, which may be used to declare runtime
// information about attributes coming from another source (e.g. Draco
// compression extension).
return Promise.resolve(null);}var pendingBufferViews=[];if(accessorDef.bufferView!==undefined){pendingBufferViews.push(this.getDependency('bufferView',accessorDef.bufferView));}else{pendingBufferViews.push(null);}if(accessorDef.sparse!==undefined){pendingBufferViews.push(this.getDependency('bufferView',accessorDef.sparse.indices.bufferView));pendingBufferViews.push(this.getDependency('bufferView',accessorDef.sparse.values.bufferView));}return Promise.all(pendingBufferViews).then(function(bufferViews){var bufferView=bufferViews[0];var itemSize=WEBGL_TYPE_SIZES[accessorDef.type];var TypedArray=WEBGL_COMPONENT_TYPES[accessorDef.componentType];// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.
var elementBytes=TypedArray.BYTES_PER_ELEMENT;var itemBytes=elementBytes*itemSize;var byteOffset=accessorDef.byteOffset||0;var byteStride=accessorDef.bufferView!==undefined?json.bufferViews[accessorDef.bufferView].byteStride:undefined;var normalized=accessorDef.normalized===true;var array,bufferAttribute;// The buffer is not interleaved if the stride is the item size in bytes.
if(byteStride&&byteStride!==itemBytes){// Each "slice" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer
// This makes sure that IBA.count reflects accessor.count properly
var ibSlice=Math.floor(byteOffset/byteStride);var ibCacheKey='InterleavedBuffer:'+accessorDef.bufferView+':'+accessorDef.componentType+':'+ibSlice+':'+accessorDef.count;var ib=parser.cache.get(ibCacheKey);if(!ib){array=new TypedArray(bufferView,ibSlice*byteStride,accessorDef.count*byteStride/elementBytes);// Integer parameters to IB/IBA are in array elements, not bytes.
ib=new InterleavedBuffer(array,byteStride/elementBytes);parser.cache.add(ibCacheKey,ib);}bufferAttribute=new InterleavedBufferAttribute(ib,itemSize,byteOffset%byteStride/elementBytes,normalized);}else{if(bufferView===null){array=new TypedArray(accessorDef.count*itemSize);}else{array=new TypedArray(bufferView,byteOffset,accessorDef.count*itemSize);}bufferAttribute=new BufferAttribute(array,itemSize,normalized);}// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors
if(accessorDef.sparse!==undefined){var itemSizeIndices=WEBGL_TYPE_SIZES.SCALAR;var TypedArrayIndices=WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];var byteOffsetIndices=accessorDef.sparse.indices.byteOffset||0;var byteOffsetValues=accessorDef.sparse.values.byteOffset||0;var sparseIndices=new TypedArrayIndices(bufferViews[1],byteOffsetIndices,accessorDef.sparse.count*itemSizeIndices);var sparseValues=new TypedArray(bufferViews[2],byteOffsetValues,accessorDef.sparse.count*itemSize);if(bufferView!==null){// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.
bufferAttribute=new BufferAttribute(bufferAttribute.array.slice(),bufferAttribute.itemSize,bufferAttribute.normalized);}for(var i=0,il=sparseIndices.length;i<il;i++){var index=sparseIndices[i];bufferAttribute.setX(index,sparseValues[i*itemSize]);if(itemSize>=2)bufferAttribute.setY(index,sparseValues[i*itemSize+1]);if(itemSize>=3)bufferAttribute.setZ(index,sparseValues[i*itemSize+2]);if(itemSize>=4)bufferAttribute.setW(index,sparseValues[i*itemSize+3]);if(itemSize>=5)throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');}}return bufferAttribute;});};/**
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures
   * @param {number} textureIndex
   * @return {Promise<THREE.Texture>}
   */GLTFParser.prototype.loadTexture=function(textureIndex){var parser=this;var json=this.json;var options=this.options;var textureLoader=this.textureLoader;var URL=window.URL||window.webkitURL;var textureDef=json.textures[textureIndex];var textureExtensions=textureDef.extensions||{};var source;if(textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]){source=json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];}else{source=json.images[textureDef.source];}var sourceURI=source.uri;var isObjectURL=false;if(source.bufferView!==undefined){// Load binary image data from bufferView, if provided.
sourceURI=parser.getDependency('bufferView',source.bufferView).then(function(bufferView){isObjectURL=true;var blob=new Blob([bufferView],{type:source.mimeType});sourceURI=URL.createObjectURL(blob);return sourceURI;});}return Promise.resolve(sourceURI).then(function(sourceURI){// Load Texture resource.
var loader=options.manager.getHandler(sourceURI);if(!loader){loader=textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]?parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader:textureLoader;}return new Promise(function(resolve,reject){loader.load(resolveURL(sourceURI,options.path),resolve,undefined,reject);});}).then(function(texture){// Clean up resources and configure Texture.
if(isObjectURL===true){URL.revokeObjectURL(sourceURI);}texture.flipY=false;if(textureDef.name!==undefined)texture.name=textureDef.name;// Ignore unknown mime types, like DDS files.
if(source.mimeType in MIME_TYPE_FORMATS){texture.format=MIME_TYPE_FORMATS[source.mimeType];}var samplers=json.samplers||{};var sampler=samplers[textureDef.sampler]||{};texture.magFilter=WEBGL_FILTERS[sampler.magFilter]||LinearFilter;texture.minFilter=WEBGL_FILTERS[sampler.minFilter]||LinearMipmapLinearFilter;texture.wrapS=WEBGL_WRAPPINGS[sampler.wrapS]||RepeatWrapping$1;texture.wrapT=WEBGL_WRAPPINGS[sampler.wrapT]||RepeatWrapping$1;return texture;});};/**
   * Asynchronously assigns a texture to the given material parameters.
   * @param {Object} materialParams
   * @param {string} mapName
   * @param {Object} mapDef
   * @return {Promise}
   */GLTFParser.prototype.assignTexture=function(materialParams,mapName,mapDef){var parser=this;return this.getDependency('texture',mapDef.index).then(function(texture){if(!texture.isCompressedTexture){switch(mapName){case'aoMap':case'emissiveMap':case'metalnessMap':case'normalMap':case'roughnessMap':texture.format=RGBFormat;break;}}// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured
// However, we will copy UV set 0 to UV set 1 on demand for aoMap
if(mapDef.texCoord!==undefined&&mapDef.texCoord!=0&&!(mapName==='aoMap'&&mapDef.texCoord==1)){console.warn('THREE.GLTFLoader: Custom UV set '+mapDef.texCoord+' for texture '+mapName+' not yet supported.');}if(parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]){var transform=mapDef.extensions!==undefined?mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]:undefined;if(transform){texture=parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture,transform);}}materialParams[mapName]=texture;});};/**
   * Assigns final material to a Mesh, Line, or Points instance. The instance
   * already has a material (generated from the glTF material options alone)
   * but reuse of the same glTF material may require multiple threejs materials
   * to accomodate different primitive types, defines, etc. New materials will
   * be created if necessary, and reused from a cache.
   * @param  {Object3D} mesh Mesh, Line, or Points instance.
   */GLTFParser.prototype.assignFinalMaterial=function(mesh){var geometry=mesh.geometry;var material=mesh.material;var extensions=this.extensions;var useVertexTangents=geometry.attributes.tangent!==undefined;var useVertexColors=geometry.attributes.color!==undefined;var useFlatShading=geometry.attributes.normal===undefined;var useSkinning=mesh.isSkinnedMesh===true;var useMorphTargets=Object.keys(geometry.morphAttributes).length>0;var useMorphNormals=useMorphTargets&&geometry.morphAttributes.normal!==undefined;if(mesh.isPoints){var cacheKey='PointsMaterial:'+material.uuid;var pointsMaterial=this.cache.get(cacheKey);if(!pointsMaterial){pointsMaterial=new PointsMaterial();Material.prototype.copy.call(pointsMaterial,material);pointsMaterial.color.copy(material.color);pointsMaterial.map=material.map;pointsMaterial.sizeAttenuation=false;// glTF spec says points should be 1px
this.cache.add(cacheKey,pointsMaterial);}material=pointsMaterial;}else if(mesh.isLine){var cacheKey='LineBasicMaterial:'+material.uuid;var lineMaterial=this.cache.get(cacheKey);if(!lineMaterial){lineMaterial=new LineBasicMaterial();Material.prototype.copy.call(lineMaterial,material);lineMaterial.color.copy(material.color);this.cache.add(cacheKey,lineMaterial);}material=lineMaterial;}// Clone the material if it will be modified
if(useVertexTangents||useVertexColors||useFlatShading||useSkinning||useMorphTargets){var cacheKey='ClonedMaterial:'+material.uuid+':';if(material.isGLTFSpecularGlossinessMaterial)cacheKey+='specular-glossiness:';if(useSkinning)cacheKey+='skinning:';if(useVertexTangents)cacheKey+='vertex-tangents:';if(useVertexColors)cacheKey+='vertex-colors:';if(useFlatShading)cacheKey+='flat-shading:';if(useMorphTargets)cacheKey+='morph-targets:';if(useMorphNormals)cacheKey+='morph-normals:';var cachedMaterial=this.cache.get(cacheKey);if(!cachedMaterial){cachedMaterial=material.isGLTFSpecularGlossinessMaterial?extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(material):material.clone();if(useSkinning)cachedMaterial.skinning=true;if(useVertexTangents)cachedMaterial.vertexTangents=true;if(useVertexColors)cachedMaterial.vertexColors=VertexColors;if(useFlatShading)cachedMaterial.flatShading=true;if(useMorphTargets)cachedMaterial.morphTargets=true;if(useMorphNormals)cachedMaterial.morphNormals=true;this.cache.add(cacheKey,cachedMaterial);}material=cachedMaterial;}// workarounds for mesh and geometry
if(material.aoMap&&geometry.attributes.uv2===undefined&&geometry.attributes.uv!==undefined){geometry.setAttribute('uv2',new BufferAttribute(geometry.attributes.uv.array,2));}if(material.isGLTFSpecularGlossinessMaterial){// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update
mesh.onBeforeRender=extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms;}// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995
if(material.normalScale&&!useVertexTangents){material.normalScale.y=-material.normalScale.y;}mesh.material=material;};/**
   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials
   * @param {number} materialIndex
   * @return {Promise<Material>}
   */GLTFParser.prototype.loadMaterial=function(materialIndex){var parser=this;var json=this.json;var extensions=this.extensions;var materialDef=json.materials[materialIndex];var materialType;var materialParams={};var materialExtensions=materialDef.extensions||{};var pending=[];if(materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var sgExtension=extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];materialType=sgExtension.getMaterialType();pending.push(sgExtension.extendParams(materialParams,materialDef,parser));}else if(materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]){var kmuExtension=extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];materialType=kmuExtension.getMaterialType();pending.push(kmuExtension.extendParams(materialParams,materialDef,parser));}else{// Specification:
// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material
materialType=MeshStandardMaterial;var metallicRoughness=materialDef.pbrMetallicRoughness||{};materialParams.color=new Color(1.0,1.0,1.0);materialParams.opacity=1.0;if(Array.isArray(metallicRoughness.baseColorFactor)){var array=metallicRoughness.baseColorFactor;materialParams.color.fromArray(array);materialParams.opacity=array[3];}if(metallicRoughness.baseColorTexture!==undefined){pending.push(parser.assignTexture(materialParams,'map',metallicRoughness.baseColorTexture));}materialParams.metalness=metallicRoughness.metallicFactor!==undefined?metallicRoughness.metallicFactor:1.0;materialParams.roughness=metallicRoughness.roughnessFactor!==undefined?metallicRoughness.roughnessFactor:1.0;if(metallicRoughness.metallicRoughnessTexture!==undefined){pending.push(parser.assignTexture(materialParams,'metalnessMap',metallicRoughness.metallicRoughnessTexture));pending.push(parser.assignTexture(materialParams,'roughnessMap',metallicRoughness.metallicRoughnessTexture));}}if(materialDef.doubleSided===true){materialParams.side=DoubleSide;}var alphaMode=materialDef.alphaMode||ALPHA_MODES.OPAQUE;if(alphaMode===ALPHA_MODES.BLEND){materialParams.transparent=true;}else{materialParams.transparent=false;if(alphaMode===ALPHA_MODES.MASK){materialParams.alphaTest=materialDef.alphaCutoff!==undefined?materialDef.alphaCutoff:0.5;}}if(materialDef.normalTexture!==undefined&&materialType!==MeshBasicMaterial){pending.push(parser.assignTexture(materialParams,'normalMap',materialDef.normalTexture));materialParams.normalScale=new Vector2(1,1);if(materialDef.normalTexture.scale!==undefined){materialParams.normalScale.set(materialDef.normalTexture.scale,materialDef.normalTexture.scale);}}if(materialDef.occlusionTexture!==undefined&&materialType!==MeshBasicMaterial){pending.push(parser.assignTexture(materialParams,'aoMap',materialDef.occlusionTexture));if(materialDef.occlusionTexture.strength!==undefined){materialParams.aoMapIntensity=materialDef.occlusionTexture.strength;}}if(materialDef.emissiveFactor!==undefined&&materialType!==MeshBasicMaterial){materialParams.emissive=new Color().fromArray(materialDef.emissiveFactor);}if(materialDef.emissiveTexture!==undefined&&materialType!==MeshBasicMaterial){pending.push(parser.assignTexture(materialParams,'emissiveMap',materialDef.emissiveTexture));}return Promise.all(pending).then(function(){var material;if(materialType===ShaderMaterial){material=extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);}else{material=new materialType(materialParams);}if(materialDef.name!==undefined)material.name=materialDef.name;// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.
if(material.map)material.map.encoding=sRGBEncoding;if(material.emissiveMap)material.emissiveMap.encoding=sRGBEncoding;if(material.specularMap)material.specularMap.encoding=sRGBEncoding;assignExtrasToUserData(material,materialDef);if(materialDef.extensions)addUnknownExtensionsToUserData(extensions,material,materialDef);return material;});};/**
   * @param {BufferGeometry} geometry
   * @param {GLTF.Primitive} primitiveDef
   * @param {GLTFParser} parser
   */function computeBounds(geometry,primitiveDef,parser){var attributes=primitiveDef.attributes;var box=new Box3();if(attributes.POSITION!==undefined){var accessor=parser.json.accessors[attributes.POSITION];var min=accessor.min;var max=accessor.max;// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.
if(min!==undefined&&max!==undefined){box.set(new Vector3$1(min[0],min[1],min[2]),new Vector3$1(max[0],max[1],max[2]));}else{console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');return;}}else{return;}var targets=primitiveDef.targets;if(targets!==undefined){var vector=new Vector3$1();for(var i=0,il=targets.length;i<il;i++){var target=targets[i];if(target.POSITION!==undefined){var accessor=parser.json.accessors[target.POSITION];var min=accessor.min;var max=accessor.max;// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.
if(min!==undefined&&max!==undefined){// we need to get max of absolute components because target weight is [-1,1]
vector.setX(Math.max(Math.abs(min[0]),Math.abs(max[0])));vector.setY(Math.max(Math.abs(min[1]),Math.abs(max[1])));vector.setZ(Math.max(Math.abs(min[2]),Math.abs(max[2])));box.expandByVector(vector);}else{console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');}}}}geometry.boundingBox=box;var sphere=new Sphere();box.getCenter(sphere.center);sphere.radius=box.min.distanceTo(box.max)/2;geometry.boundingSphere=sphere;}/**
   * @param {BufferGeometry} geometry
   * @param {GLTF.Primitive} primitiveDef
   * @param {GLTFParser} parser
   * @return {Promise<BufferGeometry>}
   */function addPrimitiveAttributes(geometry,primitiveDef,parser){var attributes=primitiveDef.attributes;var pending=[];function assignAttributeAccessor(accessorIndex,attributeName){return parser.getDependency('accessor',accessorIndex).then(function(accessor){geometry.setAttribute(attributeName,accessor);});}for(var gltfAttributeName in attributes){var threeAttributeName=ATTRIBUTES[gltfAttributeName]||gltfAttributeName.toLowerCase();// Skip attributes already provided by e.g. Draco extension.
if(threeAttributeName in geometry.attributes)continue;pending.push(assignAttributeAccessor(attributes[gltfAttributeName],threeAttributeName));}if(primitiveDef.indices!==undefined&&!geometry.index){var accessor=parser.getDependency('accessor',primitiveDef.indices).then(function(accessor){geometry.setIndex(accessor);});pending.push(accessor);}assignExtrasToUserData(geometry,primitiveDef);computeBounds(geometry,primitiveDef,parser);return Promise.all(pending).then(function(){return primitiveDef.targets!==undefined?addMorphTargets(geometry,primitiveDef.targets,parser):geometry;});}/**
   * @param {BufferGeometry} geometry
   * @param {Number} drawMode
   * @return {BufferGeometry}
   */function toTrianglesDrawMode(geometry,drawMode){var index=geometry.getIndex();// generate index if not present
if(index===null){var indices=[];var position=geometry.getAttribute('position');if(position!==undefined){for(var i=0;i<position.count;i++){indices.push(i);}geometry.setIndex(indices);index=geometry.getIndex();}else{console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.');return geometry;}}//
var numberOfTriangles=index.count-2;var newIndices=[];if(drawMode===TriangleFanDrawMode){// gl.TRIANGLE_FAN
for(var i=1;i<=numberOfTriangles;i++){newIndices.push(index.getX(0));newIndices.push(index.getX(i));newIndices.push(index.getX(i+1));}}else{// gl.TRIANGLE_STRIP
for(var i=0;i<numberOfTriangles;i++){if(i%2===0){newIndices.push(index.getX(i));newIndices.push(index.getX(i+1));newIndices.push(index.getX(i+2));}else{newIndices.push(index.getX(i+2));newIndices.push(index.getX(i+1));newIndices.push(index.getX(i));}}}if(newIndices.length/3!==numberOfTriangles){console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');}// build final geometry
var newGeometry=geometry.clone();newGeometry.setIndex(newIndices);return newGeometry;}/**
   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry
   *
   * Creates BufferGeometries from primitives.
   *
   * @param {Array<GLTF.Primitive>} primitives
   * @return {Promise<Array<BufferGeometry>>}
   */GLTFParser.prototype.loadGeometries=function(primitives){var parser=this;var extensions=this.extensions;var cache=this.primitiveCache;function createDracoPrimitive(primitive){return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive,parser).then(function(geometry){return addPrimitiveAttributes(geometry,primitive,parser);});}var pending=[];for(var i=0,il=primitives.length;i<il;i++){var primitive=primitives[i];var cacheKey=createPrimitiveKey(primitive);// See if we've already created this geometry
var cached=cache[cacheKey];if(cached){// Use the cached geometry if it exists
pending.push(cached.promise);}else{var geometryPromise;if(primitive.extensions&&primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]){// Use DRACO geometry if available
geometryPromise=createDracoPrimitive(primitive);}else{// Otherwise create a new geometry
geometryPromise=addPrimitiveAttributes(new BufferGeometry(),primitive,parser);}// Cache this geometry
cache[cacheKey]={primitive:primitive,promise:geometryPromise};pending.push(geometryPromise);}}return Promise.all(pending);};/**
   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes
   * @param {number} meshIndex
   * @return {Promise<Group|Mesh|SkinnedMesh>}
   */GLTFParser.prototype.loadMesh=function(meshIndex){var parser=this;var json=this.json;var meshDef=json.meshes[meshIndex];var primitives=meshDef.primitives;var pending=[];for(var i=0,il=primitives.length;i<il;i++){var material=primitives[i].material===undefined?createDefaultMaterial(this.cache):this.getDependency('material',primitives[i].material);pending.push(material);}pending.push(parser.loadGeometries(primitives));return Promise.all(pending).then(function(results){var materials=results.slice(0,results.length-1);var geometries=results[results.length-1];var meshes=[];for(var i=0,il=geometries.length;i<il;i++){var geometry=geometries[i];var primitive=primitives[i];// 1. create Mesh
var mesh;var material=materials[i];if(primitive.mode===WEBGL_CONSTANTS.TRIANGLES||primitive.mode===WEBGL_CONSTANTS.TRIANGLE_STRIP||primitive.mode===WEBGL_CONSTANTS.TRIANGLE_FAN||primitive.mode===undefined){// .isSkinnedMesh isn't in glTF spec. See .markDefs()
mesh=meshDef.isSkinnedMesh===true?new SkinnedMesh(geometry,material):new Mesh(geometry,material);if(mesh.isSkinnedMesh===true&&!mesh.geometry.attributes.skinWeight.normalized){// we normalize floating point skin weight array to fix malformed assets (see #15319)
// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs
mesh.normalizeSkinWeights();}if(primitive.mode===WEBGL_CONSTANTS.TRIANGLE_STRIP){mesh.geometry=toTrianglesDrawMode(mesh.geometry,TriangleStripDrawMode);}else if(primitive.mode===WEBGL_CONSTANTS.TRIANGLE_FAN){mesh.geometry=toTrianglesDrawMode(mesh.geometry,TriangleFanDrawMode);}}else if(primitive.mode===WEBGL_CONSTANTS.LINES){mesh=new LineSegments(geometry,material);}else if(primitive.mode===WEBGL_CONSTANTS.LINE_STRIP){mesh=new Line(geometry,material);}else if(primitive.mode===WEBGL_CONSTANTS.LINE_LOOP){mesh=new LineLoop(geometry,material);}else if(primitive.mode===WEBGL_CONSTANTS.POINTS){mesh=new Points(geometry,material);}else{throw new Error('THREE.GLTFLoader: Primitive mode unsupported: '+primitive.mode);}if(Object.keys(mesh.geometry.morphAttributes).length>0){updateMorphTargets(mesh,meshDef);}mesh.name=meshDef.name||'mesh_'+meshIndex;if(geometries.length>1)mesh.name+='_'+i;assignExtrasToUserData(mesh,meshDef);parser.assignFinalMaterial(mesh);meshes.push(mesh);}if(meshes.length===1){return meshes[0];}var group=new Group();for(var i=0,il=meshes.length;i<il;i++){group.add(meshes[i]);}return group;});};/**
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras
   * @param {number} cameraIndex
   * @return {Promise<THREE.Camera>}
   */GLTFParser.prototype.loadCamera=function(cameraIndex){var camera;var cameraDef=this.json.cameras[cameraIndex];var params=cameraDef[cameraDef.type];if(!params){console.warn('THREE.GLTFLoader: Missing camera parameters.');return;}if(cameraDef.type==='perspective'){camera=new PerspectiveCamera(MathUtils.radToDeg(params.yfov),params.aspectRatio||1,params.znear||1,params.zfar||2e6);}else if(cameraDef.type==='orthographic'){camera=new OrthographicCamera(params.xmag/-2,params.xmag/2,params.ymag/2,params.ymag/-2,params.znear,params.zfar);}if(cameraDef.name!==undefined)camera.name=cameraDef.name;assignExtrasToUserData(camera,cameraDef);return Promise.resolve(camera);};/**
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins
   * @param {number} skinIndex
   * @return {Promise<Object>}
   */GLTFParser.prototype.loadSkin=function(skinIndex){var skinDef=this.json.skins[skinIndex];var skinEntry={joints:skinDef.joints};if(skinDef.inverseBindMatrices===undefined){return Promise.resolve(skinEntry);}return this.getDependency('accessor',skinDef.inverseBindMatrices).then(function(accessor){skinEntry.inverseBindMatrices=accessor;return skinEntry;});};/**
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations
   * @param {number} animationIndex
   * @return {Promise<AnimationClip>}
   */GLTFParser.prototype.loadAnimation=function(animationIndex){var json=this.json;var animationDef=json.animations[animationIndex];var pendingNodes=[];var pendingInputAccessors=[];var pendingOutputAccessors=[];var pendingSamplers=[];var pendingTargets=[];for(var i=0,il=animationDef.channels.length;i<il;i++){var channel=animationDef.channels[i];var sampler=animationDef.samplers[channel.sampler];var target=channel.target;var name=target.node!==undefined?target.node:target.id;// NOTE: target.id is deprecated.
var input=animationDef.parameters!==undefined?animationDef.parameters[sampler.input]:sampler.input;var output=animationDef.parameters!==undefined?animationDef.parameters[sampler.output]:sampler.output;pendingNodes.push(this.getDependency('node',name));pendingInputAccessors.push(this.getDependency('accessor',input));pendingOutputAccessors.push(this.getDependency('accessor',output));pendingSamplers.push(sampler);pendingTargets.push(target);}return Promise.all([Promise.all(pendingNodes),Promise.all(pendingInputAccessors),Promise.all(pendingOutputAccessors),Promise.all(pendingSamplers),Promise.all(pendingTargets)]).then(function(dependencies){var nodes=dependencies[0];var inputAccessors=dependencies[1];var outputAccessors=dependencies[2];var samplers=dependencies[3];var targets=dependencies[4];var tracks=[];for(var i=0,il=nodes.length;i<il;i++){var node=nodes[i];var inputAccessor=inputAccessors[i];var outputAccessor=outputAccessors[i];var sampler=samplers[i];var target=targets[i];if(node===undefined)continue;node.updateMatrix();node.matrixAutoUpdate=true;var TypedKeyframeTrack;switch(PATH_PROPERTIES[target.path]){case PATH_PROPERTIES.weights:TypedKeyframeTrack=NumberKeyframeTrack;break;case PATH_PROPERTIES.rotation:TypedKeyframeTrack=QuaternionKeyframeTrack;break;case PATH_PROPERTIES.position:case PATH_PROPERTIES.scale:default:TypedKeyframeTrack=VectorKeyframeTrack;break;}var targetName=node.name?node.name:node.uuid;var interpolation=sampler.interpolation!==undefined?INTERPOLATION[sampler.interpolation]:InterpolateLinear;var targetNames=[];if(PATH_PROPERTIES[target.path]===PATH_PROPERTIES.weights){// Node may be a Group (glTF mesh with several primitives) or a Mesh.
node.traverse(function(object){if(object.isMesh===true&&object.morphTargetInfluences){targetNames.push(object.name?object.name:object.uuid);}});}else{targetNames.push(targetName);}var outputArray=outputAccessor.array;if(outputAccessor.normalized){var scale;if(outputArray.constructor===Int8Array){scale=1/127;}else if(outputArray.constructor===Uint8Array){scale=1/255;}else if(outputArray.constructor==Int16Array){scale=1/32767;}else if(outputArray.constructor===Uint16Array){scale=1/65535;}else{throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');}var scaled=new Float32Array(outputArray.length);for(var j=0,jl=outputArray.length;j<jl;j++){scaled[j]=outputArray[j]*scale;}outputArray=scaled;}for(var j=0,jl=targetNames.length;j<jl;j++){var track=new TypedKeyframeTrack(targetNames[j]+'.'+PATH_PROPERTIES[target.path],inputAccessor.array,outputArray,interpolation);// Override interpolation with custom factory method.
if(sampler.interpolation==='CUBICSPLINE'){track.createInterpolant=function InterpolantFactoryMethodGLTFCubicSpline(result){// A CUBICSPLINE keyframe in glTF has three output values for each input value,
// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()
// must be divided by three to get the interpolant's sampleSize argument.
return new GLTFCubicSplineInterpolant(this.times,this.values,this.getValueSize()/3,result);};// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.
track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=true;}tracks.push(track);}}var name=animationDef.name!==undefined?animationDef.name:'animation_'+animationIndex;return new AnimationClip(name,undefined,tracks);});};/**
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy
   * @param {number} nodeIndex
   * @return {Promise<Object3D>}
   */GLTFParser.prototype.loadNode=function(nodeIndex){var json=this.json;var extensions=this.extensions;var parser=this;var meshReferences=json.meshReferences;var meshUses=json.meshUses;var nodeDef=json.nodes[nodeIndex];return function(){var pending=[];if(nodeDef.mesh!==undefined){pending.push(parser.getDependency('mesh',nodeDef.mesh).then(function(mesh){var node;if(meshReferences[nodeDef.mesh]>1){var instanceNum=meshUses[nodeDef.mesh]++;node=mesh.clone();node.name+='_instance_'+instanceNum;// onBeforeRender copy for Specular-Glossiness
node.onBeforeRender=mesh.onBeforeRender;for(var i=0,il=node.children.length;i<il;i++){node.children[i].name+='_instance_'+instanceNum;node.children[i].onBeforeRender=mesh.children[i].onBeforeRender;}}else{node=mesh;}// if weights are provided on the node, override weights on the mesh.
if(nodeDef.weights!==undefined){node.traverse(function(o){if(!o.isMesh)return;for(var i=0,il=nodeDef.weights.length;i<il;i++){o.morphTargetInfluences[i]=nodeDef.weights[i];}});}return node;}));}if(nodeDef.camera!==undefined){pending.push(parser.getDependency('camera',nodeDef.camera));}if(nodeDef.extensions&&nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]&&nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light!==undefined){pending.push(parser.getDependency('light',nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));}return Promise.all(pending);}().then(function(objects){var node;// .isBone isn't in glTF spec. See .markDefs
if(nodeDef.isBone===true){node=new Bone();}else if(objects.length>1){node=new Group();}else if(objects.length===1){node=objects[0];}else{node=new Object3D();}if(node!==objects[0]){for(var i=0,il=objects.length;i<il;i++){node.add(objects[i]);}}if(nodeDef.name!==undefined){node.userData.name=nodeDef.name;node.name=PropertyBinding.sanitizeNodeName(nodeDef.name);}assignExtrasToUserData(node,nodeDef);if(nodeDef.extensions)addUnknownExtensionsToUserData(extensions,node,nodeDef);if(nodeDef.matrix!==undefined){var matrix=new Matrix4();matrix.fromArray(nodeDef.matrix);node.applyMatrix(matrix);}else{if(nodeDef.translation!==undefined){node.position.fromArray(nodeDef.translation);}if(nodeDef.rotation!==undefined){node.quaternion.fromArray(nodeDef.rotation);}if(nodeDef.scale!==undefined){node.scale.fromArray(nodeDef.scale);}}return node;});};/**
   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes
   * @param {number} sceneIndex
   * @return {Promise<Scene>}
   */GLTFParser.prototype.loadScene=function(){// scene node hierachy builder
function buildNodeHierachy(nodeId,parentObject,json,parser){var nodeDef=json.nodes[nodeId];return parser.getDependency('node',nodeId).then(function(node){if(nodeDef.skin===undefined)return node;// build skeleton here as well
var skinEntry;return parser.getDependency('skin',nodeDef.skin).then(function(skin){skinEntry=skin;var pendingJoints=[];for(var i=0,il=skinEntry.joints.length;i<il;i++){pendingJoints.push(parser.getDependency('node',skinEntry.joints[i]));}return Promise.all(pendingJoints);}).then(function(jointNodes){node.traverse(function(mesh){if(!mesh.isMesh)return;var bones=[];var boneInverses=[];for(var j=0,jl=jointNodes.length;j<jl;j++){var jointNode=jointNodes[j];if(jointNode){bones.push(jointNode);var mat=new Matrix4();if(skinEntry.inverseBindMatrices!==undefined){mat.fromArray(skinEntry.inverseBindMatrices.array,j*16);}boneInverses.push(mat);}else{console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',skinEntry.joints[j]);}}mesh.bind(new Skeleton(bones,boneInverses),mesh.matrixWorld);});return node;});}).then(function(node){// build node hierachy
parentObject.add(node);var pending=[];if(nodeDef.children){var children=nodeDef.children;for(var i=0,il=children.length;i<il;i++){var child=children[i];pending.push(buildNodeHierachy(child,node,json,parser));}}return Promise.all(pending);});}return function loadScene(sceneIndex){var json=this.json;var extensions=this.extensions;var sceneDef=this.json.scenes[sceneIndex];var parser=this;var scene=new Scene();if(sceneDef.name!==undefined)scene.name=sceneDef.name;assignExtrasToUserData(scene,sceneDef);if(sceneDef.extensions)addUnknownExtensionsToUserData(extensions,scene,sceneDef);var nodeIds=sceneDef.nodes||[];var pending=[];for(var i=0,il=nodeIds.length;i<il;i++){pending.push(buildNodeHierachy(nodeIds[i],scene,json,parser));}return Promise.all(pending).then(function(){return scene;});};}();return GLTFLoader;}();function _createSuper2$k(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var TGA_TYPE_NO_DATA=0;var TGA_TYPE_INDEXED=1;var TGA_TYPE_RGB=2;var TGA_TYPE_GREY=3;var TGA_TYPE_RLE_INDEXED=9;var TGA_TYPE_RLE_RGB=10;var TGA_TYPE_RLE_GREY=11;var TGA_ORIGIN_MASK=0x30;var TGA_ORIGIN_SHIFT=0x04;var TGA_ORIGIN_BL=0x00;var TGA_ORIGIN_BR=0x01;var TGA_ORIGIN_UL=0x02;var TGA_ORIGIN_UR=0x03;var TGALoader=/*#__PURE__*/function(_Loader){_inherits(TGALoader,_Loader);var _super=_createSuper2$k(TGALoader);function TGALoader(manager){_classCallCheck(this,TGALoader);return _super.call(this,manager);}_createClass(TGALoader,[{key:"load",value:function load(url,onLoad,onProgress,onError){var _this=this;var texture=new Texture();var loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setPath(this.path);loader.load(url,function(buffer){texture.image=_this.parse(buffer);texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}},onProgress,onError);return texture;}},{key:"parse",value:function parse(buffer){// reference from vthibault, https://github.com/vthibault/roBrowser/blob/master/src/Loaders/Targa.js
// TGA constants
if(buffer.length<19)console.error('THREE.TGALoader: Not enough data to contain header.');var content=new Uint8Array(buffer),offset=0,header={id_length:content[offset++],colormap_type:content[offset++],image_type:content[offset++],colormap_index:content[offset++]|content[offset++]<<8,colormap_length:content[offset++]|content[offset++]<<8,colormap_size:content[offset++],origin:[content[offset++]|content[offset++]<<8,content[offset++]|content[offset++]<<8],width:content[offset++]|content[offset++]<<8,height:content[offset++]|content[offset++]<<8,pixel_size:content[offset++],flags:content[offset++]};// check tga if it is valid format
TGALoader.tgaCheckHeader(header);if(header.id_length+offset>buffer.length){console.error('THREE.TGALoader: No data.');}// skip the needn't data
offset+=header.id_length;// get targa information about RLE compression and palette
var use_rle=false,use_pal=false,use_grey=false;switch(header.image_type){case TGA_TYPE_RLE_INDEXED:use_rle=true;use_pal=true;break;case TGA_TYPE_INDEXED:use_pal=true;break;case TGA_TYPE_RLE_RGB:use_rle=true;break;case TGA_TYPE_RGB:break;case TGA_TYPE_RLE_GREY:use_rle=true;use_grey=true;break;case TGA_TYPE_GREY:use_grey=true;break;}//
var useOffscreen=typeof OffscreenCanvas!=='undefined';var canvas=useOffscreen?new OffscreenCanvas(header.width,header.height):document.createElement('canvas');canvas.width=header.width;canvas.height=header.height;var context=canvas.getContext('2d');var imageData=context.createImageData(header.width,header.height);var result=TGALoader.tgaParse(use_rle,use_pal,header,offset,content);TGALoader.getTgaRGBA(imageData.data,header.width,header.height,result.pixel_data,result.palettes,use_grey);context.putImageData(imageData,0,0);return useOffscreen?canvas.transferToImageBitmap():canvas;}}],[{key:"tgaCheckHeader",value:function tgaCheckHeader(header){switch(header.image_type){// check indexed type
case TGA_TYPE_INDEXED:case TGA_TYPE_RLE_INDEXED:if(header.colormap_length>256||header.colormap_size!==24||header.colormap_type!==1){throw'THREE.TGALoader: Invalid type colormap data for indexed type.';}break;// check colormap type
case TGA_TYPE_RGB:case TGA_TYPE_GREY:case TGA_TYPE_RLE_RGB:case TGA_TYPE_RLE_GREY:if(header.colormap_type){throw'THREE.TGALoader: Invalid type colormap data for colormap type.';}break;// What the need of a file without data ?
case TGA_TYPE_NO_DATA:throw'THREE.TGALoader: No data.';// Invalid type ?
default:throw"THREE.TGALoader: Invalid type ".concat(header.image_type);}// check image width and height
if(header.width<=0||header.height<=0){throw'THREE.TGALoader: Invalid image size.';}// check image pixel size
if(header.pixel_size!==8&&header.pixel_size!==16&&header.pixel_size!==24&&header.pixel_size!==32){throw"THREE.TGALoader: Invalid pixel size \"".concat(header.pixel_size,"\".");}}},{key:"tgaParse",value:function tgaParse(use_rle,use_pal,header,offset,data){var pixel_data,pixel_size,pixel_total,palettes;pixel_size=header.pixel_size>>3;pixel_total=header.width*header.height*pixel_size;// read palettes
if(use_pal){palettes=data.subarray(offset,offset+=header.colormap_length*(header.colormap_size>>3));}// read RLE
if(use_rle){pixel_data=new Uint8Array(pixel_total);var c,count,i;var shift=0;var pixels=new Uint8Array(pixel_size);while(shift<pixel_total){c=data[offset++];count=(c&0x7f)+1;// RLE pixels
if(c&0x80){// bind pixel tmp array
for(i=0;i<pixel_size;++i){pixels[i]=data[offset++];}// copy pixel array
for(i=0;i<count;++i){pixel_data.set(pixels,shift+i*pixel_size);}shift+=pixel_size*count;}else{// raw pixels
count*=pixel_size;for(i=0;i<count;++i){pixel_data[shift+i]=data[offset++];}shift+=count;}}}else{// raw pixels
pixel_data=data.subarray(offset,offset+=use_pal?header.width*header.height:pixel_total);}return{pixel_data:pixel_data,palettes:palettes};}},{key:"tgaGetImageData8bits",value:function tgaGetImageData8bits(header,imageData,y_start,y_step,y_end,x_start,x_step,x_end,image,palettes){var colormap=palettes;var color,i=0,x,y;var width=header.width;for(y=y_start;y!==y_end;y+=y_step){for(x=x_start;x!==x_end;x+=x_step,i++){color=image[i];imageData[(x+width*y)*4+3]=255;imageData[(x+width*y)*4+2]=colormap[color*3+0];imageData[(x+width*y)*4+1]=colormap[color*3+1];imageData[(x+width*y)*4+0]=colormap[color*3+2];}}return imageData;}},{key:"tgaGetImageData16bits",value:function tgaGetImageData16bits(header,imageData,y_start,y_step,y_end,x_start,x_step,x_end,image){var color,i=0,x,y;var width=header.width;for(y=y_start;y!==y_end;y+=y_step){for(x=x_start;x!==x_end;x+=x_step,i+=2){color=image[i+0]+(image[i+1]<<8);// Inversed ?
imageData[(x+width*y)*4+0]=(color&0x7C00)>>7;imageData[(x+width*y)*4+1]=(color&0x03E0)>>2;imageData[(x+width*y)*4+2]=(color&0x001F)>>3;imageData[(x+width*y)*4+3]=color&0x8000?0:255;}}return imageData;}},{key:"tgaGetImageData24bits",value:function tgaGetImageData24bits(header,imageData,y_start,y_step,y_end,x_start,x_step,x_end,image){var i=0,x,y;var width=header.width;for(y=y_start;y!==y_end;y+=y_step){for(x=x_start;x!==x_end;x+=x_step,i+=3){imageData[(x+width*y)*4+3]=255;imageData[(x+width*y)*4+2]=image[i+0];imageData[(x+width*y)*4+1]=image[i+1];imageData[(x+width*y)*4+0]=image[i+2];}}return imageData;}},{key:"tgaGetImageData32bits",value:function tgaGetImageData32bits(header,imageData,y_start,y_step,y_end,x_start,x_step,x_end,image){var i=0,x,y;var width=header.width;for(y=y_start;y!==y_end;y+=y_step){for(x=x_start;x!==x_end;x+=x_step,i+=4){imageData[(x+width*y)*4+2]=image[i+0];imageData[(x+width*y)*4+1]=image[i+1];imageData[(x+width*y)*4+0]=image[i+2];imageData[(x+width*y)*4+3]=image[i+3];}}return imageData;}},{key:"tgaGetImageDataGrey8bits",value:function tgaGetImageDataGrey8bits(header,imageData,y_start,y_step,y_end,x_start,x_step,x_end,image){var color,i=0,x,y;var width=header.width;for(y=y_start;y!==y_end;y+=y_step){for(x=x_start;x!==x_end;x+=x_step,i++){color=image[i];imageData[(x+width*y)*4+0]=color;imageData[(x+width*y)*4+1]=color;imageData[(x+width*y)*4+2]=color;imageData[(x+width*y)*4+3]=255;}}return imageData;}},{key:"tgaGetImageDataGrey16bits",value:function tgaGetImageDataGrey16bits(header,imageData,y_start,y_step,y_end,x_start,x_step,x_end,image){var i=0,x,y;var width=header.width;for(y=y_start;y!==y_end;y+=y_step){for(x=x_start;x!==x_end;x+=x_step,i+=2){imageData[(x+width*y)*4+0]=image[i+0];imageData[(x+width*y)*4+1]=image[i+0];imageData[(x+width*y)*4+2]=image[i+0];imageData[(x+width*y)*4+3]=image[i+1];}}return imageData;}},{key:"getTgaRGBA",value:function getTgaRGBA(header,data,width,height,image,palette,use_grey){var x_start,y_start,x_step,y_step,x_end,y_end;switch((header.flags&TGA_ORIGIN_MASK)>>TGA_ORIGIN_SHIFT){default:case TGA_ORIGIN_UL:x_start=0;x_step=1;x_end=width;y_start=0;y_step=1;y_end=height;break;case TGA_ORIGIN_BL:x_start=0;x_step=1;x_end=width;y_start=height-1;y_step=-1;y_end=-1;break;case TGA_ORIGIN_UR:x_start=width-1;x_step=-1;x_end=-1;y_start=0;y_step=1;y_end=height;break;case TGA_ORIGIN_BR:x_start=width-1;x_step=-1;x_end=-1;y_start=height-1;y_step=-1;y_end=-1;break;}if(use_grey){switch(header.pixel_size){case 8:TGALoader.tgaGetImageDataGrey8bits(header,data,y_start,y_step,y_end,x_start,x_step,x_end,image);break;case 16:TGALoader.tgaGetImageDataGrey16bits(header,data,y_start,y_step,y_end,x_start,x_step,x_end,image);break;default:console.error('THREE.TGALoader: Format not supported.');break;}}else{switch(header.pixel_size){case 8:TGALoader.tgaGetImageData8bits(header,data,y_start,y_step,y_end,x_start,x_step,x_end,image,palette);break;case 16:TGALoader.tgaGetImageData16bits(header,data,y_start,y_step,y_end,x_start,x_step,x_end,image);break;case 24:TGALoader.tgaGetImageData24bits(header,data,y_start,y_step,y_end,x_start,x_step,x_end,image);break;case 32:TGALoader.tgaGetImageData32bits(header,data,y_start,y_step,y_end,x_start,x_step,x_end,image);break;default:console.error('THREE.TGALoader: Format not supported.');break;}}// Load image data according to specific method
// var func = 'tgaGetImageData' + (use_grey ? 'Grey' : '') + (header.pixel_size) + 'bits';
// func(data, y_start, y_step, y_end, x_start, x_step, x_end, width, image, palette);
return data;}}]);return TGALoader;}(Loader);function _createSuper2$l(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var ColladaLoader=/*#__PURE__*/function(_Loader){_inherits(ColladaLoader,_Loader);var _super=_createSuper2$l(ColladaLoader);function ColladaLoader(manager){_classCallCheck(this,ColladaLoader);return _super.call(this,manager);}_createClass(ColladaLoader,[{key:"load",value:function load(url,onLoad,onProgress,onError){var scope=this;var path=scope.path===''?LoaderUtils.extractUrlBase(url):scope.path;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){onLoad(scope.parse(text,path));},onProgress,onError);}},{key:"parse",value:function parse(text,path){function getElementsByTagName(xml,name){// Non recursive xml.getElementsByTagName() ...
var array=[];var childNodes=xml.childNodes;for(var i=0,l=childNodes.length;i<l;i++){var child=childNodes[i];if(child.nodeName===name){array.push(child);}}return array;}function parseStrings(text){if(text.length===0)return[];var parts=text.trim().split(/\s+/);var array=new Array(parts.length);for(var i=0,l=parts.length;i<l;i++){array[i]=parts[i];}return array;}function parseFloats(text){if(text.length===0)return[];var parts=text.trim().split(/\s+/);var array=new Array(parts.length);for(var i=0,l=parts.length;i<l;i++){array[i]=parseFloat(parts[i]);}return array;}function parseInts(text){if(text.length===0)return[];var parts=text.trim().split(/\s+/);var array=new Array(parts.length);for(var i=0,l=parts.length;i<l;i++){array[i]=parseInt(parts[i]);}return array;}function parseId(text){return text.substring(1);}function generateId(){return'three_default_'+count++;}function isEmpty(object){return Object.keys(object).length===0;}// asset
function parseAsset(xml){return{unit:parseAssetUnit(getElementsByTagName(xml,'unit')[0]),upAxis:parseAssetUpAxis(getElementsByTagName(xml,'up_axis')[0])};}function parseAssetUnit(xml){if(xml!==undefined&&xml.hasAttribute('meter')===true){return parseFloat(xml.getAttribute('meter'));}else{return 1;// default 1 meter
}}function parseAssetUpAxis(xml){return xml!==undefined?xml.textContent:'Y_UP';}// library
function parseLibrary(xml,libraryName,nodeName,parser){var library=getElementsByTagName(xml,libraryName)[0];if(library!==undefined){var elements=getElementsByTagName(library,nodeName);for(var i=0;i<elements.length;i++){parser(elements[i]);}}}function buildLibrary(data,builder){for(var name in data){var object=data[name];object.build=builder(data[name]);}}// get
function getBuild(data,builder){if(data.build!==undefined)return data.build;data.build=builder(data);return data.build;}// animation
function parseAnimation(xml){var data={sources:{},samplers:{},channels:{}};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;var id;switch(child.nodeName){case'source':id=child.getAttribute('id');data.sources[id]=parseSource(child);break;case'sampler':id=child.getAttribute('id');data.samplers[id]=parseAnimationSampler(child);break;case'channel':id=child.getAttribute('target');data.channels[id]=parseAnimationChannel(child);break;default:console.log(child);}}library.animations[xml.getAttribute('id')]=data;}function parseAnimationSampler(xml){var data={inputs:{}};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'input':var id=parseId(child.getAttribute('source'));var semantic=child.getAttribute('semantic');data.inputs[semantic]=id;break;}}return data;}function parseAnimationChannel(xml){var data={};var target=xml.getAttribute('target');// parsing SID Addressing Syntax
var parts=target.split('/');var id=parts.shift();var sid=parts.shift();// check selection syntax
var arraySyntax=sid.indexOf('(')!==-1;var memberSyntax=sid.indexOf('.')!==-1;if(memberSyntax){//  member selection access
parts=sid.split('.');sid=parts.shift();data.member=parts.shift();}else if(arraySyntax){// array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.
var indices=sid.split('(');sid=indices.shift();for(var i=0;i<indices.length;i++){indices[i]=parseInt(indices[i].replace(/\)/,''));}data.indices=indices;}data.id=id;data.sid=sid;data.arraySyntax=arraySyntax;data.memberSyntax=memberSyntax;data.sampler=parseId(xml.getAttribute('source'));return data;}function buildAnimation(data){var tracks=[];var channels=data.channels;var samplers=data.samplers;var sources=data.sources;for(var target in channels){if(channels.hasOwnProperty(target)){var channel=channels[target];var sampler=samplers[channel.sampler];var inputId=sampler.inputs.INPUT;var outputId=sampler.inputs.OUTPUT;var inputSource=sources[inputId];var outputSource=sources[outputId];var animation=buildAnimationChannel(channel,inputSource,outputSource);createKeyframeTracks(animation,tracks);}}return tracks;}function getAnimation(id){return getBuild(library.animations[id],buildAnimation);}function buildAnimationChannel(channel,inputSource,outputSource){var node=library.nodes[channel.id];var object3D=getNode(node.id);var transform=node.transforms[channel.sid];var defaultMatrix=node.matrix.clone().transpose();var time,stride;var i,il,j,jl;var data={};// the collada spec allows the animation of data in various ways.
// depending on the transform type (matrix, translate, rotate, scale), we execute different logic
switch(transform){case'matrix':for(i=0,il=inputSource.array.length;i<il;i++){time=inputSource.array[i];stride=i*outputSource.stride;if(data[time]===undefined)data[time]={};if(channel.arraySyntax===true){var value=outputSource.array[stride];var index=channel.indices[0]+4*channel.indices[1];data[time][index]=value;}else{for(j=0,jl=outputSource.stride;j<jl;j++){data[time][j]=outputSource.array[stride+j];}}}break;case'translate':console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',transform);break;case'rotate':console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',transform);break;case'scale':console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',transform);break;}var keyframes=prepareAnimationData(data,defaultMatrix);var animation={name:object3D.uuid,keyframes:keyframes};return animation;}function prepareAnimationData(data,defaultMatrix){var keyframes=[];// transfer data into a sortable array
for(var time in data){keyframes.push({time:parseFloat(time),value:data[time]});}// ensure keyframes are sorted by time
keyframes.sort(ascending);// now we clean up all animation data, so we can use them for keyframe tracks
for(var i=0;i<16;i++){transformAnimationData(keyframes,i,defaultMatrix.elements[i]);}return keyframes;// array sort function
function ascending(a,b){return a.time-b.time;}}var position=new Vector3$1();var scale=new Vector3$1();var quaternion=new Quaternion();function createKeyframeTracks(animation,tracks){var keyframes=animation.keyframes;var name=animation.name;var times=[];var positionData=[];var quaternionData=[];var scaleData=[];for(var i=0,l=keyframes.length;i<l;i++){var keyframe=keyframes[i];var time=keyframe.time;var value=keyframe.value;matrix.fromArray(value).transpose();matrix.decompose(position,quaternion,scale);times.push(time);positionData.push(position.x,position.y,position.z);quaternionData.push(quaternion.x,quaternion.y,quaternion.z,quaternion.w);scaleData.push(scale.x,scale.y,scale.z);}if(positionData.length>0)tracks.push(new VectorKeyframeTrack(name+'.position',times,positionData));if(quaternionData.length>0)tracks.push(new QuaternionKeyframeTrack(name+'.quaternion',times,quaternionData));if(scaleData.length>0)tracks.push(new VectorKeyframeTrack(name+'.scale',times,scaleData));return tracks;}function transformAnimationData(keyframes,property,defaultValue){var keyframe;var empty=true;var i,l;// check, if values of a property are missing in our keyframes
for(i=0,l=keyframes.length;i<l;i++){keyframe=keyframes[i];if(keyframe.value[property]===undefined){keyframe.value[property]=null;// mark as missing
}else{empty=false;}}if(empty===true){// no values at all, so we set a default value
for(i=0,l=keyframes.length;i<l;i++){keyframe=keyframes[i];keyframe.value[property]=defaultValue;}}else{// filling gaps
createMissingKeyframes(keyframes,property);}}function createMissingKeyframes(keyframes,property){var prev,next;for(var i=0,l=keyframes.length;i<l;i++){var keyframe=keyframes[i];if(keyframe.value[property]===null){prev=getPrev(keyframes,i,property);next=getNext(keyframes,i,property);if(prev===null){keyframe.value[property]=next.value[property];continue;}if(next===null){keyframe.value[property]=prev.value[property];continue;}interpolate(keyframe,prev,next,property);}}}function getPrev(keyframes,i,property){while(i>=0){var keyframe=keyframes[i];if(keyframe.value[property]!==null)return keyframe;i--;}return null;}function getNext(keyframes,i,property){while(i<keyframes.length){var keyframe=keyframes[i];if(keyframe.value[property]!==null)return keyframe;i++;}return null;}function interpolate(key,prev,next,property){if(next.time-prev.time===0){key.value[property]=prev.value[property];return;}key.value[property]=(key.time-prev.time)*(next.value[property]-prev.value[property])/(next.time-prev.time)+prev.value[property];}// animation clips
function parseAnimationClip(xml){var data={name:xml.getAttribute('id')||'default',start:parseFloat(xml.getAttribute('start')||0),end:parseFloat(xml.getAttribute('end')||0),animations:[]};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'instance_animation':data.animations.push(parseId(child.getAttribute('url')));break;}}library.clips[xml.getAttribute('id')]=data;}function buildAnimationClip(data){var tracks=[];var name=data.name;var duration=data.end-data.start||-1;var animations=data.animations;for(var i=0,il=animations.length;i<il;i++){var animationTracks=getAnimation(animations[i]);for(var j=0,jl=animationTracks.length;j<jl;j++){tracks.push(animationTracks[j]);}}return new AnimationClip(name,duration,tracks);}function getAnimationClip(id){return getBuild(library.clips[id],buildAnimationClip);}// controller
function parseController(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'skin':// there is exactly one skin per controller
data.id=parseId(child.getAttribute('source'));data.skin=parseSkin(child);break;case'morph':data.id=parseId(child.getAttribute('source'));console.warn('THREE.ColladaLoader: Morph target animation not supported yet.');break;}}library.controllers[xml.getAttribute('id')]=data;}function parseSkin(xml){var data={sources:{}};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'bind_shape_matrix':data.bindShapeMatrix=parseFloats(child.textContent);break;case'source':var id=child.getAttribute('id');data.sources[id]=parseSource(child);break;case'joints':data.joints=parseJoints(child);break;case'vertex_weights':data.vertexWeights=parseVertexWeights(child);break;}}return data;}function parseJoints(xml){var data={inputs:{}};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'input':var semantic=child.getAttribute('semantic');var id=parseId(child.getAttribute('source'));data.inputs[semantic]=id;break;}}return data;}function parseVertexWeights(xml){var data={inputs:{}};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'input':var semantic=child.getAttribute('semantic');var id=parseId(child.getAttribute('source'));var offset=parseInt(child.getAttribute('offset'));data.inputs[semantic]={id:id,offset:offset};break;case'vcount':data.vcount=parseInts(child.textContent);break;case'v':data.v=parseInts(child.textContent);break;}}return data;}function buildController(data){var build={id:data.id};var geometry=library.geometries[build.id];if(data.skin!==undefined){build.skin=buildSkin(data.skin);// we enhance the 'sources' property of the corresponding geometry with our skin data
geometry.sources.skinIndices=build.skin.indices;geometry.sources.skinWeights=build.skin.weights;}return build;}function buildSkin(data){var BONE_LIMIT=4;var build={joints:[],// this must be an array to preserve the joint order
indices:{array:[],stride:BONE_LIMIT},weights:{array:[],stride:BONE_LIMIT}};var sources=data.sources;var vertexWeights=data.vertexWeights;var vcount=vertexWeights.vcount;var v=vertexWeights.v;var jointOffset=vertexWeights.inputs.JOINT.offset;var weightOffset=vertexWeights.inputs.WEIGHT.offset;var jointSource=data.sources[data.joints.inputs.JOINT];var inverseSource=data.sources[data.joints.inputs.INV_BIND_MATRIX];var weights=sources[vertexWeights.inputs.WEIGHT.id].array;var stride=0;var i,j,l;// procces skin data for each vertex
for(i=0,l=vcount.length;i<l;i++){var jointCount=vcount[i];// this is the amount of joints that affect a single vertex
var vertexSkinData=[];for(j=0;j<jointCount;j++){var skinIndex=v[stride+jointOffset];var weightId=v[stride+weightOffset];var skinWeight=weights[weightId];vertexSkinData.push({index:skinIndex,weight:skinWeight});stride+=2;}// we sort the joints in descending order based on the weights.
// this ensures, we only procced the most important joints of the vertex
vertexSkinData.sort(descending);// now we provide for each vertex a set of four index and weight values.
// the order of the skin data matches the order of vertices
for(j=0;j<BONE_LIMIT;j++){var d=vertexSkinData[j];if(d!==undefined){build.indices.array.push(d.index);build.weights.array.push(d.weight);}else{build.indices.array.push(0);build.weights.array.push(0);}}}// setup bind matrix
if(data.bindShapeMatrix){build.bindMatrix=new Matrix4().fromArray(data.bindShapeMatrix).transpose();}else{build.bindMatrix=new Matrix4().identity();}// process bones and inverse bind matrix data
for(i=0,l=jointSource.array.length;i<l;i++){var name=jointSource.array[i];var boneInverse=new Matrix4().fromArray(inverseSource.array,i*inverseSource.stride).transpose();build.joints.push({name:name,boneInverse:boneInverse});}return build;// array sort function
function descending(a,b){return b.weight-a.weight;}}function getController(id){return getBuild(library.controllers[id],buildController);}// image
function parseImage(xml){var data={init_from:getElementsByTagName(xml,'init_from')[0].textContent};library.images[xml.getAttribute('id')]=data;}function buildImage(data){if(data.build!==undefined)return data.build;return data.init_from;}function getImage(id){var data=library.images[id];if(data!==undefined){return getBuild(data,buildImage);}console.warn('THREE.ColladaLoader: Couldn\'t find image with ID:',id);return null;}// effect
function parseEffect(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'profile_COMMON':data.profile=parseEffectProfileCOMMON(child);break;}}library.effects[xml.getAttribute('id')]=data;}function parseEffectProfileCOMMON(xml){var data={surfaces:{},samplers:{}};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'newparam':parseEffectNewparam(child,data);break;case'technique':data.technique=parseEffectTechnique(child);break;case'extra':data.extra=parseEffectExtra(child);break;}}return data;}function parseEffectNewparam(xml,data){var sid=xml.getAttribute('sid');for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'surface':data.surfaces[sid]=parseEffectSurface(child);break;case'sampler2D':data.samplers[sid]=parseEffectSampler(child);break;}}}function parseEffectSurface(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'init_from':data.init_from=child.textContent;break;}}return data;}function parseEffectSampler(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'source':data.source=child.textContent;break;}}return data;}function parseEffectTechnique(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'constant':case'lambert':case'blinn':case'phong':data.type=child.nodeName;data.parameters=parseEffectParameters(child);break;}}return data;}function parseEffectParameters(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'emission':case'diffuse':case'specular':case'bump':case'ambient':case'shininess':case'transparency':data[child.nodeName]=parseEffectParameter(child);break;case'transparent':data[child.nodeName]={opaque:child.getAttribute('opaque'),data:parseEffectParameter(child)};break;}}return data;}function parseEffectParameter(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'color':data[child.nodeName]=parseFloats(child.textContent);break;case'float':data[child.nodeName]=parseFloat(child.textContent);break;case'texture':data[child.nodeName]={id:child.getAttribute('texture'),extra:parseEffectParameterTexture(child)};break;}}return data;}function parseEffectParameterTexture(xml){var data={technique:{}};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'extra':parseEffectParameterTextureExtra(child,data);break;}}return data;}function parseEffectParameterTextureExtra(xml,data){for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'technique':parseEffectParameterTextureExtraTechnique(child,data);break;}}}function parseEffectParameterTextureExtraTechnique(xml,data){for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'repeatU':case'repeatV':case'offsetU':case'offsetV':data.technique[child.nodeName]=parseFloat(child.textContent);break;case'wrapU':case'wrapV':// some files have values for wrapU/wrapV which become NaN via parseInt
if(child.textContent.toUpperCase()==='TRUE'){data.technique[child.nodeName]=1;}else if(child.textContent.toUpperCase()==='FALSE'){data.technique[child.nodeName]=0;}else{data.technique[child.nodeName]=parseInt(child.textContent);}break;}}}function parseEffectExtra(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'technique':data.technique=parseEffectExtraTechnique(child);break;}}return data;}function parseEffectExtraTechnique(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'double_sided':data[child.nodeName]=parseInt(child.textContent);break;}}return data;}function buildEffect(data){return data;}function getEffect(id){return getBuild(library.effects[id],buildEffect);}// material
function parseMaterial(xml){var data={name:xml.getAttribute('name')};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'instance_effect':data.url=parseId(child.getAttribute('url'));break;}}library.materials[xml.getAttribute('id')]=data;}function getTextureLoader(image){var loader;var extension=image.slice((image.lastIndexOf('.')-1>>>0)+2);// http://www.jstips.co/en/javascript/get-file-extension/
extension=extension.toLowerCase();switch(extension){case'tga':loader=tgaLoader;break;default:loader=textureLoader;}return loader;}function buildMaterial(data){var effect=getEffect(data.url);var technique=effect.profile.technique;var extra=effect.profile.extra;var material;switch(technique.type){case'phong':case'blinn':material=new MeshPhongMaterial();break;case'lambert':material=new MeshLambertMaterial();break;default:material=new MeshBasicMaterial();break;}material.name=data.name||'';function getTexture(textureObject){var sampler=effect.profile.samplers[textureObject.id];var image=null;// get image
if(sampler!==undefined){var surface=effect.profile.surfaces[sampler.source];image=getImage(surface.init_from);}else{console.warn('THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).');image=getImage(textureObject.id);}// create texture if image is avaiable
if(image!==null){var loader=getTextureLoader(image);if(loader!==undefined){var texture=loader.load(image);var extra=textureObject.extra;if(extra!==undefined&&extra.technique!==undefined&&isEmpty(extra.technique)===false){var technique=extra.technique;texture.wrapS=technique.wrapU?RepeatWrapping$1:ClampToEdgeWrapping;texture.wrapT=technique.wrapV?RepeatWrapping$1:ClampToEdgeWrapping;texture.offset.set(technique.offsetU||0,technique.offsetV||0);texture.repeat.set(technique.repeatU||1,technique.repeatV||1);}else{texture.wrapS=RepeatWrapping$1;texture.wrapT=RepeatWrapping$1;}return texture;}else{console.warn('THREE.ColladaLoader: Loader for texture %s not found.',image);return null;}}else{console.warn('THREE.ColladaLoader: Couldn\'t create texture with ID:',textureObject.id);return null;}}var parameters=technique.parameters;for(var key in parameters){var parameter=parameters[key];switch(key){case'diffuse':if(parameter.color)material.color.fromArray(parameter.color);if(parameter.texture)material.map=getTexture(parameter.texture);break;case'specular':if(parameter.color&&material.specular)material.specular.fromArray(parameter.color);if(parameter.texture)material.specularMap=getTexture(parameter.texture);break;case'bump':if(parameter.texture)material.normalMap=getTexture(parameter.texture);break;case'ambient':if(parameter.texture)material.lightMap=getTexture(parameter.texture);break;case'shininess':if(parameter.float&&material.shininess)material.shininess=parameter.float;break;case'emission':if(parameter.color&&material.emissive)material.emissive.fromArray(parameter.color);if(parameter.texture)material.emissiveMap=getTexture(parameter.texture);break;}}//
var transparent=parameters['transparent'];var transparency=parameters['transparency'];// <transparency> does not exist but <transparent>
if(transparency===undefined&&transparent){transparency={float:1};}// <transparent> does not exist but <transparency>
if(transparent===undefined&&transparency){transparent={opaque:'A_ONE',data:{color:[1,1,1,1]}};}if(transparent&&transparency){// handle case if a texture exists but no color
if(transparent.data.texture){// we do not set an alpha map (see #13792)
material.transparent=true;}else{var color=transparent.data.color;switch(transparent.opaque){case'A_ONE':material.opacity=color[3]*transparency.float;break;case'RGB_ZERO':material.opacity=1-color[0]*transparency.float;break;case'A_ZERO':material.opacity=1-color[3]*transparency.float;break;case'RGB_ONE':material.opacity=color[0]*transparency.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',transparent.opaque);}if(material.opacity<1)material.transparent=true;}}//
if(extra!==undefined&&extra.technique!==undefined&&extra.technique.double_sided===1){material.side=DoubleSide;}return material;}function getMaterial(id){return getBuild(library.materials[id],buildMaterial);}// camera
function parseCamera(xml){var data={name:xml.getAttribute('name')};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'optics':data.optics=parseCameraOptics(child);break;}}library.cameras[xml.getAttribute('id')]=data;}function parseCameraOptics(xml){for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];switch(child.nodeName){case'technique_common':return parseCameraTechnique(child);}}return{};}function parseCameraTechnique(xml){var data={};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];switch(child.nodeName){case'perspective':case'orthographic':data.technique=child.nodeName;data.parameters=parseCameraParameters(child);break;}}return data;}function parseCameraParameters(xml){var data={};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];switch(child.nodeName){case'xfov':case'yfov':case'xmag':case'ymag':case'znear':case'zfar':case'aspect_ratio':data[child.nodeName]=parseFloat(child.textContent);break;}}return data;}function buildCamera(data){var camera;switch(data.optics.technique){case'perspective':camera=new PerspectiveCamera(data.optics.parameters.yfov,data.optics.parameters.aspect_ratio,data.optics.parameters.znear,data.optics.parameters.zfar);break;case'orthographic':var ymag=data.optics.parameters.ymag;var xmag=data.optics.parameters.xmag;var aspectRatio=data.optics.parameters.aspect_ratio;xmag=xmag===undefined?ymag*aspectRatio:xmag;ymag=ymag===undefined?xmag/aspectRatio:ymag;xmag*=0.5;ymag*=0.5;camera=new OrthographicCamera(-xmag,xmag,ymag,-ymag,// left, right, top, bottom
data.optics.parameters.znear,data.optics.parameters.zfar);break;default:camera=new PerspectiveCamera();break;}camera.name=data.name||'';return camera;}function getCamera(id){var data=library.cameras[id];if(data!==undefined){return getBuild(data,buildCamera);}console.warn('THREE.ColladaLoader: Couldn\'t find camera with ID:',id);return null;}// light
function parseLight(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'technique_common':data=parseLightTechnique(child);break;}}library.lights[xml.getAttribute('id')]=data;}function parseLightTechnique(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'directional':case'point':case'spot':case'ambient':data.technique=child.nodeName;data.parameters=parseLightParameters(child);}}return data;}function parseLightParameters(xml){var data={};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'color':var array=parseFloats(child.textContent);data.color=new Color().fromArray(array);break;case'falloff_angle':data.falloffAngle=parseFloat(child.textContent);break;case'quadratic_attenuation':var f=parseFloat(child.textContent);data.distance=f?Math.sqrt(1/f):0;break;}}return data;}function buildLight(data){var light;switch(data.technique){case'directional':light=new DirectionalLight();break;case'point':light=new PointLight();break;case'spot':light=new SpotLight();break;case'ambient':light=new AmbientLight();break;}if(data.parameters.color)light.color.copy(data.parameters.color);if(data.parameters.distance)light.distance=data.parameters.distance;return light;}function getLight(id){var data=library.lights[id];if(data!==undefined){return getBuild(data,buildLight);}console.warn('THREE.ColladaLoader: Couldn\'t find light with ID:',id);return null;}// geometry
function parseGeometry(xml){var data={name:xml.getAttribute('name'),sources:{},vertices:{},primitives:[]};var mesh=getElementsByTagName(xml,'mesh')[0];// the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep
if(mesh===undefined)return;for(var i=0;i<mesh.childNodes.length;i++){var child=mesh.childNodes[i];if(child.nodeType!==1)continue;var id=child.getAttribute('id');switch(child.nodeName){case'source':data.sources[id]=parseSource(child);break;case'vertices':// data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];
data.vertices=parseGeometryVertices(child);break;case'polygons':console.warn('THREE.ColladaLoader: Unsupported primitive type: ',child.nodeName);break;case'lines':case'linestrips':case'polylist':case'triangles':data.primitives.push(parseGeometryPrimitive(child));break;default:console.log(child);}}library.geometries[xml.getAttribute('id')]=data;}function parseSource(xml){var data={array:[],stride:3};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'float_array':data.array=parseFloats(child.textContent);break;case'Name_array':data.array=parseStrings(child.textContent);break;case'technique_common':var accessor=getElementsByTagName(child,'accessor')[0];if(accessor!==undefined){data.stride=parseInt(accessor.getAttribute('stride'));}break;}}return data;}function parseGeometryVertices(xml){var data={};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;data[child.getAttribute('semantic')]=parseId(child.getAttribute('source'));}return data;}function parseGeometryPrimitive(xml){var primitive={type:xml.nodeName,material:xml.getAttribute('material'),count:parseInt(xml.getAttribute('count')),inputs:{},stride:0,hasUV:false};for(var i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'input':var id=parseId(child.getAttribute('source'));var semantic=child.getAttribute('semantic');var offset=parseInt(child.getAttribute('offset'));var set=parseInt(child.getAttribute('set'));var inputname=set>0?semantic+set:semantic;primitive.inputs[inputname]={id:id,offset:offset};primitive.stride=Math.max(primitive.stride,offset+1);if(semantic==='TEXCOORD')primitive.hasUV=true;break;case'vcount':primitive.vcount=parseInts(child.textContent);break;case'p':primitive.p=parseInts(child.textContent);break;}}return primitive;}function groupPrimitives(primitives){var build={};for(var i=0;i<primitives.length;i++){var primitive=primitives[i];if(build[primitive.type]===undefined)build[primitive.type]=[];build[primitive.type].push(primitive);}return build;}function checkUVCoordinates(primitives){var count=0;for(var i=0,l=primitives.length;i<l;i++){var primitive=primitives[i];if(primitive.hasUV===true){count++;}}if(count>0&&count<primitives.length){primitives.uvsNeedsFix=true;}}function buildGeometry(data){var build={};var sources=data.sources;var vertices=data.vertices;var primitives=data.primitives;if(primitives.length===0)return{};// our goal is to create one buffer geometry for a single type of primitives
// first, we group all primitives by their type
var groupedPrimitives=groupPrimitives(primitives);for(var type in groupedPrimitives){var primitiveType=groupedPrimitives[type];// second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)
checkUVCoordinates(primitiveType);// third, create a buffer geometry for each type of primitives
build[type]=buildGeometryType(primitiveType,sources,vertices);}return build;}function buildGeometryType(primitives,sources,vertices){var build={};var position={array:[],stride:0};var normal={array:[],stride:0};var uv={array:[],stride:0};var uv2={array:[],stride:0};var color={array:[],stride:0};var skinIndex={array:[],stride:4};var skinWeight={array:[],stride:4};var geometry=new BufferGeometry();var materialKeys=[];var start=0;for(var p=0;p<primitives.length;p++){var primitive=primitives[p];var inputs=primitive.inputs;// groups
var count=0;switch(primitive.type){case'lines':case'linestrips':count=primitive.count*2;break;case'triangles':count=primitive.count*3;break;case'polylist':for(var g=0;g<primitive.count;g++){var vc=primitive.vcount[g];switch(vc){case 3:count+=3;// single triangle
break;case 4:count+=6;// quad, subdivided into two triangles
break;default:count+=(vc-2)*3;// polylist with more than four vertices
break;}}break;default:console.warn('THREE.ColladaLoader: Unknow primitive type:',primitive.type);}geometry.addGroup(start,count,p);start+=count;// material
if(primitive.material){materialKeys.push(primitive.material);}// geometry data
for(var name in inputs){var input=inputs[name];switch(name){case'VERTEX':for(var key in vertices){var id=vertices[key];switch(key){case'POSITION':var prevLength=position.array.length;buildGeometryData(primitive,sources[id],input.offset,position.array);position.stride=sources[id].stride;if(sources.skinWeights&&sources.skinIndices){buildGeometryData(primitive,sources.skinIndices,input.offset,skinIndex.array);buildGeometryData(primitive,sources.skinWeights,input.offset,skinWeight.array);}// see #3803
if(primitive.hasUV===false&&primitives.uvsNeedsFix===true){var count=(position.array.length-prevLength)/position.stride;for(var i=0;i<count;i++){// fill missing uv coordinates
uv.array.push(0,0);}}break;case'NORMAL':buildGeometryData(primitive,sources[id],input.offset,normal.array);normal.stride=sources[id].stride;break;case'COLOR':buildGeometryData(primitive,sources[id],input.offset,color.array);color.stride=sources[id].stride;break;case'TEXCOORD':buildGeometryData(primitive,sources[id],input.offset,uv.array);uv.stride=sources[id].stride;break;case'TEXCOORD1':buildGeometryData(primitive,sources[id],input.offset,uv2.array);uv.stride=sources[id].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',key);}}break;case'NORMAL':buildGeometryData(primitive,sources[input.id],input.offset,normal.array);normal.stride=sources[input.id].stride;break;case'COLOR':buildGeometryData(primitive,sources[input.id],input.offset,color.array);color.stride=sources[input.id].stride;break;case'TEXCOORD':buildGeometryData(primitive,sources[input.id],input.offset,uv.array);uv.stride=sources[input.id].stride;break;case'TEXCOORD1':buildGeometryData(primitive,sources[input.id],input.offset,uv2.array);uv2.stride=sources[input.id].stride;break;}}}// build geometry
if(position.array.length>0)geometry.setAttribute('position',new Float32BufferAttribute(position.array,position.stride));if(normal.array.length>0)geometry.setAttribute('normal',new Float32BufferAttribute(normal.array,normal.stride));if(color.array.length>0)geometry.setAttribute('color',new Float32BufferAttribute(color.array,color.stride));if(uv.array.length>0)geometry.setAttribute('uv',new Float32BufferAttribute(uv.array,uv.stride));if(uv2.array.length>0)geometry.setAttribute('uv2',new Float32BufferAttribute(uv2.array,uv2.stride));if(skinIndex.array.length>0)geometry.setAttribute('skinIndex',new Float32BufferAttribute(skinIndex.array,skinIndex.stride));if(skinWeight.array.length>0)geometry.setAttribute('skinWeight',new Float32BufferAttribute(skinWeight.array,skinWeight.stride));build.data=geometry;build.type=primitives[0].type;build.materialKeys=materialKeys;return build;}function buildGeometryData(primitive,source,offset,array){var indices=primitive.p;var stride=primitive.stride;var vcount=primitive.vcount;function pushVector(i){var index=indices[i+offset]*sourceStride;var length=index+sourceStride;for(;index<length;index++){array.push(sourceArray[index]);}}var sourceArray=source.array;var sourceStride=source.stride;if(primitive.vcount!==undefined){var index=0;for(var i=0,l=vcount.length;i<l;i++){var count=vcount[i];if(count===4){var a=index+stride*0;var b=index+stride*1;var c=index+stride*2;var d=index+stride*3;pushVector(a);pushVector(b);pushVector(d);pushVector(b);pushVector(c);pushVector(d);}else if(count===3){var a=index+stride*0;var b=index+stride*1;var c=index+stride*2;pushVector(a);pushVector(b);pushVector(c);}else if(count>4){for(var k=1,kl=count-2;k<=kl;k++){var a=index+stride*0;var b=index+stride*k;var c=index+stride*(k+1);pushVector(a);pushVector(b);pushVector(c);}}index+=stride*count;}}else{for(var i=0,l=indices.length;i<l;i+=stride){pushVector(i);}}}function getGeometry(id){return getBuild(library.geometries[id],buildGeometry);}// kinematics
function parseKinematicsModel(xml){var data={name:xml.getAttribute('name')||'',joints:{},links:[]};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'technique_common':parseKinematicsTechniqueCommon(child,data);break;}}library.kinematicsModels[xml.getAttribute('id')]=data;}function buildKinematicsModel(data){if(data.build!==undefined)return data.build;return data;}function getKinematicsModel(id){return getBuild(library.kinematicsModels[id],buildKinematicsModel);}function parseKinematicsTechniqueCommon(xml,data){for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'joint':data.joints[child.getAttribute('sid')]=parseKinematicsJoint(child);break;case'link':data.links.push(parseKinematicsLink(child));break;}}}function parseKinematicsJoint(xml){var data;for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'prismatic':case'revolute':data=parseKinematicsJointParameter(child);break;}}return data;}function parseKinematicsJointParameter(xml,data){var data={sid:xml.getAttribute('sid'),name:xml.getAttribute('name')||'',axis:new Vector3$1(),limits:{min:0,max:0},type:xml.nodeName,static:false,zeroPosition:0,middlePosition:0};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'axis':var array=parseFloats(child.textContent);data.axis.fromArray(array);break;case'limits':var max=child.getElementsByTagName('max')[0];var min=child.getElementsByTagName('min')[0];data.limits.max=parseFloat(max.textContent);data.limits.min=parseFloat(min.textContent);break;}}// if min is equal to or greater than max, consider the joint static
if(data.limits.min>=data.limits.max){data.static=true;}// calculate middle position
data.middlePosition=(data.limits.min+data.limits.max)/2.0;return data;}function parseKinematicsLink(xml){var data={sid:xml.getAttribute('sid'),name:xml.getAttribute('name')||'',attachments:[],transforms:[]};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'attachment_full':data.attachments.push(parseKinematicsAttachment(child));break;case'matrix':case'translate':case'rotate':data.transforms.push(parseKinematicsTransform(child));break;}}return data;}function parseKinematicsAttachment(xml){var data={joint:xml.getAttribute('joint').split('/').pop(),transforms:[],links:[]};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'link':data.links.push(parseKinematicsLink(child));break;case'matrix':case'translate':case'rotate':data.transforms.push(parseKinematicsTransform(child));break;}}return data;}function parseKinematicsTransform(xml){var data={type:xml.nodeName};var array=parseFloats(xml.textContent);switch(data.type){case'matrix':data.obj=new Matrix4();data.obj.fromArray(array).transpose();break;case'translate':data.obj=new Vector3$1();data.obj.fromArray(array);break;case'rotate':data.obj=new Vector3$1();data.obj.fromArray(array);data.angle=MathUtils.degToRad(array[3]);break;}return data;}// physics
function parsePhysicsModel(xml){var data={name:xml.getAttribute('name')||'',rigidBodies:{}};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'rigid_body':data.rigidBodies[child.getAttribute('name')]={};parsePhysicsRigidBody(child,data.rigidBodies[child.getAttribute('name')]);break;}}library.physicsModels[xml.getAttribute('id')]=data;}function parsePhysicsRigidBody(xml,data){for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'technique_common':parsePhysicsTechniqueCommon(child,data);break;}}}function parsePhysicsTechniqueCommon(xml,data){for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'inertia':data.inertia=parseFloats(child.textContent);break;case'mass':data.mass=parseFloats(child.textContent)[0];break;}}}// scene
function parseKinematicsScene(xml){var data={bindJointAxis:[]};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'bind_joint_axis':data.bindJointAxis.push(parseKinematicsBindJointAxis(child));break;}}library.kinematicsScenes[parseId(xml.getAttribute('url'))]=data;}function parseKinematicsBindJointAxis(xml){var data={target:xml.getAttribute('target').split('/').pop()};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'axis':var param=child.getElementsByTagName('param')[0];data.axis=param.textContent;var tmpJointIndex=data.axis.split('inst_').pop().split('axis')[0];data.jointIndex=tmpJointIndex.substr(0,tmpJointIndex.length-1);break;}}return data;}function buildKinematicsScene(data){if(data.build!==undefined)return data.build;return data;}function getKinematicsScene(id){return getBuild(library.kinematicsScenes[id],buildKinematicsScene);}function setupKinematics(){var kinematicsModelId=Object.keys(library.kinematicsModels)[0];var kinematicsSceneId=Object.keys(library.kinematicsScenes)[0];var visualSceneId=Object.keys(library.visualScenes)[0];if(kinematicsModelId===undefined||kinematicsSceneId===undefined)return;var kinematicsModel=getKinematicsModel(kinematicsModelId);var kinematicsScene=getKinematicsScene(kinematicsSceneId);var visualScene=getVisualScene(visualSceneId);var bindJointAxis=kinematicsScene.bindJointAxis;var jointMap={};for(var i=0,l=bindJointAxis.length;i<l;i++){var axis=bindJointAxis[i];// the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'
var targetElement=collada.querySelector('[sid="'+axis.target+'"]');if(targetElement){// get the parent of the transform element
var parentVisualElement=targetElement.parentElement;// connect the joint of the kinematics model with the element in the visual scene
connect(axis.jointIndex,parentVisualElement);}}function connect(jointIndex,visualElement){var visualElementName=visualElement.getAttribute('name');var joint=kinematicsModel.joints[jointIndex];visualScene.traverse(function(object){if(object.name===visualElementName){jointMap[jointIndex]={object:object,transforms:buildTransformList(visualElement),joint:joint,position:joint.zeroPosition};}});}var m0=new Matrix4();kinematics={joints:kinematicsModel&&kinematicsModel.joints,getJointValue:function getJointValue(jointIndex){var jointData=jointMap[jointIndex];if(jointData){return jointData.position;}else{console.warn('THREE.ColladaLoader: Joint '+jointIndex+' doesn\'t exist.');}},setJointValue:function setJointValue(jointIndex,value){var jointData=jointMap[jointIndex];if(jointData){var joint=jointData.joint;if(value>joint.limits.max||value<joint.limits.min){console.warn('THREE.ColladaLoader: Joint '+jointIndex+' value '+value+' outside of limits (min: '+joint.limits.min+', max: '+joint.limits.max+').');}else if(joint.static){console.warn('THREE.ColladaLoader: Joint '+jointIndex+' is static.');}else{var object=jointData.object;var axis=joint.axis;var transforms=jointData.transforms;matrix.identity();// each update, we have to apply all transforms in the correct order
for(var i=0;i<transforms.length;i++){var transform=transforms[i];// if there is a connection of the transform node with a joint, apply the joint value
if(transform.sid&&transform.sid.indexOf(jointIndex)!==-1){switch(joint.type){case'revolute':matrix.multiply(m0.makeRotationAxis(axis,MathUtils.degToRad(value)));break;case'prismatic':matrix.multiply(m0.makeTranslation(axis.x*value,axis.y*value,axis.z*value));break;default:console.warn('THREE.ColladaLoader: Unknown joint type: '+joint.type);break;}}else{switch(transform.type){case'matrix':matrix.multiply(transform.obj);break;case'translate':matrix.multiply(m0.makeTranslation(transform.obj.x,transform.obj.y,transform.obj.z));break;case'scale':matrix.scale(transform.obj);break;case'rotate':matrix.multiply(m0.makeRotationAxis(transform.obj,transform.angle));break;}}}object.matrix.copy(matrix);object.matrix.decompose(object.position,object.quaternion,object.scale);jointMap[jointIndex].position=value;}}else{console.log('THREE.ColladaLoader: '+jointIndex+' does not exist.');}}};}function buildTransformList(node){var transforms=[];var xml=collada.querySelector('[id="'+node.id+'"]');for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'matrix':var array=parseFloats(child.textContent);var matrix=new Matrix4().fromArray(array).transpose();transforms.push({sid:child.getAttribute('sid'),type:child.nodeName,obj:matrix});break;case'translate':case'scale':var array=parseFloats(child.textContent);var vector=new Vector3$1().fromArray(array);transforms.push({sid:child.getAttribute('sid'),type:child.nodeName,obj:vector});break;case'rotate':var array=parseFloats(child.textContent);var vector=new Vector3$1().fromArray(array);var angle=MathUtils.degToRad(array[3]);transforms.push({sid:child.getAttribute('sid'),type:child.nodeName,obj:vector,angle:angle});break;}}return transforms;}// nodes
function prepareNodes(xml){var elements=xml.getElementsByTagName('node');// ensure all node elements have id attributes
for(var i=0;i<elements.length;i++){var element=elements[i];if(element.hasAttribute('id')===false){element.setAttribute('id',generateId());}}}var matrix=new Matrix4();var vector=new Vector3$1();function parseNode(xml){var data={name:xml.getAttribute('name')||'',type:xml.getAttribute('type'),id:xml.getAttribute('id'),sid:xml.getAttribute('sid'),matrix:new Matrix4(),nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case'node':data.nodes.push(child.getAttribute('id'));parseNode(child);break;case'instance_camera':data.instanceCameras.push(parseId(child.getAttribute('url')));break;case'instance_controller':data.instanceControllers.push(parseNodeInstance(child));break;case'instance_light':data.instanceLights.push(parseId(child.getAttribute('url')));break;case'instance_geometry':data.instanceGeometries.push(parseNodeInstance(child));break;case'instance_node':data.instanceNodes.push(parseId(child.getAttribute('url')));break;case'matrix':var array=parseFloats(child.textContent);data.matrix.multiply(matrix.fromArray(array).transpose());data.transforms[child.getAttribute('sid')]=child.nodeName;break;case'translate':var array=parseFloats(child.textContent);vector.fromArray(array);data.matrix.multiply(matrix.makeTranslation(vector.x,vector.y,vector.z));data.transforms[child.getAttribute('sid')]=child.nodeName;break;case'rotate':var array=parseFloats(child.textContent);var angle=MathUtils.degToRad(array[3]);data.matrix.multiply(matrix.makeRotationAxis(vector.fromArray(array),angle));data.transforms[child.getAttribute('sid')]=child.nodeName;break;case'scale':var array=parseFloats(child.textContent);data.matrix.scale(vector.fromArray(array));data.transforms[child.getAttribute('sid')]=child.nodeName;break;case'extra':break;default:console.log(child);}}if(hasNode(data.id)){console.warn('THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.',data.id);}else{library.nodes[data.id]=data;}return data;}function parseNodeInstance(xml){var data={id:parseId(xml.getAttribute('url')),materials:{},skeletons:[]};for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];switch(child.nodeName){case'bind_material':var instances=child.getElementsByTagName('instance_material');for(var j=0;j<instances.length;j++){var instance=instances[j];var symbol=instance.getAttribute('symbol');var target=instance.getAttribute('target');data.materials[symbol]=parseId(target);}break;case'skeleton':data.skeletons.push(parseId(child.textContent));break;}}return data;}function buildSkeleton(skeletons,joints){var boneData=[];var sortedBoneData=[];var i,j,data;// a skeleton can have multiple root bones. collada expresses this
// situtation with multiple "skeleton" tags per controller instance
for(i=0;i<skeletons.length;i++){var skeleton=skeletons[i];var root;if(hasNode(skeleton)){root=getNode(skeleton);buildBoneHierarchy(root,joints,boneData);}else if(hasVisualScene(skeleton)){// handle case where the skeleton refers to the visual scene (#13335)
var visualScene=library.visualScenes[skeleton];var children=visualScene.children;for(var j=0;j<children.length;j++){var child=children[j];if(child.type==='JOINT'){var root=getNode(child.id);buildBoneHierarchy(root,joints,boneData);}}}else{console.error('THREE.ColladaLoader: Unable to find root bone of skeleton with ID:',skeleton);}}// sort bone data (the order is defined in the corresponding controller)
for(i=0;i<joints.length;i++){for(j=0;j<boneData.length;j++){data=boneData[j];if(data.bone.name===joints[i].name){sortedBoneData[i]=data;data.processed=true;break;}}}// add unprocessed bone data at the end of the list
for(i=0;i<boneData.length;i++){data=boneData[i];if(data.processed===false){sortedBoneData.push(data);data.processed=true;}}// setup arrays for skeleton creation
var bones=[];var boneInverses=[];for(i=0;i<sortedBoneData.length;i++){data=sortedBoneData[i];bones.push(data.bone);boneInverses.push(data.boneInverse);}return new Skeleton(bones,boneInverses);}function buildBoneHierarchy(root,joints,boneData){// setup bone data from visual scene
root.traverse(function(object){if(object.isBone===true){var boneInverse;// retrieve the boneInverse from the controller data
for(var i=0;i<joints.length;i++){var joint=joints[i];if(joint.name===object.name){boneInverse=joint.boneInverse;break;}}if(boneInverse===undefined){// Unfortunately, there can be joints in the visual scene that are not part of the
// corresponding controller. In this case, we have to create a dummy boneInverse matrix
// for the respective bone. This bone won't affect any vertices, because there are no skin indices
// and weights defined for it. But we still have to add the bone to the sorted bone list in order to
// ensure a correct animation of the model.
boneInverse=new Matrix4();}boneData.push({bone:object,boneInverse:boneInverse,processed:false});}});}function buildNode(data){var objects=[];var matrix=data.matrix;var nodes=data.nodes;var type=data.type;var instanceCameras=data.instanceCameras;var instanceControllers=data.instanceControllers;var instanceLights=data.instanceLights;var instanceGeometries=data.instanceGeometries;var instanceNodes=data.instanceNodes;// nodes
for(var i=0,l=nodes.length;i<l;i++){objects.push(getNode(nodes[i]));}// instance cameras
for(var i=0,l=instanceCameras.length;i<l;i++){var instanceCamera=getCamera(instanceCameras[i]);if(instanceCamera!==null){objects.push(instanceCamera.clone());}}// instance controllers
for(var i=0,l=instanceControllers.length;i<l;i++){var instance=instanceControllers[i];var controller=getController(instance.id);var geometries=getGeometry(controller.id);var newObjects=buildObjects(geometries,instance.materials);var skeletons=instance.skeletons;var joints=controller.skin.joints;var skeleton=buildSkeleton(skeletons,joints);for(var j=0,jl=newObjects.length;j<jl;j++){var object=newObjects[j];if(object.isSkinnedMesh){object.bind(skeleton,controller.skin.bindMatrix);object.normalizeSkinWeights();}objects.push(object);}}// instance lights
for(var i=0,l=instanceLights.length;i<l;i++){var instanceLight=getLight(instanceLights[i]);if(instanceLight!==null){objects.push(instanceLight.clone());}}// instance geometries
for(var i=0,l=instanceGeometries.length;i<l;i++){var instance=instanceGeometries[i];// a single geometry instance in collada can lead to multiple object3Ds.
// this is the case when primitives are combined like triangles and lines
var geometries=getGeometry(instance.id);var newObjects=buildObjects(geometries,instance.materials);for(var j=0,jl=newObjects.length;j<jl;j++){objects.push(newObjects[j]);}}// instance nodes
for(var i=0,l=instanceNodes.length;i<l;i++){objects.push(getNode(instanceNodes[i]).clone());}var object;if(nodes.length===0&&objects.length===1){object=objects[0];}else{object=type==='JOINT'?new Bone():new Group();for(var i=0;i<objects.length;i++){object.add(objects[i]);}}if(object.name===''){object.name=type==='JOINT'?data.sid:data.name;}object.matrix.copy(matrix);object.matrix.decompose(object.position,object.quaternion,object.scale);return object;}var fallbackMaterial=new MeshBasicMaterial({color:0xff00ff});function resolveMaterialBinding(keys,instanceMaterials){var materials=[];for(var i=0,l=keys.length;i<l;i++){var id=instanceMaterials[keys[i]];if(id===undefined){console.warn('THREE.ColladaLoader: Material with key %s not found. Apply fallback material.',keys[i]);materials.push(fallbackMaterial);}else{materials.push(getMaterial(id));}}return materials;}function buildObjects(geometries,instanceMaterials){var objects=[];for(var type in geometries){var geometry=geometries[type];var materials=resolveMaterialBinding(geometry.materialKeys,instanceMaterials);// handle case if no materials are defined
if(materials.length===0){if(type==='lines'||type==='linestrips'){materials.push(new LineBasicMaterial());}else{materials.push(new MeshPhongMaterial());}}// regard skinning
var skinning=geometry.data.attributes.skinIndex!==undefined;if(skinning){for(var i=0,l=materials.length;i<l;i++){materials[i].skinning=true;}}// choose between a single or multi materials (material array)
var material=materials.length===1?materials[0]:materials;// now create a specific 3D object
var object;switch(type){case'lines':object=new LineSegments(geometry.data,material);break;case'linestrips':object=new Line(geometry.data,material);break;case'triangles':case'polylist':if(skinning){object=new SkinnedMesh(geometry.data,material);}else{object=new Mesh(geometry.data,material);}break;}objects.push(object);}return objects;}function hasNode(id){return library.nodes[id]!==undefined;}function getNode(id){return getBuild(library.nodes[id],buildNode);}// visual scenes
function parseVisualScene(xml){var data={name:xml.getAttribute('name'),children:[]};prepareNodes(xml);var elements=getElementsByTagName(xml,'node');for(var i=0;i<elements.length;i++){data.children.push(parseNode(elements[i]));}library.visualScenes[xml.getAttribute('id')]=data;}function buildVisualScene(data){var group=new Group();group.name=data.name;var children=data.children;for(var i=0;i<children.length;i++){var child=children[i];group.add(getNode(child.id));}return group;}function hasVisualScene(id){return library.visualScenes[id]!==undefined;}function getVisualScene(id){return getBuild(library.visualScenes[id],buildVisualScene);}// scenes
function parseScene(xml){var instance=getElementsByTagName(xml,'instance_visual_scene')[0];return getVisualScene(parseId(instance.getAttribute('url')));}function setupAnimations(){var clips=library.clips;if(isEmpty(clips)===true){if(isEmpty(library.animations)===false){// if there are animations but no clips, we create a default clip for playback
var tracks=[];for(var id in library.animations){var animationTracks=getAnimation(id);for(var i=0,l=animationTracks.length;i<l;i++){tracks.push(animationTracks[i]);}}animations.push(new AnimationClip('default',-1,tracks));}}else{for(var id in clips){animations.push(getAnimationClip(id));}}}// convert the parser error element into text with each child elements text
// separated by new lines.
function parserErrorToText(parserError){var result='';var stack=[parserError];while(stack.length){var node=stack.shift();if(node.nodeType===Node.TEXT_NODE){result+=node.textContent;}else{result+='\n';stack.push.apply(stack,node.childNodes);}}return result.trim();}if(text.length===0){return{scene:new Scene()};}var xml=new DOMParser().parseFromString(text,'application/xml');var collada=getElementsByTagName(xml,'COLLADA')[0];var parserError=xml.getElementsByTagName('parsererror')[0];if(parserError!==undefined){// Chrome will return parser error with a div in it
var errorElement=getElementsByTagName(parserError,'div')[0];var errorText;if(errorElement){errorText=errorElement.textContent;}else{errorText=parserErrorToText(parserError);}console.error('THREE.ColladaLoader: Failed to parse collada file.\n',errorText);return null;}// metadata
var version=collada.getAttribute('version');console.log('THREE.ColladaLoader: File version',version);var asset=parseAsset(getElementsByTagName(collada,'asset')[0]);var textureLoader=new TextureLoader(this.manager);textureLoader.setPath(this.resourcePath||path).setCrossOrigin(this.crossOrigin);var tgaLoader;if(TGALoader){tgaLoader=new TGALoader(this.manager);tgaLoader.setPath(this.resourcePath||path);}//
var animations=[];var kinematics={};var count=0;//
var library={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};parseLibrary(collada,'library_animations','animation',parseAnimation);parseLibrary(collada,'library_animation_clips','animation_clip',parseAnimationClip);parseLibrary(collada,'library_controllers','controller',parseController);parseLibrary(collada,'library_images','image',parseImage);parseLibrary(collada,'library_effects','effect',parseEffect);parseLibrary(collada,'library_materials','material',parseMaterial);parseLibrary(collada,'library_cameras','camera',parseCamera);parseLibrary(collada,'library_lights','light',parseLight);parseLibrary(collada,'library_geometries','geometry',parseGeometry);parseLibrary(collada,'library_nodes','node',parseNode);parseLibrary(collada,'library_visual_scenes','visual_scene',parseVisualScene);parseLibrary(collada,'library_kinematics_models','kinematics_model',parseKinematicsModel);parseLibrary(collada,'library_physics_models','physics_model',parsePhysicsModel);parseLibrary(collada,'scene','instance_kinematics_scene',parseKinematicsScene);buildLibrary(library.animations,buildAnimation);buildLibrary(library.clips,buildAnimationClip);buildLibrary(library.controllers,buildController);buildLibrary(library.images,buildImage);buildLibrary(library.effects,buildEffect);buildLibrary(library.materials,buildMaterial);buildLibrary(library.cameras,buildCamera);buildLibrary(library.lights,buildLight);buildLibrary(library.geometries,buildGeometry);buildLibrary(library.visualScenes,buildVisualScene);setupAnimations();setupKinematics();var scene=parseScene(getElementsByTagName(collada,'scene')[0]);if(asset.upAxis==='Z_UP'){scene.quaternion.setFromEuler(new Euler(-Math.PI/2,0,0));}scene.scale.multiplyScalar(asset.unit);return{animations:animations,kinematics:kinematics,library:library,scene:scene};}}]);return ColladaLoader;}(Loader);/**
 * @author sunag / http://www.sunag.com.br
 */var SkeletonUtils={retarget:function(){var pos=new Vector3$1(),quat=new Quaternion(),scale=new Vector3$1(),bindBoneMatrix=new Matrix4(),relativeMatrix=new Matrix4(),globalMatrix=new Matrix4();return function(target,source,options){options=options||{};options.preserveMatrix=options.preserveMatrix!==undefined?options.preserveMatrix:true;options.preservePosition=options.preservePosition!==undefined?options.preservePosition:true;options.preserveHipPosition=options.preserveHipPosition!==undefined?options.preserveHipPosition:false;options.useTargetMatrix=options.useTargetMatrix!==undefined?options.useTargetMatrix:false;options.hip=options.hip!==undefined?options.hip:"hip";options.names=options.names||{};var sourceBones=source.isObject3D?source.skeleton.bones:this.getBones(source),bones=target.isObject3D?target.skeleton.bones:this.getBones(target),bindBones,bone,name,boneTo,bonesPosition,i;// reset bones
if(target.isObject3D){target.skeleton.pose();}else{options.useTargetMatrix=true;options.preserveMatrix=false;}if(options.preservePosition){bonesPosition=[];for(i=0;i<bones.length;i++){bonesPosition.push(bones[i].position.clone());}}if(options.preserveMatrix){// reset matrix
target.updateMatrixWorld();target.matrixWorld.identity();// reset children matrix
for(i=0;i<target.children.length;++i){target.children[i].updateMatrixWorld(true);}}if(options.offsets){bindBones=[];for(i=0;i<bones.length;++i){bone=bones[i];name=options.names[bone.name]||bone.name;if(options.offsets&&options.offsets[name]){bone.matrix.multiply(options.offsets[name]);bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);bone.updateMatrixWorld();}bindBones.push(bone.matrixWorld.clone());}}for(i=0;i<bones.length;++i){bone=bones[i];name=options.names[bone.name]||bone.name;boneTo=this.getBoneByName(name,sourceBones);globalMatrix.copy(bone.matrixWorld);if(boneTo){boneTo.updateMatrixWorld();if(options.useTargetMatrix){relativeMatrix.copy(boneTo.matrixWorld);}else{relativeMatrix.getInverse(target.matrixWorld);relativeMatrix.multiply(boneTo.matrixWorld);}// ignore scale to extract rotation
scale.setFromMatrixScale(relativeMatrix);relativeMatrix.scale(scale.set(1/scale.x,1/scale.y,1/scale.z));// apply to global matrix
globalMatrix.makeRotationFromQuaternion(quat.setFromRotationMatrix(relativeMatrix));if(target.isObject3D){var boneIndex=bones.indexOf(bone),wBindMatrix=bindBones?bindBones[boneIndex]:bindBoneMatrix.getInverse(target.skeleton.boneInverses[boneIndex]);globalMatrix.multiply(wBindMatrix);}globalMatrix.copyPosition(relativeMatrix);}if(bone.parent&&bone.parent.isBone){bone.matrix.getInverse(bone.parent.matrixWorld);bone.matrix.multiply(globalMatrix);}else{bone.matrix.copy(globalMatrix);}if(options.preserveHipPosition&&name===options.hip){bone.matrix.setPosition(pos.set(0,bone.position.y,0));}bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);bone.updateMatrixWorld();}if(options.preservePosition){for(i=0;i<bones.length;++i){bone=bones[i];name=options.names[bone.name]||bone.name;if(name!==options.hip){bone.position.copy(bonesPosition[i]);}}}if(options.preserveMatrix){// restore matrix
target.updateMatrixWorld(true);}};}(),retargetClip:function retargetClip(target,source,clip,options){options=options||{};options.useFirstFramePosition=options.useFirstFramePosition!==undefined?options.useFirstFramePosition:false;options.fps=options.fps!==undefined?options.fps:30;options.names=options.names||[];if(!source.isObject3D){source=this.getHelperFromSkeleton(source);}var numFrames=Math.round(clip.duration*(options.fps/1000)*1000),delta=1/options.fps,convertedTracks=[],mixer=new AnimationMixer(source),bones=this.getBones(target.skeleton),boneDatas=[],positionOffset,bone,boneTo,boneData,name,i,j;mixer.clipAction(clip).play();mixer.update(0);source.updateMatrixWorld();for(i=0;i<numFrames;++i){var time=i*delta;this.retarget(target,source,options);for(j=0;j<bones.length;++j){name=options.names[bones[j].name]||bones[j].name;boneTo=this.getBoneByName(name,source.skeleton);if(boneTo){bone=bones[j];boneData=boneDatas[j]=boneDatas[j]||{bone:bone};if(options.hip===name){if(!boneData.pos){boneData.pos={times:new Float32Array(numFrames),values:new Float32Array(numFrames*3)};}if(options.useFirstFramePosition){if(i===0){positionOffset=bone.position.clone();}bone.position.sub(positionOffset);}boneData.pos.times[i]=time;bone.position.toArray(boneData.pos.values,i*3);}if(!boneData.quat){boneData.quat={times:new Float32Array(numFrames),values:new Float32Array(numFrames*4)};}boneData.quat.times[i]=time;bone.quaternion.toArray(boneData.quat.values,i*4);}}mixer.update(delta);source.updateMatrixWorld();}for(i=0;i<boneDatas.length;++i){boneData=boneDatas[i];if(boneData){if(boneData.pos){convertedTracks.push(new VectorKeyframeTrack(".bones["+boneData.bone.name+"].position",boneData.pos.times,boneData.pos.values));}convertedTracks.push(new QuaternionKeyframeTrack(".bones["+boneData.bone.name+"].quaternion",boneData.quat.times,boneData.quat.values));}}mixer.uncacheAction(clip);return new AnimationClip(clip.name,-1,convertedTracks);},getHelperFromSkeleton:function getHelperFromSkeleton(skeleton){var source=new SkeletonHelper(skeleton.bones[0]);source.skeleton=skeleton;return source;},getSkeletonOffsets:function(){var targetParentPos=new Vector3$1(),targetPos=new Vector3$1(),sourceParentPos=new Vector3$1(),sourcePos=new Vector3$1(),targetDir=new Vector2(),sourceDir=new Vector2();return function(target,source,options){options=options||{};options.hip=options.hip!==undefined?options.hip:"hip";options.names=options.names||{};if(!source.isObject3D){source=this.getHelperFromSkeleton(source);}var nameKeys=Object.keys(options.names),nameValues=Object.values(options.names),sourceBones=source.isObject3D?source.skeleton.bones:this.getBones(source),bones=target.isObject3D?target.skeleton.bones:this.getBones(target),offsets=[],bone,boneTo,name,i;target.skeleton.pose();for(i=0;i<bones.length;++i){bone=bones[i];name=options.names[bone.name]||bone.name;boneTo=this.getBoneByName(name,sourceBones);if(boneTo&&name!==options.hip){var boneParent=this.getNearestBone(bone.parent,nameKeys),boneToParent=this.getNearestBone(boneTo.parent,nameValues);boneParent.updateMatrixWorld();boneToParent.updateMatrixWorld();targetParentPos.setFromMatrixPosition(boneParent.matrixWorld);targetPos.setFromMatrixPosition(bone.matrixWorld);sourceParentPos.setFromMatrixPosition(boneToParent.matrixWorld);sourcePos.setFromMatrixPosition(boneTo.matrixWorld);targetDir.subVectors(new Vector2(targetPos.x,targetPos.y),new Vector2(targetParentPos.x,targetParentPos.y)).normalize();sourceDir.subVectors(new Vector2(sourcePos.x,sourcePos.y),new Vector2(sourceParentPos.x,sourceParentPos.y)).normalize();var laterialAngle=targetDir.angle()-sourceDir.angle();var offset=new Matrix4().makeRotationFromEuler(new Euler(0,0,laterialAngle));bone.matrix.multiply(offset);bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);bone.updateMatrixWorld();offsets[name]=offset;}}return offsets;};}(),renameBones:function renameBones(skeleton,names){var bones=this.getBones(skeleton);for(var i=0;i<bones.length;++i){var bone=bones[i];if(names[bone.name]){bone.name=names[bone.name];}}return this;},getBones:function getBones(skeleton){return Array.isArray(skeleton)?skeleton:skeleton.bones;},getBoneByName:function getBoneByName(name,skeleton){for(var i=0,bones=this.getBones(skeleton);i<bones.length;i++){if(name===bones[i].name)return bones[i];}},getNearestBone:function getNearestBone(bone,names){while(bone.isBone){if(names.indexOf(bone.name)!==-1){return bone;}bone=bone.parent;}},findBoneTrackData:function findBoneTrackData(name,tracks){var regexp=/\[(.*)\]\.(.*)/,result={name:name};for(var i=0;i<tracks.length;++i){// 1 is track name
// 2 is track type
var trackData=regexp.exec(tracks[i].name);if(trackData&&name===trackData[1]){result[trackData[2]]=i;}}return result;},getEqualsBonesNames:function getEqualsBonesNames(skeleton,targetSkeleton){var sourceBones=this.getBones(skeleton),targetBones=this.getBones(targetSkeleton),bones=[];search:for(var i=0;i<sourceBones.length;i++){var boneName=sourceBones[i].name;for(var j=0;j<targetBones.length;j++){if(boneName===targetBones[j].name){bones.push(boneName);continue search;}}}return bones;},clone:function clone(source){var sourceLookup=new Map();var cloneLookup=new Map();var clone=source.clone();parallelTraverse(source,clone,function(sourceNode,clonedNode){sourceLookup.set(clonedNode,sourceNode);cloneLookup.set(sourceNode,clonedNode);});clone.traverse(function(node){if(!node.isSkinnedMesh)return;var clonedMesh=node;var sourceMesh=sourceLookup.get(node);var sourceBones=sourceMesh.skeleton.bones;clonedMesh.skeleton=sourceMesh.skeleton.clone();clonedMesh.bindMatrix.copy(sourceMesh.bindMatrix);clonedMesh.skeleton.bones=sourceBones.map(function(bone){return cloneLookup.get(bone);});clonedMesh.bind(clonedMesh.skeleton,clonedMesh.bindMatrix);});return clone;}};function parallelTraverse(a,b,callback){callback(a,b);for(var i=0;i<a.children.length;i++){parallelTraverse(a.children[i],b.children[i],callback);}}var _loaders,_parsers;var EXTENSIONS={JSON:'json',GLB:'glb',GLTF:'gltf',COLLADA:'dae'};var FULL_STOP='.';var loaders=(_loaders={},_defineProperty(_loaders,EXTENSIONS.JSON,new ObjectLoader()),_defineProperty(_loaders,EXTENSIONS.GLB,new GLTFLoader()),_defineProperty(_loaders,EXTENSIONS.GLTF,new GLTFLoader()),_defineProperty(_loaders,EXTENSIONS.COLLADA,new ColladaLoader()),_loaders);var extractExtension=function extractExtension(path){return path.split(FULL_STOP).slice(-1);};var getLoaderFromExtension=function getLoaderFromExtension(extension){return loaders[extension]||new ObjectLoader();};var glbParser=function glbParser(_ref){var scene=_ref.scene,animations=_ref.animations;scene.traverse(function(object){if(object.isMesh){object.castShadow=true;}});return{animations:animations,scene:scene};};var gltfParser=function gltfParser(_ref2){var scene=_ref2.scene,animations=_ref2.animations;return{scene:scene,animations:animations};};var defaultParser=function defaultParser(scene){return{scene:scene};};var colladaParser=function colladaParser(_ref3){var animations=_ref3.animations,scene=_ref3.scene,rawSceneData=_ref3.rawSceneData,buildVisualScene=_ref3.buildVisualScene;scene.traverse(function(node){if(node.isSkinnedMesh){node.frustumCulled=false;}});return{animations:animations,scene:scene,rawSceneData:rawSceneData,buildVisualScene:buildVisualScene};};var parsers=(_parsers={},_defineProperty(_parsers,EXTENSIONS.JSON,defaultParser),_defineProperty(_parsers,EXTENSIONS.GLB,glbParser),_defineProperty(_parsers,EXTENSIONS.GLTF,gltfParser),_defineProperty(_parsers,EXTENSIONS.COLLADA,colladaParser),_parsers);var getModelParserFromExtension=function getModelParserFromExtension(extension){return parsers[extension]||defaultParser;};var Models=function Models(){var _this=this;_classCallCheck(this,Models);_defineProperty(this,"setCurrentLevel",function(level){_this.currentLevel=level;});_defineProperty(this,"getModel",function(name){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _ref4=_this.map[name]||_this.map[buildAssetId(name,_this.currentLevel)]||false,scene=_ref4.scene,animations=_ref4.animations,extension=_ref4.extension;if(scene){var elementOptions=_objectSpread2({name:name},options);var model=scene;if(extension!==EXTENSIONS.COLLADA){// we have no idea how to clone collada for the time being
model=SkeletonUtils.clone(scene);}var element=new Element(null,null,elementOptions);element.setBody({body:prepareModel(model)});element.setEntityType(ENTITY_TYPES.MODEL);if(animations){element.addAnimationHandler(animations);}return element;}return false;});_defineProperty(this,"storeModel",function(name,model,extension){model.extension=extension;_this.map[name]=model;});_defineProperty(this,"loadModels",function(models,level){_this.models=models;var keys=Object.keys(_this.models);if(!keys.length){return Promise.resolve('models');}return Promise.all(keys.map(function(name){return _this.loadSingleFile(name,level);}));});_defineProperty(this,"loadSingleFile",function(name,level){var path=_this.models[name];var id=buildAssetId(name,level);var extension=extractExtension(path);var loader=getLoaderFromExtension(extension);var parser=getModelParserFromExtension(extension);return new Promise(function(resolve){loader.load(path,function(model){var parsedModel=parser(model);if(parsedModel){_this.storeModel(id,parsedModel,extension);}resolve();});});});this.map={};this.models={};this.currentLevel=ROOT;};var Models$1=new Models();function p(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function");}function u(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n);}}function d(t,e,i){return e&&u(t.prototype,e),i&&u(t,i),t;}function f(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&y(t,e);}function v(t){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t);})(t);}function y(t,e){return(y=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t;})(t,e);}function m(t,e){return!e||"object"!=_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t;}(t):e;}var g=function g(t,e){return Math.random()*(e-t)+t;},C=function C(t,e){return e?g(t,t+e):t;},S=function S(e,i){return i?new Color(g(e.r,i.r),g(e.g,i.g),g(e.b,i.b)):e?e.clone():new Color();},z=function z(t,i){return i?new Vector3$1(g(t.x,i.x),g(t.y,i.y),g(t.z,i.z)):t?t.clone():new Vector3$1();},w=function w(t,e,i){return t.clone().lerp(e,i);},_=function _(t,e,i){return t*(1-i)+e*i;},A=function A(t){return(t.generate?t.generate():t)||0;},b=Object.freeze({__proto__:null,getRandomBetween:g,getRandomWithSpread:C,getRandomColorBetween:S,getRandomVectorBetween:z,lerpColors:w,lerp:_,randomizerOrValue:A}),P=function(){function t(e){p(this,t),this.system=e,this.reset();}return d(t,[{key:"reset",value:function value(){var t=this.system.options.particles;this.age=0,this.finished=!1,this.gravity=t.gravity,this.velocity=x(t.velocity),t.velocityBonus&&this.velocity.add(t.velocityBonus),this.acceleration=x(t.acceleration,!0),this.position=x(t.offset),this.ttl=C(t.ttl||1,t.ttlExtra)||1,this.alpha=this.startAlpha=this.endAlpha=null,this.startAlphaChangeAt=(t.startAlphaChangeAt||0)/this.ttl,t.fade&&(void 0!==t.alpha?this.alpha=A(t.alpha):(this.startAlpha=A(t.startAlpha),this.endAlpha=A(t.endAlpha))),this.colorize=Boolean(t.colorize),this.color=this.startColor=this.endColor=null,this.startColorChangeAt=(t.startColorChangeAt||0)/this.ttl,this.colorize&&(t.color?this.color=T(t.color):(this.startColor=T(t.startColor),this.endColor=T(t.endColor))),this.size=this.startSize=this.endSize=null,this.startSizeChangeAt=(t.startSizeChangeAt||0)/this.ttl,t.scaling&&(void 0!==t.size?this.size=A(t.size):(this.startSize=A(t.startSize),this.endSize=A(t.endSize))),this.rotation=this.rotationSpeed=null,t.rotating&&(this.rotation=A(t.rotation||0),this.rotationSpeed=A(t.rotationSpeed||0)),this.startWorldPosition=null,this.onUpdate=t.onUpdate,t.onSpawn&&t.onSpawn(this);}},{key:"update",value:function value(t,e){if(!this.finished){0===this.age?(this.system.options.particles.worldPosition&&(this.startWorldPosition=this.system.getWorldPosition()),null===this.alpha&&null===this.startAlpha||this.system.setAlpha(t,this.alpha||this.startAlpha),null===this.color&&null===this.startColor||this.system.setColor(t,this.color||this.startColor),null===this.size&&null===this.startSize||this.system.setSize(t,this.size||this.startSize),null!==this.rotation&&this.system.setRotation(t,this.rotation)):(this.startColor&&this.age>=this.startColorChangeAt&&this.system.setColor(t,w(this.startColor,this.endColor,this.startColorChangeAt?(this.age-this.startColorChangeAt)/(1-this.startColorChangeAt):this.age)),null!=this.startAlpha&&this.age>=this.startAlphaChangeAt&&this.system.setAlpha(t,_(this.startAlpha,this.endAlpha,this.startAlphaChangeAt?(this.age-this.startAlphaChangeAt)/(1-this.startAlphaChangeAt):this.age)),null!=this.startSize&&this.age>=this.startSizeChangeAt&&this.system.setSize(t,_(this.startSize,this.endSize,this.startSizeChangeAt?(this.age-this.startSizeChangeAt)/(1-this.startSizeChangeAt):this.age))),this.gravity&&this.velocity&&(this.velocity.y+=this.gravity*e),this.rotationSpeed&&(this.rotation+=this.rotationSpeed*e,this.system.setRotation(t,this.rotation)),this.velocity&&(this.position.x+=this.velocity.x*e,this.position.y+=this.velocity.y*e,this.position.z+=this.velocity.z*e);var i=this.position;if(this.startWorldPosition){var n=this.system.getWorldPosition();n.sub(this.startWorldPosition),i=i.clone().sub(n);}this.system.setPosition(t,i),this.acceleration&&this.velocity&&(this.velocity.x+=this.acceleration.x*e,this.velocity.y+=this.acceleration.y*e,this.velocity.z+=this.acceleration.z*e),this.age+=e/this.ttl,this.onUpdate&&this.onUpdate(this),this.age>1&&(this.age=1,this.finished=!0);}}},{key:"worldPosition",get:function get(){return this.system.getWorldPosition().add(this.position);}}]),t;}();function x(t,i){return t?t.generate?t.generate():t.clone():i?null:new Vector3$1();}function T(e,i){return e?e.generate?e.generate():e.clone():i?null:new Color(1,1,1);}var R=function(){function e(r){p(this,e),this.options=r;var o={globalColor:{value:new Color(r.color||16777215)},rendererScale:{value:1}},s="";r.perspective&&(s+="#define PERSPECTIVE\n"),r.map&&(s+="#define TEXTURE\n",o.texture={value:r.map}),r.perParticleColor&&(s+="#define COLORING\n"),r.perParticleRotation&&(s+="#define ROTATION\n"),r.constSize&&(s+="#define CONST_SIZE\n",o.constSize={value:r.constSize}),r.alphaTest&&(s+="#define ALPHA_TEST\n"),s+="\n",this.material=new ShaderMaterial({uniforms:o,vertexShader:s+"\n// attributes we get from geometry\nattribute float alpha;\n\n// per-particle size\n#ifdef CONST_SIZE\n    uniform float constSize;\n#else\n    attribute float size;\n#endif\n\n// per-particle rotation\n#ifdef ROTATION\n    attribute float rotation;\n#endif\n\n// system scale when using perspective mode\n#ifdef PERSPECTIVE\n    uniform float rendererScale;\n#endif\n\n// output params for fragment shader\nvarying float vAlpha;\n\n// set per-particle color\n#ifdef COLORING\n    varying vec3 vColor;\n#endif\n\n// get per-particle rotation\n#ifdef ROTATION\n    varying float vRotation;\n#endif\n\n// vertex shader main\nvoid main() \n{\n    // alpha and color\n    vAlpha = alpha;\n\n    // set color\n    #ifdef COLORING\n        vColor = color;\n    #endif\n\n    // set const size\n    #ifdef CONST_SIZE\n        float size = constSize;\n    #endif\n\n    // set position\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n\n    // apply rotation\n    #ifdef ROTATION\n        vRotation = rotation;\n    #endif\n    \n    // set size - either perspective or constant\n    #ifdef PERSPECTIVE\n        gl_PointSize = size * (rendererScale / length(mvPosition.xyz));\n    #else\n        gl_PointSize = size;\n    #endif\n}\n",fragmentShader:s+"\n// material uniforms\nuniform vec3 globalColor;\n\n// params we get from vertex shader\nvarying float vAlpha;\n\n// per-particle color from vertex shader\n#ifdef COLORING\n    varying vec3 vColor;\n#endif\n\n// per-particle rotation from vertex shader\n#ifdef ROTATION\n    varying float vRotation;\n#endif\n\n// diffuse texture\n#ifdef TEXTURE\n    uniform sampler2D texture;\n#endif\n\n// fragment shader main\nvoid main() \n{\n    // set default color if don't have per-particle colors\n    #ifndef COLORING\n        vec3 vColor = vec3(1,1,1);\n    #endif\n\n    // texture\n    #ifdef TEXTURE\n\n        // use rotation (rotate texture)\n        #ifdef ROTATION\n            float mid = 0.5;\n            vec2 rotated = vec2(cos(vRotation) * (gl_PointCoord.x - mid) + sin(vRotation) * (gl_PointCoord.y - mid) + mid,\n                          cos(vRotation) * (gl_PointCoord.y - mid) - sin(vRotation) * (gl_PointCoord.x - mid) + mid);\n            vec4 texture = texture2D(texture,  rotated);\n        // no rotation\n        #else\n            vec2 coords = vec2((gl_PointCoord.x - 0.5) + 0.5, (gl_PointCoord.y - 0.5) + 0.5);\n            vec4 texture = texture2D(texture, coords);\n        #endif\n\n        // get color with texture\n        gl_FragColor = vec4( globalColor * vColor, vAlpha ) * texture;\n        \n    // no texture (colors only)\n    #else\n        gl_FragColor = vec4( globalColor * vColor, vAlpha );\n    #endif\n\n    // check if need to discard pixel\n    #ifdef ALPHA_TEST\n        if (gl_FragColor.a < 0.00001) { discard; }\n    #endif\n}\n",transparent:Boolean(r.transparent),blending:r.blending,vertexColors:VertexColors,depthWrite:Boolean(r.depthWrite),depthTest:Boolean(r.depthTest)});}return d(e,[{key:"dispose",value:function value(){this.material.dispose();}},{key:"setBaseScale",value:function value(t){this.options.perspective&&(this.material.uniforms.rendererScale.value=t);}}]),e;}(),O=function O(t){return null!=t;},E=function(){function i(e){p(this,i),e.particles=e.particles||{worldPosition:!0},e.system=e.system||{},this.options=e,this.hasStarted=!1;var n=e.particles;if("number"==typeof e.particles.size&&(console.warn("Note: replaced 'size' with 'globalSize' property since its more efficient and provided size value was constant anyway."),e.particles.globalSize=e.particles.size,delete e.particles.size),e.particles.color instanceof Color&&(console.warn("Note: replaced 'color' with 'globalColor' property since its more efficient and you provided color value was constant anyway."),e.particles.globalColor=e.particles.color,delete e.particles.color),e.particles.fade=O(n.startAlpha)||O(n.alpha),e.particles.rotating=O(n.rotationSpeed)||O(n.rotation),e.particles.colorize=O(n.color)||O(n.startColor),e.particles.scaling=O(n.size)||O(n.startSize),O(n.startAlpha)&&!O(n.endAlpha))throw new Error("When providing 'startAlpha' you must also provide 'endAlpha'!");if(O(n.startAlpha)&&O(n.alpha))throw new Error("When providing 'alpha' you can't also provide 'startAlpha'!");if(O(n.startColor)&&!O(n.endColor))throw new Error("When providing 'startColor' you must also provide 'endColor'!");if(O(n.startColor)&&O(n.color))throw new Error("When providing 'color' you can't also provide 'startColor'!");if(O(n.startSize)&&!O(n.endSize))throw new Error("When providing 'startSize' you must also provide 'endSize'!");if(O(n.startSize)&&O(n.size))throw new Error("When providing 'size' you can't also provide 'startSize'!");this.particleCount=e.system.particlesCount||10,this.blending=e.particles.blending||"opaque",this.threeBlend={opaque:NoBlending,additive:AdditiveBlending,multiply:MultiplyBlending,blend:NormalBlending}[this.blending],e.autostart&&this.start();}return d(i,[{key:"start",value:function value(){this._emitters=[];var t=this.options,e=t.system,i=t.particles,n=t.container;if(e.emitters)if(e.emitters instanceof Array)for(var r=0;r<e.emitters.length;++r){this.addEmitter(e.emitters[r]);}else this.addEmitter(e.emitters);var o="opaque"!==this.blending;this.particlesGeometry=new BufferGeometry();var s=void 0===e.perspective||Boolean(e.perspective),a=new R({size:i.size||10,color:i.globalColor||16777215,blending:this.threeBlend,perspective:s,transparent:o,map:i.texture,perParticleColor:Boolean(i.colorize),alphaTest:"blend"===this.blending&&O(i.texture),constSize:O(i.globalSize)?i.globalSize:null,depthWrite:!O(e.depthWrite)||e.depthWrite,depthTest:!O(e.depthTest)||e.depthTest,perParticleRotation:i.rotating});this.material=a,this.speed=e.speed||1,this.reset(),this._aliveParticles=[],this._deadParticles=[];for(var p=new Float32Array(3*this.particleCount),u=i.colorize?new Float32Array(3*this.particleCount):null,d=i.fade?new Float32Array(1*this.particleCount):null,f=i.scaling?new Float32Array(1*this.particleCount):null,v=i.rotating?new Float32Array(1*this.particleCount):null,y=0;y<this.particleCount;y++){var m=3*y;p[m]=p[m+1]=p[m+2]=0,u&&(u[m]=u[m+1]=u[m+2]=1),d&&(d[y]=1),f&&(f[y]=1),v&&(v[y]=0),this._deadParticles.push(new P(this));}this.particlesGeometry.setAttribute("position",new BufferAttribute(p,3)),d&&this.particlesGeometry.setAttribute("alpha",new BufferAttribute(d,1)),u&&this.particlesGeometry.setAttribute("color",new BufferAttribute(u,3)),f&&this.particlesGeometry.setAttribute("size",new BufferAttribute(f,1)),v&&this.particlesGeometry.setAttribute("rotation",new BufferAttribute(v,1)),this.particlesGeometry.setDrawRange(0,0),this.material.setBaseScale(e.scale||400);var g=new Points(this.particlesGeometry,this.material.material);g.sortParticles=o,this.particleSystem=g,this._positionDirty=!0,this._colorsDirty=Boolean(u),this._alphaDirty=Boolean(d),this._rotateDirty=Boolean(v),n&&this.addTo(n),this.hasStarted=!0;}},{key:"stop",value:function value(){this.ttl=0;}},{key:"addEmitter",value:function value(t){this._emitters.push(t);}},{key:"dispose",value:function value(){this.particlesGeometry.dispose(),this.material.dispose();}},{key:"reset",value:function value(){this.ttl=this.options.system.ttl,this.age=0,this._timeToUpdateBS=0;}},{key:"getWorldPosition",value:function value(){var t=new Vector3$1();return this.particleSystem.getWorldPosition(t),t;}},{key:"addTo",value:function value(t){t.add(this.particleSystem);}},{key:"setColor",value:function value(t,e){t*=3;var i=this.particlesGeometry.attributes.color.array;i[t]=e.r,i[t+1]=e.g,i[t+2]=e.b,this._colorsDirty=!0;}},{key:"setPosition",value:function value(t,e){t*=3;var i=this.particlesGeometry.attributes.position.array;i[t]=e.x,i[t+1]=e.y,i[t+2]=e.z,this._positionDirty=!0;}},{key:"setAlpha",value:function value(t,e){this.particlesGeometry.attributes.alpha.array[t]=e,this._alphaDirty=!0;}},{key:"setRotation",value:function value(t,e){this.particlesGeometry.attributes.rotation.array[t]=e,this._rotateDirty=!0;}},{key:"setSize",value:function value(t,e){this.particlesGeometry.attributes.size.array[t]=e,this._sizeDirty=!0;}},{key:"removeAndDisposeIfFinished",value:function value(){return!!this.finished&&(this.removeSelf(),this.dispose(),!0);}},{key:"update",value:function value(t){if(this.hasStarted){if(void 0===t){var e=new Date().getTime()/1e3;t=e-this._lastTime||0,this._lastTime=e;}if(0!==t){void 0!==this.ttl&&this.ttl>0&&(this.ttl-=t),t*=this.speed,this.dt=t,this.age+=t;var i=this._aliveParticles.length;if(!this.ttlExpired)for(var n=0;n<this._emitters.length;++n){var r=this._emitters[n].update(t,this);r&&this.spawnParticles(r);}for(n=this._aliveParticles.length-1;n>=0;--n){var o=this._aliveParticles[n];o.update(n,t),o.finished&&(this._aliveParticles.splice(n,1),this._deadParticles.push(o));}i!==this._aliveParticles.length&&this.particlesGeometry.setDrawRange(0,this._aliveParticles.length),this.particlesGeometry.attributes.position.needsUpdate=this._positionDirty,this._needBoundingSphereUpdate=this._needBoundingSphereUpdate||this._positionDirty,this._positionDirty=!1,this._colorsDirty&&(this.particlesGeometry.attributes.color.needsUpdate=!0,this._colorsDirty=!1),this._alphaDirty&&(this.particlesGeometry.attributes.alpha.needsUpdate=!0,this._alphaDirty=!1),this._sizeDirty&&(this.particlesGeometry.attributes.size.needsUpdate=!0,this._sizeDirty=!1),this._rotateDirty&&(this.particlesGeometry.attributes.rotation.needsUpdate=!0,this._rotateDirty=!1),this._needBoundingSphereUpdate&&(this._timeToUpdateBS-=t,this._timeToUpdateBS<=0&&(this._timeToUpdateBS=.2,this.particlesGeometry.computeBoundingSphere())),this.finished||this.options.system.onUpdate&&this.options.system.onUpdate(this);}}}},{key:"spawnParticles",value:function value(t){for(var e=0;e<t;++e){if(0===this._deadParticles.length)return;var i=this._deadParticles.pop();i.reset(),this._aliveParticles.push(i);}}},{key:"removeSelf",value:function value(){this.particleSystem.parent&&this.particleSystem.parent.remove(this.particleSystem);}},{key:"finished",get:function get(){return this.ttlExpired&&0===this.particlesCount;}},{key:"ttlExpired",get:function get(){return void 0!==this.ttl&&this.ttl<=0;}},{key:"particlesCount",get:function get(){return this._aliveParticles.length;}},{key:"maxParticlesCount",get:function get(){return this._aliveParticles.length+this._deadParticles.length;}}]),i;}(),k$1=function(){function t(e){p(this,t),this.options=e,e.interval=e.interval||1,this.age=0,this.timeToSpawn=Math.random()*A(e.interval);}return d(t,[{key:"update",value:function value(t,e){var i=0;if(0===this.age&&this.options.onSpawnBurst&&(i+=A(this.options.onSpawnBurst)),this.age+=t,!this.options.onInterval)return i;(this.timeToSpawn-=t,this.timeToSpawn<=0&&(this.timeToSpawn=A(this.options.interval),i+=A(this.options.onInterval)),this.options.detoretingMinTtl&&e.ttl<this.options.detoretingMinTtl)&&(i*=e.ttl/this.options.detoretingMinTtl);return i;}}]),t;}(),B=function(){function t(){p(this,t);}return d(t,[{key:"generate",value:function value(){throw new Error("Not implemented.");}}]),t;}(),D=function(t){function i(t,n){var r;return p(this,i),(r=m(this,v(i).call(this))).min=t||new Vector3$1(-1,-1,-1),r.max=n||new Vector3$1(1,1,1),r;}return f(i,B),d(i,[{key:"generate",value:function value(){return z(this.min,this.max);}}]),i;}();function G(){return 2*Math.random()-1;}var U=function(t){function i(t,e,n,r,o){var s;return p(this,i),(s=m(this,v(i).call(this))).maxRadius=t||1,s.minRadius=e||0,s.scaler=n,s.minVector=r,s.maxVector=o,s;}return f(i,B),d(i,[{key:"generate",value:function value(){var t=new Vector3$1(G(),G(),G());return(this.minVector||this.maxVector)&&t.clamp(this.minVector||new Vector3$1(-1,-1,-1),this.maxVector||new Vector3$1(1,1,1)),t.normalize().multiplyScalar(g(this.minRadius,this.maxRadius)),this.scaler&&t.multiply(this.scaler),t;}}]),i;}(),W=function(e){function i(e,n){var r;return p(this,i),(r=m(this,v(i).call(this))).min=e||new Color(0,0,0),r.max=n||new Color(1,1,1),r;}return f(i,B),d(i,[{key:"generate",value:function value(){return S(this.min,this.max);}}]),i;}(),I=function(t){function e(t,i){var n;return p(this,e),(n=m(this,v(e).call(this))).min=t,n.max=i,n;}return f(e,B),d(e,[{key:"generate",value:function value(){return g(this.min,this.max);}}]),e;}(),N=Object.freeze({__proto__:null,Randomizer:B,BoxRandomizer:D,SphereRandomizer:U,ColorsRandomizer:W,MinMaxRandomizer:I});var index=/*#__PURE__*/Object.freeze({__proto__:null,Emitter:k$1,Particle:P,ParticlesSystem:E,Randomizers:N,Utils:b});function _createSuper2$m(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var ParticleEmitter=/*#__PURE__*/function(_EventDispatcher){_inherits(ParticleEmitter,_EventDispatcher);var _super=_createSuper2$m(ParticleEmitter);function ParticleEmitter(){var _this;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,ParticleEmitter);_this=_super.call(this);_this.system=null;_this.options=options;_this.setSystem();return _this;}_createClass(ParticleEmitter,[{key:"hasSystem",value:function hasSystem(){return!!this.system;}},{key:"setSystem",value:function setSystem(){var _this$options=this.options,_this$options$contain=_this$options.container,container=_this$options$contain===void 0?Scene$2.getScene():_this$options$contain,_this$options$autosta=_this$options.autostart,autostart=_this$options$autosta===void 0?false:_this$options$autosta,_this$options$particl=_this$options.particles,particles=_this$options$particl===void 0?{}:_this$options$particl,_this$options$system=_this$options.system,system=_this$options$system===void 0?{}:_this$options$system;this.system=new E({container:container,autostart:autostart,particles:particles,system:system});}},{key:"setPosition",value:function setPosition(where){var position=_objectSpread2({},this.getPosition(),{},where);this.system.particleSystem.position.set(position.x,position.y,position.z);}},{key:"getPosition",value:function getPosition(){return{x:this.system.particleSystem.position.x,y:this.system.particleSystem.position.y,z:this.system.particleSystem.position.z};}},{key:"setRotation",value:function setRotation(howmuch){var rotation=_objectSpread2({},this.getRotation(),{},howmuch);this.system.particleSystem.rotation.set(rotation.x,rotation.y,rotation.z);}},{key:"getRotation",value:function getRotation(){return{x:this.system.particleSystem.rotation.x,y:this.system.particleSystem.rotation.y,z:this.system.particleSystem.rotation.z};}},{key:"start",value:function start(){if(this.hasSystem()){this.system.start();}}},{key:"update",value:function update(){if(this.hasSystem()){this.system.update();}}}]);return ParticleEmitter;}(EventDispatcher);function _createSuper2$n(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Fountain=/*#__PURE__*/function(_ParticleEmitter){_inherits(Fountain,_ParticleEmitter);var _super=_createSuper2$n(Fountain);function Fountain(_ref){var container=_ref.container,autostart=_ref.autostart,particles=_ref.particles,system=_ref.system;_classCallCheck(this,Fountain);var options={container:container,autostart:autostart,particles:_objectSpread2({ttl:10,globalSize:5,velocity:new N.SphereRandomizer(12.5),velocityBonus:new Vector3$1(0,25,0),particlesCount:1000,blending:'blend',gravity:-10,startAlpha:1,endAlpha:0,startColor:new N.ColorsRandomizer(),endColor:new N.ColorsRandomizer(),startAlphaChangeAt:0,onUpdate:function onUpdate(particle){var floorY=-10;if(particle.position.y<floorY){particle.position.y=floorY;particle.velocity.y*=-0.5;particle.velocity.x*=0.5;particle.velocity.z*=0.5;}}},particles),system:_objectSpread2({particlesCount:100,emitters:new k$1({onInterval:new N.MinMaxRandomizer(0,5),interval:new N.MinMaxRandomizer(0,0.25)}),speed:1},system)};return _super.call(this,options);}return Fountain;}(ParticleEmitter);var SPARKS_OPTIONS={particles:{globalSize:1,ttl:1.5,velocity:new N.SphereRandomizer(30),velocityBonus:new Vector3$1(10,20,10),startAlpha:1,endAlpha:0,color:new N.ColorsRandomizer(new Color(0.5,0.2,0),new Color(1,0.5,0)),startAlphaChangeAt:1,blending:"blend",onSpawn:function onSpawn(particle){particle.position.y=5;}},system:{particlesCount:5,emitters:new k$1({onInterval:new N.MinMaxRandomizer(0,5),interval:2}),speed:1.3,ttl:1}};var SYSTEM_OPTIONS={particles:{startAlpha:1,endAlpha:0,startAlphaChangeAt:.3,startSize:new N.MinMaxRandomizer(5,8),endSize:new N.MinMaxRandomizer(8,10),ttl:.7,gravity:-5,velocity:new N.SphereRandomizer(25,5),velocityBonus:new Vector3$1(20,20,20),startColor:new N.ColorsRandomizer(new Color(0.5,0.2,0),new Color(1,0.5,0)),endColor:new Color(0,0,0),blending:"additive",worldPosition:true},system:{particlesCount:20,depthWrite:true,emitters:new k$1({onInterval:new N.MinMaxRandomizer(250,500),interval:2}),speed:1.3,ttl:1}};var DEBRIS_OPTIONS={particles:{globalSize:3,ttl:2,velocity:new N.SphereRandomizer(30.5),velocityBonus:new Vector3$1(10,15,10),gravity:-30,startAlpha:1,endAlpha:0,startColor:new N.ColorsRandomizer(),endColor:new N.ColorsRandomizer(),startAlphaChangeAt:0,blending:"blend",onUpdate:function onUpdate(particle){if(particle.position.y<0){particle.position.y=0;particle.velocity.y=-0.5;particle.velocity.x=0.5;particle.velocity.z*=0.5;}}},system:{particlesCount:20,emitters:new k$1({onInterval:new N.MinMaxRandomizer(250,500),interval:2}),speed:1.3,ttl:1}};var Explosion=/*#__PURE__*/function(){function Explosion(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,Explosion);var _options$container=options.container,container=_options$container===void 0?Scene$2.getScene():_options$container,_options$autostart=options.autostart,autostart=_options$autostart===void 0?false:_options$autostart,_options$sparks=options.sparks,sparks=_options$sparks===void 0?{particles:{},system:{}}:_options$sparks,_options$explosion=options.explosion,explosion=_options$explosion===void 0?{particles:{},system:{}}:_options$explosion,_options$debris=options.debris,debris=_options$debris===void 0?{particles:{},system:{}}:_options$debris;this.system=null;this.sparks=null;this.debris=null;this.options={sparks:{container:container,autostart:autostart,particles:_objectSpread2({},SPARKS_OPTIONS.particles,{},sparks.particles),system:_objectSpread2({},SPARKS_OPTIONS.system,{},sparks.system)},explosion:{container:container,autostart:autostart,particles:_objectSpread2({},SYSTEM_OPTIONS.particles,{},explosion.particles),system:_objectSpread2({},SYSTEM_OPTIONS.system,{},explosion.system)},debris:{container:container,autostart:autostart,particles:_objectSpread2({},DEBRIS_OPTIONS.particles,{},debris.particles),system:_objectSpread2({},DEBRIS_OPTIONS.system,{},debris.system)}};this.setSystem();}_createClass(Explosion,[{key:"hasSystem",value:function hasSystem(){return!!this.system&&!!this.sparks&&!!this.debris;}},{key:"setSystem",value:function setSystem(){var _this$options=this.options,_this$options$sparks=_this$options.sparks,sparks=_this$options$sparks===void 0?{}:_this$options$sparks,_this$options$explosi=_this$options.explosion,explosion=_this$options$explosi===void 0?{}:_this$options$explosi,_this$options$debris=_this$options.debris,debris=_this$options$debris===void 0?{}:_this$options$debris;this.system=new E(explosion);this.sparks=new E(sparks);this.debris=new E(debris);}},{key:"setPosition",value:function setPosition(where){var position=_objectSpread2({},this.getPosition(),{},where);this.system.particleSystem.position.set(position.x,position.y,position.z);this.sparks.particleSystem.position.set(position.x,position.y,position.z);this.debris.particleSystem.position.set(position.x,position.y,position.z);}},{key:"getPosition",value:function getPosition(){return{x:this.system.particleSystem.position.x,y:this.system.particleSystem.position.y,z:this.system.particleSystem.position.z};}},{key:"setRotation",value:function setRotation(howmuch){var rotation=_objectSpread2({},this.getRotation(),{},howmuch);this.system.particleSystem.rotation.set(rotation.x,rotation.y,rotation.z);this.sparks.particleSystem.rotation.set(rotation.x,rotation.y,rotation.z);this.debris.particleSystem.rotation.set(rotation.x,rotation.y,rotation.z);}},{key:"getRotation",value:function getRotation(){return{x:this.system.particleSystem.rotation.x,y:this.system.particleSystem.rotation.y,z:this.system.particleSystem.rotation.z};}},{key:"start",value:function start(){if(this.hasSystem()){this.system.start();this.sparks.start();this.debris.start();}}},{key:"update",value:function update(){if(this.hasSystem()){this.system.update();this.sparks.update();this.debris.update();}}}]);return Explosion;}();var SPARKS_OPTIONS$1={particles:{globalSize:0.3,ttl:0.4,velocity:new N.SphereRandomizer(15),velocityBonus:new Vector3$1(0,20,0),startAlpha:1,endAlpha:0,color:new N.ColorsRandomizer(new Color(0.5,0.2,0),new Color(1,0.5,0)),startAlphaChangeAt:.2,blending:"blend",onSpawn:function onSpawn(particle){particle.position.y=5;}},system:{particlesCount:5,emitters:new k$1({onInterval:new N.MinMaxRandomizer(0,5),interval:new N.MinMaxRandomizer(0,0.25)}),speed:.5}};var SYSTEM_OPTIONS$1={particles:{startAlpha:1,endAlpha:0,startSize:10,endSize:20,ttl:3,velocity:new N.SphereRandomizer(3),velocityBonus:new Vector3$1(0,5,0),colorize:true,startColor:new N.ColorsRandomizer(new Color(0.5,0.2,0),new Color(1,0.5,0)),endColor:new Color(0,0,0),blending:"additive",worldPosition:true},system:{particlesCount:2000,emitters:new k$1({onInterval:new N.MinMaxRandomizer(0,0.3),interval:new N.MinMaxRandomizer(0,0.1)}),depthWrite:false,speed:0.8}};var Fire=/*#__PURE__*/function(){function Fire(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,Fire);var _options$container=options.container,container=_options$container===void 0?Scene$2.getScene():_options$container,_options$autostart=options.autostart,autostart=_options$autostart===void 0?false:_options$autostart,_options$sparks=options.sparks,sparks=_options$sparks===void 0?{particles:{},system:{}}:_options$sparks,_options$fire=options.fire,fire=_options$fire===void 0?{particles:{},system:{}}:_options$fire;this.system=null;this.sparks=null;this.options={sparks:{container:container,autostart:autostart,particles:_objectSpread2({},SPARKS_OPTIONS$1.particles,{},sparks.particles),system:_objectSpread2({},SPARKS_OPTIONS$1.system,{},sparks.system)},fire:{container:container,autostart:autostart,particles:_objectSpread2({},SYSTEM_OPTIONS$1.particles,{},fire.particles),system:_objectSpread2({},SYSTEM_OPTIONS$1.system,{},fire.system)}};this.setSystem();}_createClass(Fire,[{key:"hasSystem",value:function hasSystem(){return!!this.system&&!!this.sparks;}},{key:"setSystem",value:function setSystem(){var _this$options=this.options,_this$options$sparks=_this$options.sparks,sparks=_this$options$sparks===void 0?{}:_this$options$sparks,_this$options$fire=_this$options.fire,fire=_this$options$fire===void 0?{}:_this$options$fire;this.system=new E(fire);this.sparks=new E(sparks);}},{key:"setPosition",value:function setPosition(where){var position=_objectSpread2({},this.getPosition(),{},where);this.system.particleSystem.position.set(position.x,position.y,position.z);this.sparks.particleSystem.position.set(position.x,position.y,position.z);}},{key:"getPosition",value:function getPosition(){return{x:this.system.particleSystem.position.x,y:this.system.particleSystem.position.y,z:this.system.particleSystem.position.z};}},{key:"setRotation",value:function setRotation(howmuch){var rotation=_objectSpread2({},this.getRotation(),{},howmuch);this.system.particleSystem.rotation.set(rotation.x,rotation.y,rotation.z);this.sparks.particleSystem.rotation.set(rotation.x,rotation.y,rotation.z);}},{key:"getRotation",value:function getRotation(){return{x:this.system.particleSystem.rotation.x,y:this.system.particleSystem.rotation.y,z:this.system.particleSystem.rotation.z};}},{key:"start",value:function start(){if(this.hasSystem()){this.system.start();this.sparks.start();}}},{key:"update",value:function update(){if(this.hasSystem()){this.system.update();this.sparks.update();}}}]);return Fire;}();function _createSuper2$o(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Rain=/*#__PURE__*/function(_ParticleEmitter){_inherits(Rain,_ParticleEmitter);var _super=_createSuper2$o(Rain);function Rain(_ref){var container=_ref.container,autostart=_ref.autostart,particles=_ref.particles,system=_ref.system;_classCallCheck(this,Rain);var options={container:container,autostart:autostart,particles:_objectSpread2({globalSize:0.4,ttl:5,velocity:new Vector3$1(0,-2,0),velocityBonus:new Vector3$1(0,-60,0),gravity:-10,startAlpha:1,endAlpha:0,startColor:new Color(1,1,1),endColor:new Color(0,0,0),startAlphaChangeAt:0,blending:"additive",onSpawn:function onSpawn(particle){particle.position.x=Math.random()*100;particle.position.z=Math.random()*100;}},particles),system:_objectSpread2({particlesCount:2000,emitters:new k$1({onInterval:new N.MinMaxRandomizer(0,5),interval:new N.MinMaxRandomizer(0,0.25)}),speed:1.5},system)};return _super.call(this,options);}return Rain;}(ParticleEmitter);function _createSuper2$p(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Snow=/*#__PURE__*/function(_ParticleEmitter){_inherits(Snow,_ParticleEmitter);var _super=_createSuper2$p(Snow);function Snow(_ref){var container=_ref.container,autostart=_ref.autostart,particles=_ref.particles,system=_ref.system;_classCallCheck(this,Snow);var options={container:container,autostart:autostart,particles:_objectSpread2({globalSize:0.7,ttl:5,velocity:new N.SphereRandomizer(30),velocityBonus:new Vector3$1(0,-30,0),gravity:-10,startAlpha:0.8,endAlpha:0,startColor:new Color(1,1,1),endColor:new Color(0,0,0),startAlphaChangeAt:0,blending:"blend",onSpawn:function onSpawn(particle){particle.position.x=Math.random()*200;particle.position.z=Math.random()*200;}},particles),system:_objectSpread2({particlesCount:4000,emitters:new k$1({onInterval:new N.MinMaxRandomizer(0,5),interval:new N.MinMaxRandomizer(0,0.25)}),speed:1.5},system)};return _super.call(this,options);}return Snow;}(ParticleEmitter);var PARTICLES={RAIN:'rain',EXPLOSION:'explosion',FOUNTAIN:'fountain',FIRE:'fire',SNOW:'snow'};var Particles=/*#__PURE__*/function(){function Particles(){var _this=this,_this$map;_classCallCheck(this,Particles);_defineProperty(this,"isRegisteredEmitter",function(name){return typeof name==='string'&&name in _this.map;});_defineProperty(this,"hasEmitters",function(){return _this.emitters.length>0;});this.map=(_this$map={},_defineProperty(_this$map,PARTICLES.RAIN,Rain),_defineProperty(_this$map,PARTICLES.EXPLOSION,Explosion),_defineProperty(_this$map,PARTICLES.FOUNTAIN,Fountain),_defineProperty(_this$map,PARTICLES.FIRE,Fire),_defineProperty(_this$map,PARTICLES.SNOW,Snow),_this$map);this.emitters=[];}_createClass(Particles,[{key:"get",value:function get(name){return this.map[name]||null;}},{key:"registerEmitter",value:function registerEmitter(key,Emitter){this.map[key]=Emitter;}},{key:"addParticleEmitter",value:function addParticleEmitter(emitterId){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(this.isRegisteredEmitter(emitterId)){var Emitter=this.get(emitterId);var emitter=new Emitter(options);this.emitters.push(emitter);return emitter;}else{console.log(INVALID_EMITTER_ID);}}},{key:"update",value:function update(){var _this2=this;return new Promise(function(resolve){if(_this2.hasEmitters()){_this2.emitters.forEach(function(e){return e.update();});resolve();}});}}]);return Particles;}();var Particles$1=new Particles();var POINTLIGHT='pointlight';var AMBIENTLIGHT='ambientlight';var SUNLIGHT='sunlight';var SPOTLIGHT='spotlight';var HEMISPHERELIGHT='hemisphere';var TIME_TO_UPDATE=100;var Lights=/*#__PURE__*/function(){function Lights(){_classCallCheck(this,Lights);this.delayFactor=0.1;this.delayStep=30;this.holderRadius=0.01;this.holderSegments=1;this.numLights=0;this.map={};this.lights=[];}_createClass(Lights,[{key:"add",value:function add(light){this.lights.push(light);}},{key:"update",value:function update(dt){var _this=this;return new Promise(function(resolve){var start=new Date();for(var index in _this.lights){var light=_this.lights[index];light.update(dt);if(+new Date()-start>TIME_TO_UPDATE)break;}resolve();});}},{key:"toJSON",value:function toJSON(){return{lights:this.lights.map(function(l){return l.toJSON();})};}}]);return Lights;}();var Lights$1=new Lights();var _DEFAULT_COMMON_ASSET;var DEFAULT_COMMON_ASSETS=(_DEFAULT_COMMON_ASSET={},_defineProperty(_DEFAULT_COMMON_ASSET,ASSETS_TYPES.AUDIO,{}),_defineProperty(_DEFAULT_COMMON_ASSET,ASSETS_TYPES.VIDEO,{}),_defineProperty(_DEFAULT_COMMON_ASSET,ASSETS_TYPES.IMAGES,{}),_defineProperty(_DEFAULT_COMMON_ASSET,ASSETS_TYPES.TEXTURES,{}),_defineProperty(_DEFAULT_COMMON_ASSET,ASSETS_TYPES.MODELS,{}),_defineProperty(_DEFAULT_COMMON_ASSET,ASSETS_TYPES.PARTICLES,{}),_defineProperty(_DEFAULT_COMMON_ASSET,ASSETS_TYPES.SCRIPTS,{}),_defineProperty(_DEFAULT_COMMON_ASSET,ASSETS_TYPES.SHADERS,{}),_defineProperty(_DEFAULT_COMMON_ASSET,"_isLoaded",false),_DEFAULT_COMMON_ASSET);var DEFAULT_ASSETS={common:DEFAULT_COMMON_ASSETS,levels:{}};var Assets=/*#__PURE__*/function(){function Assets(){var _this=this;_classCallCheck(this,Assets);_defineProperty(this,"setCurrentLevel",function(level){_this.currentLevel=level;Models$1.setCurrentLevel(level);Audio$2.setCurrentLevel(level);Images$1.setCurrentLevel(level);});_defineProperty(this,"getCommonAssets",function(){return _this.assets.common||DEFAULT_COMMON_ASSETS;});_defineProperty(this,"getLevelAssets",function(level){return _this.assets.levels[level]||DEFAULT_COMMON_ASSETS;});_defineProperty(this,"setLoadedLevelState",function(loaded,level){if(_this.assets.levels[level]){_this.assets.levels[level]._isLoaded=loaded;}});_defineProperty(this,"setLoadedCommonState",function(loaded){_this.assets.common._isLoaded=loaded;});_defineProperty(this,"areLevelAssetsLoaded",function(level){return _this.getLevelAssets(level)._isLoaded;});_defineProperty(this,"areCommonAssetsLoaded",function(){return _this.getCommonAssets()._isLoaded;});_defineProperty(this,"audio",function(level){return level?_this.getLevelAssets(level).audio:_this.getCommonAssets().audio;});_defineProperty(this,"video",function(level){return level?_this.getLevelAssets(level).video:_this.getCommonAssets().video;});_defineProperty(this,"images",function(level){return level?_this.getLevelAssets(level).images:_this.getCommonAssets().images;});_defineProperty(this,"textures",function(level){return level?_this.getLevelAssets(level).textures:_this.getCommonAssets().textures;});_defineProperty(this,"models",function(level){return level?_this.getLevelAssets(level).models:_this.getCommonAssets().models;});_defineProperty(this,"particles",function(level){return level?_this.getLevelAssets(level).particles:_this.getCommonAssets().particles;});_defineProperty(this,"scripts",function(level){return level?_this.getLevelAssets(level).scripts:_this.getCommonAssets().scripts;});_defineProperty(this,"load",function(level){return Promise.all([Audio$2.load(_this.audio(level),level),engine.load(_this.video(level),level),Images$1.load(_this.images(level),_this.textures(level),level),Models$1.loadModels(_this.models(level),level),Scripts$1.load(_this.scripts(level),level)]).then(function(){if(level){_this.setLoadedLevelState(true,level);}_this.setLoadedCommonState(true);});});this.assets=DEFAULT_ASSETS;this.currentLevel=ROOT;}_createClass(Assets,[{key:"parseAssets",value:function parseAssets(assets){var validAssetsTypes=Object.values(ASSETS_TYPES);var reducer=function reducer(group,assetType){var lowerCaseType=assetType.toLowerCase();if(validAssetsTypes.includes(lowerCaseType)){group.common[lowerCaseType]=assets[assetType];}else if(isLevelName(lowerCaseType)){var levelAssets=assets[assetType]||{};group.levels[lowerCaseType]=_objectSpread2({},DEFAULT_COMMON_ASSETS,{},levelAssets);}return group;};return Object.keys(assets).reduce(reducer,DEFAULT_ASSETS);}},{key:"setAssets",value:function setAssets(){var assets=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_COMMON_ASSETS;this.assets=this.parseAssets(assets);}},{key:"update",value:function update(dt){Audio$2.update(dt);Lights$1.update(dt);Particles$1.update(dt);}}]);return Assets;}();var Assets$1=new Assets();/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */ /* global Reflect, Promise */var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};function __extends(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}/** PURE_IMPORTS_START  PURE_IMPORTS_END */function isFunction$1(x){return typeof x==='function';}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var _enable_super_gross_mode_that_will_cause_bad_things=false;var config={Promise:undefined,set useDeprecatedSynchronousErrorHandling(value){if(value){var error=/*@__PURE__*/new Error();/*@__PURE__*/console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n'+error.stack);}_enable_super_gross_mode_that_will_cause_bad_things=value;},get useDeprecatedSynchronousErrorHandling(){return _enable_super_gross_mode_that_will_cause_bad_things;}};/** PURE_IMPORTS_START  PURE_IMPORTS_END */function hostReportError(err){setTimeout(function(){throw err;},0);}/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */var empty={closed:true,next:function next(value){},error:function error(err){if(config.useDeprecatedSynchronousErrorHandling){throw err;}else{hostReportError(err);}},complete:function complete(){}};/** PURE_IMPORTS_START  PURE_IMPORTS_END */var isArray$1=/*@__PURE__*/function(){return Array.isArray||function(x){return x&&typeof x.length==='number';};}();/** PURE_IMPORTS_START  PURE_IMPORTS_END */function isObject(x){return x!==null&&_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(x)==='object';}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var UnsubscriptionErrorImpl=/*@__PURE__*/function(){function UnsubscriptionErrorImpl(errors){Error.call(this);this.message=errors?errors.length+" errors occurred during unsubscription:\n"+errors.map(function(err,i){return i+1+") "+err.toString();}).join('\n  '):'';this.name='UnsubscriptionError';this.errors=errors;return this;}UnsubscriptionErrorImpl.prototype=/*@__PURE__*/Object.create(Error.prototype);return UnsubscriptionErrorImpl;}();var UnsubscriptionError=UnsubscriptionErrorImpl;/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */var Subscription=/*@__PURE__*/function(){function Subscription(unsubscribe){this.closed=false;this._parentOrParents=null;this._subscriptions=null;if(unsubscribe){this._unsubscribe=unsubscribe;}}Subscription.prototype.unsubscribe=function(){var errors;if(this.closed){return;}var _a=this,_parentOrParents=_a._parentOrParents,_unsubscribe=_a._unsubscribe,_subscriptions=_a._subscriptions;this.closed=true;this._parentOrParents=null;this._subscriptions=null;if(_parentOrParents instanceof Subscription){_parentOrParents.remove(this);}else if(_parentOrParents!==null){for(var index=0;index<_parentOrParents.length;++index){var parent_1=_parentOrParents[index];parent_1.remove(this);}}if(isFunction$1(_unsubscribe)){try{_unsubscribe.call(this);}catch(e){errors=e instanceof UnsubscriptionError?flattenUnsubscriptionErrors(e.errors):[e];}}if(isArray$1(_subscriptions)){var index=-1;var len=_subscriptions.length;while(++index<len){var sub=_subscriptions[index];if(isObject(sub)){try{sub.unsubscribe();}catch(e){errors=errors||[];if(e instanceof UnsubscriptionError){errors=errors.concat(flattenUnsubscriptionErrors(e.errors));}else{errors.push(e);}}}}}if(errors){throw new UnsubscriptionError(errors);}};Subscription.prototype.add=function(teardown){var subscription=teardown;if(!teardown){return Subscription.EMPTY;}switch(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(teardown)){case'function':subscription=new Subscription(teardown);case'object':if(subscription===this||subscription.closed||typeof subscription.unsubscribe!=='function'){return subscription;}else if(this.closed){subscription.unsubscribe();return subscription;}else if(!(subscription instanceof Subscription)){var tmp=subscription;subscription=new Subscription();subscription._subscriptions=[tmp];}break;default:{throw new Error('unrecognized teardown '+teardown+' added to Subscription.');}}var _parentOrParents=subscription._parentOrParents;if(_parentOrParents===null){subscription._parentOrParents=this;}else if(_parentOrParents instanceof Subscription){if(_parentOrParents===this){return subscription;}subscription._parentOrParents=[_parentOrParents,this];}else if(_parentOrParents.indexOf(this)===-1){_parentOrParents.push(this);}else{return subscription;}var subscriptions=this._subscriptions;if(subscriptions===null){this._subscriptions=[subscription];}else{subscriptions.push(subscription);}return subscription;};Subscription.prototype.remove=function(subscription){var subscriptions=this._subscriptions;if(subscriptions){var subscriptionIndex=subscriptions.indexOf(subscription);if(subscriptionIndex!==-1){subscriptions.splice(subscriptionIndex,1);}}};Subscription.EMPTY=function(empty){empty.closed=true;return empty;}(new Subscription());return Subscription;}();function flattenUnsubscriptionErrors(errors){return errors.reduce(function(errs,err){return errs.concat(err instanceof UnsubscriptionError?err.errors:err);},[]);}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var rxSubscriber=/*@__PURE__*/function(){return typeof Symbol==='function'?/*@__PURE__*/Symbol('rxSubscriber'):'@@rxSubscriber_'+/*@__PURE__*/Math.random();}();/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */var Subscriber=/*@__PURE__*/function(_super){__extends(Subscriber,_super);function Subscriber(destinationOrNext,error,complete){var _this=_super.call(this)||this;_this.syncErrorValue=null;_this.syncErrorThrown=false;_this.syncErrorThrowable=false;_this.isStopped=false;switch(arguments.length){case 0:_this.destination=empty;break;case 1:if(!destinationOrNext){_this.destination=empty;break;}if(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(destinationOrNext)==='object'){if(destinationOrNext instanceof Subscriber){_this.syncErrorThrowable=destinationOrNext.syncErrorThrowable;_this.destination=destinationOrNext;destinationOrNext.add(_this);}else{_this.syncErrorThrowable=true;_this.destination=new SafeSubscriber(_this,destinationOrNext);}break;}default:_this.syncErrorThrowable=true;_this.destination=new SafeSubscriber(_this,destinationOrNext,error,complete);break;}return _this;}Subscriber.prototype[rxSubscriber]=function(){return this;};Subscriber.create=function(next,error,complete){var subscriber=new Subscriber(next,error,complete);subscriber.syncErrorThrowable=false;return subscriber;};Subscriber.prototype.next=function(value){if(!this.isStopped){this._next(value);}};Subscriber.prototype.error=function(err){if(!this.isStopped){this.isStopped=true;this._error(err);}};Subscriber.prototype.complete=function(){if(!this.isStopped){this.isStopped=true;this._complete();}};Subscriber.prototype.unsubscribe=function(){if(this.closed){return;}this.isStopped=true;_super.prototype.unsubscribe.call(this);};Subscriber.prototype._next=function(value){this.destination.next(value);};Subscriber.prototype._error=function(err){this.destination.error(err);this.unsubscribe();};Subscriber.prototype._complete=function(){this.destination.complete();this.unsubscribe();};Subscriber.prototype._unsubscribeAndRecycle=function(){var _parentOrParents=this._parentOrParents;this._parentOrParents=null;this.unsubscribe();this.closed=false;this.isStopped=false;this._parentOrParents=_parentOrParents;return this;};return Subscriber;}(Subscription);var SafeSubscriber=/*@__PURE__*/function(_super){__extends(SafeSubscriber,_super);function SafeSubscriber(_parentSubscriber,observerOrNext,error,complete){var _this=_super.call(this)||this;_this._parentSubscriber=_parentSubscriber;var next;var context=_this;if(isFunction$1(observerOrNext)){next=observerOrNext;}else if(observerOrNext){next=observerOrNext.next;error=observerOrNext.error;complete=observerOrNext.complete;if(observerOrNext!==empty){context=Object.create(observerOrNext);if(isFunction$1(context.unsubscribe)){_this.add(context.unsubscribe.bind(context));}context.unsubscribe=_this.unsubscribe.bind(_this);}}_this._context=context;_this._next=next;_this._error=error;_this._complete=complete;return _this;}SafeSubscriber.prototype.next=function(value){if(!this.isStopped&&this._next){var _parentSubscriber=this._parentSubscriber;if(!config.useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(this._next,value);}else if(this.__tryOrSetError(_parentSubscriber,this._next,value)){this.unsubscribe();}}};SafeSubscriber.prototype.error=function(err){if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;var useDeprecatedSynchronousErrorHandling=config.useDeprecatedSynchronousErrorHandling;if(this._error){if(!useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(this._error,err);this.unsubscribe();}else{this.__tryOrSetError(_parentSubscriber,this._error,err);this.unsubscribe();}}else if(!_parentSubscriber.syncErrorThrowable){this.unsubscribe();if(useDeprecatedSynchronousErrorHandling){throw err;}hostReportError(err);}else{if(useDeprecatedSynchronousErrorHandling){_parentSubscriber.syncErrorValue=err;_parentSubscriber.syncErrorThrown=true;}else{hostReportError(err);}this.unsubscribe();}}};SafeSubscriber.prototype.complete=function(){var _this=this;if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._complete){var wrappedComplete=function wrappedComplete(){return _this._complete.call(_this._context);};if(!config.useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(wrappedComplete);this.unsubscribe();}else{this.__tryOrSetError(_parentSubscriber,wrappedComplete);this.unsubscribe();}}else{this.unsubscribe();}}};SafeSubscriber.prototype.__tryOrUnsub=function(fn,value){try{fn.call(this._context,value);}catch(err){this.unsubscribe();if(config.useDeprecatedSynchronousErrorHandling){throw err;}else{hostReportError(err);}}};SafeSubscriber.prototype.__tryOrSetError=function(parent,fn,value){if(!config.useDeprecatedSynchronousErrorHandling){throw new Error('bad call');}try{fn.call(this._context,value);}catch(err){if(config.useDeprecatedSynchronousErrorHandling){parent.syncErrorValue=err;parent.syncErrorThrown=true;return true;}else{hostReportError(err);return true;}}return false;};SafeSubscriber.prototype._unsubscribe=function(){var _parentSubscriber=this._parentSubscriber;this._context=null;this._parentSubscriber=null;_parentSubscriber.unsubscribe();};return SafeSubscriber;}(Subscriber);/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */function canReportError(observer){while(observer){var _a=observer,closed_1=_a.closed,destination=_a.destination,isStopped=_a.isStopped;if(closed_1||isStopped){return false;}else if(destination&&destination instanceof Subscriber){observer=destination;}else{observer=null;}}return true;}/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */function toSubscriber(nextOrObserver,error,complete){if(nextOrObserver){if(nextOrObserver instanceof Subscriber){return nextOrObserver;}if(nextOrObserver[rxSubscriber]){return nextOrObserver[rxSubscriber]();}}if(!nextOrObserver&&!error&&!complete){return new Subscriber(empty);}return new Subscriber(nextOrObserver,error,complete);}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var observable=/*@__PURE__*/function(){return typeof Symbol==='function'&&Symbol.observable||'@@observable';}();/** PURE_IMPORTS_START  PURE_IMPORTS_END */function noop(){}/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */function pipeFromArray(fns){if(!fns){return noop;}if(fns.length===1){return fns[0];}return function piped(input){return fns.reduce(function(prev,fn){return fn(prev);},input);};}/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */var Observable=/*@__PURE__*/function(){function Observable(subscribe){this._isScalar=false;if(subscribe){this._subscribe=subscribe;}}Observable.prototype.lift=function(operator){var observable=new Observable();observable.source=this;observable.operator=operator;return observable;};Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator;var sink=toSubscriber(observerOrNext,error,complete);if(operator){sink.add(operator.call(sink,this.source));}else{sink.add(this.source||config.useDeprecatedSynchronousErrorHandling&&!sink.syncErrorThrowable?this._subscribe(sink):this._trySubscribe(sink));}if(config.useDeprecatedSynchronousErrorHandling){if(sink.syncErrorThrowable){sink.syncErrorThrowable=false;if(sink.syncErrorThrown){throw sink.syncErrorValue;}}}return sink;};Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink);}catch(err){if(config.useDeprecatedSynchronousErrorHandling){sink.syncErrorThrown=true;sink.syncErrorValue=err;}if(canReportError(sink)){sink.error(err);}else{console.warn(err);}}};Observable.prototype.forEach=function(next,promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var subscription;subscription=_this.subscribe(function(value){try{next(value);}catch(err){reject(err);if(subscription){subscription.unsubscribe();}}},reject,resolve);});};Observable.prototype._subscribe=function(subscriber){var source=this.source;return source&&source.subscribe(subscriber);};Observable.prototype[observable]=function(){return this;};Observable.prototype.pipe=function(){var operations=[];for(var _i=0;_i<arguments.length;_i++){operations[_i]=arguments[_i];}if(operations.length===0){return this;}return pipeFromArray(operations)(this);};Observable.prototype.toPromise=function(promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var value;_this.subscribe(function(x){return value=x;},function(err){return reject(err);},function(){return resolve(value);});});};Observable.create=function(subscribe){return new Observable(subscribe);};return Observable;}();function getPromiseCtor(promiseCtor){if(!promiseCtor){promiseCtor=Promise;}if(!promiseCtor){throw new Error('no Promise impl found');}return promiseCtor;}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var ObjectUnsubscribedErrorImpl=/*@__PURE__*/function(){function ObjectUnsubscribedErrorImpl(){Error.call(this);this.message='object unsubscribed';this.name='ObjectUnsubscribedError';return this;}ObjectUnsubscribedErrorImpl.prototype=/*@__PURE__*/Object.create(Error.prototype);return ObjectUnsubscribedErrorImpl;}();var ObjectUnsubscribedError=ObjectUnsubscribedErrorImpl;/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */var SubjectSubscription=/*@__PURE__*/function(_super){__extends(SubjectSubscription,_super);function SubjectSubscription(subject,subscriber){var _this=_super.call(this)||this;_this.subject=subject;_this.subscriber=subscriber;_this.closed=false;return _this;}SubjectSubscription.prototype.unsubscribe=function(){if(this.closed){return;}this.closed=true;var subject=this.subject;var observers=subject.observers;this.subject=null;if(!observers||observers.length===0||subject.isStopped||subject.closed){return;}var subscriberIndex=observers.indexOf(this.subscriber);if(subscriberIndex!==-1){observers.splice(subscriberIndex,1);}};return SubjectSubscription;}(Subscription);/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */var SubjectSubscriber=/*@__PURE__*/function(_super){__extends(SubjectSubscriber,_super);function SubjectSubscriber(destination){var _this=_super.call(this,destination)||this;_this.destination=destination;return _this;}return SubjectSubscriber;}(Subscriber);var Subject=/*@__PURE__*/function(_super){__extends(Subject,_super);function Subject(){var _this=_super.call(this)||this;_this.observers=[];_this.closed=false;_this.isStopped=false;_this.hasError=false;_this.thrownError=null;return _this;}Subject.prototype[rxSubscriber]=function(){return new SubjectSubscriber(this);};Subject.prototype.lift=function(operator){var subject=new AnonymousSubject(this,this);subject.operator=operator;return subject;};Subject.prototype.next=function(value){if(this.closed){throw new ObjectUnsubscribedError();}if(!this.isStopped){var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].next(value);}}};Subject.prototype.error=function(err){if(this.closed){throw new ObjectUnsubscribedError();}this.hasError=true;this.thrownError=err;this.isStopped=true;var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].error(err);}this.observers.length=0;};Subject.prototype.complete=function(){if(this.closed){throw new ObjectUnsubscribedError();}this.isStopped=true;var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].complete();}this.observers.length=0;};Subject.prototype.unsubscribe=function(){this.isStopped=true;this.closed=true;this.observers=null;};Subject.prototype._trySubscribe=function(subscriber){if(this.closed){throw new ObjectUnsubscribedError();}else{return _super.prototype._trySubscribe.call(this,subscriber);}};Subject.prototype._subscribe=function(subscriber){if(this.closed){throw new ObjectUnsubscribedError();}else if(this.hasError){subscriber.error(this.thrownError);return Subscription.EMPTY;}else if(this.isStopped){subscriber.complete();return Subscription.EMPTY;}else{this.observers.push(subscriber);return new SubjectSubscription(this,subscriber);}};Subject.prototype.asObservable=function(){var observable=new Observable();observable.source=this;return observable;};Subject.create=function(destination,source){return new AnonymousSubject(destination,source);};return Subject;}(Observable);var AnonymousSubject=/*@__PURE__*/function(_super){__extends(AnonymousSubject,_super);function AnonymousSubject(destination,source){var _this=_super.call(this)||this;_this.destination=destination;_this.source=source;return _this;}AnonymousSubject.prototype.next=function(value){var destination=this.destination;if(destination&&destination.next){destination.next(value);}};AnonymousSubject.prototype.error=function(err){var destination=this.destination;if(destination&&destination.error){this.destination.error(err);}};AnonymousSubject.prototype.complete=function(){var destination=this.destination;if(destination&&destination.complete){this.destination.complete();}};AnonymousSubject.prototype._subscribe=function(subscriber){var source=this.source;if(source){return this.source.subscribe(subscriber);}else{return Subscription.EMPTY;}};return AnonymousSubject;}(Subject);var Stats=/*#__PURE__*/function(){function Stats(){_classCallCheck(this,Stats);this.beginTime=(performance||Date).now();this.prevTime=this.beginTime;this.frames=0;this._fps=0;this._fpsMax=100;this.fps=new Subject();this.memory=performance.memory.usedJSHeapSize/1048576;this.memoryMax=performance.memory.jsHeapSizeLimit/1048576;}_createClass(Stats,[{key:"init",value:function init(){this.beginTime=(performance||Date).now();}},{key:"getFPS",value:function getFPS(){this.frames++;var time=(performance||Date).now();if(time>=this.prevTime+1000){this._fps=this.frames*1000/(time-this.prevTime);this.prevTime=time;this.frames=0;this.fps.next(this._fps);}this.beginTime=time;return this._fps;}},{key:"getMemory",value:function getMemory(){this.frames++;var time=(performance||Date).now();if(time>=this.prevTime+1000){this.prevTime=time;this.frames=0;this.memory=performance.memory.usedJSHeapSize/1048576;this.memoryMax=performance.memory.jsHeapSizeLimit/1048576;}this.beginTime=time;}},{key:"update",value:function update(){this.getFPS();this.getMemory();}}]);return Stats;}();var Stats$1=new Stats();var Loader$1=/*#__PURE__*/function(){function Loader(){_classCallCheck(this,Loader);this.loader=new ObjectLoader();}_createClass(Loader,[{key:"load",value:function load(){}}]);return Loader;}();function _createSuper2$q(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var MeshLoader=/*#__PURE__*/function(_Loader){_inherits(MeshLoader,_Loader);var _super=_createSuper2$q(MeshLoader);function MeshLoader(){_classCallCheck(this,MeshLoader);return _super.call(this);}_createClass(MeshLoader,[{key:"load",value:function load(){var _this=this;var elements=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this.options=options;try{elements.map(function(_ref){var mesh=_ref.mesh,scripts=_ref.scripts,texture=_ref.texture,opts=_objectWithoutProperties(_ref,["mesh","scripts","texture"]);return _this.loadMesh(_this.parseMesh(mesh),scripts,texture,opts);});}catch(e){console.log(e);}}},{key:"parseMesh",value:function parseMesh(mesh){return this.loader.parse(mesh);}},{key:"loadMesh",value:function loadMesh(parsedMesh,scripts,texture,elementOptions){var _this$options$scriptE=this.options.scriptEnabled,scriptEnabled=_this$options$scriptE===void 0?true:_this$options$scriptE;var element=new Element(parsedMesh.geometry,parsedMesh.material,elementOptions);element.setPosition(_objectSpread2({},parsedMesh.position));element.setRotation(_objectSpread2({},parsedMesh.rotation));element.setScale(_objectSpread2({},parsedMesh.scale));if(scripts&&scripts.length){element.addScripts(scripts.names,scripts.options,scriptEnabled);element.start();}return element;}}]);return MeshLoader;}(Loader$1);var MeshLoader$1=new MeshLoader();function _createSuper2$r(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var LAMP_COLOR=0Xf1c40f;var Light$1=/*#__PURE__*/function(_Entity){_inherits(Light,_Entity);var _super=_createSuper2$r(Light);function Light(_ref){var _this;var color=_ref.color,intensity=_ref.intensity,_name=_ref.name;_classCallCheck(this,Light);_this=_super.call(this,{name:_name});_defineProperty(_assertThisInitialized(_this),"addHolder",function(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'lightholder';var body=Models$1.getModel(name);if(body){_this.holder=body;_this.holder.setMaterialFromName(MATERIALS.BASIC,{wireframe:true,color:LAMP_COLOR});_this.holder.serializable=false;_this.holder.setPosition({x:_this.light.position.x,y:_this.light.position.y,z:_this.light.position.z});}else{console.warn('[Mage] Couldnt load the lamp holder.');}});_this.color=color;_this.intensity=intensity;_this.name=_name||"light_".concat(Math.random()*1000);_this.isLightOn=false;_this.body=undefined;// helper body for this light
_this.helper=undefined;// holder body representing the light
_this.holder=undefined;// target body for the light (only used by directional light)
_this.target=undefined;_this.setEntityType(ENTITY_TYPES.LIGHT);Lights$1.add(_assertThisInitialized(_this));return _this;}_createClass(Light,[{key:"addToScene",value:function addToScene(){if(this.hasLight()){Scene$2.add(this.light,this);}}},{key:"hasLight",value:function hasLight(){return!!this.light;}},{key:"hasHelper",value:function hasHelper(){return!!this.helper;}},{key:"hasHolder",value:function hasHolder(){return!!this.holder;}},{key:"getPosition",value:function getPosition(){return{x:this.light.position.x,y:this.light.position.y,z:this.light.position.z};}},{key:"setPosition",value:function setPosition(where){var _ref2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref2$updateHolder=_ref2.updateHolder,updateHolder=_ref2$updateHolder===void 0?true:_ref2$updateHolder;var position=_objectSpread2({},this.getPosition(),{},where);var x=position.x,y=position.y,z=position.z;if(this.light){this.light.position.set(x,y,z);}if(this.hasHolder()&updateHolder){this.holder.setPosition({x:x,y:y,z:z});}}},{key:"isAlreadyOn",value:function isAlreadyOn(){return this.light&&this.light.intensity===this.intensity;}},{key:"isAlreadyOff",value:function isAlreadyOff(){return this.light&&this.light.intensity<=0;}},{key:"setIntensity",value:function setIntensity(value){if(this.light){this.light.intensity=value;}}},{key:"dim",value:function dim(value,speed,factor){// goes to value decreasing by factor. It takes speed ms to get to value.
console.warn('[Mage] Not implemented.',value,speed,factor);}},{key:"on",value:function on(){var _this2=this;if(this.light){var delay=function delay(){_this2.light.intensity+=Lights$1.delayFactor;if(_this2.light.intensity<_this2.intensity){setTimeout(delay,Lights$1.delayStep);}else{_this2.isLightOn=true;}};delay();}else{console.log("[Mage] You should create your light, first");}}},{key:"off",value:function off(){var _this3=this;if(this.light){var delay=function delay(){_this3.light.intensity-=Lights$1.delayFactor;if(_this3.light.intensity>0){setTimeout(delay,Lights$1.delayStep);}else{_this3.isLightOn=false;}};delay();}else{console.log("[Mage] You should create your light, first");}}},{key:"toJSON",value:function toJSON(){var _this$light$position=this.light.position,x=_this$light$position.x,y=_this$light$position.y,z=_this$light$position.z;return{position:{x:x,y:y,z:z},color:this.color,intensity:this.intensity,name:this.name};}}]);return Light;}(Entity);function _createSuper2$s(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DEFAULT_NEAR=0.1;var DEFAULT_FAR=100;var DEFAULT_POSITION$1={x:0,y:0,z:0};var DEFAULT_TARGET_POSITION={x:0,y:0,z:0};var DEFAULT_INTENSITY=0.5;var DEFAULT_MAP_SIZE=2048;var DEFAULT_BIAS=-0.0001;var WHITE=0xffffff;var SunLight=/*#__PURE__*/function(_Light){_inherits(SunLight,_Light);var _super=_createSuper2$s(SunLight);function SunLight(options){var _this;_classCallCheck(this,SunLight);var _options$color=options.color,color=_options$color===void 0?WHITE:_options$color,_options$intensity=options.intensity,intensity=_options$intensity===void 0?DEFAULT_INTENSITY:_options$intensity,name=options.name;_this=_super.call(this,{color:color,intensity:intensity,name:name});_this.options=options;_this.setLight({color:color,intensity:intensity});return _this;}_createClass(SunLight,[{key:"setLight",value:function setLight(_ref){var light=_ref.light,_ref$color=_ref.color,color=_ref$color===void 0?WHITE:_ref$color,_ref$intensity=_ref.intensity,intensity=_ref$intensity===void 0?DEFAULT_INTENSITY:_ref$intensity;if(light){this.light=light;}else{this.light=new DirectionalLight(color,intensity);}if(this.hasLight()){this.postLightCreation();}}},{key:"postLightCreation",value:function postLightCreation(){var _this$options=this.options,_this$options$positio=_this$options.position,position=_this$options$positio===void 0?DEFAULT_POSITION$1:_this$options$positio,_this$options$target=_this$options.target,target=_this$options$target===void 0?DEFAULT_TARGET_POSITION:_this$options$target;this.setPosition(position);this.setTargetPosition(target);this.setLightShadows();this.addToScene();}},{key:"setLightShadows",value:function setLightShadows(){var _this$options2=this.options,_this$options2$near=_this$options2.near,near=_this$options2$near===void 0?DEFAULT_NEAR:_this$options2$near,_this$options2$far=_this$options2.far,far=_this$options2$far===void 0?DEFAULT_FAR:_this$options2$far,_this$options2$mapSiz=_this$options2.mapSize,mapSize=_this$options2$mapSiz===void 0?DEFAULT_MAP_SIZE:_this$options2$mapSiz,_this$options2$bias=_this$options2.bias,bias=_this$options2$bias===void 0?DEFAULT_BIAS:_this$options2$bias;if(Config$2.lights().shadows){this.light.castShadow=true;var d=far/2;this.light.shadow.mapSize.height=mapSize;this.light.shadow.mapSize.width=mapSize;this.light.shadow.camera.left=-d;this.light.shadow.camera.right=d;this.light.shadow.camera.top=d;this.light.shadow.camera.bottom=-d;this.light.shadow.camera.near=near;this.light.shadow.camera.far=far;this.light.shadow.bias=bias;}}},{key:"getTargetMesh",value:function getTargetMesh(initialPosition){var geometry=new SphereGeometry(3,6,6);var material=new MeshBasicMaterial({color:0xeeeeee,wireframe:true});var target=new Element(geometry,material);target.position(initialPosition);return target;}},{key:"setTargetPosition",value:function setTargetPosition(){var position=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.target=_objectSpread2({},this.target,{},position);var _this$target=this.target,_this$target$x=_this$target.x,x=_this$target$x===void 0?0:_this$target$x,_this$target$y=_this$target.y,y=_this$target$y===void 0?0:_this$target$y,_this$target$z=_this$target.z,z=_this$target$z===void 0?0:_this$target$z;this.light.target.position.set(x,y,z);}},{key:"getTargetPosition",value:function getTargetPosition(){return this.target;}},{key:"addHelper",value:function addHelper(){this.helper=new DirectionalLightHelper(this.light,5);this.shadowHelper=new CameraHelper(this.light.shadow.camera);Scene$2.add(this.helper,null,false);Scene$2.add(this.shadowHelper,null,false);this.addHolder();}},{key:"update",value:function update(dt){_get(_getPrototypeOf(SunLight.prototype),"update",this).call(this,dt);if(this.hasHelper()){this.helper.update();this.shadowHelper.update();}if(this.hasHolder()){this.setPosition(this.holder.getPosition(),{updateHolder:false});}}},{key:"toJSON",value:function toJSON(){return _objectSpread2({},_get(_getPrototypeOf(SunLight.prototype),"toJSON",this).call(this),{type:SUNLIGHT});}}]);return SunLight;}(Light$1);function _createSuper2$t(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DEFAULT_POSITION$2={x:0,y:0,z:0};var DEFAULT_INTENSITY$1=0.5;var WHITE$1=0xffffff;var LightAmbient=/*#__PURE__*/function(_Light){_inherits(LightAmbient,_Light);var _super=_createSuper2$t(LightAmbient);function LightAmbient(options){var _this;_classCallCheck(this,LightAmbient);var _options$color=options.color,color=_options$color===void 0?WHITE$1:_options$color,_options$intensity=options.intensity,intensity=_options$intensity===void 0?DEFAULT_INTENSITY$1:_options$intensity,name=options.name;_this=_super.call(this,{color:color,intensity:intensity,name:name});_this.options=options;_this.setLight({color:color,intensity:intensity});return _this;}_createClass(LightAmbient,[{key:"setLight",value:function setLight(_ref){var light=_ref.light,_ref$color=_ref.color,color=_ref$color===void 0?WHITE$1:_ref$color,_ref$intensity=_ref.intensity,intensity=_ref$intensity===void 0?DEFAULT_INTENSITY$1:_ref$intensity;if(light){this.light=light;}else{this.light=new AmbientLight(color,intensity);}if(this.hasLight()){this.postLightCreation();}}},{key:"postLightCreation",value:function postLightCreation(){var _this$options$positio=this.options.position,position=_this$options$positio===void 0?DEFAULT_POSITION$2:_this$options$positio;this.setPosition(position);this.addToScene();}},{key:"addHelper",value:function addHelper(){this.helper=true;this.addHolder('ambientlightholder');}},{key:"update",value:function update(dt){_get(_getPrototypeOf(LightAmbient.prototype),"update",this).call(this,dt);if(this.hasHelper()){this.setPosition(this.holder.getPosition(),{updateHolder:false});}}},{key:"toJSON",value:function toJSON(){return _objectSpread2({},_get(_getPrototypeOf(LightAmbient.prototype),"toJSON",this).call(this),{type:AMBIENTLIGHT});}}]);return LightAmbient;}(Light$1);function _createSuper2$u(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DEFAULT_NEAR$1=0.1;var DEFAULT_FAR$1=100;var DEFAULT_POSITION$3={x:0,y:0,z:0};var DEFAULT_INTENSITY$2=0.5;var DEFAULT_DISTANCE=10;var DEFAULT_MAP_SIZE$1=2048;var DEFAULT_BIAS$1=-0.0001;var WHITE$2=0xffffff;var GREEN=0x2ecc71;var PointLight$1=/*#__PURE__*/function(_Light){_inherits(PointLight$1,_Light);var _super=_createSuper2$u(PointLight$1);function PointLight$1(options){var _this;_classCallCheck(this,PointLight$1);var _options$color=options.color,color=_options$color===void 0?WHITE$2:_options$color,_options$intensity=options.intensity,intensity=_options$intensity===void 0?DEFAULT_INTENSITY$2:_options$intensity,name=options.name,distance=options.distance;_this=_super.call(this,{color:color,intensity:intensity,name:name});_this.options=options;_this.setLight({color:color,intensity:intensity,distance:distance});return _this;}_createClass(PointLight$1,[{key:"setLight",value:function setLight(_ref){var light=_ref.light,_ref$color=_ref.color,color=_ref$color===void 0?WHITE$2:_ref$color,_ref$intensity=_ref.intensity,intensity=_ref$intensity===void 0?DEFAULT_INTENSITY$2:_ref$intensity,_ref$distance=_ref.distance,distance=_ref$distance===void 0?DEFAULT_DISTANCE:_ref$distance;if(light){this.light=light;}else{this.light=new PointLight(color,intensity,distance);}if(this.hasLight()){this.postLightCreation();}}},{key:"postLightCreation",value:function postLightCreation(){var _this$options$positio=this.options.position,position=_this$options$positio===void 0?DEFAULT_POSITION$3:_this$options$positio;this.setPosition(position);this.setLightShadows();this.addToScene();}},{key:"setLightShadows",value:function setLightShadows(){var _this$options=this.options,_this$options$near=_this$options.near,near=_this$options$near===void 0?DEFAULT_NEAR$1:_this$options$near,_this$options$far=_this$options.far,far=_this$options$far===void 0?DEFAULT_FAR$1:_this$options$far,_this$options$mapSize=_this$options.mapSize,mapSize=_this$options$mapSize===void 0?DEFAULT_MAP_SIZE$1:_this$options$mapSize,_this$options$bias=_this$options.bias,bias=_this$options$bias===void 0?DEFAULT_BIAS$1:_this$options$bias;if(Config.lights().shadows){this.light.castShadow=true;var d=far/2;this.light.shadow.mapSize.height=mapSize;this.light.shadow.mapSize.width=mapSize;this.light.shadow.camera.left=-d;this.light.shadow.camera.right=d;this.light.shadow.camera.top=d;this.light.shadow.camera.bottom=-d;this.light.shadow.camera.near=near;this.light.shadow.camera.far=far;this.light.shadow.bias=bias;}}},{key:"addHelper",value:function addHelper(){this.helper=new PointLightHelper(this.light,2,GREEN);this.shadowHelper=new CameraHelper(this.light.shadow.camera);Scene$2.add(this.helper,null,false);Scene$2.add(this.shadowHelper,null,false);this.addHolder();}},{key:"update",value:function update(dt){_get(_getPrototypeOf(PointLight$1.prototype),"update",this).call(this,dt);if(this.hasHelper()){this.helper.update();this.shadowHelper.update();}if(this.hasHolder()){this.setPosition(this.holder.getPosition(),{updateHolder:false});}}},{key:"toJSON",value:function toJSON(){return _objectSpread2({},_get(_getPrototypeOf(PointLight$1.prototype),"toJSON",this).call(this),{distance:this.distance,type:POINTLIGHT});}}]);return PointLight$1;}(Light$1);function _createSuper2$v(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var LightLoader=/*#__PURE__*/function(_Loader){_inherits(LightLoader,_Loader);var _super=_createSuper2$v(LightLoader);function LightLoader(){var _this;_classCallCheck(this,LightLoader);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"createLight",function(useHelper){return function(l){var light;switch(l.type){case SUNLIGHT:light=_this.createSunlight(l);break;case POINTLIGHT:light=_this.createPointlight(l);break;case AMBIENTLIGHT:light=_this.createAmbientLight(l);break;}if(light&&useHelper){light.addHelper();}};});return _this;}_createClass(LightLoader,[{key:"load",value:function load(lights,_ref){var _ref$useHelper=_ref.useHelper,useHelper=_ref$useHelper===void 0?false:_ref$useHelper;lights.forEach(this.createLight(useHelper));}},{key:"createSunlight",value:function createSunlight(_ref2){var color=_ref2.color,intensity=_ref2.intensity,position=_ref2.position,target=_ref2.target,name=_ref2.name;return new SunLight({color:color,intensity:intensity,position:position,target:target,name:name});}},{key:"createAmbientLight",value:function createAmbientLight(_ref3){var color=_ref3.color,intensity=_ref3.intensity,position=_ref3.position,name=_ref3.name;return new LightAmbient({color:color,intensity:intensity,position:position,name:name});}},{key:"createPointlight",value:function createPointlight(_ref4){var color=_ref4.color,intensity=_ref4.intensity,position=_ref4.position,distance=_ref4.distance,name=_ref4.name;return new PointLight$1({color:color,intensity:intensity,position:position,distance:distance,name:name});}}]);return LightLoader;}(Loader$1);var LightLoader$1=new LightLoader();var Pass=/*#__PURE__*/function(){function Pass(){_classCallCheck(this,Pass);// if set to true, the pass is processed by the composer
this.enabled=true;// if set to true, the pass indicates to swap read and write buffer after rendering
this.needsSwap=true;// if set to true, the pass clears its buffer before rendering
this.clear=false;// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.
this.renderToScreen=false;this.isPass=true;}_createClass(Pass,[{key:"setSize",value:function setSize(width,height){}},{key:"render",value:function render(renderer,writeBuffer,readBuffer,delta,maskActive){console.error('Pass: .render() must be implemented in derived pass.');}}]);return Pass;}();// Helper for passes that need to fill the viewport with a single quad.
Pass.FullScreenQuad=function(){var camera=new OrthographicCamera(-1,1,1,-1,0,1);var geometry=new PlaneBufferGeometry(2,2);var FullScreenQuad=function FullScreenQuad(material){this._mesh=new Mesh(geometry,material);};Object.defineProperty(FullScreenQuad.prototype,'material',{get:function get(){return this._mesh.material;},set:function set(value){this._mesh.material=value;}});Object.assign(FullScreenQuad.prototype,{dispose:function dispose(){this._mesh.geometry.dispose();},render:function render(renderer){renderer.render(this._mesh,camera);}});return FullScreenQuad;}();function _createSuper2$w(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var ShaderPass=/*#__PURE__*/function(_Pass){_inherits(ShaderPass,_Pass);var _super=_createSuper2$w(ShaderPass);function ShaderPass(shader,textureID){var _this;_classCallCheck(this,ShaderPass);_this=_super.call(this);_this.textureID=textureID!==undefined?textureID:"tDiffuse";if(shader instanceof ShaderMaterial){_this.uniforms=shader.uniforms;_this.material=shader;}else if(shader){_this.uniforms=UniformsUtils.clone(shader.uniforms);_this.material=new ShaderMaterial({defines:Object.assign({},shader.defines),uniforms:_this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader});}_this.fsQuad=new Pass.FullScreenQuad(_this.material);return _this;}_createClass(ShaderPass,[{key:"render",value:function render(renderer,writeBuffer,readBuffer){if(this.uniforms[this.textureID]){this.uniforms[this.textureID].value=readBuffer.texture;}this.fsQuad.material=this.material;if(this.renderToScreen){renderer.setRenderTarget(null);this.fsQuad.render(renderer);}else{renderer.setRenderTarget(writeBuffer);// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600
if(this.clear)renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);this.fsQuad.render(renderer);}}}]);return ShaderPass;}(Pass);/**
 * @author alteredq / http://alteredqualia.com/
 *
 * Full-screen textured quad shader
 */var CopyShader={uniforms:{"tDiffuse":{value:null},"opacity":{value:1.0}},vertexShader:["varying vec2 vUv;","void main() {","	vUv = uv;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","	vec4 texel = texture2D( tDiffuse, vUv );","	gl_FragColor = opacity * texel;","}"].join("\n")};function _createSuper2$x(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var MaskPass=/*#__PURE__*/function(_Pass){_inherits(MaskPass,_Pass);var _super=_createSuper2$x(MaskPass);function MaskPass(scene,camera){var _this;_classCallCheck(this,MaskPass);_this=_super.call(this);_this.scene=scene;_this.camera=camera;_this.clear=true;_this.needsSwap=false;_this.inverse=false;return _this;}_createClass(MaskPass,[{key:"render",value:function render(renderer,writeBuffer,readBuffer){var context=renderer.getContext();var state=renderer.state;// don't update color or depth
state.buffers.color.setMask(false);state.buffers.depth.setMask(false);// lock buffers
state.buffers.color.setLocked(true);state.buffers.depth.setLocked(true);// set up stencil
var writeValue,clearValue;if(this.inverse){writeValue=0;clearValue=1;}else{writeValue=1;clearValue=0;}state.buffers.stencil.setTest(true);state.buffers.stencil.setOp(context.REPLACE,context.REPLACE,context.REPLACE);state.buffers.stencil.setFunc(context.ALWAYS,writeValue,0xffffffff);state.buffers.stencil.setClear(clearValue);state.buffers.stencil.setLocked(true);// draw into the stencil buffer
renderer.setRenderTarget(readBuffer);if(this.clear)renderer.clear();renderer.render(this.scene,this.camera);renderer.setRenderTarget(writeBuffer);if(this.clear)renderer.clear();renderer.render(this.scene,this.camera);// unlock color and depth buffer for subsequent rendering
state.buffers.color.setLocked(false);state.buffers.depth.setLocked(false);// only render where stencil is set to 1
state.buffers.stencil.setLocked(false);state.buffers.stencil.setFunc(context.EQUAL,1,0xffffffff);// draw if == 1
state.buffers.stencil.setOp(context.KEEP,context.KEEP,context.KEEP);state.buffers.stencil.setLocked(true);}}]);return MaskPass;}(Pass);function _createSuper2$y(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var ClearMaskPass=/*#__PURE__*/function(_Pass){_inherits(ClearMaskPass,_Pass);var _super=_createSuper2$y(ClearMaskPass);function ClearMaskPass(){var _this;_classCallCheck(this,ClearMaskPass);_this=_super.call(this);_this.needsSwap=false;return _this;}_createClass(ClearMaskPass,[{key:"render",value:function render(renderer,writeBuffer,readBuffer,delta,maskActive){renderer.state.buffers.stencil.setLocked(false);renderer.state.buffers.stencil.setTest(false);}}]);return ClearMaskPass;}(Pass);var EffectComposer=/*#__PURE__*/function(){function EffectComposer(renderer,renderTarget){var _this=this;_classCallCheck(this,EffectComposer);_defineProperty(this,"ensureLastPassIsRendered",function(){_this.passes.forEach(function(pass,index){return pass.renderToScreen=index===_this.passes.length-1;});});this.renderer=renderer;if(renderTarget===undefined){var parameters={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat,stencilBuffer:false};var size=renderer.getSize(new Vector2());this._pixelRatio=renderer.getPixelRatio();this._width=size.width;this._height=size.height;renderTarget=new WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,parameters);renderTarget.texture.name='EffectComposer.rt1';}else{this._pixelRatio=1;this._width=renderTarget.width;this._height=renderTarget.height;}this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.renderTarget2.texture.name='EffectComposer.rt2';this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.renderToScreen=true;this.passes=[];// dependencies
if(CopyShader===undefined){console.error('EffectComposer relies on CopyShader');}if(ShaderPass===undefined){console.error('EffectComposer relies on ShaderPass');}this.copyPass=new ShaderPass(CopyShader);this.clock=new Clock();}_createClass(EffectComposer,[{key:"swapBuffers",value:function swapBuffers(){var tmp=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=tmp;}},{key:"addPass",value:function addPass(pass){this.passes.push(pass);pass.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio);}},{key:"insertPass",value:function insertPass(pass,index){this.passes.splice(index,0,pass);}},{key:"isLastEnabledPass",value:function isLastEnabledPass(passIndex){for(var i=passIndex+1;i<this.passes.length;i++){if(this.passes[i].enabled){return false;}}return true;}},{key:"render",value:function render(deltaTime){// deltaTime value is in seconds
if(deltaTime===undefined){deltaTime=this.clock.getDelta();}var currentRenderTarget=this.renderer.getRenderTarget();var maskActive=false;var pass,i,il=this.passes.length;for(i=0;i<il;i++){pass=this.passes[i];if(pass.enabled===false)continue;pass.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i);pass.render(this.renderer,this.writeBuffer,this.readBuffer,deltaTime,maskActive);if(pass.needsSwap){if(maskActive){var context=this.renderer.getContext();var stencil=this.renderer.state.buffers.stencil;//context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);
stencil.setFunc(context.NOTEQUAL,1,0xffffffff);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,deltaTime);//context.stencilFunc(context.EQUAL, 1, 0xffffffff);
stencil.setFunc(context.EQUAL,1,0xffffffff);}this.swapBuffers();}if(MaskPass!==undefined){if(pass instanceof MaskPass){maskActive=true;}else if(pass instanceof ClearMaskPass){maskActive=false;}}}this.renderer.setRenderTarget(currentRenderTarget);}},{key:"reset",value:function reset(renderTarget){if(renderTarget===undefined){var size=this.renderer.getSize(new Vector2());this._pixelRatio=this.renderer.getPixelRatio();this._width=size.width;this._height=size.height;renderTarget=this.renderTarget1.clone();renderTarget.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio);}this.renderTarget1.dispose();this.renderTarget2.dispose();this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;}},{key:"setSize",value:function setSize(width,height){this._width=width;this._height=height;var effectiveWidth=this._width*this._pixelRatio;var effectiveHeight=this._height*this._pixelRatio;this.renderTarget1.setSize(effectiveWidth,effectiveHeight);this.renderTarget2.setSize(effectiveWidth,effectiveHeight);for(var i=0;i<this.passes.length;i++){this.passes[i].setSize(effectiveWidth,effectiveHeight);}}},{key:"setPixelRatio",value:function setPixelRatio(pixelRatio){this._pixelRatio=pixelRatio;this.setSize(this._width,this._height);}}]);return EffectComposer;}();function _createSuper2$z(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var RenderPass=/*#__PURE__*/function(_Pass){_inherits(RenderPass,_Pass);var _super=_createSuper2$z(RenderPass);function RenderPass(scene,camera,overrideMaterial,clearColor,clearAlpha){var _this;_classCallCheck(this,RenderPass);_this=_super.call(this);_this.scene=scene;_this.camera=camera;_this.overrideMaterial=overrideMaterial;_this.clearColor=clearColor;_this.clearAlpha=clearAlpha!==undefined?clearAlpha:0;_this.clear=true;_this.clearDepth=false;_this.needsSwap=false;return _this;}_createClass(RenderPass,[{key:"render",value:function render(renderer,writeBuffer,readBuffer){var oldAutoClear=renderer.autoClear;var oldClearColor,oldClearAlpha;renderer.autoClear=false;this.scene.overrideMaterial=this.overrideMaterial;if(this.clearColor){oldClearColor=renderer.getClearColor().getHex();oldClearAlpha=renderer.getClearAlpha();renderer.setClearColor(this.clearColor,this.clearAlpha);}if(this.clearDeptH){renderer.clearDepth();}renderer.setRenderTarget(this.renderToScreen?null:readBuffer);// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600
if(this.clear)renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);renderer.render(this.scene,this.camera);if(this.clearColor){renderer.setClearColor(oldClearColor,oldClearAlpha);}this.scene.overrideMaterial=null;renderer.autoClear=oldAutoClear;}}]);return RenderPass;}(Pass);var HueSaturationShader={uniforms:{"tDiffuse":{value:null},"hue":{value:0},"saturation":{value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float hue;","uniform float saturation;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );",// hue
"float angle = hue * 3.14159265;","float s = sin(angle), c = cos(angle);","vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;","float len = length(gl_FragColor.rgb);","gl_FragColor.rgb = vec3(","dot(gl_FragColor.rgb, weights.xyz),","dot(gl_FragColor.rgb, weights.zxy),","dot(gl_FragColor.rgb, weights.yzx)",");",// saturation
"float average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;","if (saturation > 0.0) {","gl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));","} else {","gl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);","}","}"].join("\n")};var HueSaturationEffect=function HueSaturationEffect(_ref){var _ref$hue=_ref.hue,hue=_ref$hue===void 0?0:_ref$hue,_ref$saturation=_ref.saturation,saturation=_ref$saturation===void 0?0:_ref$saturation,_ref$renderToScreen=_ref.renderToScreen,renderToScreen=_ref$renderToScreen===void 0?false:_ref$renderToScreen;var shader=_objectSpread2({},HueSaturationShader);shader.uniforms.hue.value=hue;shader.uniforms.saturation.value=saturation;var pass=new ShaderPass(shader);pass.renderToScreen=renderToScreen;return pass;};var SepiaShader={uniforms:{"tDiffuse":{value:null},"amount":{value:1.0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float amount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 color = texture2D( tDiffuse, vUv );","vec3 c = color.rgb;","color.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );","color.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );","color.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );","gl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );","}"].join("\n")};var SepiaEffect=function SepiaEffect(_ref){var _ref$value=_ref.value,value=_ref$value===void 0?1.0:_ref$value,_ref$renderToScreen=_ref.renderToScreen,renderToScreen=_ref$renderToScreen===void 0?false:_ref$renderToScreen;var shader=SepiaShader;shader.uniforms.amount.value=value;var pass=new ShaderPass(shader);pass.renderToScreen=renderToScreen;return pass;};/**
 * @author alteredq / http://alteredqualia.com/
 *
 * Convolution shader
 * ported from o3d sample to WebGL / GLSL
 * http://o3d.googlecode.com/svn/trunk/samples/convolution.html
 */var ConvolutionShader={defines:{"KERNEL_SIZE_FLOAT":"25.0","KERNEL_SIZE_INT":"25"},uniforms:{"tDiffuse":{value:null},"uImageIncrement":{value:new Vector2(0.001953125,0.0)},"cKernel":{value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","	vUv = uv - ((KERNEL_SIZE_FLOAT - 1.0) / 2.0) * uImageIncrement;","	gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform float cKernel[KERNEL_SIZE_INT];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","	vec2 imageCoord = vUv;","	vec4 sum = vec4(0.0, 0.0, 0.0, 0.0);","	for(int i = 0; i < KERNEL_SIZE_INT; i ++) {","		sum += texture2D(tDiffuse, imageCoord) * cKernel[i];","		imageCoord += uImageIncrement;","	}","	gl_FragColor = sum;","}"].join("\n"),buildKernel:function buildKernel(sigma){// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.
function gauss(x,sigma){return Math.exp(-(x*x)/(2.0*sigma*sigma));}var i,values,sum,halfWidth,kMaxKernelSize=25,kernelSize=2*Math.ceil(sigma*3.0)+1;if(kernelSize>kMaxKernelSize)kernelSize=kMaxKernelSize;halfWidth=(kernelSize-1)*0.5;values=new Array(kernelSize);sum=0.0;for(i=0;i<kernelSize;++i){values[i]=gauss(i-halfWidth,sigma);sum+=values[i];}// normalize the kernel
for(i=0;i<kernelSize;++i){values[i]/=sum;}return values;}};function _createSuper2$A(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var BLUR_X=new Vector2(0.001953125,0.0);var BLUR_Y=new Vector2(0.0,0.001953125);var BloomPass=/*#__PURE__*/function(_Pass){_inherits(BloomPass,_Pass);var _super=_createSuper2$A(BloomPass);function BloomPass(_ref){var _this;var _ref$strength=_ref.strength,strength=_ref$strength===void 0?1:_ref$strength,_ref$kernelSize=_ref.kernelSize,kernelSize=_ref$kernelSize===void 0?25:_ref$kernelSize,_ref$sigma=_ref.sigma,sigma=_ref$sigma===void 0?4.0:_ref$sigma,_ref$resolution=_ref.resolution,resolution=_ref$resolution===void 0?256:_ref$resolution,_ref$renderToScreen=_ref.renderToScreen,renderToScreen=_ref$renderToScreen===void 0?false:_ref$renderToScreen;_classCallCheck(this,BloomPass);_this=_super.call(this);var pars={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};_this.renderTargetX=new WebGLRenderTarget(resolution,resolution,pars);_this.renderTargetX.texture.name="BloomPass.x";_this.renderTargetY=new WebGLRenderTarget(resolution,resolution,pars);_this.renderTargetY.texture.name="BloomPass.y";// copy material
var copyShader=_objectSpread2({},CopyShader);_this.copyUniforms=UniformsUtils.clone(copyShader.uniforms);_this.copyUniforms["opacity"].value=strength;_this.materialCopy=new ShaderMaterial({uniforms:_this.copyUniforms,vertexShader:copyShader.vertexShader,fragmentShader:copyShader.fragmentShader,blending:AdditiveBlending,transparent:true});// convolution material
var convolutionShader=_objectSpread2({},ConvolutionShader);_this.convolutionUniforms=UniformsUtils.clone(convolutionShader.uniforms);_this.convolutionUniforms["uImageIncrement"].value=BLUR_X;_this.convolutionUniforms["cKernel"].value=ConvolutionShader.buildKernel(sigma);_this.materialConvolution=new ShaderMaterial({uniforms:_this.convolutionUniforms,vertexShader:convolutionShader.vertexShader,fragmentShader:convolutionShader.fragmentShader,defines:{"KERNEL_SIZE_FLOAT":kernelSize.toFixed(1),"KERNEL_SIZE_INT":kernelSize.toFixed(0)}});_this.needsSwap=false;_this.fsQuad=new Pass.FullScreenQuad(null);_this.renderToScreen=renderToScreen;return _this;}_createClass(BloomPass,[{key:"render",value:function render(renderer,writeBuffer,readBuffer,deltaTime,maskActive){if(maskActive)renderer.state.buffers.stencil.setTest(false);// Render quad with blured scene into texture (convolution pass 1)
this.fsQuad.material=this.materialConvolution;this.convolutionUniforms["tDiffuse"].value=readBuffer.texture;this.convolutionUniforms["uImageIncrement"].value=BLUR_X;renderer.setRenderTarget(this.renderTargetX);renderer.clear();this.fsQuad.render(renderer);// Render quad with blured scene into texture (convolution pass 2)
this.convolutionUniforms["tDiffuse"].value=this.renderTargetX.texture;this.convolutionUniforms["uImageIncrement"].value=BLUR_Y;renderer.setRenderTarget(this.renderTargetY);renderer.clear();this.fsQuad.render(renderer);// Render original scene with superimposed blur to texture
this.fsQuad.material=this.materialCopy;this.copyUniforms["tDiffuse"].value=this.renderTargetY.texture;if(maskActive)renderer.state.buffers.stencil.setTest(true);renderer.setRenderTarget(readBuffer);if(this.clear)renderer.clear();this.fsQuad.render(renderer);}}]);return BloomPass;}(Pass);/**
 * @author alteredq / http://alteredqualia.com/
 *
 * Depth-of-field shader with bokeh
 * ported from GLSL shader by Martins Upitis
 * http://artmartinsh.blogspot.com/2010/02/glsl-lens-blur-filter-with-bokeh.html
 */var BokehShader={defines:{"DEPTH_PACKING":1,"PERSPECTIVE_CAMERA":1},uniforms:{"tColor":{value:null},"tDepth":{value:null},"focus":{value:1.0},"aspect":{value:1.0},"aperture":{value:0.025},"maxblur":{value:1.0},"nearClip":{value:1.0},"farClip":{value:1000.0}},vertexShader:["varying vec2 vUv;","void main() {","	vUv = uv;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <common>","varying vec2 vUv;","uniform sampler2D tColor;","uniform sampler2D tDepth;","uniform float maxblur;",// max blur amount
"uniform float aperture;",// aperture - bigger values for shallower depth of field
"uniform float nearClip;","uniform float farClip;","uniform float focus;","uniform float aspect;","#include <packing>","float getDepth( const in vec2 screenPosition ) {","	#if DEPTH_PACKING == 1","	return unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );","	#else","	return texture2D( tDepth, screenPosition ).x;","	#endif","}","float getViewZ( const in float depth ) {","	#if PERSPECTIVE_CAMERA == 1","	return perspectiveDepthToViewZ( depth, nearClip, farClip );","	#else","	return orthographicDepthToViewZ( depth, nearClip, farClip );","	#endif","}","void main() {","	vec2 aspectcorrect = vec2( 1.0, aspect );","	float viewZ = getViewZ( getDepth( vUv ) );","	float factor = ( focus + viewZ );",// viewZ is <= 0, so this is a difference equation
"	vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );","	vec2 dofblur9 = dofblur * 0.9;","	vec2 dofblur7 = dofblur * 0.7;","	vec2 dofblur4 = dofblur * 0.4;","	vec4 col = vec4( 0.0 );","	col += texture2D( tColor, vUv.xy );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","	col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","	col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );","	gl_FragColor = col / 41.0;","	gl_FragColor.a = 1.0;","}"].join("\n")};function _createSuper2$B(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var BokehPass=/*#__PURE__*/function(_Pass){_inherits(BokehPass,_Pass);var _super=_createSuper2$B(BokehPass);function BokehPass(scene,camera,params){var _this;_classCallCheck(this,BokehPass);_this=_super.call(this);var _params$focus=params.focus,focus=_params$focus===void 0?1.0:_params$focus,aspect=params.aspect,_params$aperture=params.aperture,aperture=_params$aperture===void 0?0.025:_params$aperture,_params$maxblur=params.maxblur,maxblur=_params$maxblur===void 0?1.0:_params$maxblur,_params$width=params.width,width=_params$width===void 0?window.innerWidth:_params$width,_params$height=params.height,height=_params$height===void 0?window.innerHeight:_params$height,_params$renderToScree=params.renderToScreen,renderToScreen=_params$renderToScree===void 0?false:_params$renderToScree;_this.scene=scene;_this.camera=camera;var aspectValue=aspect==undefined?camera.aspect:aspect;// render targets
_this.renderTargetDepth=new WebGLRenderTarget(width,height,{minFilter:NearestFilter,magFilter:NearestFilter,stencilBuffer:false});_this.renderTargetDepth.texture.name="BokehPass.depth";// depth material
_this.materialDepth=new MeshDepthMaterial();_this.materialDepth.depthPacking=RGBADepthPacking;_this.materialDepth.blending=NoBlending;var bokehShader=BokehShader;var bokehUniforms=UniformsUtils.clone(bokehShader.uniforms);bokehUniforms["tDepth"].value=_this.renderTargetDepth.texture;bokehUniforms["focus"].value=focus;bokehUniforms["aspect"].value=aspectValue;bokehUniforms["aperture"].value=aperture;bokehUniforms["maxblur"].value=maxblur;bokehUniforms["nearClip"].value=camera.near;bokehUniforms["farClip"].value=camera.far;_this.materialBokeh=new ShaderMaterial({defines:Object.assign({},bokehShader.defines),uniforms:bokehUniforms,vertexShader:bokehShader.vertexShader,fragmentShader:bokehShader.fragmentShader});_this.uniforms=bokehUniforms;_this.needsSwap=false;_this.fsQuad=new Pass.FullScreenQuad(_this.materialBokeh);_this.oldClearColor=new Color();_this.renderToScreen=renderToScreen;return _this;}_createClass(BokehPass,[{key:"render",value:function render(renderer,writeBuffer,readBuffer/*, deltaTime, maskActive*/){this.scene.overrideMaterial=this.materialDepth;this.oldClearColor.copy(renderer.getClearColor());var oldClearAlpha=renderer.getClearAlpha();var oldAutoClear=renderer.autoClear;renderer.autoClear=false;renderer.setClearColor(0xffffff);renderer.setClearAlpha(1.0);renderer.setRenderTarget(this.renderTargetDepth);renderer.clear();renderer.render(this.scene,this.camera);this.uniforms["tColor"].value=readBuffer.texture;this.uniforms["nearClip"].value=this.camera.near;this.uniforms["farClip"].value=this.camera.far;if(this.renderToScreen){renderer.setRenderTarget(null);this.fsQuad.render(renderer);}else{renderer.setRenderTarget(writeBuffer);renderer.clear();this.fsQuad.render(renderer);}this.scene.overrideMaterial=null;renderer.setClearColor(this.oldClearColor);renderer.setClearAlpha(oldClearAlpha);renderer.autoClear=oldAutoClear;}}]);return BokehPass;}(Pass);function _createSuper2$C(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DepthOfField=/*#__PURE__*/function(_BokehPass){_inherits(DepthOfField,_BokehPass);var _super=_createSuper2$C(DepthOfField);function DepthOfField(params){_classCallCheck(this,DepthOfField);var _config$screen=Config$2.screen(),width=_config$screen.w,height=_config$screen.h;return _super.call(this,Scene$2.scene,Scene$2.getCameraBody(),_objectSpread2({},params,{width:width,height:height}));}return DepthOfField;}(BokehPass);function _createSuper2$D(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var MAX_EDGE_THICKNESS=4;var MAX_EDGE_GLOW=4;var DEFAULT_EDGE_GLOW=0.0;var DEFAULT_THICKNESS=1.0;var DEFAULT_EDGE_STRENGTH=10.0;var BlurDirectionX=new Vector2(1.0,0.0);var BlurDirectionY=new Vector2(0.0,1.0);var replaceDepthToViewZ=function replaceDepthToViewZ(string,camera){var type=camera.isPerspectiveCamera?'perspective':'orthographic';return string.replace(/DEPTH_TO_VIEW_Z/g,type+'DepthToViewZ');};var getPrepareMaskMaterial=function getPrepareMaskMaterial(){return new ShaderMaterial({uniforms:{"depthTexture":{value:null},"cameraNearFar":{value:new Vector2(0.5,0.5)},"textureMatrix":{value:null}},vertexShader:['#include <morphtarget_pars_vertex>','#include <skinning_pars_vertex>','varying vec4 projTexCoord;','varying vec4 vPosition;','uniform mat4 textureMatrix;','void main() {','	#include <skinbase_vertex>','	#include <begin_vertex>','	#include <morphtarget_vertex>','	#include <skinning_vertex>','	#include <project_vertex>','	vPosition = mvPosition;','	vec4 worldPosition = modelMatrix * vec4(position, 1.0);','	projTexCoord = textureMatrix * worldPosition;','}'].join('\n'),fragmentShader:['#include <packing>','varying vec4 vPosition;','varying vec4 projTexCoord;','uniform sampler2D depthTexture;','uniform vec2 cameraNearFar;','void main() {','	float depth = unpackRGBAToDepth(texture2DProj(depthTexture, projTexCoord));','	float viewZ = - DEPTH_TO_VIEW_Z(depth, cameraNearFar.x, cameraNearFar.y);','	float depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;','	gl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);','}'].join('\n')});};var getSeperableBlurMaterial=function getSeperableBlurMaterial(maxRadius){return new ShaderMaterial({defines:{"MAX_RADIUS":maxRadius},uniforms:{"colorTexture":{value:null},"texSize":{value:new Vector2(0.5,0.5)},"direction":{value:new Vector2(0.5,0.5)},"kernelRadius":{value:1.0}},vertexShader:"varying vec2 vUv;\n\
            void main() {\n\
                vUv = uv;\n\
                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\
            }",fragmentShader:"#include <common>\
            varying vec2 vUv;\
            uniform sampler2D colorTexture;\
            uniform vec2 texSize;\
            uniform vec2 direction;\
            uniform float kernelRadius;\
            \
            float gaussianPdf(in float x, in float sigma) {\
                return 0.39894 * exp(-0.5 * x * x/(sigma * sigma))/sigma;\
            }\
            void main() {\
                vec2 invSize = 1.0 / texSize;\
                float weightSum = gaussianPdf(0.0, kernelRadius);\
                vec4 diffuseSum = texture2D(colorTexture, vUv) * weightSum;\
                vec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\
                vec2 uvOffset = delta;\
                for(int i = 1; i <= MAX_RADIUS; i ++) {\
                    float w = gaussianPdf(uvOffset.x, kernelRadius);\
                    vec4 sample1 = texture2D(colorTexture, vUv + uvOffset);\
                    vec4 sample2 = texture2D(colorTexture, vUv - uvOffset);\
                    diffuseSum += ((sample1 + sample2) * w);\
                    weightSum += (2.0 * w);\
                    uvOffset += delta;\
                }\
                gl_FragColor = diffuseSum/weightSum;\
            }"});};var getEdgeDetectionMaterial=function getEdgeDetectionMaterial(){return new ShaderMaterial({uniforms:{"maskTexture":{value:null},"texSize":{value:new Vector2(0.5,0.5)},"visibleEdgeColor":{value:new Vector3$1(1.0,1.0,1.0)},"hiddenEdgeColor":{value:new Vector3$1(1.0,1.0,1.0)}},vertexShader:"varying vec2 vUv;\n\
            void main() {\n\
                vUv = uv;\n\
                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\
            }",fragmentShader:"varying vec2 vUv;\
            uniform sampler2D maskTexture;\
            uniform vec2 texSize;\
            uniform vec3 visibleEdgeColor;\
            uniform vec3 hiddenEdgeColor;\
            \
            void main() {\n\
                vec2 invSize = 1.0 / texSize;\
                vec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\
                vec4 c1 = texture2D(maskTexture, vUv + uvOffset.xy);\
                vec4 c2 = texture2D(maskTexture, vUv - uvOffset.xy);\
                vec4 c3 = texture2D(maskTexture, vUv + uvOffset.yw);\
                vec4 c4 = texture2D(maskTexture, vUv - uvOffset.yw);\
                float diff1 = (c1.r - c2.r)*0.5;\
                float diff2 = (c3.r - c4.r)*0.5;\
                float d = length(vec2(diff1, diff2));\
                float a1 = min(c1.g, c2.g);\
                float a2 = min(c3.g, c4.g);\
                float visibilityFactor = min(a1, a2);\
                vec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\
                gl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\
            }"});};var getOverlayMaterial=function getOverlayMaterial(){return new ShaderMaterial({uniforms:{"maskTexture":{value:null},"edgeTexture1":{value:null},"edgeTexture2":{value:null},"patternTexture":{value:null},"edgeStrength":{value:1.0},"edgeGlow":{value:1.0},"usePatternTexture":{value:0.0}},vertexShader:"varying vec2 vUv;\n\
            void main() {\n\
                vUv = uv;\n\
                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\
            }",fragmentShader:"varying vec2 vUv;\
            uniform sampler2D maskTexture;\
            uniform sampler2D edgeTexture1;\
            uniform sampler2D edgeTexture2;\
            uniform sampler2D patternTexture;\
            uniform float edgeStrength;\
            uniform float edgeGlow;\
            uniform bool usePatternTexture;\
            \
            void main() {\
                vec4 edgeValue1 = texture2D(edgeTexture1, vUv);\
                vec4 edgeValue2 = texture2D(edgeTexture2, vUv);\
                vec4 maskColor = texture2D(maskTexture, vUv);\
                vec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\
                float visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\
                vec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\
                vec4 finalColor = edgeStrength * maskColor.r * edgeValue;\
                if(usePatternTexture)\
                    finalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\
                gl_FragColor = finalColor;\
            }",blending:AdditiveBlending,depthTest:false,depthWrite:false,transparent:true});};var SelectiveOutline=/*#__PURE__*/function(_Pass){_inherits(SelectiveOutline,_Pass);var _super=_createSuper2$D(SelectiveOutline);function SelectiveOutline(_ref){var _this;var _ref$resolution=_ref.resolution,resolution=_ref$resolution===void 0?{}:_ref$resolution,_ref$selectedObjects=_ref.selectedObjects,selectedObjects=_ref$selectedObjects===void 0?[]:_ref$selectedObjects;_classCallCheck(this,SelectiveOutline);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"setSelectedoObjects",function(){var selection=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_this.selectedObjects=selection.map(function(object){return object.getMesh();});});_defineProperty(_assertThisInitialized(_this),"setVisibleEdgeColor",function(){var color=arguments.length>0&&arguments[0]!==undefined?arguments[0]:COLORS.WHITE;_this.visibleEdgeColor=new Color(color);});_defineProperty(_assertThisInitialized(_this),"setHiddenEdgeColor",function(){var color=arguments.length>0&&arguments[0]!==undefined?arguments[0]:COLORS.WHITE;_this.hiddenEdgeColor=new Color(color);});_defineProperty(_assertThisInitialized(_this),"setEdgeGlow",function(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_EDGE_GLOW;_this.edgeGlow=value;});_defineProperty(_assertThisInitialized(_this),"setEdgeThickness",function(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_THICKNESS;_this.edgeThickness=value;});_defineProperty(_assertThisInitialized(_this),"setDefaultEdgeStrength",function(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_EDGE_STRENGTH;_this.edgeStrength=value;});var _config$screen=Config$2.screen(),width=_config$screen.w,height=_config$screen.h;var _resolution$x=resolution.x,x=_resolution$x===void 0?width:_resolution$x,_resolution$y=resolution.y,y=_resolution$y===void 0?height:_resolution$y;_this.renderScene=Scene$2.getScene();_this.renderCamera=Scene$2.getCameraBody();_this.setSelectedoObjects(selectedObjects);_this.visibleEdgeColor=new Color(COLORS.WHITE);_this.hiddenEdgeColor=new Color(COLORS.WHITE);_this.edgeGlow=DEFAULT_EDGE_GLOW;_this.usePatternTexture=false;_this.edgeThickness=DEFAULT_THICKNESS;_this.edgeStrength=DEFAULT_EDGE_STRENGTH;_this.downSampleRatio=2;_this.pulsePeriod=0;_this.resolution=new Vector2(x,y);var pars={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};var resX=Math.round(_this.resolution.x/_this.downSampleRatio);var resY=Math.round(_this.resolution.y/_this.downSampleRatio);_this.maskBufferMaterial=new MeshBasicMaterial({color:0xffffff});_this.maskBufferMaterial.side=DoubleSide;_this.renderTargetMaskBuffer=new WebGLRenderTarget(_this.resolution.x,_this.resolution.y,pars);_this.renderTargetMaskBuffer.texture.name="OutlinePass.mask";_this.renderTargetMaskBuffer.texture.generateMipmaps=false;_this.depthMaterial=new MeshDepthMaterial();_this.depthMaterial.side=DoubleSide;_this.depthMaterial.depthPacking=RGBADepthPacking;_this.depthMaterial.blending=NoBlending;_this.prepareMaskMaterial=getPrepareMaskMaterial();_this.prepareMaskMaterial.side=DoubleSide;_this.prepareMaskMaterial.fragmentShader=replaceDepthToViewZ(_this.prepareMaskMaterial.fragmentShader,_this.renderCamera);_this.renderTargetDepthBuffer=new WebGLRenderTarget(_this.resolution.x,_this.resolution.y,pars);_this.renderTargetDepthBuffer.texture.name="OutlinePass.depth";_this.renderTargetDepthBuffer.texture.generateMipmaps=false;_this.renderTargetMaskDownSampleBuffer=new WebGLRenderTarget(resX,resY,pars);_this.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample";_this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=false;_this.renderTargetBlurBuffer1=new WebGLRenderTarget(resX,resY,pars);_this.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1";_this.renderTargetBlurBuffer1.texture.generateMipmaps=false;_this.renderTargetBlurBuffer2=new WebGLRenderTarget(Math.round(resX/2),Math.round(resY/2),pars);_this.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2";_this.renderTargetBlurBuffer2.texture.generateMipmaps=false;_this.edgeDetectionMaterial=getEdgeDetectionMaterial();_this.renderTargetEdgeBuffer1=new WebGLRenderTarget(resX,resY,pars);_this.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1";_this.renderTargetEdgeBuffer1.texture.generateMipmaps=false;_this.renderTargetEdgeBuffer2=new WebGLRenderTarget(Math.round(resX/2),Math.round(resY/2),pars);_this.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2";_this.renderTargetEdgeBuffer2.texture.generateMipmaps=false;_this.separableBlurMaterial1=getSeperableBlurMaterial(MAX_EDGE_THICKNESS);_this.separableBlurMaterial1.uniforms["texSize"].value.set(resX,resY);_this.separableBlurMaterial1.uniforms["kernelRadius"].value=1;_this.separableBlurMaterial2=getSeperableBlurMaterial(MAX_EDGE_GLOW);_this.separableBlurMaterial2.uniforms["texSize"].value.set(Math.round(resX/2),Math.round(resY/2));_this.separableBlurMaterial2.uniforms["kernelRadius"].value=MAX_EDGE_GLOW;// Overlay material
_this.overlayMaterial=getOverlayMaterial();// copy material
_this.copyUniforms=UniformsUtils.clone(CopyShader.uniforms);_this.copyUniforms["opacity"].value=1.0;_this.materialCopy=new ShaderMaterial({uniforms:_this.copyUniforms,vertexShader:CopyShader.vertexShader,fragmentShader:CopyShader.fragmentShader,blending:NoBlending,depthTest:false,depthWrite:false,transparent:true});_this.enabled=true;_this.needsSwap=false;_this.oldClearColor=new Color();_this.oldClearAlpha=1;_this.fsQuad=new Pass.FullScreenQuad(null);_this.tempPulseColor1=new Color();_this.tempPulseColor2=new Color();_this.textureMatrix=new Matrix4();return _this;}_createClass(SelectiveOutline,[{key:"dispose",value:function dispose(){this.renderTargetMaskBuffer.dispose();this.renderTargetDepthBuffer.dispose();this.renderTargetMaskDownSampleBuffer.dispose();this.renderTargetBlurBuffer1.dispose();this.renderTargetBlurBuffer2.dispose();this.renderTargetEdgeBuffer1.dispose();this.renderTargetEdgeBuffer2.dispose();}},{key:"setSize",value:function setSize(width,height){var resX=Math.round(width/this.downSampleRatio);var resY=Math.round(height/this.downSampleRatio);this.renderTargetMaskBuffer.setSize(width,height);this.renderTargetMaskDownSampleBuffer.setSize(resX,resY);this.renderTargetBlurBuffer1.setSize(resX,resY);this.renderTargetEdgeBuffer1.setSize(resX,resY);this.separableBlurMaterial1.uniforms["texSize"].value.set(resX,resY);resX=Math.round(resX/2);resY=Math.round(resY/2);this.renderTargetBlurBuffer2.setSize(resX,resY);this.renderTargetEdgeBuffer2.setSize(resX,resY);this.separableBlurMaterial2.uniforms["texSize"].value.set(resX,resY);}},{key:"changeVisibilityOfSelectedObjects",value:function changeVisibilityOfSelectedObjects(bVisible){function gatherSelectedMeshesCallBack(object){if(object.isMesh){if(bVisible){object.visible=object.userData.oldVisible;delete object.userData.oldVisible;}else{object.userData.oldVisible=object.visible;object.visible=bVisible;}}}for(var i=0;i<this.selectedObjects.length;i++){this.selectedObjects[i].traverse(gatherSelectedMeshesCallBack);}}},{key:"changeVisibilityOfNonSelectedObjects",value:function changeVisibilityOfNonSelectedObjects(bVisible){var selectedMeshes=[];function gatherSelectedMeshesCallBack(object){if(object.isMesh)selectedMeshes.push(object);}for(var i=0;i<this.selectedObjects.length;i++){this.selectedObjects[i].traverse(gatherSelectedMeshesCallBack);}function VisibilityChangeCallBack(object){if(object.isMesh||object.isLine||object.isSprite){var bFound=false;for(var _i=0;_i<selectedMeshes.length;_i++){if(selectedMeshes[_i].id===object.id){bFound=true;break;}}if(!bFound){var visibility=object.visible;if(!bVisible||object.bVisible)object.visible=bVisible;object.bVisible=visibility;}}}this.renderScene.traverse(VisibilityChangeCallBack);}},{key:"updateTextureMatrix",value:function updateTextureMatrix(){this.textureMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);this.textureMatrix.multiply(this.renderCamera.projectionMatrix);this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse);}},{key:"render",value:function render(renderer,writeBuffer,readBuffer,deltaTime,maskActive){if(this.selectedObjects.length>0){this.oldClearColor.copy(renderer.getClearColor());this.oldClearAlpha=renderer.getClearAlpha();var oldAutoClear=renderer.autoClear;renderer.autoClear=false;if(maskActive)renderer.state.buffers.stencil.setTest(false);renderer.setClearColor(0xffffff,1);// Make selected objects invisible
this.changeVisibilityOfSelectedObjects(false);var currentBackground=this.renderScene.background;this.renderScene.background=null;// 1. Draw Non Selected objects in the depth buffer
this.renderScene.overrideMaterial=this.depthMaterial;renderer.setRenderTarget(this.renderTargetDepthBuffer);renderer.clear();renderer.render(this.renderScene,this.renderCamera);// Make selected objects visible
this.changeVisibilityOfSelectedObjects(true);// Update Texture Matrix for Depth compare
this.updateTextureMatrix();// Make non selected objects invisible, and draw only the selected objects, by comparing the depth buffer of non selected objects
this.changeVisibilityOfNonSelectedObjects(false);this.renderScene.overrideMaterial=this.prepareMaskMaterial;this.prepareMaskMaterial.uniforms["cameraNearFar"].value.set(this.renderCamera.near,this.renderCamera.far);this.prepareMaskMaterial.uniforms["depthTexture"].value=this.renderTargetDepthBuffer.texture;this.prepareMaskMaterial.uniforms["textureMatrix"].value=this.textureMatrix;renderer.setRenderTarget(this.renderTargetMaskBuffer);renderer.clear();renderer.render(this.renderScene,this.renderCamera);this.renderScene.overrideMaterial=null;this.changeVisibilityOfNonSelectedObjects(true);this.renderScene.background=currentBackground;// 2. Downsample to Half resolution
this.fsQuad.material=this.materialCopy;this.copyUniforms["tDiffuse"].value=this.renderTargetMaskBuffer.texture;renderer.setRenderTarget(this.renderTargetMaskDownSampleBuffer);renderer.clear();this.fsQuad.render(renderer);this.tempPulseColor1.copy(this.visibleEdgeColor);this.tempPulseColor2.copy(this.hiddenEdgeColor);if(this.pulsePeriod>0){var scalar=(1+0.25)/2+Math.cos(performance.now()*0.01/this.pulsePeriod)*(1.0-0.25)/2;this.tempPulseColor1.multiplyScalar(scalar);this.tempPulseColor2.multiplyScalar(scalar);}// 3. Apply Edge Detection Pass
this.fsQuad.material=this.edgeDetectionMaterial;this.edgeDetectionMaterial.uniforms["maskTexture"].value=this.renderTargetMaskDownSampleBuffer.texture;this.edgeDetectionMaterial.uniforms["texSize"].value.set(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height);this.edgeDetectionMaterial.uniforms["visibleEdgeColor"].value=this.tempPulseColor1;this.edgeDetectionMaterial.uniforms["hiddenEdgeColor"].value=this.tempPulseColor2;renderer.setRenderTarget(this.renderTargetEdgeBuffer1);renderer.clear();this.fsQuad.render(renderer);// 4. Apply Blur on Half res
this.fsQuad.material=this.separableBlurMaterial1;this.separableBlurMaterial1.uniforms["colorTexture"].value=this.renderTargetEdgeBuffer1.texture;this.separableBlurMaterial1.uniforms["direction"].value=BlurDirectionX;this.separableBlurMaterial1.uniforms["kernelRadius"].value=this.edgeThickness;renderer.setRenderTarget(this.renderTargetBlurBuffer1);renderer.clear();this.fsQuad.render(renderer);this.separableBlurMaterial1.uniforms["colorTexture"].value=this.renderTargetBlurBuffer1.texture;this.separableBlurMaterial1.uniforms["direction"].value=BlurDirectionY;renderer.setRenderTarget(this.renderTargetEdgeBuffer1);renderer.clear();this.fsQuad.render(renderer);// Apply Blur on quarter res
this.fsQuad.material=this.separableBlurMaterial2;this.separableBlurMaterial2.uniforms["colorTexture"].value=this.renderTargetEdgeBuffer1.texture;this.separableBlurMaterial2.uniforms["direction"].value=BlurDirectionX;renderer.setRenderTarget(this.renderTargetBlurBuffer2);renderer.clear();this.fsQuad.render(renderer);this.separableBlurMaterial2.uniforms["colorTexture"].value=this.renderTargetBlurBuffer2.texture;this.separableBlurMaterial2.uniforms["direction"].value=BlurDirectionY;renderer.setRenderTarget(this.renderTargetEdgeBuffer2);renderer.clear();this.fsQuad.render(renderer);// Blend it additively over the input texture
this.fsQuad.material=this.overlayMaterial;this.overlayMaterial.uniforms["maskTexture"].value=this.renderTargetMaskBuffer.texture;this.overlayMaterial.uniforms["edgeTexture1"].value=this.renderTargetEdgeBuffer1.texture;this.overlayMaterial.uniforms["edgeTexture2"].value=this.renderTargetEdgeBuffer2.texture;this.overlayMaterial.uniforms["patternTexture"].value=this.patternTexture;this.overlayMaterial.uniforms["edgeStrength"].value=this.edgeStrength;this.overlayMaterial.uniforms["edgeGlow"].value=this.edgeGlow;this.overlayMaterial.uniforms["usePatternTexture"].value=this.usePatternTexture;if(maskActive)renderer.state.buffers.stencil.setTest(true);renderer.setRenderTarget(readBuffer);this.fsQuad.render(renderer);renderer.setClearColor(this.oldClearColor,this.oldClearAlpha);renderer.autoClear=oldAutoClear;}if(this.renderToScreen){this.fsQuad.material=this.materialCopy;this.copyUniforms["tDiffuse"].value=readBuffer.texture;renderer.setRenderTarget(null);this.fsQuad.render(renderer);}}}]);return SelectiveOutline;}(Pass);/**
 * RGB Shift Shader
 * Shifts red and blue channels from center in opposite directions
 * Ported from http://kriss.cx/tom/2009/05/rgb-shift/
 * by Tom Butterworth / http://kriss.cx/tom/
 *
 * amount: shift distance (1 is width of input)
 * angle: shift angle in radians
 */var DigitalGlitch={uniforms:{"tDiffuse":{value:null},//diffuse texture
"tDisp":{value:null},//displacement texture for digital glitch squares
"byp":{value:0},//apply the glitch ?
"amount":{value:0.08},"angle":{value:0.02},"seed":{value:0.02},"seed_x":{value:0.02},//-1,1
"seed_y":{value:0.02},//-1,1
"distortion_x":{value:0.5},"distortion_y":{value:0.6},"col_s":{value:0.05}},vertexShader:["varying vec2 vUv;","void main() {","	vUv = uv;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;",//should we apply the glitch ?
"uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","	return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","	if(byp<1) {","		vec2 p = vUv;","		float xs = floor(gl_FragCoord.x / 0.5);","		float ys = floor(gl_FragCoord.y / 0.5);",//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch
"		vec4 normal = texture2D (tDisp, p*seed*seed);","		if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","			if(seed_x>0.){","				p.y = 1. - (p.y + distortion_y);","			}","			else {","				p.y = distortion_y;","			}","		}","		if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","			if(seed_y>0.){","				p.x=distortion_x;","			}","			else {","				p.x = 1. - (p.x + distortion_x);","			}","		}","		p.x+=normal.x*seed_x*(seed/5.);","		p.y+=normal.y*seed_y*(seed/5.);",//base from RGB shift shader
"		vec2 offset = amount * vec2( cos(angle), sin(angle));","		vec4 cr = texture2D(tDiffuse, p + offset);","		vec4 cga = texture2D(tDiffuse, p);","		vec4 cb = texture2D(tDiffuse, p - offset);","		gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);",//add noise
"		vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","		gl_FragColor = gl_FragColor+ snow;","	}","	else {","		gl_FragColor=texture2D (tDiffuse, vUv);","	}","}"].join("\n")};function _createSuper2$E(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var GlitchEffect=/*#__PURE__*/function(_Pass){_inherits(GlitchEffect,_Pass);var _super=_createSuper2$E(GlitchEffect);function GlitchEffect(_ref){var _this;var _ref$dt_size=_ref.dt_size,dt_size=_ref$dt_size===void 0?64:_ref$dt_size;_classCallCheck(this,GlitchEffect);_this=_super.call(this);_this.uniforms=UniformsUtils.clone(DigitalGlitch.uniforms);_this.uniforms["tDisp"].value=_this.generateHeightmap(dt_size);_this.material=new ShaderMaterial({uniforms:_this.uniforms,vertexShader:DigitalGlitch.vertexShader,fragmentShader:DigitalGlitch.fragmentShader});_this.fsQuad=new Pass.FullScreenQuad(_this.material);_this.goWild=false;_this.curF=0;_this.generateTrigger();return _this;}_createClass(GlitchEffect,[{key:"shouldGoWild",value:function shouldGoWild(flag){this.goWild=flag;}},{key:"generateTrigger",value:function generateTrigger(){this.randX=MathUtils.randInt(120,240);}},{key:"generateHeightmap",value:function generateHeightmap(dt_size){var data_arr=new Float32Array(dt_size*dt_size*3);var length=dt_size*dt_size;for(var i=0;i<length;i++){var val=MathUtils.randFloat(0,1);data_arr[i*3+0]=val;data_arr[i*3+1]=val;data_arr[i*3+2]=val;}return new DataTexture(data_arr,dt_size,dt_size,RGBFormat,FloatType$1);}},{key:"render",value:function render(renderer,writeBuffer,readBuffer){this.uniforms["tDiffuse"].value=readBuffer.texture;this.uniforms['seed'].value=Math.random();//default seeding
this.uniforms['byp'].value=0;if(this.curF%this.randX==0||this.goWild==true){this.uniforms['amount'].value=Math.random()/30;this.uniforms['angle'].value=MathUtils.randFloat(-Math.PI,Math.PI);this.uniforms['seed_x'].value=MathUtils.randFloat(-1,1);this.uniforms['seed_y'].value=MathUtils.randFloat(-1,1);this.uniforms['distortion_x'].value=MathUtils.randFloat(0,1);this.uniforms['distortion_y'].value=MathUtils.randFloat(0,1);this.curF=0;this.generateTrigger();}else if(this.curF%this.randX<this.randX/5){this.uniforms['amount'].value=Math.random()/90;this.uniforms['angle'].value=MathUtils.randFloat(-Math.PI,Math.PI);this.uniforms['distortion_x'].value=MathUtils.randFloat(0,1);this.uniforms['distortion_y'].value=MathUtils.randFloat(0,1);this.uniforms['seed_x'].value=MathUtils.randFloat(-0.3,0.3);this.uniforms['seed_y'].value=MathUtils.randFloat(-0.3,0.3);}else if(this.goWild==false){this.uniforms['byp'].value=1;}this.curF++;if(this.renderToScreen){renderer.setRenderTarget(null);this.fsQuad.render(renderer);}else{renderer.setRenderTarget(writeBuffer);if(this.clear)renderer.clear();this.fsQuad.render(renderer);}}}]);return GlitchEffect;}(Pass);function _createSuper2$F(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var PixelShader={uniforms:{"tDiffuse":{value:null},"resolution":{value:null},"pixelSize":{value:1.}},vertexShader:["varying highp vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float pixelSize;","uniform vec2 resolution;","varying highp vec2 vUv;","void main(){","vec2 dxy = pixelSize / resolution;","vec2 coord = dxy * floor( vUv / dxy );","gl_FragColor = texture2D(tDiffuse, coord);","}"].join("\n")};var PixelEffect=/*#__PURE__*/function(_ShaderPass){_inherits(PixelEffect,_ShaderPass);var _super=_createSuper2$F(PixelEffect);function PixelEffect(_ref){var _this;var _ref$pixelSize=_ref.pixelSize,pixelSize=_ref$pixelSize===void 0?16:_ref$pixelSize,_ref$renderToScreen=_ref.renderToScreen,renderToScreen=_ref$renderToScreen===void 0?false:_ref$renderToScreen;_classCallCheck(this,PixelEffect);var _Config$screen=Config$2.screen(),h=_Config$screen.h,w=_Config$screen.w,devicePixelRatio=_Config$screen.devicePixelRatio;_this=_super.call(this,PixelShader);_this.renderToScreen=renderToScreen;_this.uniforms["pixelSize"].value=pixelSize;_this.uniforms["resolution"].value=new Vector2(w,h);_this.uniforms["resolution"].value.multiplyScalar(devicePixelRatio);return _this;}_createClass(PixelEffect,[{key:"setPixelSize",value:function setPixelSize(){var pixelSize=arguments.length>0&&arguments[0]!==undefined?arguments[0]:16;this.uniforms["pixelSize"].value=pixelSize;}},{key:"onWindowResize",value:function onWindowResize(){var _Config$screen2=Config$2.screen(),h=_Config$screen2.h,w=_Config$screen2.w,devicePixelRatio=_Config$screen2.devicePixelRatio;this.uniforms["resolution"].value.set(w,h).multiplyScalar(devicePixelRatio);}}]);return PixelEffect;}(ShaderPass);var PostProcessing=/*#__PURE__*/function(){function PostProcessing(){var _this=this,_this$map;_classCallCheck(this,PostProcessing);_defineProperty(this,"isEnabled",function(){return!!_this.effects.length||!!_this.customs.length;});_defineProperty(this,"init",function(){window.addEventListener('resize',_this.onWindowResize,false);_this.composer=new EffectComposer(Scene$2.renderer);_this.composer.addPass(new RenderPass(Scene$2.scene,Scene$2.getCameraBody()));});_defineProperty(this,"onWindowResize",function(){var _Config$screen=Config$2.screen(),h=_Config$screen.h,w=_Config$screen.w;_this.composer.setSize(w,h);_this.effects.forEach(function(effect){if(effect.onWindowResize){effect.onWindowResize();}});});_defineProperty(this,"addEffectToComposer",function(effect){_this.composer.addPass(effect);_this.effects.push(effect);_this.composer.ensureLastPassIsRendered();});_defineProperty(this,"addEffectToCustomEffects",function(effect){_this.customs.push(effect);});_defineProperty(this,"add",function(desiredEffect){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var effect;if(typeof desiredEffect==='string'){var effectDescription=_this.get(desiredEffect);if(effectDescription){effect=PostProcessing.createEffect(effectDescription,options);}else{console.error(EFFECT_UNAVAILABLE);return;}}else{effect=PostProcessing.createEffect(desiredEffect,options);}if(effect){if(effect.isPass){_this.addEffectToComposer(effect);}else{_this.addEffectToCustomEffects(effect);}return effect;}else{console.error(EFFECT_COULD_NOT_BE_CREATED);}});_defineProperty(this,"render",function(dt){_this.composer.render(dt);_this.customs.forEach(function(e){return e.render();});});this.map=(_this$map={},_defineProperty(_this$map,EFFECTS.SEPIA,{effect:SepiaEffect,isClass:false}),_defineProperty(_this$map,EFFECTS.HUE_SATURATION,{effect:HueSaturationEffect,isClass:false}),_defineProperty(_this$map,EFFECTS.BLOOM,{effect:BloomPass,isClass:true}),_defineProperty(_this$map,EFFECTS.DEPTH_OF_FIELD,{effect:DepthOfField,isClass:true}),_defineProperty(_this$map,EFFECTS.SELECTIVE_OUTLINE,{effect:SelectiveOutline,isClass:true}),_defineProperty(_this$map,EFFECTS.GLITCH,{effect:GlitchEffect,isClass:true}),_defineProperty(_this$map,EFFECTS.PIXEL,{effect:PixelEffect,isClass:true}),_this$map);this.effects=[];this.customs=[];}_createClass(PostProcessing,[{key:"get",value:function get(id){return this.map[id]||null;}}],[{key:"createEffect",value:function createEffect(_ref,options){var effect=_ref.effect,isClass=_ref.isClass;var pass;if(effect&&!isClass){pass=effect(options);}else if(effect&&isClass){pass=new effect(options);}return pass;}}]);return PostProcessing;}();var PostProcessing$1=new PostProcessing();function _createSuper2$G(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Orbit=/*#__PURE__*/function(_EventDispatcher){_inherits(Orbit,_EventDispatcher);var _super=_createSuper2$G(Orbit);function Orbit(object,domElement){var _this;_classCallCheck(this,Orbit);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"update",function(){var position=_this.object.position;_this.offset.copy(position).sub(_this.target);// rotate this.offset to "y-axis-is-up" space
_this.offset.applyQuaternion(_this.quat);// angle from z-axis around y-axis
_this.spherical.setFromVector3(_this.offset);if(_this.autoRotate&&_this.state===STATE.NONE){rotateLeft(getAutoRotationAngle());}_this.spherical.theta+=_this.sphericalDelta.theta;_this.spherical.phi+=_this.sphericalDelta.phi;// restrict theta to be between desired limits
_this.spherical.theta=Math.max(_this.minAzimuthAngle,Math.min(_this.maxAzimuthAngle,_this.spherical.theta));// restrict phi to be between desired limits
_this.spherical.phi=Math.max(_this.minPolarAngle,Math.min(_this.maxPolarAngle,_this.spherical.phi));_this.spherical.makeSafe();_this.spherical.radius*=_this.scale;// restrict radius to be between desired limits
_this.spherical.radius=Math.max(_this.minDistance,Math.min(_this.maxDistance,_this.spherical.radius));// move target to panned location
_this.target.add(_this.panOffset);_this.offset.setFromSpherical(_this.spherical);// rotate this.offset back to "camera-up-vector-is-up" space
_this.offset.applyQuaternion(_this.quatInverse);position.copy(_this.target).add(_this.offset);_this.object.lookAt(_this.target);if(_this.enableDamping===true){_this.sphericalDelta.theta*=1-_this.dampingFactor;_this.sphericalDelta.phi*=1-_this.dampingFactor;_this.panOffset.multiplyScalar(1-_this.dampingFactor);}else{_this.sphericalDelta.set(0,0,0);_this.panOffset.set(0,0,0);}_this.scale=1;// update condition is:
// min(camera displacement, camera rotation in radians)^2 > EPS
// using small-angle approximation cos(x/2) = 1 - x^2 / 8
if(_this.zoomChanged||_this.lastPosition.distanceToSquared(_this.object.position)>_this.EPS||8*(1-_this.lastQuaternion.dot(_this.object.quaternion))>_this.EPS){_this.dispatchEvent(_this.changeEvent);_this.lastPosition.copy(_this.object.position);_this.lastQuaternion.copy(_this.object.quaternion);_this.zoomChanged=false;return true;}return false;});_defineProperty(_assertThisInitialized(_this),"rotateLeft",function(angle){_this.sphericalDelta.theta-=angle;});_defineProperty(_assertThisInitialized(_this),"rotateUp",function(angle){_this.sphericalDelta.phi-=angle;});_defineProperty(_assertThisInitialized(_this),"panLeft",function(){var v=new Vector3$1();return function(distance,objectMatrix){v.setFromMatrixColumn(objectMatrix,0);// get X column of objectMatrix
v.multiplyScalar(-distance);_this.panOffset.add(v);};}());_defineProperty(_assertThisInitialized(_this),"panUp",function(){var v=new Vector3$1();return function(distance,objectMatrix){if(_this.screenSpacePanning===true){v.setFromMatrixColumn(objectMatrix,1);}else{v.setFromMatrixColumn(objectMatrix,0);v.crossVectors(_this.object.up,v);}v.multiplyScalar(distance);_this.panOffset.add(v);};}());_defineProperty(_assertThisInitialized(_this),"pan",function(){var offset=new Vector3$1();return function(deltaX,deltaY){var element=_this.domElement===document?_this.domElement.body:_this.domElement;if(_this.object.isPerspectiveCamera){// perspective
var position=_this.object.position;offset.copy(position).sub(_this.target);var targetDistance=offset.length();// half of the fov is center to top of screen
targetDistance*=Math.tan(_this.object.fov/2*Math.PI/180.0);// we use only clientHeight here so aspect ratio does not distort speed
_this.panLeft(2*deltaX*targetDistance/element.clientHeight,_this.object.matrix);_this.panUp(2*deltaY*targetDistance/element.clientHeight,_this.object.matrix);}else if(_this.object.isOrthographicCamera){// orthographic
_this.panLeft(deltaX*(_this.object.right-_this.object.left)/_this.object.zoom/element.clientWidth,_this.object.matrix);_this.panUp(deltaY*(_this.object.top-_this.object.bottom)/_this.object.zoom/element.clientHeight,_this.object.matrix);}else{// camera neither orthographic nor perspective
console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');_this.enablePan=false;}};}());_defineProperty(_assertThisInitialized(_this),"dollyIn",function(dollyScale){if(_this.object.isPerspectiveCamera){_this.scale/=dollyScale;}else if(_this.object.isOrthographicCamera){_this.object.zoom=Math.max(_this.minZoom,Math.min(_this.maxZoom,_this.object.zoom*dollyScale));_this.object.updateProjectionMatrix();_this.zoomChanged=true;}else{console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');_this.enableZoom=false;}});_defineProperty(_assertThisInitialized(_this),"dollyOut",function(dollyScale){if(_this.object.isPerspectiveCamera){_this.scale*=dollyScale;}else if(_this.object.isOrthographicCamera){_this.object.zoom=Math.max(_this.minZoom,Math.min(_this.maxZoom,_this.object.zoom/dollyScale));_this.object.updateProjectionMatrix();_this.zoomChanged=true;}else{console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');_this.enableZoom=false;}});_defineProperty(_assertThisInitialized(_this),"handleMouseDownRotate",function(event){_this.rotateStart.set(event.clientX,event.clientY);});_defineProperty(_assertThisInitialized(_this),"handleMouseDownDolly",function(event){_this.dollyStart.set(event.clientX,event.clientY);});_defineProperty(_assertThisInitialized(_this),"handleMouseDownPan",function(event){_this.panStart.set(event.clientX,event.clientY);});_defineProperty(_assertThisInitialized(_this),"handleMouseMoveRotate",function(event){var element=_this.domElement===document?_this.domElement.body:_this.domElement;_this.rotateEnd.set(event.clientX,event.clientY);_this.rotateDelta.subVectors(_this.rotateEnd,_this.rotateStart).multiplyScalar(_this.rotateSpeed);_this.rotateLeft(2*Math.PI*_this.rotateDelta.x/element.clientHeight);// yes, height
_this.rotateUp(2*Math.PI*_this.rotateDelta.y/element.clientHeight);_this.rotateStart.copy(_this.rotateEnd);_this.update();});_defineProperty(_assertThisInitialized(_this),"handleMouseMoveDolly",function(event){_this.dollyEnd.set(event.clientX,event.clientY);_this.dollyDelta.subVectors(_this.dollyEnd,_this.dollyStart);if(_this.dollyDelta.y>0){_this.dollyIn(_this.getZoomScale());}else if(_this.dollyDelta.y<0){_this.dollyOut(_this.getZoomScale());}_this.dollyStart.copy(_this.dollyEnd);_this.update();});_defineProperty(_assertThisInitialized(_this),"handleMouseMovePan",function(event){_this.panEnd.set(event.clientX,event.clientY);_this.panDelta.subVectors(_this.panEnd,_this.panStart).multiplyScalar(_this.panSpeed);_this.pan(_this.panDelta.x,_this.panDelta.y);_this.panStart.copy(_this.panEnd);_this.update();});_defineProperty(_assertThisInitialized(_this),"handleMouseUp",function(event){});_defineProperty(_assertThisInitialized(_this),"handleMouseWheel",function(event){if(event.deltaY<0){_this.dollyOut(_this.getZoomScale());}else if(event.deltaY>0){_this.dollyIn(_this.getZoomScale());}_this.update();});_defineProperty(_assertThisInitialized(_this),"handleKeyDown",function(event){switch(event.keyCode){case _this.keys.UP:_this.pan(0,_this.keyPanSpeed);_this.update();break;case _this.keys.BOTTOM:_this.pan(0,-_this.keyPanSpeed);_this.update();break;case _this.keys.LEFT:_this.pan(_this.keyPanSpeed,0);_this.update();break;case _this.keys.RIGHT:_this.pan(-_this.keyPanSpeed,0);_this.update();break;}});_defineProperty(_assertThisInitialized(_this),"handleTouchStartRotate",function(event){_this.rotateStart.set(event.touches[0].pageX,event.touches[0].pageY);});_defineProperty(_assertThisInitialized(_this),"handleTouchStartDollyPan",function(event){if(_this.enableZoom){var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;var distance=Math.sqrt(dx*dx+dy*dy);_this.dollyStart.set(0,distance);}if(_this.enablePan){var x=0.5*(event.touches[0].pageX+event.touches[1].pageX);var y=0.5*(event.touches[0].pageY+event.touches[1].pageY);_this.panStart.set(x,y);}});_defineProperty(_assertThisInitialized(_this),"handleTouchMoveRotate",function(event){var element=_this.domElement===document?_this.domElement.body:_this.domElement;_this.rotateEnd.set(event.touches[0].pageX,event.touches[0].pageY);_this.rotateDelta.subVectors(_this.rotateEnd,_this.rotateStart).multiplyScalar(_this.rotateSpeed);_this.rotateLeft(2*Math.PI*_this.rotateDelta.x/element.clientHeight);// yes, height
_this.rotateUp(2*Math.PI*_this.rotateDelta.y/element.clientHeight);_this.rotateStart.copy(_this.rotateEnd);_this.update();});_defineProperty(_assertThisInitialized(_this),"handleTouchMoveDollyPan",function(event){if(_this.enableZoom){var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;var distance=Math.sqrt(dx*dx+dy*dy);_this.dollyEnd.set(0,distance);_this.dollyDelta.set(0,Math.pow(_this.dollyEnd.y/_this.dollyStart.y,_this.zoomSpeed));_this.dollyIn(_this.dollyDelta.y);_this.dollyStart.copy(_this.dollyEnd);}if(_this.enablePan){var x=0.5*(event.touches[0].pageX+event.touches[1].pageX);var y=0.5*(event.touches[0].pageY+event.touches[1].pageY);_this.panEnd.set(x,y);_this.panDelta.subVectors(_this.panEnd,_this.panStart).multiplyScalar(_this.panSpeed);_this.pan(_this.panDelta.x,_this.panDelta.y);_this.panStart.copy(_this.panEnd);}_this.update();});_defineProperty(_assertThisInitialized(_this),"handleTouchEnd",function(event){});_defineProperty(_assertThisInitialized(_this),"onMouseDown",function(event){if(!_this.enabled)return;event.preventDefault();switch(event.button){case _this.mouseButtons.LEFT:if(event.ctrlKey||event.metaKey||event.shiftKey){if(_this.enablePan===false)return;_this.handleMouseDownPan(event);_this.state=_this.STATE.PAN;}else{if(_this.enableRotate===false)return;_this.handleMouseDownRotate(event);_this.state=_this.STATE.ROTATE;}break;case _this.mouseButtons.MIDDLE:if(_this.enableZoom===false)return;_this.handleMouseDownDolly(event);_this.state=_this.STATE.DOLLY;break;case _this.mouseButtons.RIGHT:if(_this.enablePan===false)return;_this.handleMouseDownPan(event);_this.state=_this.STATE.PAN;break;}if(_this.state!==_this.STATE.NONE){document.addEventListener('mousemove',_this.onMouseMove,false);document.addEventListener('mouseup',_this.onMouseUp,false);_this.dispatchEvent(_this.startEvent);}});_defineProperty(_assertThisInitialized(_this),"onMouseMove",function(event){if(!_this.enabled)return;event.preventDefault();switch(_this.state){case _this.STATE.ROTATE:if(_this.enableRotate===false)return;_this.handleMouseMoveRotate(event);break;case _this.STATE.DOLLY:if(_this.enableZoom===false)return;_this.handleMouseMoveDolly(event);break;case _this.STATE.PAN:if(_this.enablePan===false)return;_this.handleMouseMovePan(event);break;}});_defineProperty(_assertThisInitialized(_this),"onMouseUp",function(event){if(!_this.enabled)return;_this.handleMouseUp(event);document.removeEventListener('mousemove',_this.onMouseMove,false);document.removeEventListener('mouseup',_this.onMouseUp,false);_this.dispatchEvent(_this.endEvent);_this.state=_this.STATE.NONE;});_defineProperty(_assertThisInitialized(_this),"onMouseWheel",function(event){if(!_this.enabled||_this.enableZoom===false||_this.state!==_this.STATE.NONE&&_this.state!==_this.STATE.ROTATE)return;event.preventDefault();event.stopPropagation();_this.dispatchEvent(_this.startEvent);_this.handleMouseWheel(event);_this.dispatchEvent(_this.endEvent);});_defineProperty(_assertThisInitialized(_this),"onKeyDown",function(event){if(!_this.enabled||_this.enableKeys===false||_this.enablePan===false)return;_this.handleKeyDown(event);});_defineProperty(_assertThisInitialized(_this),"onTouchStart",function(event){if(!_this.enabled)return;event.preventDefault();switch(event.touches.length){case 1:// one-fingered touch: rotate
if(_this.enableRotate===false)return;_this.handleTouchStartRotate(event);_this.state=_this.STATE.TOUCH_ROTATE;break;case 2:// two-fingered touch: dolly-pan
if(_this.enableZoom===false&&_this.enablePan===false)return;_this.handleTouchStartDollyPan(event);_this.state=_this.STATE.TOUCH_DOLLY_PAN;break;default:_this.state=_this.STATE.NONE;}if(_this.state!==_this.STATE.NONE){_this.dispatchEvent(startEvent);}});_defineProperty(_assertThisInitialized(_this),"onTouchMove",function(event){if(!_this.enabled)return;event.preventDefault();event.stopPropagation();switch(event.touches.length){case 1:// one-fingered touch: rotate
if(_this.enableRotate===false)return;if(_this.state!==_this.STATE.TOUCH_ROTATE)return;// is this needed?
_this.handleTouchMoveRotate(event);break;case 2:// two-fingered touch: dolly-pan
if(_this.enableZoom===false&&_this.enablePan===false)return;if(_this.state!==_this.STATE.TOUCH_DOLLY_PAN)return;// is this needed?
_this.handleTouchMoveDollyPan(event);break;default:_this.state=_this.STATE.NONE;}});_defineProperty(_assertThisInitialized(_this),"onTouchEnd",function(event){if(!_this.enabled)return;_this.handleTouchEnd(event);_this.dispatchEvent(_this.endEvent);_this.state=_this.STATE.NONE;});_defineProperty(_assertThisInitialized(_this),"onContextMenu",function(event){if(!_this.enabled)return;event.preventDefault();});_this.object=object;_this.domElement=domElement!==undefined?domElement:document;// Set to false to disable this control
_this.enabled=true;// "target" sets the location of focus, where the object orbits around
_this.target=new Vector3$1();// How far you can dolly in and out ( PerspectiveCamera only )
_this.minDistance=0;_this.maxDistance=Infinity;// How far you can zoom in and out ( OrthographicCamera only )
_this.minZoom=0;_this.maxZoom=Infinity;// How far you can orbit vertically, upper and lower limits.
// Range is 0 to Math.PI radians.
_this.minPolarAngle=0;// radians
_this.maxPolarAngle=Math.PI;// radians
// How far you can orbit horizontally, upper and lower limits.
// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].
_this.minAzimuthAngle=-Infinity;// radians
_this.maxAzimuthAngle=Infinity;// radians
// Set to true to enable damping (inertia)
// If damping is enabled, you must call controls.update() in your animation loop
_this.enableDamping=false;_this.dampingFactor=0.25;// This option actually enables dollying in and out; left as "zoom" for backwards compatibility.
// Set to false to disable zooming
_this.enableZoom=true;_this.zoomSpeed=1.0;// Set to false to disable rotating
_this.enableRotate=true;_this.rotateSpeed=1.0;// Set to false to disable panning
_this.enablePan=true;_this.panSpeed=1.0;_this.screenSpacePanning=false;// if true, pan in screen-space
_this.keyPanSpeed=7.0;// pixels moved per arrow key push
// Set to true to automatically rotate around the target
// If auto-rotate is enabled, you must call controls.update() in your animation loop
_this.autoRotate=false;_this.autoRotateSpeed=2.0;// 30 seconds per round when fps is 60
// Set to false to disable use of the keys
_this.enableKeys=true;// The four arrow keys
_this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};// Mouse buttons
_this.mouseButtons={LEFT:MOUSE.LEFT,MIDDLE:MOUSE.MIDDLE,RIGHT:MOUSE.RIGHT};// for reset
_this.target0=_this.target.clone();_this.position0=_this.object.position.clone();_this.zoom0=_this.object.zoom;_this.changeEvent={type:'change'};_this.startEvent={type:'start'};_this.endEvent={type:'end'};_this.STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY_PAN:4};_this.state=_this.STATE.NONE;_this.EPS=0.000001;// current position in spherical coordinates
_this.spherical=new Spherical();_this.sphericalDelta=new Spherical();_this.scale=1;_this.panOffset=new Vector3$1();_this.zoomChanged=false;_this.rotateStart=new Vector2();_this.rotateEnd=new Vector2();_this.rotateDelta=new Vector2();_this.panStart=new Vector2();_this.panEnd=new Vector2();_this.panDelta=new Vector2();_this.dollyStart=new Vector2();_this.dollyEnd=new Vector2();_this.dollyDelta=new Vector2();_this.offset=new Vector3$1();// so camera.up is the orbit axis
_this.quat=new Quaternion().setFromUnitVectors(_this.object.up,new Vector3$1(0,1,0));_this.quatInverse=_this.quat.clone().inverse();_this.lastPosition=new Vector3$1();_this.lastQuaternion=new Quaternion();return _this;}_createClass(Orbit,[{key:"init",value:function init(){this.domElement.addEventListener('contextmenu',this.onContextMenu,false);this.domElement.addEventListener('mousedown',this.onMouseDown,false);this.domElement.addEventListener('wheel',this.onMouseWheel,false);this.domElement.addEventListener('touchstart',this.onTouchStart,false);this.domElement.addEventListener('touchend',this.onTouchEnd,false);this.domElement.addEventListener('touchmove',this.onTouchMove,false);window.addEventListener('keydown',this.onKeyDown,false);// force an update at start
this.update();}},{key:"getPolarAngle",value:function getPolarAngle(){return this.spherical.phi;}},{key:"getAzimuthalAngle",value:function getAzimuthalAngle(){return spherical.theta;}},{key:"saveState",value:function saveState(){this.target0.copy(this.target);this.position0.copy(this.object.position);this.zoom0=this.object.zoom;}},{key:"reset",value:function reset(){this.target.copy(this.target0);this.object.position.copy(this.position0);this.object.zoom=this.zoom0;this.object.updateProjectionMatrix();this.dispatchEvent(this.changeEvent);this.update();this.state=STATE.NONE;}},{key:"dispose",value:function dispose(){this.domElement.removeEventListener('contextmenu',this.onContextMenu,false);this.domElement.removeEventListener('mousedown',this.onMouseDown,false);this.domElement.removeEventListener('wheel',this.onMouseWheel,false);this.domElement.removeEventListener('touchstart',this.onTouchStart,false);this.domElement.removeEventListener('touchend',this.onTouchEnd,false);this.domElement.removeEventListener('touchmove',this.onTouchMove,false);document.removeEventListener('mousemove',this.onMouseMove,false);document.removeEventListener('mouseup',this.onMouseUp,false);window.removeEventListener('keydown',this.onKeyDown,false);}},{key:"getAutoRotationAngle",value:function getAutoRotationAngle(){return 2*Math.PI/60/60*this.autoRotateSpeed;}},{key:"getZoomScale",value:function getZoomScale(){return Math.pow(0.95,this.zoomSpeed);}}]);return Orbit;}(EventDispatcher);function _createSuper2$H(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Gizmo=/*#__PURE__*/function(_Object3D){_inherits(Gizmo,_Object3D);var _super=_createSuper2$H(Gizmo);function Gizmo(){var _thisSuper,_this;_classCallCheck(this,Gizmo);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"updateMatrixWorld",function(){var space=_this.space;if(_this.mode==='scale')space='local';// scale always oriented to local rotation
var quaternion=space==="local"?_this.worldQuaternion:_this.identityQuaternion;// Show only gizmos for current transform mode
_this.gizmo["translate"].visible=_this.mode==="translate";_this.gizmo["rotate"].visible=_this.mode==="rotate";_this.gizmo["scale"].visible=_this.mode==="scale";_this.helper["translate"].visible=_this.mode==="translate";_this.helper["rotate"].visible=_this.mode==="rotate";_this.helper["scale"].visible=_this.mode==="scale";var handles=[].concat(_toConsumableArray(_this.picker[_this.mode].children),_toConsumableArray(_this.gizmo[_this.mode].children),_toConsumableArray(_this.helper[_this.mode].children));//handles = handles.concat(this.picker[this.mode].children);
//handles = handles.concat(this.gizmo[this.mode].children);
//handles = handles.concat(this.helper[this.mode].children);
for(var i=0;i<handles.length;i++){var handle=handles[i];// hide aligned to camera
handle.visible=true;handle.rotation.set(0,0,0);handle.position.copy(_this.worldPosition);var eyeDistance=_this.worldPosition.distanceTo(_this.cameraPosition);handle.scale.set(1,1,1).multiplyScalar(eyeDistance*_this.size/7);// TODO: simplify helpers and consider decoupling from gizmo
if(handle.tag==='helper'){handle.visible=false;if(handle.name==='AXIS'){handle.position.copy(_this.worldPositionStart);handle.visible=!!_this.axis;if(_this.axis==='X'){_this.tempQuaternion.setFromEuler(_this.tempEuler.set(0,0,0));handle.quaternion.copy(quaternion).multiply(_this.tempQuaternion);if(Math.abs(_this.alignVector.copy(_this.unitX).applyQuaternion(quaternion).dot(_this.eye))>0.9){handle.visible=false;}}if(_this.axis==='Y'){_this.tempQuaternion.setFromEuler(_this.tempEuler.set(0,0,Math.PI/2));handle.quaternion.copy(quaternion).multiply(_this.tempQuaternion);if(Math.abs(_this.alignVector.copy(_this.unitY).applyQuaternion(quaternion).dot(_this.eye))>0.9){handle.visible=false;}}if(_this.axis==='Z'){_this.tempQuaternion.setFromEuler(_this.tempEuler.set(0,Math.PI/2,0));handle.quaternion.copy(quaternion).multiply(_this.tempQuaternion);if(Math.abs(_this.alignVector.copy(_this.unitZ).applyQuaternion(quaternion).dot(_this.eye))>0.9){handle.visible=false;}}if(_this.axis==='XYZE'){_this.tempQuaternion.setFromEuler(_this.tempEuler.set(0,Math.PI/2,0));_this.alignVector.copy(_this.rotationAxis);handle.quaternion.setFromRotationMatrix(_this.lookAtMatrix.lookAt(_this.zeroVector,_this.alignVector,_this.unitY));handle.quaternion.multiply(_this.tempQuaternion);handle.visible=_this.dragging;}if(_this.axis==='E'){handle.visible=false;}}else if(handle.name==='START'){handle.position.copy(_this.worldPositionStart);handle.visible=_this.dragging;}else if(handle.name==='END'){handle.position.copy(_this.worldPosition);handle.visible=_this.dragging;}else if(handle.name==='DELTA'){handle.position.copy(_this.worldPositionStart);handle.quaternion.copy(_this.worldQuaternionStart);_this.tempVector.set(1e-10,1e-10,1e-10).add(_this.worldPositionStart).sub(_this.worldPosition).multiplyScalar(-1);_this.tempVector.applyQuaternion(_this.worldQuaternionStart.clone().inverse());handle.scale.copy(_this.tempVector);handle.visible=_this.dragging;}else{handle.quaternion.copy(quaternion);if(_this.dragging){handle.position.copy(_this.worldPositionStart);}else{handle.position.copy(_this.worldPosition);}if(_this.axis){handle.visible=_this.axis.search(handle.name)!==-1;}}// If updating helper, skip rest of the loop
continue;}// Align handles to current local or world rotation
handle.quaternion.copy(quaternion);if(_this.mode==='translate'||_this.mode==='scale'){// Hide translate and scale axis facing the camera
var AXIS_HIDE_TRESHOLD=0.99;var PLANE_HIDE_TRESHOLD=0.2;var AXIS_FLIP_TRESHOLD=-0.4;if(handle.name==='X'||handle.name==='XYZX'){if(Math.abs(_this.alignVector.copy(_this.unitX).applyQuaternion(quaternion).dot(_this.eye))>AXIS_HIDE_TRESHOLD){handle.scale.set(1e-10,1e-10,1e-10);handle.visible=false;}}if(handle.name==='Y'||handle.name==='XYZY'){if(Math.abs(_this.alignVector.copy(_this.unitY).applyQuaternion(quaternion).dot(_this.eye))>AXIS_HIDE_TRESHOLD){handle.scale.set(1e-10,1e-10,1e-10);handle.visible=false;}}if(handle.name==='Z'||handle.name==='XYZZ'){if(Math.abs(_this.alignVector.copy(_this.unitZ).applyQuaternion(quaternion).dot(_this.eye))>AXIS_HIDE_TRESHOLD){handle.scale.set(1e-10,1e-10,1e-10);handle.visible=false;}}if(handle.name==='XY'){if(Math.abs(_this.alignVector.copy(_this.unitZ).applyQuaternion(quaternion).dot(_this.eye))<PLANE_HIDE_TRESHOLD){handle.scale.set(1e-10,1e-10,1e-10);handle.visible=false;}}if(handle.name==='YZ'){if(Math.abs(_this.alignVector.copy(_this.unitX).applyQuaternion(quaternion).dot(_this.eye))<PLANE_HIDE_TRESHOLD){handle.scale.set(1e-10,1e-10,1e-10);handle.visible=false;}}if(handle.name==='XZ'){if(Math.abs(_this.alignVector.copy(_this.unitY).applyQuaternion(quaternion).dot(_this.eye))<PLANE_HIDE_TRESHOLD){handle.scale.set(1e-10,1e-10,1e-10);handle.visible=false;}}// Flip translate and scale axis ocluded behind another axis
if(handle.name.search('X')!==-1){if(_this.alignVector.copy(_this.unitX).applyQuaternion(quaternion).dot(_this.eye)<AXIS_FLIP_TRESHOLD){if(handle.tag==='fwd'){handle.visible=false;}else{handle.scale.x*=-1;}}else if(handle.tag==='bwd'){handle.visible=false;}}if(handle.name.search('Y')!==-1){if(_this.alignVector.copy(_this.unitY).applyQuaternion(quaternion).dot(_this.eye)<AXIS_FLIP_TRESHOLD){if(handle.tag==='fwd'){handle.visible=false;}else{handle.scale.y*=-1;}}else if(handle.tag==='bwd'){handle.visible=false;}}if(handle.name.search('Z')!==-1){if(_this.alignVector.copy(_this.unitZ).applyQuaternion(quaternion).dot(_this.eye)<AXIS_FLIP_TRESHOLD){if(handle.tag==='fwd'){handle.visible=false;}else{handle.scale.z*=-1;}}else if(handle.tag==='bwd'){handle.visible=false;}}}else if(_this.mode==='rotate'){// Align handles to current local or world rotation
_this.tempQuaternion2.copy(quaternion);_this.alignVector.copy(_this.eye).applyQuaternion(_this.tempQuaternion.copy(quaternion).inverse());if(handle.name.search("E")!==-1){handle.quaternion.setFromRotationMatrix(_this.lookAtMatrix.lookAt(_this.eye,_this.zeroVector,_this.unitY));}if(handle.name==='X'){_this.tempQuaternion.setFromAxisAngle(_this.unitX,Math.atan2(-_this.alignVector.y,_this.alignVector.z));_this.tempQuaternion.multiplyQuaternions(_this.tempQuaternion2,_this.tempQuaternion);handle.quaternion.copy(_this.tempQuaternion);}if(handle.name==='Y'){_this.tempQuaternion.setFromAxisAngle(_this.unitY,Math.atan2(_this.alignVector.x,_this.alignVector.z));_this.tempQuaternion.multiplyQuaternions(_this.tempQuaternion2,_this.tempQuaternion);handle.quaternion.copy(_this.tempQuaternion);}if(handle.name==='Z'){_this.tempQuaternion.setFromAxisAngle(_this.unitZ,Math.atan2(_this.alignVector.y,_this.alignVector.x));_this.tempQuaternion.multiplyQuaternions(_this.tempQuaternion2,_this.tempQuaternion);handle.quaternion.copy(_this.tempQuaternion);}}// Hide disabled axes
handle.visible=handle.visible&&(handle.name.indexOf("X")===-1||_this.showX);handle.visible=handle.visible&&(handle.name.indexOf("Y")===-1||_this.showY);handle.visible=handle.visible&&(handle.name.indexOf("Z")===-1||_this.showZ);handle.visible=handle.visible&&(handle.name.indexOf("E")===-1||_this.showX&&_this.showY&&_this.showZ);// highlight selected axis
handle.material._opacity=handle.material._opacity||handle.material.opacity;handle.material._color=handle.material._color||handle.material.color.clone();handle.material.color.copy(handle.material._color);handle.material.opacity=handle.material._opacity;if(!_this.enabled){handle.material.opacity*=0.5;handle.material.color.lerp(new Color(1,1,1),0.5);}else if(_this.axis){if(handle.name===_this.axis){handle.material.opacity=1.0;handle.material.color.lerp(new Color(1,1,1),0.5);}else if(_this.axis.split('').some(function(a){return handle.name===a;})){handle.material.opacity=1.0;handle.material.color.lerp(new Color(1,1,1),0.5);}else{handle.material.opacity*=0.25;handle.material.color.lerp(new Color(1,1,1),0.5);}}}_get((_thisSuper=_assertThisInitialized(_this),_getPrototypeOf(Gizmo.prototype)),"updateMatrixWorld",_thisSuper).call(_thisSuper);});_this.type='TransformControlsGizmo';// shared materials
_this.gizmoMaterial=new MeshBasicMaterial({depthTest:false,depthWrite:false,transparent:true,side:DoubleSide,fog:false});_this.gizmoLineMaterial=new LineBasicMaterial({depthTest:false,depthWrite:false,transparent:true,linewidth:1,fog:false});_this.arrowGeometry=new CylinderBufferGeometry(0,0.05,0.2,12,1,false);_this.scaleHandleGeometry=new BoxBufferGeometry(0.125,0.125,0.125);_this.lineGeometry=new BufferGeometry();_this.lineGeometry.addAttribute('position',new Float32BufferAttribute([0,0,0,1,0,0],3));// Make unique material for each axis/color
_this.matInvisible=_this.gizmoMaterial.clone();_this.matInvisible.opacity=0.15;_this.matHelper=_this.gizmoMaterial.clone();_this.matHelper.opacity=0.33;_this.matRed=_this.gizmoMaterial.clone();_this.matRed.color.set(0xff0000);_this.matGreen=_this.gizmoMaterial.clone();_this.matGreen.color.set(0x00ff00);_this.matBlue=_this.gizmoMaterial.clone();_this.matBlue.color.set(0x0000ff);_this.matWhiteTransperent=_this.gizmoMaterial.clone();_this.matWhiteTransperent.opacity=0.25;_this.matYellowTransparent=_this.matWhiteTransperent.clone();_this.matYellowTransparent.color.set(0xffff00);_this.matCyanTransparent=_this.matWhiteTransperent.clone();_this.matCyanTransparent.color.set(0x00ffff);_this.matMagentaTransparent=_this.matWhiteTransperent.clone();_this.matMagentaTransparent.color.set(0xff00ff);_this.matYellow=_this.gizmoMaterial.clone();_this.matYellow.color.set(0xffff00);_this.matLineRed=_this.gizmoLineMaterial.clone();_this.matLineRed.color.set(0xff0000);_this.matLineGreen=_this.gizmoLineMaterial.clone();_this.matLineGreen.color.set(0x00ff00);_this.matLineBlue=_this.gizmoLineMaterial.clone();_this.matLineBlue.color.set(0x0000ff);_this.matLineCyan=_this.gizmoLineMaterial.clone();_this.matLineCyan.color.set(0x00ffff);_this.matLineMagenta=_this.gizmoLineMaterial.clone();_this.matLineMagenta.color.set(0xff00ff);_this.matLineYellow=_this.gizmoLineMaterial.clone();_this.matLineYellow.color.set(0xffff00);_this.matLineGray=_this.gizmoLineMaterial.clone();_this.matLineGray.color.set(0x787878);_this.matLineYellowTransparent=_this.matLineYellow.clone();_this.matLineYellowTransparent.opacity=0.25;_this.tempVector=new Vector3$1(0,0,0);_this.tempEuler=new Euler();_this.alignVector=new Vector3$1(0,1,0);_this.zeroVector=new Vector3$1(0,0,0);_this.lookAtMatrix=new Matrix4();_this.tempQuaternion=new Quaternion();_this.tempQuaternion2=new Quaternion();_this.identityQuaternion=new Quaternion();_this.unitX=new Vector3$1(1,0,0);_this.unitY=new Vector3$1(0,1,0);_this.unitZ=new Vector3$1(0,0,1);// Gizmo creation
_this.gizmo={};_this.picker={};_this.helper={};_this.add(_this.gizmo["translate"]=_this.setupGizmo(_this.getGizmoTranslate()));_this.add(_this.gizmo["rotate"]=_this.setupGizmo(_this.getGizmoRotate()));_this.add(_this.gizmo["scale"]=_this.setupGizmo(_this.getGizmoScale()));_this.add(_this.picker["translate"]=_this.setupGizmo(_this.getPickerTranslate()));_this.add(_this.picker["rotate"]=_this.setupGizmo(_this.getPickerRotate()));_this.add(_this.picker["scale"]=_this.setupGizmo(_this.getPickerScale()));_this.add(_this.helper["translate"]=_this.setupGizmo(_this.getHelperTranslate()));_this.add(_this.helper["rotate"]=_this.setupGizmo(_this.getHelperRotate()));_this.add(_this.helper["scale"]=_this.setupGizmo(_this.getHelperScale()));// Pickers should be hidden always
_this.picker["translate"].visible=false;_this.picker["rotate"].visible=false;_this.picker["scale"].visible=false;_this.isTransformControlsGizmo=true;return _this;}_createClass(Gizmo,[{key:"createCircleGeometry",value:function createCircleGeometry(radius,arc){var geometry=new BufferGeometry();var vertices=[];for(var i=0;i<=64*arc;++i){vertices.push(0,Math.cos(i/32*Math.PI)*radius,Math.sin(i/32*Math.PI)*radius);}geometry.addAttribute('position',new Float32BufferAttribute(vertices,3));return geometry;}},{key:"createTranslateHelperGeometry",value:function createTranslateHelperGeometry(radius,arc){var geometry=new BufferGeometry();geometry.addAttribute('position',new Float32BufferAttribute([0,0,0,1,1,1],3));return geometry;}},{key:"getGizmoTranslate",value:function getGizmoTranslate(){return{X:[[new Mesh(this.arrowGeometry,this.matRed),[1,0,0],[0,0,-Math.PI/2],null,'fwd'],[new Mesh(this.arrowGeometry,this.matRed),[1,0,0],[0,0,Math.PI/2],null,'bwd'],[new Line(this.lineGeometry,this.matLineRed)]],Y:[[new Mesh(this.arrowGeometry,this.matGreen),[0,1,0],null,null,'fwd'],[new Mesh(this.arrowGeometry,this.matGreen),[0,1,0],[Math.PI,0,0],null,'bwd'],[new Line(this.lineGeometry,this.matLineGreen),null,[0,0,Math.PI/2]]],Z:[[new Mesh(this.arrowGeometry,this.matBlue),[0,0,1],[Math.PI/2,0,0],null,'fwd'],[new Mesh(this.arrowGeometry,this.matBlue),[0,0,1],[-Math.PI/2,0,0],null,'bwd'],[new Line(this.lineGeometry,this.matLineBlue),null,[0,-Math.PI/2,0]]],XYZ:[[new Mesh(new OctahedronBufferGeometry(0.1,0),this.matWhiteTransperent),[0,0,0],[0,0,0]]],XY:[[new Mesh(new PlaneBufferGeometry(0.295,0.295),this.matYellowTransparent),[0.15,0.15,0]],[new Line(this.lineGeometry,this.matLineYellow),[0.18,0.3,0],null,[0.125,1,1]],[new Line(this.lineGeometry,this.matLineYellow),[0.3,0.18,0],[0,0,Math.PI/2],[0.125,1,1]]],YZ:[[new Mesh(new PlaneBufferGeometry(0.295,0.295),this.matCyanTransparent),[0,0.15,0.15],[0,Math.PI/2,0]],[new Line(this.lineGeometry,this.matLineCyan),[0,0.18,0.3],[0,0,Math.PI/2],[0.125,1,1]],[new Line(this.lineGeometry,this.matLineCyan),[0,0.3,0.18],[0,-Math.PI/2,0],[0.125,1,1]]],XZ:[[new Mesh(new PlaneBufferGeometry(0.295,0.295),this.matMagentaTransparent),[0.15,0,0.15],[-Math.PI/2,0,0]],[new Line(this.lineGeometry,this.matLineMagenta),[0.18,0,0.3],null,[0.125,1,1]],[new Line(this.lineGeometry,this.matLineMagenta),[0.3,0,0.18],[0,-Math.PI/2,0],[0.125,1,1]]]};}},{key:"getPickerTranslate",value:function getPickerTranslate(){return{X:[[new Mesh(new CylinderBufferGeometry(0.2,0,1,4,1,false),this.matInvisible),[0.6,0,0],[0,0,-Math.PI/2]]],Y:[[new Mesh(new CylinderBufferGeometry(0.2,0,1,4,1,false),this.matInvisible),[0,0.6,0]]],Z:[[new Mesh(new CylinderBufferGeometry(0.2,0,1,4,1,false),this.matInvisible),[0,0,0.6],[Math.PI/2,0,0]]],XYZ:[[new Mesh(new OctahedronBufferGeometry(0.2,0),this.matInvisible)]],XY:[[new Mesh(new PlaneBufferGeometry(0.4,0.4),this.matInvisible),[0.2,0.2,0]]],YZ:[[new Mesh(new PlaneBufferGeometry(0.4,0.4),this.matInvisible),[0,0.2,0.2],[0,Math.PI/2,0]]],XZ:[[new Mesh(new PlaneBufferGeometry(0.4,0.4),this.matInvisible),[0.2,0,0.2],[-Math.PI/2,0,0]]]};}},{key:"getHelperTranslate",value:function getHelperTranslate(){return{START:[[new Mesh(new OctahedronBufferGeometry(0.01,2),this.matHelper),null,null,null,'helper']],END:[[new Mesh(new OctahedronBufferGeometry(0.01,2),this.matHelper),null,null,null,'helper']],DELTA:[[new Line(this.createTranslateHelperGeometry(),this.matHelper),null,null,null,'helper']],X:[[new Line(this.lineGeometry,this.matHelper.clone()),[-1e3,0,0],null,[1e6,1,1],'helper']],Y:[[new Line(this.lineGeometry,this.matHelper.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],'helper']],Z:[[new Line(this.lineGeometry,this.matHelper.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],'helper']]};}},{key:"getGizmoRotate",value:function getGizmoRotate(){return{X:[[new Line(this.createCircleGeometry(1,0.5),this.matLineRed)],[new Mesh(new OctahedronBufferGeometry(0.04,0),this.matRed),[0,0,0.99],null,[1,3,1]]],Y:[[new Line(this.createCircleGeometry(1,0.5),this.matLineGreen),null,[0,0,-Math.PI/2]],[new Mesh(new OctahedronBufferGeometry(0.04,0),this.matGreen),[0,0,0.99],null,[3,1,1]]],Z:[[new Line(this.createCircleGeometry(1,0.5),this.matLineBlue),null,[0,Math.PI/2,0]],[new Mesh(new OctahedronBufferGeometry(0.04,0),this.matBlue),[0.99,0,0],null,[1,3,1]]],E:[[new Line(this.createCircleGeometry(1.25,1),this.matLineYellowTransparent),null,[0,Math.PI/2,0]],[new Mesh(new CylinderBufferGeometry(0.03,0,0.15,4,1,false),this.matLineYellowTransparent),[1.17,0,0],[0,0,-Math.PI/2],[1,1,0.001]],[new Mesh(new CylinderBufferGeometry(0.03,0,0.15,4,1,false),this.matLineYellowTransparent),[-1.17,0,0],[0,0,Math.PI/2],[1,1,0.001]],[new Mesh(new CylinderBufferGeometry(0.03,0,0.15,4,1,false),this.matLineYellowTransparent),[0,-1.17,0],[Math.PI,0,0],[1,1,0.001]],[new Mesh(new CylinderBufferGeometry(0.03,0,0.15,4,1,false),this.matLineYellowTransparent),[0,1.17,0],[0,0,0],[1,1,0.001]]],XYZE:[[new Line(this.createCircleGeometry(1,1),this.matLineGray),null,[0,Math.PI/2,0]]]};}},{key:"getHelperRotate",value:function getHelperRotate(){return{AXIS:[[new Line(this.lineGeometry,this.matHelper.clone()),[-1e3,0,0],null,[1e6,1,1],'helper']]};}},{key:"getPickerRotate",value:function getPickerRotate(){return{X:[[new Mesh(new TorusBufferGeometry(1,0.1,4,24),this.matInvisible),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new Mesh(new TorusBufferGeometry(1,0.1,4,24),this.matInvisible),[0,0,0],[Math.PI/2,0,0]]],Z:[[new Mesh(new TorusBufferGeometry(1,0.1,4,24),this.matInvisible),[0,0,0],[0,0,-Math.PI/2]]],E:[[new Mesh(new TorusBufferGeometry(1.25,0.1,2,24),this.matInvisible)]],XYZE:[[new Mesh(new SphereBufferGeometry(0.7,10,8),this.matInvisible)]]};}},{key:"getGizmoScale",value:function getGizmoScale(){return{X:[[new Mesh(this.scaleHandleGeometry,this.matRed),[0.8,0,0],[0,0,-Math.PI/2]],[new Line(this.lineGeometry,this.matLineRed),null,null,[0.8,1,1]]],Y:[[new Mesh(this.scaleHandleGeometry,this.matGreen),[0,0.8,0]],[new Line(this.lineGeometry,this.matLineGreen),null,[0,0,Math.PI/2],[0.8,1,1]]],Z:[[new Mesh(this.scaleHandleGeometry,this.matBlue),[0,0,0.8],[Math.PI/2,0,0]],[new Line(this.lineGeometry,this.matLineBlue),null,[0,-Math.PI/2,0],[0.8,1,1]]],XY:[[new Mesh(this.scaleHandleGeometry,this.matYellowTransparent),[0.85,0.85,0],null,[2,2,0.2]],[new Line(this.lineGeometry,this.matLineYellow),[0.855,0.98,0],null,[0.125,1,1]],[new Line(this.lineGeometry,this.matLineYellow),[0.98,0.855,0],[0,0,Math.PI/2],[0.125,1,1]]],YZ:[[new Mesh(this.scaleHandleGeometry,this.matCyanTransparent),[0,0.85,0.85],null,[0.2,2,2]],[new Line(this.lineGeometry,this.matLineCyan),[0,0.855,0.98],[0,0,Math.PI/2],[0.125,1,1]],[new Line(this.lineGeometry,this.matLineCyan),[0,0.98,0.855],[0,-Math.PI/2,0],[0.125,1,1]]],XZ:[[new Mesh(this.scaleHandleGeometry,this.matMagentaTransparent),[0.85,0,0.85],null,[2,0.2,2]],[new Line(this.lineGeometry,this.matLineMagenta),[0.855,0,0.98],null,[0.125,1,1]],[new Line(this.lineGeometry,this.matLineMagenta),[0.98,0,0.855],[0,-Math.PI/2,0],[0.125,1,1]]],XYZX:[[new Mesh(new BoxBufferGeometry(0.125,0.125,0.125),this.matWhiteTransperent),[1.1,0,0]]],XYZY:[[new Mesh(new BoxBufferGeometry(0.125,0.125,0.125),this.matWhiteTransperent),[0,1.1,0]]],XYZZ:[[new Mesh(new BoxBufferGeometry(0.125,0.125,0.125),this.matWhiteTransperent),[0,0,1.1]]]};}},{key:"getPickerScale",value:function getPickerScale(){return{X:[[new Mesh(new CylinderBufferGeometry(0.2,0,0.8,4,1,false),this.matInvisible),[0.5,0,0],[0,0,-Math.PI/2]]],Y:[[new Mesh(new CylinderBufferGeometry(0.2,0,0.8,4,1,false),this.matInvisible),[0,0.5,0]]],Z:[[new Mesh(new CylinderBufferGeometry(0.2,0,0.8,4,1,false),this.matInvisible),[0,0,0.5],[Math.PI/2,0,0]]],XY:[[new Mesh(this.scaleHandleGeometry,this.matInvisible),[0.85,0.85,0],null,[3,3,0.2]]],YZ:[[new Mesh(this.scaleHandleGeometry,this.matInvisible),[0,0.85,0.85],null,[0.2,3,3]]],XZ:[[new Mesh(this.scaleHandleGeometry,this.matInvisible),[0.85,0,0.85],null,[3,0.2,3]]],XYZX:[[new Mesh(new BoxBufferGeometry(0.2,0.2,0.2),this.matInvisible),[1.1,0,0]]],XYZY:[[new Mesh(new BoxBufferGeometry(0.2,0.2,0.2),this.matInvisible),[0,1.1,0]]],XYZZ:[[new Mesh(new BoxBufferGeometry(0.2,0.2,0.2),this.matInvisible),[0,0,1.1]]]};}},{key:"getHelperScale",value:function getHelperScale(){return{X:[[new Line(this.lineGeometry,this.matHelper.clone()),[-1e3,0,0],null,[1e6,1,1],'helper']],Y:[[new Line(this.lineGeometry,this.matHelper.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],'helper']],Z:[[new Line(this.lineGeometry,this.matHelper.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],'helper']]};}},{key:"setupGizmo",value:function setupGizmo(gizmoMap){var gizmo=new Object3D();for(var name in gizmoMap){for(var i=gizmoMap[name].length;i--;){var object=gizmoMap[name][i][0].clone();var position=gizmoMap[name][i][1];var rotation=gizmoMap[name][i][2];var scale=gizmoMap[name][i][3];var tag=gizmoMap[name][i][4];// name and tag properties are essential for picking and updating logic.
object.name=name;object.tag=tag;if(position){object.position.set(position[0],position[1],position[2]);}if(rotation){object.rotation.set(rotation[0],rotation[1],rotation[2]);}if(scale){object.scale.set(scale[0],scale[1],scale[2]);}object.updateMatrix();var tempGeometry=object.geometry.clone();tempGeometry.applyMatrix(object.matrix);object.geometry=tempGeometry;object.position.set(0,0,0);object.rotation.set(0,0,0);object.scale.set(1,1,1);gizmo.add(object);}}return gizmo;}}]);return Gizmo;}(Object3D);function _createSuper2$I(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var TransformControlsPlane=/*#__PURE__*/function(_Mesh){_inherits(TransformControlsPlane,_Mesh);var _super=_createSuper2$I(TransformControlsPlane);function TransformControlsPlane(){var _this;_classCallCheck(this,TransformControlsPlane);_this=_super.call(this,new PlaneBufferGeometry(100000,100000,2,2),new MeshBasicMaterial({visible:false,wireframe:true,side:DoubleSide,transparent:true,opacity:0.1}));_this.type='TransformControlsPlane';_this.unitX=new Vector3$1(1,0,0);_this.unitY=new Vector3$1(0,1,0);_this.unitZ=new Vector3$1(0,0,1);_this.tempVector=new Vector3$1();_this.dirVector=new Vector3$1();_this.alignVector=new Vector3$1();_this.tempMatrix=new Matrix4();_this.identityQuaternion=new Quaternion();_this.isTransformControlsPlane=true;return _this;}_createClass(TransformControlsPlane,[{key:"updateMatrixWorld",value:function updateMatrixWorld(){var space=this.space;this.position.copy(this.worldPosition);if(this.mode==='scale')space='local';// scale always oriented to local rotation
this.unitX.set(1,0,0).applyQuaternion(space==="local"?this.worldQuaternion:this.identityQuaternion);this.unitY.set(0,1,0).applyQuaternion(space==="local"?this.worldQuaternion:this.identityQuaternion);this.unitZ.set(0,0,1).applyQuaternion(space==="local"?this.worldQuaternion:this.identityQuaternion);// Align the plane for current transform mode, axis and space.
this.alignVector.copy(this.unitY);switch(this.mode){case'translate':case'scale':switch(this.axis){case'X':this.alignVector.copy(this.eye).cross(this.unitX);this.dirVector.copy(this.unitX).cross(this.alignVector);break;case'Y':this.alignVector.copy(this.eye).cross(this.unitY);this.dirVector.copy(this.unitY).cross(this.alignVector);break;case'Z':this.alignVector.copy(this.eye).cross(this.unitZ);this.dirVector.copy(this.unitZ).cross(this.alignVector);break;case'XY':this.dirVector.copy(this.unitZ);break;case'YZ':this.dirVector.copy(this.unitX);break;case'XZ':this.alignVector.copy(this.unitZ);this.dirVector.copy(this.unitY);break;case'XYZ':case'E':this.dirVector.set(0,0,0);break;}break;case'rotate':default:// special case for rotate
this.dirVector.set(0,0,0);}if(this.dirVector.length()===0){// If in rotate mode, make the plane parallel to camera
this.quaternion.copy(this.cameraQuaternion);}else{this.tempMatrix.lookAt(this.tempVector.set(0,0,0),this.dirVector,this.alignVector);this.quaternion.setFromRotationMatrix(this.tempMatrix);}_get(_getPrototypeOf(TransformControlsPlane.prototype),"updateMatrixWorld",this).call(this);}}]);return TransformControlsPlane;}(Mesh);function _createSuper2$J(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var TransformControls=/*#__PURE__*/function(_Object3D){_inherits(TransformControls,_Object3D);var _super=_createSuper2$J(TransformControls);function TransformControls(camera,domElement){var _this;_classCallCheck(this,TransformControls);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"pointerHover",function(pointer){if(_this.object===undefined||_this.dragging===true||pointer.button!==undefined&&pointer.button!==0)return;_this.ray.setFromCamera(pointer,_this.camera);var intersect=_this.ray.intersectObjects(_this.gizmo.picker[_this.mode].children,true)[0]||false;if(intersect){_this.axis=intersect.object.name;}else{_this.axis=null;}});_defineProperty(_assertThisInitialized(_this),"pointerDown",function(pointer){if(_this.object===undefined||_this.dragging===true||pointer.button!==undefined&&pointer.button!==0)return;if((pointer.button===0||pointer.button===undefined)&&_this.axis!==null){_this.ray.setFromCamera(pointer,_this.camera);var planeIntersect=_this.ray.intersectObjects([_this.plane],true)[0]||false;if(planeIntersect){var space=_this.space;if(_this.mode==='scale'){space='local';}else if(_this.axis==='E'||_this.axis==='XYZE'||_this.axis==='XYZ'){space='world';}if(space==='local'&&_this.mode==='rotate'){var snap=_this.rotationSnap;if(_this.axis==='X'&&snap)_this.object.rotation.x=Math.round(_this.object.rotation.x/snap)*snap;if(_this.axis==='Y'&&snap)_this.object.rotation.y=Math.round(_this.object.rotation.y/snap)*snap;if(_this.axis==='Z'&&snap)_this.object.rotation.z=Math.round(_this.object.rotation.z/snap)*snap;}_this.object.updateMatrixWorld();_this.object.parent.updateMatrixWorld();_this._positionStart.copy(_this.object.position);_this._quaternionStart.copy(_this.object.quaternion);_this._scaleStart.copy(_this.object.scale);_this.object.matrixWorld.decompose(_this.worldPositionStart,_this.worldQuaternionStart,_this.worldScaleStart);_this.pointStart.copy(planeIntersect.point).sub(_this.worldPositionStart);if(space==='local'){_this.pointStart.applyQuaternion(_this.worldQuaternionStart.clone().inverse());}}_this.dragging=true;_this.mouseDownEvent.mode=_this.mode;_this.dispatchEvent(_this.mouseDownEvent);}});_defineProperty(_assertThisInitialized(_this),"pointerMove",function(pointer){var axis=_this.axis;var mode=_this.mode;var object=_this.object;var space=_this.space;if(mode==='scale'){space='local';}else if(axis==='E'||axis==='XYZE'||axis==='XYZ'){space='world';}if(object===undefined||axis===null||_this.dragging===false||pointer.button!==undefined&&pointer.button!==0)return;_this.ray.setFromCamera(pointer,_this.camera);var planeIntersect=_this.ray.intersectObjects([_this.plane],true)[0]||false;if(planeIntersect===false)return;_this.pointEnd.copy(planeIntersect.point).sub(_this.worldPositionStart);if(space==='local')_this.pointEnd.applyQuaternion(_this.worldQuaternionStart.clone().inverse());if(mode==='translate'){if(axis.search('X')===-1){_this.pointEnd.x=_this.pointStart.x;}if(axis.search('Y')===-1){_this.pointEnd.y=_this.pointStart.y;}if(axis.search('Z')===-1){_this.pointEnd.z=_this.pointStart.z;}// Apply translate
if(space==='local'){object.position.copy(_this.pointEnd).sub(_this.pointStart).applyQuaternion(_this._quaternionStart);}else{object.position.copy(_this.pointEnd).sub(_this.pointStart);}object.position.add(_this._positionStart);// Apply translation snap
if(_this.translationSnap){if(space==='local'){object.position.applyQuaternion(_this._tempQuaternion.copy(_this._quaternionStart).inverse());if(axis.search('X')!==-1){object.position.x=Math.round(object.position.x/_this.translationSnap)*_this.translationSnap;}if(axis.search('Y')!==-1){object.position.y=Math.round(object.position.y/_this.translationSnap)*_this.translationSnap;}if(axis.search('Z')!==-1){object.position.z=Math.round(object.position.z/_this.translationSnap)*_this.translationSnap;}object.position.applyQuaternion(_this._quaternionStart);}if(space==='world'){if(object.parent){object.position.add(_this._tempVector.setFromMatrixPosition(object.parent.matrixWorld));}if(axis.search('X')!==-1){object.position.x=Math.round(object.position.x/_this.translationSnap)*_this.translationSnap;}if(axis.search('Y')!==-1){object.position.y=Math.round(object.position.y/_this.translationSnap)*_this.translationSnap;}if(axis.search('Z')!==-1){object.position.z=Math.round(object.position.z/_this.translationSnap)*_this.translationSnap;}if(object.parent){object.position.sub(_this._tempVector.setFromMatrixPosition(object.parent.matrixWorld));}}}}else if(mode==='scale'){if(axis.search('XYZ')!==-1){var d=_this.pointEnd.length()/_this.pointStart.length();if(_this.pointEnd.dot(_this.pointStart)<0)d*=-1;_this._tempVector.set(d,d,d);}else{_this._tempVector.copy(_this.pointEnd).divide(_this.pointStart);if(axis.search('X')===-1){_this._tempVector.x=1;}if(axis.search('Y')===-1){_this._tempVector.y=1;}if(axis.search('Z')===-1){_this._tempVector.z=1;}}// Apply scale
object.scale.copy(_this._scaleStart).multiply(_this._tempVector);}else if(mode==='rotate'){var ROTATION_SPEED=20/_this.worldPosition.distanceTo(_this._tempVector.setFromMatrixPosition(_this.camera.matrixWorld));var quaternion=_this.space==="local"?_this.worldQuaternion:_this._identityQuaternion;var unit=_unit[axis];if(axis==='E'){_this._tempVector.copy(_this.pointEnd).cross(_this.pointStart);_this.rotationAxis.copy(_this.eye);_this.rotationAngle=_this.pointEnd.angleTo(_this.pointStart)*(_this._tempVector.dot(_this.eye)<0?1:-1);}else if(axis==='XYZE'){_this._tempVector.copy(_this.pointEnd).sub(_this.pointStart).cross(_this.eye).normalize();_this.rotationAxis.copy(_this._tempVector);_this.rotationAngle=_this.pointEnd.sub(_this.pointStart).dot(_this._tempVector.cross(_this.eye))*ROTATION_SPEED;}else if(axis==='X'||axis==='Y'||axis==='Z'){_this._alignVector.copy(unit).applyQuaternion(quaternion);_this.rotationAxis.copy(unit);_this._tempVector=unit.clone();_this._tempVector2=_this.pointEnd.clone().sub(_this.pointStart);if(space==='local'){_this._tempVector.applyQuaternion(quaternion);_this._tempVector2.applyQuaternion(_this.worldQuaternionStart);}_this.rotationAngle=_this._tempVector2.dot(_this._tempVector.cross(_this.eye).normalize())*ROTATION_SPEED;}// Apply rotation snap
if(_this.rotationSnap)_this.rotationAngle=Math.round(_this.rotationAngle/_this.rotationSnap)*_this.rotationSnap;// Apply rotate
if(space==='local'){object.quaternion.copy(_this._quaternionStart);object.quaternion.multiply(_this._tempQuaternion.setFromAxisAngle(_this.rotationAxis,_this.rotationAngle));}else{object.quaternion.copy(_this._tempQuaternion.setFromAxisAngle(_this.rotationAxis,_this.rotationAngle));object.quaternion.multiply(_this._quaternionStart);}}_this.dispatchEvent(_this.changeEvent);_this.dispatchEvent(_this.objectChangeEvent);});_defineProperty(_assertThisInitialized(_this),"pointerMove",function(pointer){var axis=_this.axis;var mode=_this.mode;var object=_this.object;var space=_this.space;if(mode==='scale'){space='local';}else if(axis==='E'||axis==='XYZE'||axis==='XYZ'){space='world';}if(object===undefined||axis===null||_this.dragging===false||pointer.button!==undefined&&pointer.button!==0)return;_this.ray.setFromCamera(pointer,_this.camera);var planeIntersect=_this.ray.intersectObjects([_this.plane],true)[0]||false;if(planeIntersect===false)return;_this.pointEnd.copy(planeIntersect.point).sub(_this.worldPositionStart);if(space==='local')_this.pointEnd.applyQuaternion(_this.worldQuaternionStart.clone().inverse());if(mode==='translate'){if(axis.search('X')===-1){_this.pointEnd.x=_this.pointStart.x;}if(axis.search('Y')===-1){_this.pointEnd.y=_this.pointStart.y;}if(axis.search('Z')===-1){_this.pointEnd.z=_this.pointStart.z;}// Apply translate
if(space==='local'){object.position.copy(_this.pointEnd).sub(_this.pointStart).applyQuaternion(_this._quaternionStart);}else{object.position.copy(_this.pointEnd).sub(_this.pointStart);}object.position.add(_this._positionStart);// Apply translation snap
if(_this.translationSnap){if(space==='local'){object.position.applyQuaternion(_this._tempQuaternion.copy(_this._quaternionStart).inverse());if(axis.search('X')!==-1){object.position.x=Math.round(object.position.x/_this.translationSnap)*_this.translationSnap;}if(axis.search('Y')!==-1){object.position.y=Math.round(object.position.y/_this.translationSnap)*_this.translationSnap;}if(axis.search('Z')!==-1){object.position.z=Math.round(object.position.z/_this.translationSnap)*_this.translationSnap;}object.position.applyQuaternion(_this._quaternionStart);}if(space==='world'){if(object.parent){object.position.add(_this._tempVector.setFromMatrixPosition(object.parent.matrixWorld));}if(axis.search('X')!==-1){object.position.x=Math.round(object.position.x/_this.translationSnap)*_this.translationSnap;}if(axis.search('Y')!==-1){object.position.y=Math.round(object.position.y/_this.translationSnap)*_this.translationSnap;}if(axis.search('Z')!==-1){object.position.z=Math.round(object.position.z/_this.translationSnap)*_this.translationSnap;}if(object.parent){object.position.sub(_this._tempVector.setFromMatrixPosition(object.parent.matrixWorld));}}}}else if(mode==='scale'){if(axis.search('XYZ')!==-1){var d=_this.pointEnd.length()/_this.pointStart.length();if(_this.pointEnd.dot(_this.pointStart)<0)d*=-1;_this._tempVector.set(d,d,d);}else{_this._tempVector.copy(_this.pointEnd).divide(_this.pointStart);if(axis.search('X')===-1){_this._tempVector.x=1;}if(axis.search('Y')===-1){_this._tempVector.y=1;}if(axis.search('Z')===-1){_this._tempVector.z=1;}}// Apply scale
object.scale.copy(_this._scaleStart).multiply(_this._tempVector);}else if(mode==='rotate'){var ROTATION_SPEED=20/_this.worldPosition.distanceTo(_this._tempVector.setFromMatrixPosition(_this.camera.matrixWorld));var quaternion=_this.space==="local"?_this.worldQuaternion:_this._identityQuaternion;var unit=_this._unit[axis];if(axis==='E'){_this._tempVector.copy(_this.pointEnd).cross(_this.pointStart);_this.rotationAxis.copy(_this.eye);_this.rotationAngle=_this.pointEnd.angleTo(_this.pointStart)*(_this._tempVector.dot(_this.eye)<0?1:-1);}else if(axis==='XYZE'){_this._tempVector.copy(_this.pointEnd).sub(_this.pointStart).cross(_this.eye).normalize();_this.rotationAxis.copy(_this._tempVector);_this.rotationAngle=_this.pointEnd.sub(_this.pointStart).dot(_this._tempVector.cross(_this.eye))*ROTATION_SPEED;}else if(axis==='X'||axis==='Y'||axis==='Z'){_this._alignVector.copy(unit).applyQuaternion(quaternion);_this.rotationAxis.copy(unit);_this._tempVector=unit.clone();_this._tempVector2=_this.pointEnd.clone().sub(_this.pointStart);if(space==='local'){_this._tempVector.applyQuaternion(quaternion);_this._tempVector2.applyQuaternion(_this.worldQuaternionStart);}_this.rotationAngle=_this._tempVector2.dot(_this._tempVector.cross(_this.eye).normalize())*ROTATION_SPEED;}// Apply this.rotation snap
if(_this.rotationSnap)_this.rotationAngle=Math.round(_this.rotationAngle/_this.this.rotationSnap)*_this.this.rotationSnap;// Apply rotate
if(space==='local'){object.quaternion.copy(_this._quaternionStart);object.quaternion.multiply(_this._tempQuaternion.setFromAxisAngle(_this.rotationAxis,_this.rotationAngle));}else{object.quaternion.copy(_this._tempQuaternion.setFromAxisAngle(_this.rotationAxis,_this.rotationAngle));object.quaternion.multiply(_this._quaternionStart);}}_this.dispatchEvent(_this.changeEvent);_this.dispatchEvent(_this.objectChangeEvent);});_defineProperty(_assertThisInitialized(_this),"pointerUp",function(pointer){if(pointer.button!==undefined&&pointer.button!==0)return;if(_this.dragging&&_this.axis!==null){_this.mouseUpEvent.mode=_this.mode;_this.dispatchEvent(_this.mouseUpEvent);}_this.dragging=false;if(pointer.button===undefined)_this.axis=null;});_defineProperty(_assertThisInitialized(_this),"getPointer",function(event){var pointer=event.changedTouches?event.changedTouches[0]:event;var rect=_this.domElement.getBoundingClientRect();return{x:(pointer.clientX-rect.left)/rect.width*2-1,y:-(pointer.clientY-rect.top)/rect.height*2+1,button:event.button};});_defineProperty(_assertThisInitialized(_this),"onContext",function(event){event.preventDefault();});_defineProperty(_assertThisInitialized(_this),"onPointerHover",function(event){if(!_this.enabled)return;_this.pointerHover(_this.getPointer(event));});_defineProperty(_assertThisInitialized(_this),"onPointerDown",function(event){if(!_this.enabled)return;event.preventDefault();document.addEventListener("mousemove",_this.onPointerMove,false);_this.pointerHover(_this.getPointer(event));_this.pointerDown(_this.getPointer(event));});_defineProperty(_assertThisInitialized(_this),"onPointerMove",function(event){if(!_this.enabled)return;event.preventDefault();_this.pointerMove(_this.getPointer(event));});_defineProperty(_assertThisInitialized(_this),"onPointerUp",function(event){if(!_this.enabled)return;event.preventDefault();// Prevent MouseEvent on mobile
document.removeEventListener("mousemove",_this.onPointerMove,false);_this.pointerUp(_this.getPointer(event));});_this.domElement=domElement!==undefined?domElement:document;_this.visible=false;_this.gizmo=new Gizmo();_this.plane=new TransformControlsPlane();_this.add(_this.gizmo);_this.add(_this.plane);_this.changeEvent={type:"change"};_this.mouseDownEvent={type:"mouseDown"};_this.mouseUpEvent={type:"mouseUp",mode:_this.mode};_this.objectChangeEvent={type:"objectChange"};_this._camera=camera;_this._object=undefined;_this._enabled=true;_this._axis=null;_this.setAndDispatch('axis',null);_this._mode='translate';_this.setAndDispatch('mode','translate');_this._translationSnap=null;_this._rotationSnap=null;_this._space='world';_this.setAndDispatch('space','world');_this._size=1;_this.setAndDispatch('size',1);_this._dragging=false;_this.setAndDispatch('dragging',false);_this._showX=true;_this._showY=true;_this._showZ=true;_this.setAndDispatch('showX',true);_this.setAndDispatch('showY',true);_this.setAndDispatch('showZ',true);_this.ray=new Raycaster();_this._tempVector=new Vector3$1();_this._tempVector2=new Vector3$1();_this._tempQuaternion=new Quaternion();_this._unit={X:new Vector3$1(1,0,0),Y:new Vector3$1(0,1,0),Z:new Vector3$1(0,0,1)};_this._identityQuaternion=new Quaternion();_this._alignVector=new Vector3$1();_this._pointStart=new Vector3$1();_this._pointEnd=new Vector3$1();_this._rotationAxis=new Vector3$1();_this.setAndDispatch('rotationAxis',new Vector3$1());_this._rotationAngle=0;_this._cameraPosition=new Vector3$1();_this.setAndDispatch('cameraPosition',new Vector3$1());_this._cameraQuaternion=new Quaternion();_this.setAndDispatch('cameraQuaternion',new Quaternion());_this.cameraScale=new Vector3$1();_this.parentPosition=new Vector3$1();_this._parentQuaternion=new Quaternion();_this.parentScale=new Vector3$1();_this._worldPositionStart=new Vector3$1();_this.setAndDispatch('worldPositionStart',new Vector3$1());_this._worldQuaternionStart=new Quaternion();_this.setAndDispatch('worldQuaternionStart',new Quaternion());_this.worldScaleStart=new Vector3$1();_this._worldPosition=new Vector3$1();_this.setAndDispatch('worldPosition',new Vector3$1());_this._worldQuaternion=new Quaternion();_this.setAndDispatch('worldQuaternion',new Quaternion());_this.worldScale=new Vector3$1();_this._eye=new Vector3$1();_this.setAndDispatch('eye',new Vector3$1());_this._positionStart=new Vector3$1();_this._quaternionStart=new Quaternion();_this._scaleStart=new Vector3$1();_this.isTransformControls=true;Scene$2.add(_assertThisInitialized(_this),_assertThisInitialized(_this),false);return _this;}_createClass(TransformControls,[{key:"render",value:function render(){}},{key:"update",value:function update(){}},{key:"setAndDispatch",value:function setAndDispatch(fieldName,value){this["_".concat(fieldName)]=value;this.gizmo[fieldName]=value;this.plane[fieldName]=value;this.dispatchEvent({type:fieldName+"-changed",value:value});this.dispatchEvent(this.changeEvent);}},{key:"getPrivateField",value:function getPrivateField(fieldName){return this["_".concat(fieldName)];}},{key:"enabled",value:function enabled(value){this.setAndDispatch('enabled',value);}},{key:"init",value:function init(){this.domElement.addEventListener("mousedown",this.onPointerDown,false);this.domElement.addEventListener("touchstart",this.onPointerDown,false);this.domElement.addEventListener("mousemove",this.onPointerHover,false);this.domElement.addEventListener("touchmove",this.onPointerHover,false);this.domElement.addEventListener("touchmove",this.onPointerMove,false);document.addEventListener("mouseup",this.onPointerUp,false);this.domElement.addEventListener("touchend",this.onPointerUp,false);this.domElement.addEventListener("touchcancel",this.onPointerUp,false);this.domElement.addEventListener("touchleave",this.onPointerUp,false);this.domElement.addEventListener("contextmenu",this.onContext,false);}},{key:"dispose",value:function dispose(){this.domElement.removeEventListener("mousedown",this.onPointerDown);this.domElement.removeEventListener("touchstart",this.onPointerDown);this.domElement.removeEventListener("mousemove",this.onPointerHover);this.domElement.removeEventListener("touchmove",this.onPointerHover);this.domElement.removeEventListener("touchmove",this.onPointerMove);document.removeEventListener("mouseup",this.onPointerUp);this.domElement.removeEventListener("touchend",this.onPointerUp);this.domElement.removeEventListener("touchcancel",this.onPointerUp);this.domElement.removeEventListener("touchleave",this.onPointerUp);this.domElement.removeEventListener("contextmenu",this.onContext);}},{key:"attach",value:function attach(_ref){var mesh=_ref.mesh;if(!mesh)return;this.object=mesh;this.visible=true;}},{key:"detach",value:function detach(){this.object=undefined;this.visible=false;this.axis=null;}},{key:"updateMatrixWorld",value:function updateMatrixWorld(){if(this.object!==undefined){this.object.updateMatrixWorld();this.object.parent.matrixWorld.decompose(this.parentPosition,this.parentQuaternion,this.parentScale);this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this.worldScale);}this.camera.updateMatrixWorld();this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this.cameraScale);if(this.camera instanceof PerspectiveCamera){this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();}else if(this.camera instanceof OrthographicCamera){this.eye.copy(this.cameraPosition).normalize();}_get(_getPrototypeOf(TransformControls.prototype),"updateMatrixWorld",this).call(this);}},{key:"getMode",value:function getMode(){return this.mode;}},{key:"setMode",value:function setMode(mode){this.mode=mode;}},{key:"setTranslationSnap",value:function setTranslationSnap(translationSnap){this.translationSnap=translationSnap;}},{key:"setRotationSnap",value:function setRotationSnap(rotationSnap){this.rotationSnap=rotationSnap;}},{key:"setSize",value:function setSize(size){this.size=size;}},{key:"setSpace",value:function setSpace(space){this.space=space;}},{key:"camera",set:function set(value){this.setAndDispatch('camera',value);},get:function get(){return this.getPrivateField('camera');}},{key:"object",set:function set(value){this.setAndDispatch('object',value);}// no
,get:function get(){return this.getPrivateField('object');}},{key:"enabled",get:function get(){return this.getPrivateField('enabled');}},{key:"axis",set:function set(value){this.setAndDispatch('axis',value);}// si
,get:function get(){return this.getPrivateField('axis');}},{key:"mode",set:function set(value){this.setAndDispatch('mode',value);}// si
,get:function get(){return this.getPrivateField('mode');}},{key:"translationSnap",set:function set(value){this.setAndDispatch('translationSnap',value);}// no
,get:function get(){return this.getPrivateField('translationSnap');}},{key:"rotationSnap",set:function set(value){this.setAndDispatch('rotationSnap',value);}// no
,get:function get(){return this.getPrivateField('rotationSnap');}},{key:"space",set:function set(value){this.setAndDispatch('space',value);}// si
,get:function get(){return this.getPrivateField('space');}},{key:"size",set:function set(value){this.setAndDispatch('size',value);}// si
,get:function get(){return this.getPrivateField('size');}},{key:"dragging",set:function set(value){this.setAndDispatch('dragging',value);}// si
,get:function get(){return this.getPrivateField('dragging');}},{key:"showX",set:function set(value){this.setAndDispatch('showX',value);}// si
,get:function get(){return this.getPrivateField('showX');}},{key:"showY",set:function set(value){this.setAndDispatch('showY',value);}// si
,get:function get(){return this.getPrivateField('showY');}},{key:"showZ",set:function set(value){this.setAndDispatch('showZ',value);}// si
,get:function get(){return this.getPrivateField('showZ');}},{key:"parentQuaternion",set:function set(value){this.setAndDispatch('parentQuaternion',value);}// no
,get:function get(){return this.getPrivateField('parentQuaternion');}},{key:"worldPosition",set:function set(value){this.setAndDispatch('worldPosition',value);}// si
,get:function get(){return this.getPrivateField('worldPosition');}},{key:"worldPositionStart",set:function set(value){this.setAndDispatch('worldPositionStart',value);}// si
,get:function get(){return this.getPrivateField('worldPositionStart');}},{key:"worldQuaternion",set:function set(value){this.setAndDispatch('worldQuaternion',value);}// si
,get:function get(){return this.getPrivateField('worldQuaternion');}},{key:"worldQuaternionStart",set:function set(value){this.setAndDispatch('worldQuaternionStart',value);}// si
,get:function get(){return this.getPrivateField('worldQuaternionStart');}},{key:"cameraPosition",set:function set(value){this.setAndDispatch('cameraPosition',value);}// si
,get:function get(){return this.getPrivateField('cameraPosition');}},{key:"cameraQuaternion",set:function set(value){this.setAndDispatch('cameraQuaternion',value);}// si
,get:function get(){return this.getPrivateField('cameraQuaternion');}},{key:"pointStart",set:function set(value){this.setAndDispatch('pointStart',value);}// no
,get:function get(){return this.getPrivateField('pointStart');}},{key:"pointEnd",set:function set(value){this.setAndDispatch('pointEnd',value);}// no
,get:function get(){return this.getPrivateField('pointEnd');}},{key:"rotationAxis",set:function set(value){this.setAndDispatch('rotationAxis',value);}// no
,get:function get(){return this.getPrivateField('rotationAxis');}},{key:"rotationAngle",set:function set(value){this.setAndDispatch('rotationAngle',value);}// no
,get:function get(){return this.getPrivateField('rotationAngle');}},{key:"eye",set:function set(value){this.setAndDispatch('eye',value);}// si
,get:function get(){return this.getPrivateField('eye');}}]);return TransformControls;}(Object3D);function _createSuper2$K(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var CHANGE_EVENT={type:'change'};var LOCK_EVENT={type:'lock'};var UNLOCK_EVENT={type:'unlock'};var PI_2$1=Math.PI/2;var FirstPersonControl=/*#__PURE__*/function(_EventDispatcher){_inherits(FirstPersonControl,_EventDispatcher);var _super=_createSuper2$K(FirstPersonControl);function FirstPersonControl(camera,domElement){var _this;_classCallCheck(this,FirstPersonControl);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"getDirection",function(){var direction=new Vector3$1(0,0,-1);return function(v){return v.copy(direction).applyQuaternion(_this.camera.quaternion);};}());_this.camera=camera;_this.camera.position.y=10;_this.domElement=domElement||document.body;_this.isLocked=false;_this.euler=new Euler(0,0,0,'YXZ');_this.vector=new Vector3$1();_this.raycaster=new Raycaster(new Vector3$1(),new Vector3$1(0,-1,0),0,10);_this.movingForward=false;_this.movingBackward=false;_this.movingLeft=false;_this.movingRight=false;_this.canJump=false;_this.prevTime=performance.now();_this.velocity=new Vector3$1();_this.direction=new Vector3$1();return _this;}_createClass(FirstPersonControl,[{key:"init",value:function init(){document.addEventListener('click',this.onClick.bind(this),false);document.addEventListener('mousemove',this.onMouseMove.bind(this),false);document.addEventListener('keydown',this.onKeyDown.bind(this),false);document.addEventListener('keyup',this.onKeyUp.bind(this),false);document.addEventListener('pointerlockchange',this.onPointerlockChange.bind(this),false);document.addEventListener('pointerlockerror',this.onPointerlockError.bind(this),false);}},{key:"dispose",value:function dispose(){document.removeEventListener('click',this.onClick,false);document.removeEventListener('mousemove',this.onMouseMove,false);document.removeEventListener('keydown',this.onKeyDown,false);document.removeEventListener('keyup',this.onKeyUp,false);document.removeEventListener('pointerlockchange',this.onPointerlockChange,false);document.removeEventListener('pointerlockerror',this.onPointerlockError,false);this.unlock();}},{key:"getObject",value:function getObject(){// retaining this method for backward compatibility
return this.camera;}},{key:"onClick",value:function onClick(){if(!this.isLocked){this.lock();}}},{key:"onKeyDown",value:function onKeyDown(event){switch(event.keyCode){case 38:// up
case 87:// w
this.movingForward=true;break;case 37:// left
case 65:// a
this.movingLeft=true;break;case 40:// down
case 83:// s
this.movingBackward=true;break;case 39:// right
case 68:// d
this.movingRight=true;break;case 32:// space
if(this.canJump===true)this.velocity.y+=350;this.canJump=false;break;}}},{key:"onKeyUp",value:function onKeyUp(event){switch(event.keyCode){case 38:// up
case 87:// w
this.movingForward=false;break;case 37:// left
case 65:// a
this.movingLeft=false;break;case 40:// down
case 83:// s
this.movingBackward=false;break;case 39:// right
case 68:// d
this.movingRight=false;break;}}},{key:"onMouseMove",value:function onMouseMove(event){if(!this.isLocked)return;var movementX=event.movementX||event.mozMovementX||event.webkitMovementX||0;var movementY=event.movementY||event.mozMovementY||event.webkitMovementY||0;this.euler.setFromQuaternion(this.camera.quaternion);this.euler.y-=movementX*0.002;this.euler.x-=movementY*0.002;this.euler.x=Math.max(-PI_2$1,Math.min(PI_2$1,this.euler.x));this.camera.quaternion.setFromEuler(this.euler);this.dispatchEvent(CHANGE_EVENT);}},{key:"onPointerlockChange",value:function onPointerlockChange(){if(document.pointerLockElement===this.domElement){this.dispatchEvent(LOCK_EVENT);this.isLocked=true;}else{this.dispatchEvent(UNLOCK_EVENT);this.isLocked=false;}}},{key:"onPointerlockError",value:function onPointerlockError(e){console.error('Unable to use Pointer Lock API',e);}},{key:"moveForward",value:function moveForward(distance){// move forward parallel to the xz-plane
// assumes camera.up is y-up
this.vector.setFromMatrixColumn(this.camera.matrix,0);this.vector.crossVectors(this.camera.up,this.vector);this.camera.position.addScaledVector(this.vector,distance);}},{key:"moveRight",value:function moveRight(distance){this.vector.setFromMatrixColumn(this.camera.matrix,0);this.camera.position.addScaledVector(this.vector,distance);}},{key:"lock",value:function lock(){this.domElement.requestPointerLock();}},{key:"unlock",value:function unlock(){document.exitPointerLock();}},{key:"update",value:function update(){if(this.isLocked){this.raycaster.ray.origin.copy(this.getObject().position);this.raycaster.ray.origin.y-=10;var intersections=this.raycaster.intersectObjects(Scene$2.scene.children);var onObject=intersections.length>0;var time=performance.now();var delta=(time-this.prevTime)/1000;this.velocity.x-=this.velocity.x*10.0*delta;this.velocity.z-=this.velocity.z*10.0*delta;this.velocity.y-=9.8*100.0*delta;// 100.0 = mass
this.direction.z=Number(this.movingForward)-Number(this.movingBackward);this.direction.x=Number(this.movingRight)-Number(this.movingLeft);this.direction.normalize();// this ensures consistent movements in all this.directions
if(this.movingForward||this.movingBackward)this.velocity.z-=this.direction.z*400.0*delta;if(this.movingLeft||this.movingRight)this.velocity.x-=this.direction.x*400.0*delta;if(onObject===true){this.velocity.y=Math.max(0,this.velocity.y);this.canJump=true;}this.moveRight(-this.velocity.x*delta);this.moveForward(-this.velocity.z*delta);this.getObject().position.y+=this.velocity.y*delta;// new behavior
if(this.getObject().position.y<10){this.velocity.y=0;this.getObject().position.y=10;this.canJump=true;}this.prevTime=time;}}}]);return FirstPersonControl;}(EventDispatcher);function _createSuper2$L(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var FlyControl=/*#__PURE__*/function(_EventDispatcher){_inherits(FlyControl,_EventDispatcher);var _super=_createSuper2$L(FlyControl);function FlyControl(object,domElement){var _this;_classCallCheck(this,FlyControl);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"init",function(){_this.domElement.addEventListener('contextmenu',_this.onContextMenu,false);_this.domElement.addEventListener('mousemove',_this.onMouseMove,false);_this.domElement.addEventListener('mousedown',_this.onMouseDown,false);_this.domElement.addEventListener('mouseup',_this.onMouseUp,false);window.addEventListener('keydown',_this.onKeyDown,false);window.addEventListener('keyup',_this.onKeyUp,false);_this.updateMovementVector();_this.updateRotationVector();});_defineProperty(_assertThisInitialized(_this),"dispose",function(){_this.domElement.removeEventListener('contextmenu',_this.onContextMenu,false);_this.domElement.removeEventListener('mousedown',_this.onMouseDown,false);_this.domElement.removeEventListener('mousemove',_this.onMoudeMove,false);_this.domElement.removeEventListener('mouseup',_this.onMouseUp,false);window.removeEventListener('keydown',_this.onKeyDown,false);window.removeEventListener('keyup',_this.onKeyUp,false);});_defineProperty(_assertThisInitialized(_this),"onKeyDown",function(event){if(event.altKey){return;}//event.preventDefault();
switch(event.keyCode){case 16:/* shift */_this.movementSpeedMultiplier=.1;break;case 87:/*W*/_this.moveState.forward=1;break;case 83:/*S*/_this.moveState.back=1;break;case 65:/*A*/_this.moveState.left=1;break;case 68:/*D*/_this.moveState.right=1;break;case 82:/*R*/_this.moveState.up=1;break;case 70:/*F*/_this.moveState.down=1;break;case 38:/*up*/_this.moveState.pitchUp=1;break;case 40:/*down*/_this.moveState.pitchDown=1;break;case 37:/*left*/_this.moveState.yawLeft=1;break;case 39:/*right*/_this.moveState.yawRight=1;break;case 81:/*Q*/_this.moveState.rollLeft=1;break;case 69:/*E*/_this.moveState.rollRight=1;break;}_this.updateMovementVector();_this.updateRotationVector();});_defineProperty(_assertThisInitialized(_this),"onKeyUp",function(event){switch(event.keyCode){case 16:/* shift */_this.movementSpeedMultiplier=1;break;case 87:/*W*/_this.moveState.forward=0;break;case 83:/*S*/_this.moveState.back=0;break;case 65:/*A*/_this.moveState.left=0;break;case 68:/*D*/_this.moveState.right=0;break;case 82:/*R*/_this.moveState.up=0;break;case 70:/*F*/_this.moveState.down=0;break;case 38:/*up*/_this.moveState.pitchUp=0;break;case 40:/*down*/_this.moveState.pitchDown=0;break;case 37:/*left*/_this.moveState.yawLeft=0;break;case 39:/*right*/_this.moveState.yawRight=0;break;case 81:/*Q*/_this.moveState.rollLeft=0;break;case 69:/*E*/_this.moveState.rollRight=0;break;}_this.updateMovementVector();_this.updateRotationVector();});_defineProperty(_assertThisInitialized(_this),"onMouseDown",function(event){if(_this.domElement!==document){_this.domElement.focus();}event.preventDefault();event.stopPropagation();if(_this.dragToLook){_this.mouseStatus++;}else{switch(event.button){case 0:_this.moveState.forward=1;break;case 2:_this.moveState.back=1;break;}_this.updateMovementVector();}});_defineProperty(_assertThisInitialized(_this),"onMouseMove",function(event){if(!_this.dragToLook||_this.mouseStatus>0){var container=_this.getContainerDimensions();var halfWidth=container.size[0]/2;var halfHeight=container.size[1]/2;_this.moveState.yawLeft=-(event.pageX-container.offset[0]-halfWidth)/halfWidth;_this.moveState.pitchDown=(event.pageY-container.offset[1]-halfHeight)/halfHeight;_this.updateRotationVector();}});_defineProperty(_assertThisInitialized(_this),"onMouseUp",function(event){event.preventDefault();event.stopPropagation();if(_this.dragToLook){_this.mouseStatus--;_this.moveState.yawLeft=_this.moveState.pitchDown=0;}else{switch(event.button){case 0:_this.moveState.forward=0;break;case 2:_this.moveState.back=0;break;}_this.updateMovementVector();}_this.updateRotationVector();});_defineProperty(_assertThisInitialized(_this),"onContextMenu",function(event){return event.preventDefault();});_defineProperty(_assertThisInitialized(_this),"update",function(delta){var moveMult=delta*_this.movementSpeed;var rotMult=delta*_this.rollSpeed;_this.object.translateX(_this.moveVector.x*moveMult);_this.object.translateY(_this.moveVector.y*moveMult);_this.object.translateZ(_this.moveVector.z*moveMult);_this.tmpQuaternion.set(_this.rotationVector.x*rotMult,_this.rotationVector.y*rotMult,_this.rotationVector.z*rotMult,1).normalize();_this.object.quaternion.multiply(_this.tmpQuaternion);// expose the rotation vector for convenience
_this.object.rotation.setFromQuaternion(_this.object.quaternion,_this.object.rotation.order);});_defineProperty(_assertThisInitialized(_this),"updateMovementVector",function(){var forward=_this.moveState.forward||_this.autoForward&&!_this.moveState.back?1:0;_this.moveVector.x=-_this.moveState.left+_this.moveState.right;_this.moveVector.y=-_this.moveState.down+_this.moveState.up;_this.moveVector.z=-forward+_this.moveState.back;});_defineProperty(_assertThisInitialized(_this),"updateRotationVector",function(){_this.rotationVector.x=-_this.moveState.pitchDown+_this.moveState.pitchUp;_this.rotationVector.y=-_this.moveState.yawRight+_this.moveState.yawLeft;_this.rotationVector.z=-_this.moveState.rollRight+_this.moveState.rollLeft;});_defineProperty(_assertThisInitialized(_this),"getContainerDimensions",function(){if(_this.domElement!=document){return{size:[_this.domElement.offsetWidth,_this.domElement.offsetHeight],offset:[_this.domElement.offsetLeft,_this.domElement.offsetTop]};}else{return{size:[window.innerWidth,window.innerHeight],offset:[0,0]};}});_this.domElement=domElement||document;_this.object=object;if(domElement)_this.domElement.setAttribute('tabindex',-1);// API
_this.movementSpeed=100;_this.rollSpeed=Math.PI/24;_this.dragToLook=true;_this.autoForward=true;// disable default target object behavior
// internals
_this.tmpQuaternion=new Quaternion();_this.mouseStatus=0;_this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};_this.moveVector=new Vector3$1(0,0,0);_this.rotationVector=new Vector3$1(0,0,0);return _this;}return FlyControl;}(EventDispatcher);var CONTROLS={ORBIT:'orbit',TRANSFORM:'transform',FPS:'fps',FLY:'fly'};var AVAILABLE_CONTROLS=Object.keys(CONTROLS);var EVENTS={CHANGE:'change',DRAGGING_CHANGE:'dragging-changed'};var Controls=/*#__PURE__*/function(){function Controls(){var _this=this,_this$controls;_classCallCheck(this,Controls);_defineProperty(this,"disposeSingleControls",function(control){if(_this.controls[control]&&_this.controls[control].dispose){_this.controls[control].dispose();delete _this.controls[control];}});this.controls=(_this$controls={},_defineProperty(_this$controls,CONTROLS.ORBIT,undefined),_defineProperty(_this$controls,CONTROLS.TRANSFORM,undefined),_defineProperty(_this$controls,CONTROLS.FPS,undefined),_defineProperty(_this$controls,CONTROLS.FLY,undefined),_this$controls);}_createClass(Controls,[{key:"disposePreviousControls",value:function disposePreviousControls(){var controls=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];controls.forEach(this.disposeSingleControls.bind(this));}},{key:"dispose",value:function dispose(){AVAILABLE_CONTROLS.forEach(this.disposeSingleControls.bind(this));}},{key:"getControl",value:function getControl(control){if(control&&this.controls[control]){return this.controls[control];}}},{key:"update",value:function update(dt){var _this2=this;Object.keys(this.controls).forEach(function(control){_this2.controls[control]&&_this2.controls[control].update(dt);});}},{key:"setOrbitControl",value:function setOrbitControl(){this.disposePreviousControls([CONTROLS.FPS,CONTROLS.FLY]);this.controls[CONTROLS.ORBIT]=new Orbit(Scene$2.getCameraBody(),Scene$2.renderer.domElement);this.controls[CONTROLS.ORBIT].init();this.controls[CONTROLS.ORBIT].addEventListener(EVENTS.CHANGE,Scene$2.render);return this.controls[CONTROLS.ORBIT];}},{key:"setTransformControl",value:function setTransformControl(){var _this3=this;this.controls[CONTROLS.TRANSFORM]=new TransformControls(Scene$2.getCameraBody(),Scene$2.renderer.domElement);this.controls[CONTROLS.TRANSFORM].init();this.controls[CONTROLS.TRANSFORM].addEventListener(EVENTS.CHANGE,Scene$2.render);this.controls[CONTROLS.TRANSFORM].addEventListener(EVENTS.DRAGGING_CHANGE,function(event){if(_this3.controls[CONTROLS.ORBIT]){_this3.controls[CONTROLS.ORBIT].enabled=!event.value;}});return this.controls.transform;}},{key:"setFirstPersonControl",value:function setFirstPersonControl(){this.controls[CONTROLS.FPS]=new FirstPersonControl(Scene$2.getCameraBody(),document.body);this.controls[CONTROLS.FPS].init();return this.controls[CONTROLS.FPS];}},{key:"setFlyControl",value:function setFlyControl(){this.controls[CONTROLS.FLY]=new FlyControl(Scene$2.getCameraBody(),document.body);this.controls[CONTROLS.FLY].init();return this.controls[CONTROLS.FLY];}}]);return Controls;}();var Controls$1=new Controls();function _createSuper2$M(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var author$1={name:'Marco Stagni',email:'mrc.stagni@gmail.com',website:'http://mage.studio'};var Level=/*#__PURE__*/function(_EventDispatcher){_inherits(Level,_EventDispatcher);var _super=_createSuper2$M(Level);function Level(_options){var _this;_classCallCheck(this,Level);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),"onStateChange",function(state){});_defineProperty(_assertThisInitialized(_this),"enableInput",function(){Input$1.enable();if(!_this.inputListenersAreSet){INPUT_EVENTS.forEach(function(event){var methodName="on".concat(upperCaseFirst(event));if(typeof _this[methodName]==='function'){Input$1.addEventListener(event,_this[methodName].bind(_assertThisInitialized(_this)));}});_this.inputListenersAreSet=true;_this.onInputEnabled();}});_defineProperty(_assertThisInitialized(_this),"disableInput",function(){Input$1.disable();INPUT_EVENTS.forEach(function(event){var methodName="on".concat(upperCaseFirst(event));if(typeof _this[methodName]==='function'){Input$1.removeEventListener(event,_this[methodName]);}});_this.inputListenersAreSet=false;_this.onInputDisabled();});_defineProperty(_assertThisInitialized(_this),"parseScene",function(_ref){var _ref$elements=_ref.elements,elements=_ref$elements===void 0?[]:_ref$elements,_ref$models=_ref.models,models=_ref$models===void 0?[]:_ref$models,_ref$lights=_ref.lights,lights=_ref$lights===void 0?[]:_ref$lights;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return new Promise(function(resolve,reject){if(elements.length){for(var i in models){elements.push(models[i]);}MeshLoader$1.load(elements,options);}if(lights.length){LightLoader$1.load(lights,options);}Scene$2.updateChildren();resolve();});});_defineProperty(_assertThisInitialized(_this),"getJSONUrl",function(){return"assets/scenes/".concat(_this.name,".json");});_defineProperty(_assertThisInitialized(_this),"loadScene",function(){var url=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_this.getJSONUrl();if(getWindow()){return fetch$1(url).then(function(res){return res.json();}).then(_this.parseScene).catch(function(){return Promise.resolve();});}return Promise.resolve();});_defineProperty(_assertThisInitialized(_this),"preload",function(){var url=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_this.getJSONUrl();return _this.loadScene(url);});_defineProperty(_assertThisInitialized(_this),"requestNextAnimationFrame",function(){_this.requestAnimationFrameId=requestNextFrame(_this.render.bind(_assertThisInitialized(_this)));});_defineProperty(_assertThisInitialized(_this),"cancelNextAnimationFrame",function(){cancelAnimationFrame(_this.requestAnimationFrameId);});_defineProperty(_assertThisInitialized(_this),"render",function(){var dt=Scene$2.clock.getDelta();Scene$2.render(dt);PostProcessing$1.render(dt);_this.onUpdate(dt);Scene$2.update(dt);Assets$1.update(dt);Stats$1.update(dt);Controls$1.update(dt);Input$1.update(dt);_this.requestNextAnimationFrame();});_defineProperty(_assertThisInitialized(_this),"init",function(){Physics$2.init().then(function(){PostProcessing$1.init();Stats$1.init();_this.render();if(_this.onCreate instanceof Function){_this.onCreate();}else{console.log(ONCREATE_NOT_AVAILABLE);}});});_defineProperty(_assertThisInitialized(_this),"dispose",function(){_this.onBeforeDispose();_this.disableInput();Physics$2.dispose();Universe$1.bigfreeze();Scene$2.dispose();Controls$1.dispose();_this.cancelNextAnimationFrame();_this.onDispose();});_this.options=_options;_this.name=_this.constructor.name;_this.debug=true;_this.inputListenersAreSet=false;Scene$2.create();_this.enableInput();return _this;}_createClass(Level,[{key:"prepareScene",value:function prepareScene(){}},{key:"onCreate",value:function onCreate(){}},{key:"onUpdate",value:function onUpdate(){}},{key:"onFailedTest",value:function onFailedTest(message,test){}},{key:"onSuccededTest",value:function onSuccededTest(message){}},{key:"onBeforeDispose",value:function onBeforeDispose(){}},{key:"onDispose",value:function onDispose(){}},{key:"onInputEnabled",value:function onInputEnabled(){}},{key:"onInputDisabled",value:function onInputDisabled(){}},{key:"toJSON",value:function toJSON(){return _objectSpread2({},Lights$1.toJSON(),{},Universe$1.toJSON());}}]);return Level;}(EventDispatcher);var Color$1=/*#__PURE__*/function(){_createClass(Color$1,null,[{key:"randomColor",value:function randomColor(){var letters='0123456789ABCDEF'.split('');var color='#';for(var i=0;i<6;i++){color+=letters[Math.floor(Math.random()*16)];}return color;}},{key:"componentToHex",value:function componentToHex(c){var hex=c.toString(16);return hex.length==1?"0"+hex:hex;}},{key:"gbToHex",value:function gbToHex(r,g,b){return"0x"+Color$1.componentToHex(r)+Color$1.componentToHex(g)+Color$1.componentToHex(b);}},{key:"getIntValueFromHex",value:function getIntValueFromHex(hex){return parseInt(hex,16);}}]);function Color$1(color){_classCallCheck(this,Color$1);this.color=new Color(color);}_createClass(Color$1,[{key:"getColor",value:function getColor(){return this.color;}}]);return Color$1;}();var index$1=/*#__PURE__*/Object.freeze({__proto__:null,getState:getState,createStore:createStore$1,dispatch:dispatch$1});var CURRENT_SCENE_NAME='CURRENT_SCENE_NAME';var STATE_SNAPSHOT='STATE_SNAPSHOT';var TIMESTAMP='TIMESTAMP';var CURRENT_SCENE_JSON='CURRENT_SCENE_JSON';var CURRENT_PATH='CURRENT_PATH';var Storage=/*#__PURE__*/function(){function Storage(){_classCallCheck(this,Storage);}_createClass(Storage,[{key:"save",value:function save(){if(Storage.isLocalStorageAvailable()){try{var state=getState();var timestamp=+new Date();var currentScene=GameRunner$1.getCurrentLevel();var currentPath=GameRunner$1.getCurrentPath();var sceneJSON=currentScene.toJSON();var sceneName=currentScene.name;localStorage.setItem(TIMESTAMP,timestamp);localStorage.setItem(CURRENT_SCENE_NAME,sceneName);localStorage.setItem(STATE_SNAPSHOT,state);localStorage.setItem(CURRENT_PATH,currentPath);localStorage.setItem(CURRENT_SCENE_JSON,sceneJSON);return Promise.resolve({sceneName:sceneName,currentPath:currentPath,timestamp:timestamp});}catch(e){return Promise.reject(e);}}else{return Promise.reject(LOCALSTORAGE_NOT_AVAILABLE);}}},{key:"get",value:function get(id){if(Storage.isLocalStorageAvailable()){return localStorage.getItem(id);}else{return null;}}},{key:"loadCurrentPath",value:function loadCurrentPath(){if(Storage.isLocalStorageAvailable()){var currentPath=localStorage.getItem(CURRENT_PATH);return Promise.resolve(currentPath);}else{return Promise.reject(LOCALSTORAGE_NOT_AVAILABLE);}}},{key:"loadState",value:function loadState(){if(Storage.isLocalStorageAvailable()){var state=localStorage.getItem(STATE_SNAPSHOT);return Promise.resolve(JSON.parse(state));}else{return Promise.reject(LOCALSTORAGE_NOT_AVAILABLE);}}},{key:"loadScene",value:function loadScene(){if(Storage.isLocalStorageAvailable()){var scene=localStorage.getItem(CURRENT_SCENE_JSON);return Promise.resolve(JSON.parse(scene));}else{return Promise.reject(LOCALSTORAGE_NOT_AVAILABLE);}}}],[{key:"isLocalStorageAvailable",value:function isLocalStorageAvailable(){return window&&window.localStorage&&typeof window.localStorage.setItem==='function'&&typeof window.localStorage.getItem==='function'&&typeof window.localStorage.removeItem==='function'&&typeof window.localStorage.clear==='function';}}]);return Storage;}();var storage$1=new Storage();var GameRunner=/*#__PURE__*/function(){function GameRunner(){var _this=this;_classCallCheck(this,GameRunner);_defineProperty(this,"createNewScene",function(path,options){var classname=_this.get(path);var scene=new classname(_objectSpread2({},options,{path:path}));subscribeScene(path,scene);return scene;});_defineProperty(this,"disposeCurrentScene",function(path){unsubScribeScene(path);_this.running.dispose();});_defineProperty(this,"start",function(path){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return new Promise(function(resolve,reject){var _options$loading=options.loading,loading=_options$loading===void 0?false:_options$loading;if(!_this.has(path)){reject(PATH_NOT_FOUND);}if(_this.running){_this.disposeCurrentScene();}_this.setCurrentPath(path);_this.setCurrentLevel(_this.createNewScene(path,options));if(loading){storage$1.loadScene().then(_this.running.parseScene).then(function(){_this.running.prepareScene();_this.running.init();resolve(_this.running);});}else{_this.running.preload().then(function(){_this.running.prepareScene();_this.running.init();resolve(_this.running);}).catch(reject);}});});this.store={};this.running=null;}_createClass(GameRunner,[{key:"has",value:function has(path){return Object.keys(this.store).includes(path);}},{key:"get",value:function get(path){return this.store[path];}},{key:"getCurrentLevel",value:function getCurrentLevel(){return this.running;}},{key:"setCurrentLevel",value:function setCurrentLevel(level){this.running=level;}},{key:"getCurrentPath",value:function getCurrentPath(){return this.currentPath;}},{key:"setCurrentPath",value:function setCurrentPath(path){this.currentPath=path;}},{key:"register",value:function register(path,classname){try{if(GameRunner.isValidClassname(classname)){this.store[path]=classname;}else{this.store[path]=Level;}return true;}catch(e){return false;}}}],[{key:"isValidClassname",value:function isValidClassname(classname){return typeof classname==='function';}}]);return GameRunner;}();var GameRunner$1=new GameRunner();var networkChanged=function networkChanged(isOnline){return{type:NETWORK_CHANGED,isOnline:isOnline};};var ONLINE_EVENT='online';var OFFLINE_EVENT='offline';var handleOnline=function handleOnline(){return dispatch$1(networkChanged(true));};var handleOffline=function handleOffline(){return dispatch$1(networkChanged(false));};var listenToNetworkChanges=function listenToNetworkChanges(){window.addEventListener(ONLINE_EVENT,handleOnline);window.addEventListener(OFFLINE_EVENT,handleOffline);};var stopListeningToNetworkChanges=function stopListeningToNetworkChanges(){window.removeEventListener(ONLINE_EVENT,handleOnline);window.removeEventListener(OFFLINE_EVENT,handleOffline);};var QUERY_PREFIX='?';var AMPERSAND='&';var EQUALS='=';var EMPTY$1='';var EMPTY_QUERY={};var toQueryString=function toQueryString(){var query=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var keys=Object.keys(query);if(keys.length==0){return EMPTY$1;}var q=QUERY_PREFIX+keys.map(function(k){return k+EQUALS+query[k]+AMPERSAND;}).join(EMPTY$1);return q.endsWith(AMPERSAND)?q.substr(0,q.length-1):q;};var parseQuery=function parseQuery(queryString){return queryString.length>1?queryString.replace(QUERY_PREFIX,EMPTY$1).split(AMPERSAND).map(function(couple){var split=couple.split(EQUALS);return _defineProperty({},split[0],split[1]);}).reduce(function(acc,param){return _objectSpread2({},acc,{},param);},{}):EMPTY_QUERY;};var isArray$2=Array.isArray;function isStringOrNumber(o){var type=_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(o);return type==='string'||type==='number';}function isNullOrUndef(o){return o===void 0||o===null;}function isInvalid(o){return o===null||o===false||o===true||o===void 0;}function isFunction$2(o){return typeof o==='function';}function isString$1(o){return typeof o==='string';}function isNumber(o){return typeof o==='number';}function isNull(o){return o===null;}function combineFrom(first,second){var out={};if(first){for(var key in first){out[key]=first[key];}}if(second){for(var key$1 in second){out[key$1]=second[key$1];}}return out;}// object.event should always be function, otherwise its badly created object.
function isLinkEventObject(o){return!isNull(o)&&_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(o)==='object';}// We need EMPTY_OBJ defined in one place.
// Its used for comparison so we cant inline it into shared
var EMPTY_OBJ={};function normalizeEventName(name){return name.substr(2).toLowerCase();}function appendChild(parentDOM,dom){parentDOM.appendChild(dom);}function insertOrAppend(parentDOM,newNode,nextNode){if(isNull(nextNode)){appendChild(parentDOM,newNode);}else{parentDOM.insertBefore(newNode,nextNode);}}function documentCreateElement(tag,isSVG){if(isSVG){return document.createElementNS('http://www.w3.org/2000/svg',tag);}return document.createElement(tag);}function replaceChild(parentDOM,newDom,lastDom){parentDOM.replaceChild(newDom,lastDom);}function removeChild(parentDOM,childNode){parentDOM.removeChild(childNode);}function callAll(arrayFn){var listener;while((listener=arrayFn.shift())!==undefined){listener();}}function findChildVNode(vNode,startEdge,flags){var children=vNode.children;if(flags&4/* ComponentClass */){return children.$LI;}if(flags&8192/* Fragment */){return vNode.childFlags===2/* HasVNodeChildren */?children:children[startEdge?0:children.length-1];}return children;}function findDOMfromVNode(vNode,startEdge){var flags;while(vNode){flags=vNode.flags;if(flags&2033/* DOMRef */){return vNode.dom;}vNode=findChildVNode(vNode,startEdge,flags);}return null;}function removeVNodeDOM(vNode,parentDOM){do{var flags=vNode.flags;if(flags&2033/* DOMRef */){removeChild(parentDOM,vNode.dom);return;}var children=vNode.children;if(flags&4/* ComponentClass */){vNode=children.$LI;}if(flags&8/* ComponentFunction */){vNode=children;}if(flags&8192/* Fragment */){if(vNode.childFlags===2/* HasVNodeChildren */){vNode=children;}else{for(var i=0,len=children.length;i<len;++i){removeVNodeDOM(children[i],parentDOM);}return;}}}while(vNode);}function moveVNodeDOM(vNode,parentDOM,nextNode){do{var flags=vNode.flags;if(flags&2033/* DOMRef */){insertOrAppend(parentDOM,vNode.dom,nextNode);return;}var children=vNode.children;if(flags&4/* ComponentClass */){vNode=children.$LI;}if(flags&8/* ComponentFunction */){vNode=children;}if(flags&8192/* Fragment */){if(vNode.childFlags===2/* HasVNodeChildren */){vNode=children;}else{for(var i=0,len=children.length;i<len;++i){moveVNodeDOM(children[i],parentDOM,nextNode);}return;}}}while(vNode);}function createDerivedState(instance,nextProps,state){if(instance.constructor.getDerivedStateFromProps){return combineFrom(state,instance.constructor.getDerivedStateFromProps(nextProps,state));}return state;}var options$1={componentComparator:null,createVNode:null,renderComplete:null};function setTextContent(dom,children){dom.textContent=children;}// Calling this function assumes, nextValue is linkEvent
function isLastValueSameLinkEvent(lastValue,nextValue){return isLinkEventObject(lastValue)&&lastValue.event===nextValue.event&&lastValue.data===nextValue.data;}function safeCall1(method,arg1){return!!isFunction$2(method)&&(method(arg1),true);}var keyPrefix='$';function V(childFlags,children,className,flags,key,props,ref,type){this.childFlags=childFlags;this.children=children;this.className=className;this.dom=null;this.flags=flags;this.key=key===void 0?null:key;this.props=props===void 0?null:props;this.ref=ref===void 0?null:ref;this.type=type;}function createVNode(flags,type,className,children,childFlags,props,key,ref){var childFlag=childFlags===void 0?1/* HasInvalidChildren */:childFlags;var vNode=new V(childFlag,children,className,flags,key,props,ref,type);if(childFlag===0/* UnknownChildren */){normalizeChildren(vNode,vNode.children);}return vNode;}function createTextVNode(text,key){return new V(1/* HasInvalidChildren */,isNullOrUndef(text)||text===true||text===false?'':text,null,16/* Text */,key,null,null,null);}function createFragment(children,childFlags,key){var fragment=createVNode(8192/* Fragment */,8192/* Fragment */,null,children,childFlags,null,key,null);switch(fragment.childFlags){case 1/* HasInvalidChildren */:fragment.children=createVoidVNode();fragment.childFlags=2/* HasVNodeChildren */;break;case 16/* HasTextChildren */:fragment.children=[createTextVNode(children)];fragment.childFlags=4/* HasNonKeyedChildren */;break;}return fragment;}/*
 * Fragment is different than normal vNode,
 * because when it needs to be cloned we need to clone its children too
 * But not normalize, because otherwise those possibly get KEY and re-mount
 */function cloneFragment(vNodeToClone){var clonedChildren;var oldChildren=vNodeToClone.children;var childFlags=vNodeToClone.childFlags;if(childFlags===2/* HasVNodeChildren */){clonedChildren=directClone(oldChildren);}else if(childFlags&12/* MultipleChildren */){clonedChildren=[];for(var i=0,len=oldChildren.length;i<len;++i){clonedChildren.push(directClone(oldChildren[i]));}}return createFragment(clonedChildren,childFlags,vNodeToClone.key);}function directClone(vNodeToClone){var flags=vNodeToClone.flags&-16385/* ClearInUse */;var props=vNodeToClone.props;if(flags&14/* Component */){if(!isNull(props)){var propsToClone=props;props={};for(var key in propsToClone){props[key]=propsToClone[key];}}}if((flags&8192/* Fragment */)===0){return new V(vNodeToClone.childFlags,vNodeToClone.children,vNodeToClone.className,flags,vNodeToClone.key,props,vNodeToClone.ref,vNodeToClone.type);}return cloneFragment(vNodeToClone);}function createVoidVNode(){return createTextVNode('',null);}function _normalizeVNodes(nodes,result,index,currentKey){for(var len=nodes.length;index<len;index++){var n=nodes[index];if(!isInvalid(n)){var newKey=currentKey+keyPrefix+index;if(isArray$2(n)){_normalizeVNodes(n,result,0,newKey);}else{if(isStringOrNumber(n)){n=createTextVNode(n,newKey);}else{var oldKey=n.key;var isPrefixedKey=isString$1(oldKey)&&oldKey[0]===keyPrefix;if(n.flags&81920/* InUseOrNormalized */||isPrefixedKey){n=directClone(n);}n.flags|=65536/* Normalized */;if(!isPrefixedKey){if(isNull(oldKey)){n.key=newKey;}else{n.key=currentKey+oldKey;}}else if(oldKey.substring(0,currentKey.length)!==currentKey){n.key=currentKey+oldKey;}}result.push(n);}}}}function normalizeChildren(vNode,children){var newChildren;var newChildFlags=1/* HasInvalidChildren */;// Don't change children to match strict equal (===) true in patching
if(isInvalid(children)){newChildren=children;}else if(isStringOrNumber(children)){newChildFlags=16/* HasTextChildren */;newChildren=children;}else if(isArray$2(children)){var len=children.length;for(var i=0;i<len;++i){var n=children[i];if(isInvalid(n)||isArray$2(n)){newChildren=newChildren||children.slice(0,i);_normalizeVNodes(children,newChildren,i,'');break;}else if(isStringOrNumber(n)){newChildren=newChildren||children.slice(0,i);newChildren.push(createTextVNode(n,keyPrefix+i));}else{var key=n.key;var needsCloning=(n.flags&81920/* InUseOrNormalized */)>0;var isNullKey=isNull(key);var isPrefixed=isString$1(key)&&key[0]===keyPrefix;if(needsCloning||isNullKey||isPrefixed){newChildren=newChildren||children.slice(0,i);if(needsCloning||isPrefixed){n=directClone(n);}if(isNullKey||isPrefixed){n.key=keyPrefix+i;}newChildren.push(n);}else if(newChildren){newChildren.push(n);}n.flags|=65536/* Normalized */;}}newChildren=newChildren||children;if(newChildren.length===0){newChildFlags=1/* HasInvalidChildren */;}else{newChildFlags=8/* HasKeyedChildren */;}}else{newChildren=children;newChildren.flags|=65536/* Normalized */;if(children.flags&81920/* InUseOrNormalized */){newChildren=directClone(children);}newChildFlags=2/* HasVNodeChildren */;}vNode.children=newChildren;vNode.childFlags=newChildFlags;return vNode;}function normalizeRoot(input){if(isInvalid(input)||isStringOrNumber(input)){return createTextVNode(input,null);}if(isArray$2(input)){return createFragment(input,0/* UnknownChildren */,null);}return input.flags&16384/* InUse */?directClone(input):input;}var xlinkNS='http://www.w3.org/1999/xlink';var xmlNS='http://www.w3.org/XML/1998/namespace';var namespaces={'xlink:actuate':xlinkNS,'xlink:arcrole':xlinkNS,'xlink:href':xlinkNS,'xlink:role':xlinkNS,'xlink:show':xlinkNS,'xlink:title':xlinkNS,'xlink:type':xlinkNS,'xml:base':xmlNS,'xml:lang':xmlNS,'xml:space':xmlNS};function getDelegatedEventObject(v){return{onClick:v,onDblClick:v,onFocusIn:v,onFocusOut:v,onKeyDown:v,onKeyPress:v,onKeyUp:v,onMouseDown:v,onMouseMove:v,onMouseUp:v,onTouchEnd:v,onTouchMove:v,onTouchStart:v};}var attachedEventCounts=getDelegatedEventObject(0);var attachedEvents=getDelegatedEventObject(null);var syntheticEvents=getDelegatedEventObject(true);function updateOrAddSyntheticEvent(name,dom){var eventsObject=dom.$EV;if(!eventsObject){eventsObject=dom.$EV=getDelegatedEventObject(null);}if(!eventsObject[name]){if(++attachedEventCounts[name]===1){attachedEvents[name]=attachEventToDocument(name);}}return eventsObject;}function unmountSyntheticEvent(name,dom){var eventsObject=dom.$EV;if(eventsObject&&eventsObject[name]){if(--attachedEventCounts[name]===0){document.removeEventListener(normalizeEventName(name),attachedEvents[name]);attachedEvents[name]=null;}eventsObject[name]=null;}}function handleSyntheticEvent(name,lastEvent,nextEvent,dom){if(isFunction$2(nextEvent)){updateOrAddSyntheticEvent(name,dom)[name]=nextEvent;}else if(isLinkEventObject(nextEvent)){if(isLastValueSameLinkEvent(lastEvent,nextEvent)){return;}updateOrAddSyntheticEvent(name,dom)[name]=nextEvent;}else{unmountSyntheticEvent(name,dom);}}// When browsers fully support event.composedPath we could loop it through instead of using parentNode property
function getTargetNode(event){return isFunction$2(event.composedPath)?event.composedPath()[0]:event.target;}function dispatchEvents(event,isClick,name,eventData){var dom=getTargetNode(event);do{// Html Nodes can be nested fe: span inside button in that scenario browser does not handle disabled attribute on parent,
// because the event listener is on document.body
// Don't process clicks on disabled elements
if(isClick&&dom.disabled){return;}var eventsObject=dom.$EV;if(eventsObject){var currentEvent=eventsObject[name];if(currentEvent){// linkEvent object
eventData.dom=dom;currentEvent.event?currentEvent.event(currentEvent.data,event):currentEvent(event);if(event.cancelBubble){return;}}}dom=dom.parentNode;}while(!isNull(dom));}function stopPropagation(){this.cancelBubble=true;if(!this.immediatePropagationStopped){this.stopImmediatePropagation();}}function isDefaultPrevented(){return this.defaultPrevented;}function isPropagationStopped(){return this.cancelBubble;}function extendEventProperties(event){// Event data needs to be object to save reference to currentTarget getter
var eventData={dom:document};event.isDefaultPrevented=isDefaultPrevented;event.isPropagationStopped=isPropagationStopped;event.stopPropagation=stopPropagation;Object.defineProperty(event,'currentTarget',{configurable:true,get:function get(){return eventData.dom;}});return eventData;}function rootClickEvent(name){return function(event){if(event.button!==0){// Firefox incorrectly triggers click event for mid/right mouse buttons.
// This bug has been active for 17 years.
// https://bugzilla.mozilla.org/show_bug.cgi?id=184051
event.stopPropagation();return;}dispatchEvents(event,true,name,extendEventProperties(event));};}function rootEvent(name){return function(event){dispatchEvents(event,false,name,extendEventProperties(event));};}function attachEventToDocument(name){var attachedEvent=name==='onClick'||name==='onDblClick'?rootClickEvent(name):rootEvent(name);document.addEventListener(normalizeEventName(name),attachedEvent);return attachedEvent;}function isSameInnerHTML(dom,innerHTML){var tempdom=document.createElement('i');tempdom.innerHTML=innerHTML;return tempdom.innerHTML===dom.innerHTML;}function triggerEventListener(props,methodName,e){if(props[methodName]){var listener=props[methodName];if(listener.event){listener.event(listener.data,e);}else{listener(e);}}else{var nativeListenerName=methodName.toLowerCase();if(props[nativeListenerName]){props[nativeListenerName](e);}}}function createWrappedFunction(methodName,applyValue){var fnMethod=function fnMethod(e){var vNode=this.$V;// If vNode is gone by the time event fires, no-op
if(!vNode){return;}var props=vNode.props||EMPTY_OBJ;var dom=vNode.dom;if(isString$1(methodName)){triggerEventListener(props,methodName,e);}else{for(var i=0;i<methodName.length;++i){triggerEventListener(props,methodName[i],e);}}if(isFunction$2(applyValue)){var newVNode=this.$V;var newProps=newVNode.props||EMPTY_OBJ;applyValue(newProps,dom,false,newVNode);}};Object.defineProperty(fnMethod,'wrapped',{configurable:false,enumerable:false,value:true,writable:false});return fnMethod;}function attachEvent(dom,eventName,handler){var previousKey="$"+eventName;var previousArgs=dom[previousKey];if(previousArgs){if(previousArgs[1].wrapped){return;}dom.removeEventListener(previousArgs[0],previousArgs[1]);dom[previousKey]=null;}if(isFunction$2(handler)){dom.addEventListener(eventName,handler);dom[previousKey]=[eventName,handler];}}function isCheckedType(type){return type==='checkbox'||type==='radio';}var onTextInputChange=createWrappedFunction('onInput',applyValueInput);var wrappedOnChange=createWrappedFunction(['onClick','onChange'],applyValueInput);/* tslint:disable-next-line:no-empty */function emptywrapper(event){event.stopPropagation();}emptywrapper.wrapped=true;function inputEvents(dom,nextPropsOrEmpty){if(isCheckedType(nextPropsOrEmpty.type)){attachEvent(dom,'change',wrappedOnChange);attachEvent(dom,'click',emptywrapper);}else{attachEvent(dom,'input',onTextInputChange);}}function applyValueInput(nextPropsOrEmpty,dom){var type=nextPropsOrEmpty.type;var value=nextPropsOrEmpty.value;var checked=nextPropsOrEmpty.checked;var multiple=nextPropsOrEmpty.multiple;var defaultValue=nextPropsOrEmpty.defaultValue;var hasValue=!isNullOrUndef(value);if(type&&type!==dom.type){dom.setAttribute('type',type);}if(!isNullOrUndef(multiple)&&multiple!==dom.multiple){dom.multiple=multiple;}if(!isNullOrUndef(defaultValue)&&!hasValue){dom.defaultValue=defaultValue+'';}if(isCheckedType(type)){if(hasValue){dom.value=value;}if(!isNullOrUndef(checked)){dom.checked=checked;}}else{if(hasValue&&dom.value!==value){dom.defaultValue=value;dom.value=value;}else if(!isNullOrUndef(checked)){dom.checked=checked;}}}function updateChildOptions(vNode,value){if(vNode.type==='option'){updateChildOption(vNode,value);}else{var children=vNode.children;var flags=vNode.flags;if(flags&4/* ComponentClass */){updateChildOptions(children.$LI,value);}else if(flags&8/* ComponentFunction */){updateChildOptions(children,value);}else if(vNode.childFlags===2/* HasVNodeChildren */){updateChildOptions(children,value);}else if(vNode.childFlags&12/* MultipleChildren */){for(var i=0,len=children.length;i<len;++i){updateChildOptions(children[i],value);}}}}function updateChildOption(vNode,value){var props=vNode.props||EMPTY_OBJ;var dom=vNode.dom;// we do this as multiple may have changed
dom.value=props.value;if(props.value===value||isArray$2(value)&&value.indexOf(props.value)!==-1){dom.selected=true;}else if(!isNullOrUndef(value)||!isNullOrUndef(props.selected)){dom.selected=props.selected||false;}}var onSelectChange=createWrappedFunction('onChange',applyValueSelect);function selectEvents(dom){attachEvent(dom,'change',onSelectChange);}function applyValueSelect(nextPropsOrEmpty,dom,mounting,vNode){var multiplePropInBoolean=Boolean(nextPropsOrEmpty.multiple);if(!isNullOrUndef(nextPropsOrEmpty.multiple)&&multiplePropInBoolean!==dom.multiple){dom.multiple=multiplePropInBoolean;}var index=nextPropsOrEmpty.selectedIndex;if(index===-1){dom.selectedIndex=-1;}var childFlags=vNode.childFlags;if(childFlags!==1/* HasInvalidChildren */){var value=nextPropsOrEmpty.value;if(isNumber(index)&&index>-1&&dom.options[index]){value=dom.options[index].value;}if(mounting&&isNullOrUndef(value)){value=nextPropsOrEmpty.defaultValue;}updateChildOptions(vNode,value);}}var onTextareaInputChange=createWrappedFunction('onInput',applyValueTextArea);var wrappedOnChange$1=createWrappedFunction('onChange');function textAreaEvents(dom,nextPropsOrEmpty){attachEvent(dom,'input',onTextareaInputChange);if(nextPropsOrEmpty.onChange){attachEvent(dom,'change',wrappedOnChange$1);}}function applyValueTextArea(nextPropsOrEmpty,dom,mounting){var value=nextPropsOrEmpty.value;var domValue=dom.value;if(isNullOrUndef(value)){if(mounting){var defaultValue=nextPropsOrEmpty.defaultValue;if(!isNullOrUndef(defaultValue)&&defaultValue!==domValue){dom.defaultValue=defaultValue;dom.value=defaultValue;}}}else if(domValue!==value){/* There is value so keep it controlled */dom.defaultValue=value;dom.value=value;}}/**
 * There is currently no support for switching same input between controlled and nonControlled
 * If that ever becomes a real issue, then re design controlled elements
 * Currently user must choose either controlled or non-controlled and stick with that
 */function processElement(flags,vNode,dom,nextPropsOrEmpty,mounting,isControlled){if(flags&64/* InputElement */){applyValueInput(nextPropsOrEmpty,dom);}else if(flags&256/* SelectElement */){applyValueSelect(nextPropsOrEmpty,dom,mounting,vNode);}else if(flags&128/* TextareaElement */){applyValueTextArea(nextPropsOrEmpty,dom,mounting);}if(isControlled){dom.$V=vNode;}}function addFormElementEventHandlers(flags,dom,nextPropsOrEmpty){if(flags&64/* InputElement */){inputEvents(dom,nextPropsOrEmpty);}else if(flags&256/* SelectElement */){selectEvents(dom);}else if(flags&128/* TextareaElement */){textAreaEvents(dom,nextPropsOrEmpty);}}function isControlledFormElement(nextPropsOrEmpty){return nextPropsOrEmpty.type&&isCheckedType(nextPropsOrEmpty.type)?!isNullOrUndef(nextPropsOrEmpty.checked):!isNullOrUndef(nextPropsOrEmpty.value);}function unmountRef(ref){if(ref){if(!safeCall1(ref,null)&&ref.current){ref.current=null;}}}function mountRef(ref,value,lifecycle){if(ref&&(isFunction$2(ref)||ref.current!==void 0)){lifecycle.push(function(){if(!safeCall1(ref,value)&&ref.current!==void 0){ref.current=value;}});}}function remove(vNode,parentDOM){unmount(vNode);removeVNodeDOM(vNode,parentDOM);}function unmount(vNode){var flags=vNode.flags;var children=vNode.children;var ref;if(flags&481/* Element */){ref=vNode.ref;var props=vNode.props;unmountRef(ref);var childFlags=vNode.childFlags;if(!isNull(props)){var keys=Object.keys(props);for(var i=0,len=keys.length;i<len;i++){var key=keys[i];if(syntheticEvents[key]){unmountSyntheticEvent(key,vNode.dom);}}}if(childFlags&12/* MultipleChildren */){unmountAllChildren(children);}else if(childFlags===2/* HasVNodeChildren */){unmount(children);}}else if(children){if(flags&4/* ComponentClass */){if(isFunction$2(children.componentWillUnmount)){children.componentWillUnmount();}unmountRef(vNode.ref);children.$UN=true;unmount(children.$LI);}else if(flags&8/* ComponentFunction */){ref=vNode.ref;if(!isNullOrUndef(ref)&&isFunction$2(ref.onComponentWillUnmount)){ref.onComponentWillUnmount(findDOMfromVNode(vNode,true),vNode.props||EMPTY_OBJ);}unmount(children);}else if(flags&1024/* Portal */){remove(children,vNode.ref);}else if(flags&8192/* Fragment */){if(vNode.childFlags&12/* MultipleChildren */){unmountAllChildren(children);}}}}function unmountAllChildren(children){for(var i=0,len=children.length;i<len;++i){unmount(children[i]);}}function clearDOM(dom){// Optimization for clearing dom
dom.textContent='';}function removeAllChildren(dom,vNode,children){unmountAllChildren(children);if(vNode.flags&8192/* Fragment */){removeVNodeDOM(vNode,dom);}else{clearDOM(dom);}}function wrapLinkEvent(nextValue){// This variable makes sure there is no "this" context in callback
var ev=nextValue.event;return function(e){ev(nextValue.data,e);};}function patchEvent(name,lastValue,nextValue,dom){if(isLinkEventObject(nextValue)){if(isLastValueSameLinkEvent(lastValue,nextValue)){return;}nextValue=wrapLinkEvent(nextValue);}attachEvent(dom,normalizeEventName(name),nextValue);}// We are assuming here that we come from patchProp routine
// -nextAttrValue cannot be null or undefined
function patchStyle(lastAttrValue,nextAttrValue,dom){if(isNullOrUndef(nextAttrValue)){dom.removeAttribute('style');return;}var domStyle=dom.style;var style;var value;if(isString$1(nextAttrValue)){domStyle.cssText=nextAttrValue;return;}if(!isNullOrUndef(lastAttrValue)&&!isString$1(lastAttrValue)){for(style in nextAttrValue){// do not add a hasOwnProperty check here, it affects performance
value=nextAttrValue[style];if(value!==lastAttrValue[style]){domStyle.setProperty(style,value);}}for(style in lastAttrValue){if(isNullOrUndef(nextAttrValue[style])){domStyle.removeProperty(style);}}}else{for(style in nextAttrValue){value=nextAttrValue[style];domStyle.setProperty(style,value);}}}function patchDangerInnerHTML(lastValue,nextValue,lastVNode,dom){var lastHtml=lastValue&&lastValue.__html||'';var nextHtml=nextValue&&nextValue.__html||'';if(lastHtml!==nextHtml){if(!isNullOrUndef(nextHtml)&&!isSameInnerHTML(dom,nextHtml)){if(!isNull(lastVNode)){if(lastVNode.childFlags&12/* MultipleChildren */){unmountAllChildren(lastVNode.children);}else if(lastVNode.childFlags===2/* HasVNodeChildren */){unmount(lastVNode.children);}lastVNode.children=null;lastVNode.childFlags=1/* HasInvalidChildren */;}dom.innerHTML=nextHtml;}}}function patchProp(prop,lastValue,nextValue,dom,isSVG,hasControlledValue,lastVNode){switch(prop){case'children':case'childrenType':case'className':case'defaultValue':case'key':case'multiple':case'ref':case'selectedIndex':break;case'autoFocus':dom.autofocus=!!nextValue;break;case'allowfullscreen':case'autoplay':case'capture':case'checked':case'controls':case'default':case'disabled':case'hidden':case'indeterminate':case'loop':case'muted':case'novalidate':case'open':case'readOnly':case'required':case'reversed':case'scoped':case'seamless':case'selected':dom[prop]=!!nextValue;break;case'defaultChecked':case'value':case'volume':if(hasControlledValue&&prop==='value'){break;}var value=isNullOrUndef(nextValue)?'':nextValue;if(dom[prop]!==value){dom[prop]=value;}break;case'style':patchStyle(lastValue,nextValue,dom);break;case'dangerouslySetInnerHTML':patchDangerInnerHTML(lastValue,nextValue,lastVNode,dom);break;default:if(syntheticEvents[prop]){handleSyntheticEvent(prop,lastValue,nextValue,dom);}else if(prop.charCodeAt(0)===111&&prop.charCodeAt(1)===110){patchEvent(prop,lastValue,nextValue,dom);}else if(isNullOrUndef(nextValue)){dom.removeAttribute(prop);}else if(isSVG&&namespaces[prop]){// We optimize for isSVG being false
// If we end up in this path we can read property again
dom.setAttributeNS(namespaces[prop],prop,nextValue);}else{dom.setAttribute(prop,nextValue);}break;}}function mountProps(vNode,flags,props,dom,isSVG){var hasControlledValue=false;var isFormElement=(flags&448/* FormElement */)>0;if(isFormElement){hasControlledValue=isControlledFormElement(props);if(hasControlledValue){addFormElementEventHandlers(flags,dom,props);}}for(var prop in props){// do not add a hasOwnProperty check here, it affects performance
patchProp(prop,null,props[prop],dom,isSVG,hasControlledValue,null);}if(isFormElement){processElement(flags,vNode,dom,props,true,hasControlledValue);}}function renderNewInput(instance,props,context){var nextInput=normalizeRoot(instance.render(props,instance.state,context));var childContext=context;if(isFunction$2(instance.getChildContext)){childContext=combineFrom(context,instance.getChildContext());}instance.$CX=childContext;return nextInput;}function createClassComponentInstance(vNode,Component,props,context,isSVG,lifecycle){var instance=new Component(props,context);var usesNewAPI=instance.$N=Boolean(Component.getDerivedStateFromProps||instance.getSnapshotBeforeUpdate);instance.$SVG=isSVG;instance.$L=lifecycle;vNode.children=instance;instance.$BS=false;instance.context=context;if(instance.props===EMPTY_OBJ){instance.props=props;}if(!usesNewAPI){if(isFunction$2(instance.componentWillMount)){instance.$BR=true;instance.componentWillMount();var pending=instance.$PS;if(!isNull(pending)){var state=instance.state;if(isNull(state)){instance.state=pending;}else{for(var key in pending){state[key]=pending[key];}}instance.$PS=null;}instance.$BR=false;}}else{instance.state=createDerivedState(instance,props,instance.state);}instance.$LI=renderNewInput(instance,props,context);return instance;}function mount(vNode,parentDOM,context,isSVG,nextNode,lifecycle){var flags=vNode.flags|=16384/* InUse */;if(flags&481/* Element */){mountElement(vNode,parentDOM,context,isSVG,nextNode,lifecycle);}else if(flags&4/* ComponentClass */){mountClassComponent(vNode,parentDOM,context,isSVG,nextNode,lifecycle);}else if(flags&8/* ComponentFunction */){mountFunctionalComponent(vNode,parentDOM,context,isSVG,nextNode,lifecycle);mountFunctionalComponentCallbacks(vNode,lifecycle);}else if(flags&512/* Void */||flags&16/* Text */){mountText(vNode,parentDOM,nextNode);}else if(flags&8192/* Fragment */){mountFragment(vNode,context,parentDOM,isSVG,nextNode,lifecycle);}else if(flags&1024/* Portal */){mountPortal(vNode,context,parentDOM,nextNode,lifecycle);}}function mountPortal(vNode,context,parentDOM,nextNode,lifecycle){mount(vNode.children,vNode.ref,context,false,null,lifecycle);var placeHolderVNode=createVoidVNode();mountText(placeHolderVNode,parentDOM,nextNode);vNode.dom=placeHolderVNode.dom;}function mountFragment(vNode,context,parentDOM,isSVG,nextNode,lifecycle){var children=vNode.children;var childFlags=vNode.childFlags;// When fragment is optimized for multiple children, check if there is no children and change flag to invalid
// This is the only normalization always done, to keep optimization flags API same for fragments and regular elements
if(childFlags&12/* MultipleChildren */&&children.length===0){childFlags=vNode.childFlags=2/* HasVNodeChildren */;children=vNode.children=createVoidVNode();}if(childFlags===2/* HasVNodeChildren */){mount(children,parentDOM,nextNode,isSVG,nextNode,lifecycle);}else{mountArrayChildren(children,parentDOM,context,isSVG,nextNode,lifecycle);}}function mountText(vNode,parentDOM,nextNode){var dom=vNode.dom=document.createTextNode(vNode.children);if(!isNull(parentDOM)){insertOrAppend(parentDOM,dom,nextNode);}}function mountElement(vNode,parentDOM,context,isSVG,nextNode,lifecycle){var flags=vNode.flags;var props=vNode.props;var className=vNode.className;var children=vNode.children;var childFlags=vNode.childFlags;var dom=vNode.dom=documentCreateElement(vNode.type,isSVG=isSVG||(flags&32/* SvgElement */)>0);if(!isNullOrUndef(className)&&className!==''){if(isSVG){dom.setAttribute('class',className);}else{dom.className=className;}}if(childFlags===16/* HasTextChildren */){setTextContent(dom,children);}else if(childFlags!==1/* HasInvalidChildren */){var childrenIsSVG=isSVG&&vNode.type!=='foreignObject';if(childFlags===2/* HasVNodeChildren */){if(children.flags&16384/* InUse */){vNode.children=children=directClone(children);}mount(children,dom,context,childrenIsSVG,null,lifecycle);}else if(childFlags===8/* HasKeyedChildren */||childFlags===4/* HasNonKeyedChildren */){mountArrayChildren(children,dom,context,childrenIsSVG,null,lifecycle);}}if(!isNull(parentDOM)){insertOrAppend(parentDOM,dom,nextNode);}if(!isNull(props)){mountProps(vNode,flags,props,dom,isSVG);}mountRef(vNode.ref,dom,lifecycle);}function mountArrayChildren(children,dom,context,isSVG,nextNode,lifecycle){for(var i=0;i<children.length;++i){var child=children[i];if(child.flags&16384/* InUse */){children[i]=child=directClone(child);}mount(child,dom,context,isSVG,nextNode,lifecycle);}}function mountClassComponent(vNode,parentDOM,context,isSVG,nextNode,lifecycle){var instance=createClassComponentInstance(vNode,vNode.type,vNode.props||EMPTY_OBJ,context,isSVG,lifecycle);mount(instance.$LI,parentDOM,instance.$CX,isSVG,nextNode,lifecycle);mountClassComponentCallbacks(vNode.ref,instance,lifecycle);}function renderFunctionalComponent(vNode,context){return vNode.flags&32768/* ForwardRef */?vNode.type.render(vNode.props||EMPTY_OBJ,vNode.ref,context):vNode.type(vNode.props||EMPTY_OBJ,context);}function mountFunctionalComponent(vNode,parentDOM,context,isSVG,nextNode,lifecycle){mount(vNode.children=normalizeRoot(renderFunctionalComponent(vNode,context)),parentDOM,context,isSVG,nextNode,lifecycle);}function createClassMountCallback(instance){return function(){instance.componentDidMount();};}function mountClassComponentCallbacks(ref,instance,lifecycle){mountRef(ref,instance,lifecycle);if(isFunction$2(instance.componentDidMount)){lifecycle.push(createClassMountCallback(instance));}}function createOnMountCallback(ref,vNode){return function(){ref.onComponentDidMount(findDOMfromVNode(vNode,true),vNode.props||EMPTY_OBJ);};}function mountFunctionalComponentCallbacks(vNode,lifecycle){var ref=vNode.ref;if(!isNullOrUndef(ref)){safeCall1(ref.onComponentWillMount,vNode.props||EMPTY_OBJ);if(isFunction$2(ref.onComponentDidMount)){lifecycle.push(createOnMountCallback(ref,vNode));}}}function replaceWithNewNode(lastVNode,nextVNode,parentDOM,context,isSVG,lifecycle){unmount(lastVNode);if((nextVNode.flags&lastVNode.flags&2033/* DOMRef */)!==0){mount(nextVNode,null,context,isSVG,null,lifecycle);// Single DOM operation, when we have dom references available
replaceChild(parentDOM,nextVNode.dom,lastVNode.dom);}else{mount(nextVNode,parentDOM,context,isSVG,findDOMfromVNode(lastVNode,true),lifecycle);removeVNodeDOM(lastVNode,parentDOM);}}function patch(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle){var nextFlags=nextVNode.flags|=16384/* InUse */;if(lastVNode.flags!==nextFlags||lastVNode.type!==nextVNode.type||lastVNode.key!==nextVNode.key||nextFlags&2048/* ReCreate */){if(lastVNode.flags&16384/* InUse */){replaceWithNewNode(lastVNode,nextVNode,parentDOM,context,isSVG,lifecycle);}else{// Last vNode is not in use, it has crashed at application level. Just mount nextVNode and ignore last one
mount(nextVNode,parentDOM,context,isSVG,nextNode,lifecycle);}}else if(nextFlags&481/* Element */){patchElement(lastVNode,nextVNode,context,isSVG,nextFlags,lifecycle);}else if(nextFlags&4/* ComponentClass */){patchClassComponent(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle);}else if(nextFlags&8/* ComponentFunction */){patchFunctionalComponent(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle);}else if(nextFlags&16/* Text */){patchText(lastVNode,nextVNode);}else if(nextFlags&512/* Void */){nextVNode.dom=lastVNode.dom;}else if(nextFlags&8192/* Fragment */){patchFragment(lastVNode,nextVNode,parentDOM,context,isSVG,lifecycle);}else{patchPortal(lastVNode,nextVNode,context,lifecycle);}}function patchSingleTextChild(lastChildren,nextChildren,parentDOM){if(lastChildren!==nextChildren){if(lastChildren!==''){parentDOM.firstChild.nodeValue=nextChildren;}else{setTextContent(parentDOM,nextChildren);}}}function patchContentEditableChildren(dom,nextChildren){if(dom.textContent!==nextChildren){dom.textContent=nextChildren;}}function patchFragment(lastVNode,nextVNode,parentDOM,context,isSVG,lifecycle){var lastChildren=lastVNode.children;var nextChildren=nextVNode.children;var lastChildFlags=lastVNode.childFlags;var nextChildFlags=nextVNode.childFlags;var nextNode=null;// When fragment is optimized for multiple children, check if there is no children and change flag to invalid
// This is the only normalization always done, to keep optimization flags API same for fragments and regular elements
if(nextChildFlags&12/* MultipleChildren */&&nextChildren.length===0){nextChildFlags=nextVNode.childFlags=2/* HasVNodeChildren */;nextChildren=nextVNode.children=createVoidVNode();}var nextIsSingle=(nextChildFlags&2/* HasVNodeChildren */)!==0;if(lastChildFlags&12/* MultipleChildren */){var lastLen=lastChildren.length;// We need to know Fragment's edge node when
if(// It uses keyed algorithm
lastChildFlags&8/* HasKeyedChildren */&&nextChildFlags&8/* HasKeyedChildren */||// It transforms from many to single
nextIsSingle||// It will append more nodes
!nextIsSingle&&nextChildren.length>lastLen){// When fragment has multiple children there is always at least one vNode
nextNode=findDOMfromVNode(lastChildren[lastLen-1],false).nextSibling;}}patchChildren(lastChildFlags,nextChildFlags,lastChildren,nextChildren,parentDOM,context,isSVG,nextNode,lastVNode,lifecycle);}function patchPortal(lastVNode,nextVNode,context,lifecycle){var lastContainer=lastVNode.ref;var nextContainer=nextVNode.ref;var nextChildren=nextVNode.children;patchChildren(lastVNode.childFlags,nextVNode.childFlags,lastVNode.children,nextChildren,lastContainer,context,false,null,lastVNode,lifecycle);nextVNode.dom=lastVNode.dom;if(lastContainer!==nextContainer&&!isInvalid(nextChildren)){var node=nextChildren.dom;removeChild(lastContainer,node);appendChild(nextContainer,node);}}function patchElement(lastVNode,nextVNode,context,isSVG,nextFlags,lifecycle){var dom=nextVNode.dom=lastVNode.dom;var lastProps=lastVNode.props;var nextProps=nextVNode.props;var isFormElement=false;var hasControlledValue=false;var nextPropsOrEmpty;isSVG=isSVG||(nextFlags&32/* SvgElement */)>0;// inlined patchProps  -- starts --
if(lastProps!==nextProps){var lastPropsOrEmpty=lastProps||EMPTY_OBJ;nextPropsOrEmpty=nextProps||EMPTY_OBJ;if(nextPropsOrEmpty!==EMPTY_OBJ){isFormElement=(nextFlags&448/* FormElement */)>0;if(isFormElement){hasControlledValue=isControlledFormElement(nextPropsOrEmpty);}for(var prop in nextPropsOrEmpty){var lastValue=lastPropsOrEmpty[prop];var nextValue=nextPropsOrEmpty[prop];if(lastValue!==nextValue){patchProp(prop,lastValue,nextValue,dom,isSVG,hasControlledValue,lastVNode);}}}if(lastPropsOrEmpty!==EMPTY_OBJ){for(var prop$1 in lastPropsOrEmpty){if(isNullOrUndef(nextPropsOrEmpty[prop$1])&&!isNullOrUndef(lastPropsOrEmpty[prop$1])){patchProp(prop$1,lastPropsOrEmpty[prop$1],null,dom,isSVG,hasControlledValue,lastVNode);}}}}var nextChildren=nextVNode.children;var nextClassName=nextVNode.className;// inlined patchProps  -- ends --
if(lastVNode.className!==nextClassName){if(isNullOrUndef(nextClassName)){dom.removeAttribute('class');}else if(isSVG){dom.setAttribute('class',nextClassName);}else{dom.className=nextClassName;}}if(nextFlags&4096/* ContentEditable */){patchContentEditableChildren(dom,nextChildren);}else{patchChildren(lastVNode.childFlags,nextVNode.childFlags,lastVNode.children,nextChildren,dom,context,isSVG&&nextVNode.type!=='foreignObject',null,lastVNode,lifecycle);}if(isFormElement){processElement(nextFlags,nextVNode,dom,nextPropsOrEmpty,false,hasControlledValue);}var nextRef=nextVNode.ref;var lastRef=lastVNode.ref;if(lastRef!==nextRef){unmountRef(lastRef);mountRef(nextRef,dom,lifecycle);}}function replaceOneVNodeWithMultipleVNodes(lastChildren,nextChildren,parentDOM,context,isSVG,lifecycle){unmount(lastChildren);mountArrayChildren(nextChildren,parentDOM,context,isSVG,findDOMfromVNode(lastChildren,true),lifecycle);removeVNodeDOM(lastChildren,parentDOM);}function patchChildren(lastChildFlags,nextChildFlags,lastChildren,nextChildren,parentDOM,context,isSVG,nextNode,parentVNode,lifecycle){switch(lastChildFlags){case 2/* HasVNodeChildren */:switch(nextChildFlags){case 2/* HasVNodeChildren */:patch(lastChildren,nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;case 1/* HasInvalidChildren */:remove(lastChildren,parentDOM);break;case 16/* HasTextChildren */:unmount(lastChildren);setTextContent(parentDOM,nextChildren);break;default:replaceOneVNodeWithMultipleVNodes(lastChildren,nextChildren,parentDOM,context,isSVG,lifecycle);break;}break;case 1/* HasInvalidChildren */:switch(nextChildFlags){case 2/* HasVNodeChildren */:mount(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;case 1/* HasInvalidChildren */:break;case 16/* HasTextChildren */:setTextContent(parentDOM,nextChildren);break;default:mountArrayChildren(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;}break;case 16/* HasTextChildren */:switch(nextChildFlags){case 16/* HasTextChildren */:patchSingleTextChild(lastChildren,nextChildren,parentDOM);break;case 2/* HasVNodeChildren */:clearDOM(parentDOM);mount(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;case 1/* HasInvalidChildren */:clearDOM(parentDOM);break;default:clearDOM(parentDOM);mountArrayChildren(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;}break;default:switch(nextChildFlags){case 16/* HasTextChildren */:unmountAllChildren(lastChildren);setTextContent(parentDOM,nextChildren);break;case 2/* HasVNodeChildren */:removeAllChildren(parentDOM,parentVNode,lastChildren);mount(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;case 1/* HasInvalidChildren */:removeAllChildren(parentDOM,parentVNode,lastChildren);break;default:var lastLength=lastChildren.length|0;var nextLength=nextChildren.length|0;// Fast path's for both algorithms
if(lastLength===0){if(nextLength>0){mountArrayChildren(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);}}else if(nextLength===0){removeAllChildren(parentDOM,parentVNode,lastChildren);}else if(nextChildFlags===8/* HasKeyedChildren */&&lastChildFlags===8/* HasKeyedChildren */){patchKeyedChildren(lastChildren,nextChildren,parentDOM,context,isSVG,lastLength,nextLength,nextNode,parentVNode,lifecycle);}else{patchNonKeyedChildren(lastChildren,nextChildren,parentDOM,context,isSVG,lastLength,nextLength,nextNode,lifecycle);}break;}break;}}function createDidUpdate(instance,lastProps,lastState,snapshot,lifecycle){lifecycle.push(function(){instance.componentDidUpdate(lastProps,lastState,snapshot);});}function updateClassComponent(instance,nextState,nextProps,parentDOM,context,isSVG,force,nextNode,lifecycle){var lastState=instance.state;var lastProps=instance.props;var usesNewAPI=Boolean(instance.$N);var hasSCU=isFunction$2(instance.shouldComponentUpdate);if(usesNewAPI){nextState=createDerivedState(instance,nextProps,nextState!==lastState?combineFrom(lastState,nextState):nextState);}if(force||!hasSCU||hasSCU&&instance.shouldComponentUpdate(nextProps,nextState,context)){if(!usesNewAPI&&isFunction$2(instance.componentWillUpdate)){instance.componentWillUpdate(nextProps,nextState,context);}instance.props=nextProps;instance.state=nextState;instance.context=context;var snapshot=null;var nextInput=renderNewInput(instance,nextProps,context);if(usesNewAPI&&isFunction$2(instance.getSnapshotBeforeUpdate)){snapshot=instance.getSnapshotBeforeUpdate(lastProps,lastState);}patch(instance.$LI,nextInput,parentDOM,instance.$CX,isSVG,nextNode,lifecycle);// Dont update Last input, until patch has been succesfully executed
instance.$LI=nextInput;if(isFunction$2(instance.componentDidUpdate)){createDidUpdate(instance,lastProps,lastState,snapshot,lifecycle);}}else{instance.props=nextProps;instance.state=nextState;instance.context=context;}}function patchClassComponent(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle){var instance=nextVNode.children=lastVNode.children;// If Component has crashed, ignore it to stay functional
if(isNull(instance)){return;}instance.$L=lifecycle;var nextProps=nextVNode.props||EMPTY_OBJ;var nextRef=nextVNode.ref;var lastRef=lastVNode.ref;var nextState=instance.state;if(!instance.$N){if(isFunction$2(instance.componentWillReceiveProps)){instance.$BR=true;instance.componentWillReceiveProps(nextProps,context);// If instance component was removed during its own update do nothing.
if(instance.$UN){return;}instance.$BR=false;}if(!isNull(instance.$PS)){nextState=combineFrom(nextState,instance.$PS);instance.$PS=null;}}updateClassComponent(instance,nextState,nextProps,parentDOM,context,isSVG,false,nextNode,lifecycle);if(lastRef!==nextRef){unmountRef(lastRef);mountRef(nextRef,instance,lifecycle);}}function patchFunctionalComponent(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle){var shouldUpdate=true;var nextProps=nextVNode.props||EMPTY_OBJ;var nextRef=nextVNode.ref;var lastProps=lastVNode.props;var nextHooksDefined=!isNullOrUndef(nextRef);var lastInput=lastVNode.children;if(nextHooksDefined&&isFunction$2(nextRef.onComponentShouldUpdate)){shouldUpdate=nextRef.onComponentShouldUpdate(lastProps,nextProps);}if(shouldUpdate!==false){if(nextHooksDefined&&isFunction$2(nextRef.onComponentWillUpdate)){nextRef.onComponentWillUpdate(lastProps,nextProps);}var type=nextVNode.type;var nextInput=normalizeRoot(nextVNode.flags&32768/* ForwardRef */?type.render(nextProps,nextRef,context):type(nextProps,context));patch(lastInput,nextInput,parentDOM,context,isSVG,nextNode,lifecycle);nextVNode.children=nextInput;if(nextHooksDefined&&isFunction$2(nextRef.onComponentDidUpdate)){nextRef.onComponentDidUpdate(lastProps,nextProps);}}else{nextVNode.children=lastInput;}}function patchText(lastVNode,nextVNode){var nextText=nextVNode.children;var dom=nextVNode.dom=lastVNode.dom;if(nextText!==lastVNode.children){dom.nodeValue=nextText;}}function patchNonKeyedChildren(lastChildren,nextChildren,dom,context,isSVG,lastChildrenLength,nextChildrenLength,nextNode,lifecycle){var commonLength=lastChildrenLength>nextChildrenLength?nextChildrenLength:lastChildrenLength;var i=0;var nextChild;var lastChild;for(;i<commonLength;++i){nextChild=nextChildren[i];lastChild=lastChildren[i];if(nextChild.flags&16384/* InUse */){nextChild=nextChildren[i]=directClone(nextChild);}patch(lastChild,nextChild,dom,context,isSVG,nextNode,lifecycle);lastChildren[i]=nextChild;}if(lastChildrenLength<nextChildrenLength){for(i=commonLength;i<nextChildrenLength;++i){nextChild=nextChildren[i];if(nextChild.flags&16384/* InUse */){nextChild=nextChildren[i]=directClone(nextChild);}mount(nextChild,dom,context,isSVG,nextNode,lifecycle);}}else if(lastChildrenLength>nextChildrenLength){for(i=commonLength;i<lastChildrenLength;++i){remove(lastChildren[i],dom);}}}function patchKeyedChildren(a,b,dom,context,isSVG,aLength,bLength,outerEdge,parentVNode,lifecycle){var aEnd=aLength-1;var bEnd=bLength-1;var j=0;var aNode=a[j];var bNode=b[j];var nextPos;var nextNode;// Step 1
// tslint:disable-next-line
outer:{// Sync nodes with the same key at the beginning.
while(aNode.key===bNode.key){if(bNode.flags&16384/* InUse */){b[j]=bNode=directClone(bNode);}patch(aNode,bNode,dom,context,isSVG,outerEdge,lifecycle);a[j]=bNode;++j;if(j>aEnd||j>bEnd){break outer;}aNode=a[j];bNode=b[j];}aNode=a[aEnd];bNode=b[bEnd];// Sync nodes with the same key at the end.
while(aNode.key===bNode.key){if(bNode.flags&16384/* InUse */){b[bEnd]=bNode=directClone(bNode);}patch(aNode,bNode,dom,context,isSVG,outerEdge,lifecycle);a[aEnd]=bNode;aEnd--;bEnd--;if(j>aEnd||j>bEnd){break outer;}aNode=a[aEnd];bNode=b[bEnd];}}if(j>aEnd){if(j<=bEnd){nextPos=bEnd+1;nextNode=nextPos<bLength?findDOMfromVNode(b[nextPos],true):outerEdge;while(j<=bEnd){bNode=b[j];if(bNode.flags&16384/* InUse */){b[j]=bNode=directClone(bNode);}++j;mount(bNode,dom,context,isSVG,nextNode,lifecycle);}}}else if(j>bEnd){while(j<=aEnd){remove(a[j++],dom);}}else{patchKeyedChildrenComplex(a,b,context,aLength,bLength,aEnd,bEnd,j,dom,isSVG,outerEdge,parentVNode,lifecycle);}}function patchKeyedChildrenComplex(a,b,context,aLength,bLength,aEnd,bEnd,j,dom,isSVG,outerEdge,parentVNode,lifecycle){var aNode;var bNode;var nextPos;var i=0;var aStart=j;var bStart=j;var aLeft=aEnd-j+1;var bLeft=bEnd-j+1;var sources=new Int32Array(bLeft+1);// Keep track if its possible to remove whole DOM using textContent = '';
var canRemoveWholeContent=aLeft===aLength;var moved=false;var pos=0;var patched=0;// When sizes are small, just loop them through
if(bLength<4||(aLeft|bLeft)<32){for(i=aStart;i<=aEnd;++i){aNode=a[i];if(patched<bLeft){for(j=bStart;j<=bEnd;j++){bNode=b[j];if(aNode.key===bNode.key){sources[j-bStart]=i+1;if(canRemoveWholeContent){canRemoveWholeContent=false;while(aStart<i){remove(a[aStart++],dom);}}if(pos>j){moved=true;}else{pos=j;}if(bNode.flags&16384/* InUse */){b[j]=bNode=directClone(bNode);}patch(aNode,bNode,dom,context,isSVG,outerEdge,lifecycle);++patched;break;}}if(!canRemoveWholeContent&&j>bEnd){remove(aNode,dom);}}else if(!canRemoveWholeContent){remove(aNode,dom);}}}else{var keyIndex={};// Map keys by their index
for(i=bStart;i<=bEnd;++i){keyIndex[b[i].key]=i;}// Try to patch same keys
for(i=aStart;i<=aEnd;++i){aNode=a[i];if(patched<bLeft){j=keyIndex[aNode.key];if(j!==void 0){if(canRemoveWholeContent){canRemoveWholeContent=false;while(i>aStart){remove(a[aStart++],dom);}}sources[j-bStart]=i+1;if(pos>j){moved=true;}else{pos=j;}bNode=b[j];if(bNode.flags&16384/* InUse */){b[j]=bNode=directClone(bNode);}patch(aNode,bNode,dom,context,isSVG,outerEdge,lifecycle);++patched;}else if(!canRemoveWholeContent){remove(aNode,dom);}}else if(!canRemoveWholeContent){remove(aNode,dom);}}}// fast-path: if nothing patched remove all old and add all new
if(canRemoveWholeContent){removeAllChildren(dom,parentVNode,a);mountArrayChildren(b,dom,context,isSVG,outerEdge,lifecycle);}else if(moved){var seq=lis_algorithm(sources);j=seq.length-1;for(i=bLeft-1;i>=0;i--){if(sources[i]===0){pos=i+bStart;bNode=b[pos];if(bNode.flags&16384/* InUse */){b[pos]=bNode=directClone(bNode);}nextPos=pos+1;mount(bNode,dom,context,isSVG,nextPos<bLength?findDOMfromVNode(b[nextPos],true):outerEdge,lifecycle);}else if(j<0||i!==seq[j]){pos=i+bStart;bNode=b[pos];nextPos=pos+1;moveVNodeDOM(bNode,dom,nextPos<bLength?findDOMfromVNode(b[nextPos],true):outerEdge);}else{j--;}}}else if(patched!==bLeft){// when patched count doesn't match b length we need to insert those new ones
// loop backwards so we can use insertBefore
for(i=bLeft-1;i>=0;i--){if(sources[i]===0){pos=i+bStart;bNode=b[pos];if(bNode.flags&16384/* InUse */){b[pos]=bNode=directClone(bNode);}nextPos=pos+1;mount(bNode,dom,context,isSVG,nextPos<bLength?findDOMfromVNode(b[nextPos],true):outerEdge,lifecycle);}}}}var result$1;var p$1;var maxLen=0;// https://en.wikipedia.org/wiki/Longest_increasing_subsequence
function lis_algorithm(arr){var arrI=0;var i=0;var j=0;var k=0;var u=0;var v=0;var c=0;var len=arr.length;if(len>maxLen){maxLen=len;result$1=new Int32Array(len);p$1=new Int32Array(len);}for(;i<len;++i){arrI=arr[i];if(arrI!==0){j=result$1[k];if(arr[j]<arrI){p$1[i]=j;result$1[++k]=i;continue;}u=0;v=k;while(u<v){c=u+v>>1;if(arr[result$1[c]]<arrI){u=c+1;}else{v=c;}}if(arrI<arr[result$1[u]]){if(u>0){p$1[i]=result$1[u-1];}result$1[u]=i;}}}u=k+1;var seq=new Int32Array(u);v=result$1[u-1];while(u-->0){seq[u]=v;v=p$1[v];result$1[u]=0;}return seq;}var hasDocumentAvailable=typeof document!=='undefined';if(hasDocumentAvailable){/*
     * Defining $EV and $V properties on Node.prototype
     * fixes v8 "wrong map" de-optimization
     */if(window.Node){Node.prototype.$EV=null;Node.prototype.$V=null;}}function __render(input,parentDOM,callback,context){var lifecycle=[];var rootInput=parentDOM.$V;if(isNullOrUndef(rootInput)){if(!isNullOrUndef(input)){if(input.flags&16384/* InUse */){input=directClone(input);}mount(input,parentDOM,context,false,null,lifecycle);parentDOM.$V=input;rootInput=input;}}else{if(isNullOrUndef(input)){remove(rootInput,parentDOM);parentDOM.$V=null;}else{if(input.flags&16384/* InUse */){input=directClone(input);}patch(rootInput,input,parentDOM,context,false,null,lifecycle);rootInput=parentDOM.$V=input;}}if(lifecycle.length>0){callAll(lifecycle);}if(isFunction$2(callback)){callback();}if(isFunction$2(options$1.renderComplete)){options$1.renderComplete(rootInput,parentDOM);}}function render(input,parentDOM,callback,context){if(callback===void 0)callback=null;if(context===void 0)context=EMPTY_OBJ;__render(input,parentDOM,callback,context);}var nextTick=typeof Promise!=='undefined'?Promise.resolve().then.bind(Promise.resolve()):function(a){window.setTimeout(a,0);};if(true){console.warn('You are running production build of Inferno in development mode. Use dev:module entry point.');}var isArray$3=Array.isArray;function isStringOrNumber$1(o){var type=_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(o);return type==='string'||type==='number';}function isNullOrUndef$1(o){return o===void 0||o===null;}function isInvalid$1(o){return o===null||o===false||o===true||o===void 0;}function isFunction$3(o){return typeof o==='function';}function isString$2(o){return typeof o==='string';}function isNumber$1(o){return typeof o==='number';}function isNull$1(o){return o===null;}function isUndefined(o){return o===void 0;}function combineFrom$1(first,second){var out={};if(first){for(var key in first){out[key]=first[key];}}if(second){for(var key$1 in second){out[key$1]=second[key$1];}}return out;}// We need EMPTY_OBJ defined in one place.
// Its used for comparison so we cant inline it into shared
var EMPTY_OBJ$1={};var Fragment='$F';function mergeUnsetProperties(to,from){for(var propName in from){if(isUndefined(to[propName])){to[propName]=from[propName];}}return to;}var keyPrefix$1='$';function V$1(childFlags,children,className,flags,key,props,ref,type){this.childFlags=childFlags;this.children=children;this.className=className;this.dom=null;this.flags=flags;this.key=key===void 0?null:key;this.props=props===void 0?null:props;this.ref=ref===void 0?null:ref;this.type=type;}function createVNode$1(flags,type,className,children,childFlags,props,key,ref){var childFlag=childFlags===void 0?1/* HasInvalidChildren */:childFlags;var vNode=new V$1(childFlag,children,className,flags,key,props,ref,type);if(childFlag===0/* UnknownChildren */){normalizeChildren$1(vNode,vNode.children);}return vNode;}function mergeDefaultHooks(flags,type,ref){if(flags&4/* ComponentClass */){return ref;}var defaultHooks=(flags&32768/* ForwardRef */?type.render:type).defaultHooks;if(isNullOrUndef$1(defaultHooks)){return ref;}if(isNullOrUndef$1(ref)){return defaultHooks;}return mergeUnsetProperties(ref,defaultHooks);}function mergeDefaultProps(flags,type,props){// set default props
var defaultProps=(flags&32768/* ForwardRef */?type.render:type).defaultProps;if(isNullOrUndef$1(defaultProps)){return props;}if(isNullOrUndef$1(props)){return combineFrom$1(defaultProps,null);}return mergeUnsetProperties(props,defaultProps);}function resolveComponentFlags(flags,type){if(flags&12/* ComponentKnown */){return flags;}if(type.prototype&&type.prototype.render){return 4/* ComponentClass */;}if(type.render){return 32776/* ForwardRefComponent */;}return 8/* ComponentFunction */;}function createComponentVNode(flags,type,props,key,ref){flags=resolveComponentFlags(flags,type);var vNode=new V$1(1/* HasInvalidChildren */,null,null,flags,key,mergeDefaultProps(flags,type,props),mergeDefaultHooks(flags,type,ref),type);return vNode;}function createTextVNode$1(text,key){return new V$1(1/* HasInvalidChildren */,isNullOrUndef$1(text)||text===true||text===false?'':text,null,16/* Text */,key,null,null,null);}function createFragment$1(children,childFlags,key){var fragment=createVNode$1(8192/* Fragment */,8192/* Fragment */,null,children,childFlags,null,key,null);switch(fragment.childFlags){case 1/* HasInvalidChildren */:fragment.children=createVoidVNode$1();fragment.childFlags=2/* HasVNodeChildren */;break;case 16/* HasTextChildren */:fragment.children=[createTextVNode$1(children)];fragment.childFlags=4/* HasNonKeyedChildren */;break;}return fragment;}/*
 * Fragment is different than normal vNode,
 * because when it needs to be cloned we need to clone its children too
 * But not normalize, because otherwise those possibly get KEY and re-mount
 */function cloneFragment$1(vNodeToClone){var clonedChildren;var oldChildren=vNodeToClone.children;var childFlags=vNodeToClone.childFlags;if(childFlags===2/* HasVNodeChildren */){clonedChildren=directClone$1(oldChildren);}else if(childFlags&12/* MultipleChildren */){clonedChildren=[];for(var i=0,len=oldChildren.length;i<len;++i){clonedChildren.push(directClone$1(oldChildren[i]));}}return createFragment$1(clonedChildren,childFlags,vNodeToClone.key);}function directClone$1(vNodeToClone){var flags=vNodeToClone.flags&-16385/* ClearInUse */;var props=vNodeToClone.props;if(flags&14/* Component */){if(!isNull$1(props)){var propsToClone=props;props={};for(var key in propsToClone){props[key]=propsToClone[key];}}}if((flags&8192/* Fragment */)===0){return new V$1(vNodeToClone.childFlags,vNodeToClone.children,vNodeToClone.className,flags,vNodeToClone.key,props,vNodeToClone.ref,vNodeToClone.type);}return cloneFragment$1(vNodeToClone);}function createVoidVNode$1(){return createTextVNode$1('',null);}function _normalizeVNodes$1(nodes,result,index,currentKey){for(var len=nodes.length;index<len;index++){var n=nodes[index];if(!isInvalid$1(n)){var newKey=currentKey+keyPrefix$1+index;if(isArray$3(n)){_normalizeVNodes$1(n,result,0,newKey);}else{if(isStringOrNumber$1(n)){n=createTextVNode$1(n,newKey);}else{var oldKey=n.key;var isPrefixedKey=isString$2(oldKey)&&oldKey[0]===keyPrefix$1;if(n.flags&81920/* InUseOrNormalized */||isPrefixedKey){n=directClone$1(n);}n.flags|=65536/* Normalized */;if(!isPrefixedKey){if(isNull$1(oldKey)){n.key=newKey;}else{n.key=currentKey+oldKey;}}else if(oldKey.substring(0,currentKey.length)!==currentKey){n.key=currentKey+oldKey;}}result.push(n);}}}}function getFlagsForElementVnode(type){switch(type){case'svg':return 32/* SvgElement */;case'input':return 64/* InputElement */;case'select':return 256/* SelectElement */;case'textarea':return 128/* TextareaElement */;case Fragment:return 8192/* Fragment */;default:return 1/* HtmlElement */;}}function normalizeChildren$1(vNode,children){var newChildren;var newChildFlags=1/* HasInvalidChildren */;// Don't change children to match strict equal (===) true in patching
if(isInvalid$1(children)){newChildren=children;}else if(isStringOrNumber$1(children)){newChildFlags=16/* HasTextChildren */;newChildren=children;}else if(isArray$3(children)){var len=children.length;for(var i=0;i<len;++i){var n=children[i];if(isInvalid$1(n)||isArray$3(n)){newChildren=newChildren||children.slice(0,i);_normalizeVNodes$1(children,newChildren,i,'');break;}else if(isStringOrNumber$1(n)){newChildren=newChildren||children.slice(0,i);newChildren.push(createTextVNode$1(n,keyPrefix$1+i));}else{var key=n.key;var needsCloning=(n.flags&81920/* InUseOrNormalized */)>0;var isNullKey=isNull$1(key);var isPrefixed=isString$2(key)&&key[0]===keyPrefix$1;if(needsCloning||isNullKey||isPrefixed){newChildren=newChildren||children.slice(0,i);if(needsCloning||isPrefixed){n=directClone$1(n);}if(isNullKey||isPrefixed){n.key=keyPrefix$1+i;}newChildren.push(n);}else if(newChildren){newChildren.push(n);}n.flags|=65536/* Normalized */;}}newChildren=newChildren||children;if(newChildren.length===0){newChildFlags=1/* HasInvalidChildren */;}else{newChildFlags=8/* HasKeyedChildren */;}}else{newChildren=children;newChildren.flags|=65536/* Normalized */;if(children.flags&81920/* InUseOrNormalized */){newChildren=directClone$1(children);}newChildFlags=2/* HasVNodeChildren */;}vNode.children=newChildren;vNode.childFlags=newChildFlags;return vNode;}function triggerEventListener$1(props,methodName,e){if(props[methodName]){var listener=props[methodName];if(listener.event){listener.event(listener.data,e);}else{listener(e);}}else{var nativeListenerName=methodName.toLowerCase();if(props[nativeListenerName]){props[nativeListenerName](e);}}}function createWrappedFunction$1(methodName,applyValue){var fnMethod=function fnMethod(e){var vNode=this.$V;// If vNode is gone by the time event fires, no-op
if(!vNode){return;}var props=vNode.props||EMPTY_OBJ$1;var dom=vNode.dom;if(isString$2(methodName)){triggerEventListener$1(props,methodName,e);}else{for(var i=0;i<methodName.length;++i){triggerEventListener$1(props,methodName[i],e);}}if(isFunction$3(applyValue)){var newVNode=this.$V;var newProps=newVNode.props||EMPTY_OBJ$1;applyValue(newProps,dom,false,newVNode);}};Object.defineProperty(fnMethod,'wrapped',{configurable:false,enumerable:false,value:true,writable:false});return fnMethod;}function isCheckedType$1(type){return type==='checkbox'||type==='radio';}var onTextInputChange$1=createWrappedFunction$1('onInput',applyValueInput$1);var wrappedOnChange$2=createWrappedFunction$1(['onClick','onChange'],applyValueInput$1);function applyValueInput$1(nextPropsOrEmpty,dom){var type=nextPropsOrEmpty.type;var value=nextPropsOrEmpty.value;var checked=nextPropsOrEmpty.checked;var multiple=nextPropsOrEmpty.multiple;var defaultValue=nextPropsOrEmpty.defaultValue;var hasValue=!isNullOrUndef$1(value);if(type&&type!==dom.type){dom.setAttribute('type',type);}if(!isNullOrUndef$1(multiple)&&multiple!==dom.multiple){dom.multiple=multiple;}if(!isNullOrUndef$1(defaultValue)&&!hasValue){dom.defaultValue=defaultValue+'';}if(isCheckedType$1(type)){if(hasValue){dom.value=value;}if(!isNullOrUndef$1(checked)){dom.checked=checked;}}else{if(hasValue&&dom.value!==value){dom.defaultValue=value;dom.value=value;}else if(!isNullOrUndef$1(checked)){dom.checked=checked;}}}function updateChildOptions$1(vNode,value){if(vNode.type==='option'){updateChildOption$1(vNode,value);}else{var children=vNode.children;var flags=vNode.flags;if(flags&4/* ComponentClass */){updateChildOptions$1(children.$LI,value);}else if(flags&8/* ComponentFunction */){updateChildOptions$1(children,value);}else if(vNode.childFlags===2/* HasVNodeChildren */){updateChildOptions$1(children,value);}else if(vNode.childFlags&12/* MultipleChildren */){for(var i=0,len=children.length;i<len;++i){updateChildOptions$1(children[i],value);}}}}function updateChildOption$1(vNode,value){var props=vNode.props||EMPTY_OBJ$1;var dom=vNode.dom;// we do this as multiple may have changed
dom.value=props.value;if(props.value===value||isArray$3(value)&&value.indexOf(props.value)!==-1){dom.selected=true;}else if(!isNullOrUndef$1(value)||!isNullOrUndef$1(props.selected)){dom.selected=props.selected||false;}}var onSelectChange$1=createWrappedFunction$1('onChange',applyValueSelect$1);function applyValueSelect$1(nextPropsOrEmpty,dom,mounting,vNode){var multiplePropInBoolean=Boolean(nextPropsOrEmpty.multiple);if(!isNullOrUndef$1(nextPropsOrEmpty.multiple)&&multiplePropInBoolean!==dom.multiple){dom.multiple=multiplePropInBoolean;}var index=nextPropsOrEmpty.selectedIndex;if(index===-1){dom.selectedIndex=-1;}var childFlags=vNode.childFlags;if(childFlags!==1/* HasInvalidChildren */){var value=nextPropsOrEmpty.value;if(isNumber$1(index)&&index>-1&&dom.options[index]){value=dom.options[index].value;}if(mounting&&isNullOrUndef$1(value)){value=nextPropsOrEmpty.defaultValue;}updateChildOptions$1(vNode,value);}}var onTextareaInputChange$1=createWrappedFunction$1('onInput',applyValueTextArea$1);var wrappedOnChange$1$1=createWrappedFunction$1('onChange');function applyValueTextArea$1(nextPropsOrEmpty,dom,mounting){var value=nextPropsOrEmpty.value;var domValue=dom.value;if(isNullOrUndef$1(value)){if(mounting){var defaultValue=nextPropsOrEmpty.defaultValue;if(!isNullOrUndef$1(defaultValue)&&defaultValue!==domValue){dom.defaultValue=defaultValue;dom.value=defaultValue;}}}else if(domValue!==value){/* There is value so keep it controlled */dom.defaultValue=value;dom.value=value;}}var hasDocumentAvailable$1=typeof document!=='undefined';if(hasDocumentAvailable$1){/*
     * Defining $EV and $V properties on Node.prototype
     * fixes v8 "wrong map" de-optimization
     */if(window.Node){Node.prototype.$EV=null;Node.prototype.$V=null;}}var nextTick$1=typeof Promise!=='undefined'?Promise.resolve().then.bind(Promise.resolve()):function(a){window.setTimeout(a,0);};if(true){console.warn('You are running production build of Inferno in development mode. Use dev:module entry point.');}function isNullOrUndef$2(o){return o===void 0||o===null;}function isString$3(o){return typeof o==='string';}function isUndefined$1(o){return o===void 0;}var componentHooks={onComponentDidMount:1,onComponentDidUpdate:1,onComponentShouldUpdate:1,onComponentWillMount:1,onComponentWillUnmount:1,onComponentWillUpdate:1};function createElement(type,props,_children){var arguments$1=arguments;var children;var ref=null;var key=null;var className=null;var flags=0;var newProps;var childLen=arguments.length-2;if(childLen===1){children=_children;}else if(childLen>1){children=[];while(childLen-->0){children[childLen]=arguments$1[childLen+2];}}if(isString$3(type)){flags=getFlagsForElementVnode(type);if(!isNullOrUndef$2(props)){newProps={};for(var prop in props){if(prop==='className'||prop==='class'){className=props[prop];}else if(prop==='key'){key=props.key;}else if(prop==='children'&&isUndefined$1(children)){children=props.children;// always favour children args over props
}else if(prop==='ref'){ref=props.ref;}else{if(prop==='contenteditable'){flags|=4096/* ContentEditable */;}newProps[prop]=props[prop];}}}}else{flags=2/* ComponentUnknown */;if(!isUndefined$1(children)){if(!props){props={};}props.children=children;}if(!isNullOrUndef$2(props)){newProps={};for(var prop$1 in props){if(prop$1==='key'){key=props.key;}else if(prop$1==='ref'){ref=props.ref;}else if(componentHooks[prop$1]===1){if(!ref){ref={};}ref[prop$1]=props[prop$1];}else{newProps[prop$1]=props[prop$1];}}}return createComponentVNode(flags,type,newProps,key,ref);}if(flags&8192/* Fragment */){return createFragment$1(childLen===1?[children]:children,0/* UnknownChildren */,key);}return createVNode$1(flags,type,className,children,0/* UnknownChildren */,newProps,key,ref);}var hoistNonInfernoStatics=createCommonjsModule(function(module){var INFERNO_STATICS={childContextTypes:true,contextTypes:true,defaultProps:true,displayName:true,getDefaultProps:true,propTypes:true,type:true};var KNOWN_STATICS={name:true,length:true,prototype:true,caller:true,arguments:true,arity:true};var isGetOwnPropertySymbolsAvailable=typeof Object.getOwnPropertySymbols==='function';function hoistNonReactStatics(targetComponent,sourceComponent,customStatics){if(typeof sourceComponent!=='string'){// don't hoist over string (html) components
var keys=Object.getOwnPropertyNames(sourceComponent);/* istanbul ignore else */if(isGetOwnPropertySymbolsAvailable){keys=keys.concat(Object.getOwnPropertySymbols(sourceComponent));}for(var i=0;i<keys.length;++i){if(!INFERNO_STATICS[keys[i]]&&!KNOWN_STATICS[keys[i]]&&(!customStatics||!customStatics[keys[i]])){try{targetComponent[keys[i]]=sourceComponent[keys[i]];}catch(error){}}}}return targetComponent;}module.exports=hoistNonReactStatics;module.exports.default=module.exports;});var isArray$4=Array.isArray;function isStringOrNumber$2(o){var type=_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(o);return type==='string'||type==='number';}function isNullOrUndef$3(o){return o===void 0||o===null;}function isInvalid$2(o){return o===null||o===false||o===true||o===void 0;}function isFunction$4(o){return typeof o==='function';}function isString$4(o){return typeof o==='string';}function isNumber$2(o){return typeof o==='number';}function isNull$2(o){return o===null;}function isUndefined$2(o){return o===void 0;}function combineFrom$2(first,second){var out={};if(first){for(var key in first){out[key]=first[key];}}if(second){for(var key$1 in second){out[key$1]=second[key$1];}}return out;}// object.event should always be function, otherwise its badly created object.
function isLinkEventObject$1(o){return!isNull$2(o)&&_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(o)==='object';}// We need EMPTY_OBJ defined in one place.
// Its used for comparison so we cant inline it into shared
var EMPTY_OBJ$2={};function normalizeEventName$1(name){return name.substr(2).toLowerCase();}function appendChild$1(parentDOM,dom){parentDOM.appendChild(dom);}function insertOrAppend$1(parentDOM,newNode,nextNode){if(isNull$2(nextNode)){appendChild$1(parentDOM,newNode);}else{parentDOM.insertBefore(newNode,nextNode);}}function documentCreateElement$1(tag,isSVG){if(isSVG){return document.createElementNS('http://www.w3.org/2000/svg',tag);}return document.createElement(tag);}function replaceChild$1(parentDOM,newDom,lastDom){parentDOM.replaceChild(newDom,lastDom);}function removeChild$1(parentDOM,childNode){parentDOM.removeChild(childNode);}function callAll$1(arrayFn){for(var i=0;i<arrayFn.length;i++){arrayFn[i]();}}function findChildVNode$1(vNode,startEdge,flags){var children=vNode.children;if(flags&4/* ComponentClass */){return children.$LI;}if(flags&8192/* Fragment */){return vNode.childFlags===2/* HasVNodeChildren */?children:children[startEdge?0:children.length-1];}return children;}function findDOMfromVNode$1(vNode,startEdge){var flags;while(vNode){flags=vNode.flags;if(flags&2033/* DOMRef */){return vNode.dom;}vNode=findChildVNode$1(vNode,startEdge,flags);}return null;}function removeVNodeDOM$1(vNode,parentDOM){do{var flags=vNode.flags;if(flags&2033/* DOMRef */){removeChild$1(parentDOM,vNode.dom);return;}var children=vNode.children;if(flags&4/* ComponentClass */){vNode=children.$LI;}if(flags&8/* ComponentFunction */){vNode=children;}if(flags&8192/* Fragment */){if(vNode.childFlags===2/* HasVNodeChildren */){vNode=children;}else{for(var i=0,len=children.length;i<len;++i){removeVNodeDOM$1(children[i],parentDOM);}return;}}}while(vNode);}function moveVNodeDOM$1(vNode,parentDOM,nextNode){do{var flags=vNode.flags;if(flags&2033/* DOMRef */){insertOrAppend$1(parentDOM,vNode.dom,nextNode);return;}var children=vNode.children;if(flags&4/* ComponentClass */){vNode=children.$LI;}if(flags&8/* ComponentFunction */){vNode=children;}if(flags&8192/* Fragment */){if(vNode.childFlags===2/* HasVNodeChildren */){vNode=children;}else{for(var i=0,len=children.length;i<len;++i){moveVNodeDOM$1(children[i],parentDOM,nextNode);}return;}}}while(vNode);}function createDerivedState$1(instance,nextProps,state){if(instance.constructor.getDerivedStateFromProps){return combineFrom$2(state,instance.constructor.getDerivedStateFromProps(nextProps,state));}return state;}var renderCheck={v:false};function setTextContent$1(dom,children){dom.textContent=children;}// Calling this function assumes, nextValue is linkEvent
function isLastValueSameLinkEvent$1(lastValue,nextValue){return isLinkEventObject$1(lastValue)&&lastValue.event===nextValue.event&&lastValue.data===nextValue.data;}function mergeUnsetProperties$1(to,from){for(var propName in from){if(isUndefined$2(to[propName])){to[propName]=from[propName];}}return to;}function safeCall1$1(method,arg1){return!!isFunction$4(method)&&(method(arg1),true);}var keyPrefix$2='$';function V$2(childFlags,children,className,flags,key,props,ref,type){this.childFlags=childFlags;this.children=children;this.className=className;this.dom=null;this.flags=flags;this.key=key===void 0?null:key;this.props=props===void 0?null:props;this.ref=ref===void 0?null:ref;this.type=type;}function createVNode$2(flags,type,className,children,childFlags,props,key,ref){var childFlag=childFlags===void 0?1/* HasInvalidChildren */:childFlags;var vNode=new V$2(childFlag,children,className,flags,key,props,ref,type);if(childFlag===0/* UnknownChildren */){normalizeChildren$2(vNode,vNode.children);}return vNode;}function mergeDefaultHooks$1(flags,type,ref){if(flags&4/* ComponentClass */){return ref;}var defaultHooks=(flags&32768/* ForwardRef */?type.render:type).defaultHooks;if(isNullOrUndef$3(defaultHooks)){return ref;}if(isNullOrUndef$3(ref)){return defaultHooks;}return mergeUnsetProperties$1(ref,defaultHooks);}function mergeDefaultProps$1(flags,type,props){// set default props
var defaultProps=(flags&32768/* ForwardRef */?type.render:type).defaultProps;if(isNullOrUndef$3(defaultProps)){return props;}if(isNullOrUndef$3(props)){return combineFrom$2(defaultProps,null);}return mergeUnsetProperties$1(props,defaultProps);}function resolveComponentFlags$1(flags,type){if(flags&12/* ComponentKnown */){return flags;}if(type.prototype&&type.prototype.render){return 4/* ComponentClass */;}if(type.render){return 32776/* ForwardRefComponent */;}return 8/* ComponentFunction */;}function createComponentVNode$1(flags,type,props,key,ref){flags=resolveComponentFlags$1(flags,type);var vNode=new V$2(1/* HasInvalidChildren */,null,null,flags,key,mergeDefaultProps$1(flags,type,props),mergeDefaultHooks$1(flags,type,ref),type);return vNode;}function createTextVNode$2(text,key){return new V$2(1/* HasInvalidChildren */,isNullOrUndef$3(text)||text===true||text===false?'':text,null,16/* Text */,key,null,null,null);}function createFragment$2(children,childFlags,key){var fragment=createVNode$2(8192/* Fragment */,8192/* Fragment */,null,children,childFlags,null,key,null);switch(fragment.childFlags){case 1/* HasInvalidChildren */:fragment.children=createVoidVNode$2();fragment.childFlags=2/* HasVNodeChildren */;break;case 16/* HasTextChildren */:fragment.children=[createTextVNode$2(children)];fragment.childFlags=4/* HasNonKeyedChildren */;break;}return fragment;}function normalizeProps(vNode){var props=vNode.props;if(props){var flags=vNode.flags;if(flags&481/* Element */){if(props.children!==void 0&&isNullOrUndef$3(vNode.children)){normalizeChildren$2(vNode,props.children);}if(props.className!==void 0){vNode.className=props.className||null;props.className=undefined;}}if(props.key!==void 0){vNode.key=props.key;props.key=undefined;}if(props.ref!==void 0){if(flags&8/* ComponentFunction */){vNode.ref=combineFrom$2(vNode.ref,props.ref);}else{vNode.ref=props.ref;}props.ref=undefined;}}return vNode;}/*
 * Fragment is different than normal vNode,
 * because when it needs to be cloned we need to clone its children too
 * But not normalize, because otherwise those possibly get KEY and re-mount
 */function cloneFragment$2(vNodeToClone){var clonedChildren;var oldChildren=vNodeToClone.children;var childFlags=vNodeToClone.childFlags;if(childFlags===2/* HasVNodeChildren */){clonedChildren=directClone$2(oldChildren);}else if(childFlags&12/* MultipleChildren */){clonedChildren=[];for(var i=0,len=oldChildren.length;i<len;++i){clonedChildren.push(directClone$2(oldChildren[i]));}}return createFragment$2(clonedChildren,childFlags,vNodeToClone.key);}function directClone$2(vNodeToClone){var flags=vNodeToClone.flags&-16385/* ClearInUse */;var props=vNodeToClone.props;if(flags&14/* Component */){if(!isNull$2(props)){var propsToClone=props;props={};for(var key in propsToClone){props[key]=propsToClone[key];}}}if((flags&8192/* Fragment */)===0){return new V$2(vNodeToClone.childFlags,vNodeToClone.children,vNodeToClone.className,flags,vNodeToClone.key,props,vNodeToClone.ref,vNodeToClone.type);}return cloneFragment$2(vNodeToClone);}function createVoidVNode$2(){return createTextVNode$2('',null);}function _normalizeVNodes$2(nodes,result,index,currentKey){for(var len=nodes.length;index<len;index++){var n=nodes[index];if(!isInvalid$2(n)){var newKey=currentKey+keyPrefix$2+index;if(isArray$4(n)){_normalizeVNodes$2(n,result,0,newKey);}else{if(isStringOrNumber$2(n)){n=createTextVNode$2(n,newKey);}else{var oldKey=n.key;var isPrefixedKey=isString$4(oldKey)&&oldKey[0]===keyPrefix$2;if(n.flags&81920/* InUseOrNormalized */||isPrefixedKey){n=directClone$2(n);}n.flags|=65536/* Normalized */;if(!isPrefixedKey){if(isNull$2(oldKey)){n.key=newKey;}else{n.key=currentKey+oldKey;}}else if(oldKey.substring(0,currentKey.length)!==currentKey){n.key=currentKey+oldKey;}}result.push(n);}}}}function normalizeChildren$2(vNode,children){var newChildren;var newChildFlags=1/* HasInvalidChildren */;// Don't change children to match strict equal (===) true in patching
if(isInvalid$2(children)){newChildren=children;}else if(isStringOrNumber$2(children)){newChildFlags=16/* HasTextChildren */;newChildren=children;}else if(isArray$4(children)){var len=children.length;for(var i=0;i<len;++i){var n=children[i];if(isInvalid$2(n)||isArray$4(n)){newChildren=newChildren||children.slice(0,i);_normalizeVNodes$2(children,newChildren,i,'');break;}else if(isStringOrNumber$2(n)){newChildren=newChildren||children.slice(0,i);newChildren.push(createTextVNode$2(n,keyPrefix$2+i));}else{var key=n.key;var needsCloning=(n.flags&81920/* InUseOrNormalized */)>0;var isNullKey=isNull$2(key);var isPrefixed=isString$4(key)&&key[0]===keyPrefix$2;if(needsCloning||isNullKey||isPrefixed){newChildren=newChildren||children.slice(0,i);if(needsCloning||isPrefixed){n=directClone$2(n);}if(isNullKey||isPrefixed){n.key=keyPrefix$2+i;}newChildren.push(n);}else if(newChildren){newChildren.push(n);}n.flags|=65536/* Normalized */;}}newChildren=newChildren||children;if(newChildren.length===0){newChildFlags=1/* HasInvalidChildren */;}else{newChildFlags=8/* HasKeyedChildren */;}}else{newChildren=children;newChildren.flags|=65536/* Normalized */;if(children.flags&81920/* InUseOrNormalized */){newChildren=directClone$2(children);}newChildFlags=2/* HasVNodeChildren */;}vNode.children=newChildren;vNode.childFlags=newChildFlags;return vNode;}function normalizeRoot$1(input){if(isInvalid$2(input)||isStringOrNumber$2(input)){return createTextVNode$2(input,null);}if(isArray$4(input)){return createFragment$2(input,0/* UnknownChildren */,null);}return input.flags&16384/* InUse */?directClone$2(input):input;}var xlinkNS$1='http://www.w3.org/1999/xlink';var xmlNS$1='http://www.w3.org/XML/1998/namespace';var namespaces$1={'xlink:actuate':xlinkNS$1,'xlink:arcrole':xlinkNS$1,'xlink:href':xlinkNS$1,'xlink:role':xlinkNS$1,'xlink:show':xlinkNS$1,'xlink:title':xlinkNS$1,'xlink:type':xlinkNS$1,'xml:base':xmlNS$1,'xml:lang':xmlNS$1,'xml:space':xmlNS$1};function getDelegatedEventObject$1(v){return{onClick:v,onDblClick:v,onFocusIn:v,onFocusOut:v,onKeyDown:v,onKeyPress:v,onKeyUp:v,onMouseDown:v,onMouseMove:v,onMouseUp:v,onTouchEnd:v,onTouchMove:v,onTouchStart:v};}var attachedEventCounts$1=getDelegatedEventObject$1(0);var attachedEvents$1=getDelegatedEventObject$1(null);var syntheticEvents$1=getDelegatedEventObject$1(true);function updateOrAddSyntheticEvent$1(name,dom){var eventsObject=dom.$EV;if(!eventsObject){eventsObject=dom.$EV=getDelegatedEventObject$1(null);}if(!eventsObject[name]){if(++attachedEventCounts$1[name]===1){attachedEvents$1[name]=attachEventToDocument$1(name);}}return eventsObject;}function unmountSyntheticEvent$1(name,dom){var eventsObject=dom.$EV;if(eventsObject&&eventsObject[name]){if(--attachedEventCounts$1[name]===0){document.removeEventListener(normalizeEventName$1(name),attachedEvents$1[name]);attachedEvents$1[name]=null;}eventsObject[name]=null;}}function handleSyntheticEvent$1(name,lastEvent,nextEvent,dom){if(isFunction$4(nextEvent)){updateOrAddSyntheticEvent$1(name,dom)[name]=nextEvent;}else if(isLinkEventObject$1(nextEvent)){if(isLastValueSameLinkEvent$1(lastEvent,nextEvent)){return;}updateOrAddSyntheticEvent$1(name,dom)[name]=nextEvent;}else{unmountSyntheticEvent$1(name,dom);}}// When browsers fully support event.composedPath we could loop it through instead of using parentNode property
function getTargetNode$1(event){return isFunction$4(event.composedPath)?event.composedPath()[0]:event.target;}function dispatchEvents$1(event,isClick,name,eventData){var dom=getTargetNode$1(event);do{// Html Nodes can be nested fe: span inside button in that scenario browser does not handle disabled attribute on parent,
// because the event listener is on document.body
// Don't process clicks on disabled elements
if(isClick&&dom.disabled){return;}var eventsObject=dom.$EV;if(eventsObject){var currentEvent=eventsObject[name];if(currentEvent){// linkEvent object
eventData.dom=dom;currentEvent.event?currentEvent.event(currentEvent.data,event):currentEvent(event);if(event.cancelBubble){return;}}}dom=dom.parentNode;}while(!isNull$2(dom));}function stopPropagation$1(){this.cancelBubble=true;if(!this.immediatePropagationStopped){this.stopImmediatePropagation();}}function isDefaultPrevented$1(){return this.defaultPrevented;}function isPropagationStopped$1(){return this.cancelBubble;}function extendEventProperties$1(event){// Event data needs to be object to save reference to currentTarget getter
var eventData={dom:document};event.isDefaultPrevented=isDefaultPrevented$1;event.isPropagationStopped=isPropagationStopped$1;event.stopPropagation=stopPropagation$1;Object.defineProperty(event,'currentTarget',{configurable:true,get:function get(){return eventData.dom;}});return eventData;}function rootClickEvent$1(name){return function(event){if(event.button!==0){// Firefox incorrectly triggers click event for mid/right mouse buttons.
// This bug has been active for 17 years.
// https://bugzilla.mozilla.org/show_bug.cgi?id=184051
event.stopPropagation();return;}dispatchEvents$1(event,true,name,extendEventProperties$1(event));};}function rootEvent$1(name){return function(event){dispatchEvents$1(event,false,name,extendEventProperties$1(event));};}function attachEventToDocument$1(name){var attachedEvent=name==='onClick'||name==='onDblClick'?rootClickEvent$1(name):rootEvent$1(name);document.addEventListener(normalizeEventName$1(name),attachedEvent);return attachedEvent;}function isSameInnerHTML$1(dom,innerHTML){var tempdom=document.createElement('i');tempdom.innerHTML=innerHTML;return tempdom.innerHTML===dom.innerHTML;}function triggerEventListener$2(props,methodName,e){if(props[methodName]){var listener=props[methodName];if(listener.event){listener.event(listener.data,e);}else{listener(e);}}else{var nativeListenerName=methodName.toLowerCase();if(props[nativeListenerName]){props[nativeListenerName](e);}}}function createWrappedFunction$2(methodName,applyValue){var fnMethod=function fnMethod(e){var vNode=this.$V;// If vNode is gone by the time event fires, no-op
if(!vNode){return;}var props=vNode.props||EMPTY_OBJ$2;var dom=vNode.dom;if(isString$4(methodName)){triggerEventListener$2(props,methodName,e);}else{for(var i=0;i<methodName.length;++i){triggerEventListener$2(props,methodName[i],e);}}if(isFunction$4(applyValue)){var newVNode=this.$V;var newProps=newVNode.props||EMPTY_OBJ$2;applyValue(newProps,dom,false,newVNode);}};Object.defineProperty(fnMethod,'wrapped',{configurable:false,enumerable:false,value:true,writable:false});return fnMethod;}function attachEvent$1(dom,eventName,handler){var previousKey="$"+eventName;var previousArgs=dom[previousKey];if(previousArgs){if(previousArgs[1].wrapped){return;}dom.removeEventListener(previousArgs[0],previousArgs[1]);dom[previousKey]=null;}if(isFunction$4(handler)){dom.addEventListener(eventName,handler);dom[previousKey]=[eventName,handler];}}function isCheckedType$2(type){return type==='checkbox'||type==='radio';}var onTextInputChange$2=createWrappedFunction$2('onInput',applyValueInput$2);var wrappedOnChange$3=createWrappedFunction$2(['onClick','onChange'],applyValueInput$2);/* tslint:disable-next-line:no-empty */function emptywrapper$1(event){event.stopPropagation();}emptywrapper$1.wrapped=true;function inputEvents$1(dom,nextPropsOrEmpty){if(isCheckedType$2(nextPropsOrEmpty.type)){attachEvent$1(dom,'change',wrappedOnChange$3);attachEvent$1(dom,'click',emptywrapper$1);}else{attachEvent$1(dom,'input',onTextInputChange$2);}}function applyValueInput$2(nextPropsOrEmpty,dom){var type=nextPropsOrEmpty.type;var value=nextPropsOrEmpty.value;var checked=nextPropsOrEmpty.checked;var multiple=nextPropsOrEmpty.multiple;var defaultValue=nextPropsOrEmpty.defaultValue;var hasValue=!isNullOrUndef$3(value);if(type&&type!==dom.type){dom.setAttribute('type',type);}if(!isNullOrUndef$3(multiple)&&multiple!==dom.multiple){dom.multiple=multiple;}if(!isNullOrUndef$3(defaultValue)&&!hasValue){dom.defaultValue=defaultValue+'';}if(isCheckedType$2(type)){if(hasValue){dom.value=value;}if(!isNullOrUndef$3(checked)){dom.checked=checked;}}else{if(hasValue&&dom.value!==value){dom.defaultValue=value;dom.value=value;}else if(!isNullOrUndef$3(checked)){dom.checked=checked;}}}function updateChildOptions$2(vNode,value){if(vNode.type==='option'){updateChildOption$2(vNode,value);}else{var children=vNode.children;var flags=vNode.flags;if(flags&4/* ComponentClass */){updateChildOptions$2(children.$LI,value);}else if(flags&8/* ComponentFunction */){updateChildOptions$2(children,value);}else if(vNode.childFlags===2/* HasVNodeChildren */){updateChildOptions$2(children,value);}else if(vNode.childFlags&12/* MultipleChildren */){for(var i=0,len=children.length;i<len;++i){updateChildOptions$2(children[i],value);}}}}function updateChildOption$2(vNode,value){var props=vNode.props||EMPTY_OBJ$2;var dom=vNode.dom;// we do this as multiple may have changed
dom.value=props.value;if(props.value===value||isArray$4(value)&&value.indexOf(props.value)!==-1){dom.selected=true;}else if(!isNullOrUndef$3(value)||!isNullOrUndef$3(props.selected)){dom.selected=props.selected||false;}}var onSelectChange$2=createWrappedFunction$2('onChange',applyValueSelect$2);function selectEvents$1(dom){attachEvent$1(dom,'change',onSelectChange$2);}function applyValueSelect$2(nextPropsOrEmpty,dom,mounting,vNode){var multiplePropInBoolean=Boolean(nextPropsOrEmpty.multiple);if(!isNullOrUndef$3(nextPropsOrEmpty.multiple)&&multiplePropInBoolean!==dom.multiple){dom.multiple=multiplePropInBoolean;}var index=nextPropsOrEmpty.selectedIndex;if(index===-1){dom.selectedIndex=-1;}var childFlags=vNode.childFlags;if(childFlags!==1/* HasInvalidChildren */){var value=nextPropsOrEmpty.value;if(isNumber$2(index)&&index>-1&&dom.options[index]){value=dom.options[index].value;}if(mounting&&isNullOrUndef$3(value)){value=nextPropsOrEmpty.defaultValue;}updateChildOptions$2(vNode,value);}}var onTextareaInputChange$2=createWrappedFunction$2('onInput',applyValueTextArea$2);var wrappedOnChange$1$2=createWrappedFunction$2('onChange');function textAreaEvents$1(dom,nextPropsOrEmpty){attachEvent$1(dom,'input',onTextareaInputChange$2);if(nextPropsOrEmpty.onChange){attachEvent$1(dom,'change',wrappedOnChange$1$2);}}function applyValueTextArea$2(nextPropsOrEmpty,dom,mounting){var value=nextPropsOrEmpty.value;var domValue=dom.value;if(isNullOrUndef$3(value)){if(mounting){var defaultValue=nextPropsOrEmpty.defaultValue;if(!isNullOrUndef$3(defaultValue)&&defaultValue!==domValue){dom.defaultValue=defaultValue;dom.value=defaultValue;}}}else if(domValue!==value){/* There is value so keep it controlled */dom.defaultValue=value;dom.value=value;}}/**
 * There is currently no support for switching same input between controlled and nonControlled
 * If that ever becomes a real issue, then re design controlled elements
 * Currently user must choose either controlled or non-controlled and stick with that
 */function processElement$1(flags,vNode,dom,nextPropsOrEmpty,mounting,isControlled){if(flags&64/* InputElement */){applyValueInput$2(nextPropsOrEmpty,dom);}else if(flags&256/* SelectElement */){applyValueSelect$2(nextPropsOrEmpty,dom,mounting,vNode);}else if(flags&128/* TextareaElement */){applyValueTextArea$2(nextPropsOrEmpty,dom,mounting);}if(isControlled){dom.$V=vNode;}}function addFormElementEventHandlers$1(flags,dom,nextPropsOrEmpty){if(flags&64/* InputElement */){inputEvents$1(dom,nextPropsOrEmpty);}else if(flags&256/* SelectElement */){selectEvents$1(dom);}else if(flags&128/* TextareaElement */){textAreaEvents$1(dom,nextPropsOrEmpty);}}function isControlledFormElement$1(nextPropsOrEmpty){return nextPropsOrEmpty.type&&isCheckedType$2(nextPropsOrEmpty.type)?!isNullOrUndef$3(nextPropsOrEmpty.checked):!isNullOrUndef$3(nextPropsOrEmpty.value);}function unmountRef$1(ref){if(ref){if(!safeCall1$1(ref,null)&&ref.current){ref.current=null;}}}function mountRef$1(ref,value,lifecycle){if(ref&&(isFunction$4(ref)||ref.current!==void 0)){lifecycle.push(function(){if(!safeCall1$1(ref,value)&&ref.current!==void 0){ref.current=value;}});}}function remove$1(vNode,parentDOM){unmount$1(vNode);removeVNodeDOM$1(vNode,parentDOM);}function unmount$1(vNode){var flags=vNode.flags;var children=vNode.children;var ref;if(flags&481/* Element */){ref=vNode.ref;var props=vNode.props;unmountRef$1(ref);var childFlags=vNode.childFlags;if(!isNull$2(props)){var keys=Object.keys(props);for(var i=0,len=keys.length;i<len;i++){var key=keys[i];if(syntheticEvents$1[key]){unmountSyntheticEvent$1(key,vNode.dom);}}}if(childFlags&12/* MultipleChildren */){unmountAllChildren$1(children);}else if(childFlags===2/* HasVNodeChildren */){unmount$1(children);}}else if(children){if(flags&4/* ComponentClass */){if(isFunction$4(children.componentWillUnmount)){children.componentWillUnmount();}unmountRef$1(vNode.ref);children.$UN=true;unmount$1(children.$LI);}else if(flags&8/* ComponentFunction */){ref=vNode.ref;if(!isNullOrUndef$3(ref)&&isFunction$4(ref.onComponentWillUnmount)){ref.onComponentWillUnmount(findDOMfromVNode$1(vNode,true),vNode.props||EMPTY_OBJ$2);}unmount$1(children);}else if(flags&1024/* Portal */){remove$1(children,vNode.ref);}else if(flags&8192/* Fragment */){if(vNode.childFlags&12/* MultipleChildren */){unmountAllChildren$1(children);}}}}function unmountAllChildren$1(children){for(var i=0,len=children.length;i<len;++i){unmount$1(children[i]);}}function clearDOM$1(dom){// Optimization for clearing dom
dom.textContent='';}function removeAllChildren$1(dom,vNode,children){unmountAllChildren$1(children);if(vNode.flags&8192/* Fragment */){removeVNodeDOM$1(vNode,dom);}else{clearDOM$1(dom);}}function wrapLinkEvent$1(nextValue){// This variable makes sure there is no "this" context in callback
var ev=nextValue.event;return function(e){ev(nextValue.data,e);};}function patchEvent$1(name,lastValue,nextValue,dom){if(isLinkEventObject$1(nextValue)){if(isLastValueSameLinkEvent$1(lastValue,nextValue)){return;}nextValue=wrapLinkEvent$1(nextValue);}attachEvent$1(dom,normalizeEventName$1(name),nextValue);}// We are assuming here that we come from patchProp routine
// -nextAttrValue cannot be null or undefined
function patchStyle$1(lastAttrValue,nextAttrValue,dom){if(isNullOrUndef$3(nextAttrValue)){dom.removeAttribute('style');return;}var domStyle=dom.style;var style;var value;if(isString$4(nextAttrValue)){domStyle.cssText=nextAttrValue;return;}if(!isNullOrUndef$3(lastAttrValue)&&!isString$4(lastAttrValue)){for(style in nextAttrValue){// do not add a hasOwnProperty check here, it affects performance
value=nextAttrValue[style];if(value!==lastAttrValue[style]){domStyle.setProperty(style,value);}}for(style in lastAttrValue){if(isNullOrUndef$3(nextAttrValue[style])){domStyle.removeProperty(style);}}}else{for(style in nextAttrValue){value=nextAttrValue[style];domStyle.setProperty(style,value);}}}function patchDangerInnerHTML$1(lastValue,nextValue,lastVNode,dom){var lastHtml=lastValue&&lastValue.__html||'';var nextHtml=nextValue&&nextValue.__html||'';if(lastHtml!==nextHtml){if(!isNullOrUndef$3(nextHtml)&&!isSameInnerHTML$1(dom,nextHtml)){if(!isNull$2(lastVNode)){if(lastVNode.childFlags&12/* MultipleChildren */){unmountAllChildren$1(lastVNode.children);}else if(lastVNode.childFlags===2/* HasVNodeChildren */){unmount$1(lastVNode.children);}lastVNode.children=null;lastVNode.childFlags=1/* HasInvalidChildren */;}dom.innerHTML=nextHtml;}}}function patchProp$1(prop,lastValue,nextValue,dom,isSVG,hasControlledValue,lastVNode){switch(prop){case'children':case'childrenType':case'className':case'defaultValue':case'key':case'multiple':case'ref':case'selectedIndex':break;case'autoFocus':dom.autofocus=!!nextValue;break;case'allowfullscreen':case'autoplay':case'capture':case'checked':case'controls':case'default':case'disabled':case'hidden':case'indeterminate':case'loop':case'muted':case'novalidate':case'open':case'readOnly':case'required':case'reversed':case'scoped':case'seamless':case'selected':dom[prop]=!!nextValue;break;case'defaultChecked':case'value':case'volume':if(hasControlledValue&&prop==='value'){break;}var value=isNullOrUndef$3(nextValue)?'':nextValue;if(dom[prop]!==value){dom[prop]=value;}break;case'style':patchStyle$1(lastValue,nextValue,dom);break;case'dangerouslySetInnerHTML':patchDangerInnerHTML$1(lastValue,nextValue,lastVNode,dom);break;default:if(syntheticEvents$1[prop]){handleSyntheticEvent$1(prop,lastValue,nextValue,dom);}else if(prop.charCodeAt(0)===111&&prop.charCodeAt(1)===110){patchEvent$1(prop,lastValue,nextValue,dom);}else if(isNullOrUndef$3(nextValue)){dom.removeAttribute(prop);}else if(isSVG&&namespaces$1[prop]){// We optimize for isSVG being false
// If we end up in this path we can read property again
dom.setAttributeNS(namespaces$1[prop],prop,nextValue);}else{dom.setAttribute(prop,nextValue);}break;}}function mountProps$1(vNode,flags,props,dom,isSVG){var hasControlledValue=false;var isFormElement=(flags&448/* FormElement */)>0;if(isFormElement){hasControlledValue=isControlledFormElement$1(props);if(hasControlledValue){addFormElementEventHandlers$1(flags,dom,props);}}for(var prop in props){// do not add a hasOwnProperty check here, it affects performance
patchProp$1(prop,null,props[prop],dom,isSVG,hasControlledValue,null);}if(isFormElement){processElement$1(flags,vNode,dom,props,true,hasControlledValue);}}function renderNewInput$1(instance,props,context){var nextInput=normalizeRoot$1(instance.render(props,instance.state,context));var childContext=context;if(isFunction$4(instance.getChildContext)){childContext=combineFrom$2(context,instance.getChildContext());}instance.$CX=childContext;return nextInput;}function createClassComponentInstance$1(vNode,Component,props,context,isSVG,lifecycle){var instance=new Component(props,context);var usesNewAPI=instance.$N=Boolean(Component.getDerivedStateFromProps||instance.getSnapshotBeforeUpdate);instance.$SVG=isSVG;instance.$L=lifecycle;vNode.children=instance;instance.$BS=false;instance.context=context;if(instance.props===EMPTY_OBJ$2){instance.props=props;}if(!usesNewAPI){if(isFunction$4(instance.componentWillMount)){instance.$BR=true;instance.componentWillMount();var pending=instance.$PS;if(!isNull$2(pending)){var state=instance.state;if(isNull$2(state)){instance.state=pending;}else{for(var key in pending){state[key]=pending[key];}}instance.$PS=null;}instance.$BR=false;}}else{instance.state=createDerivedState$1(instance,props,instance.state);}instance.$LI=renderNewInput$1(instance,props,context);return instance;}function mount$1(vNode,parentDOM,context,isSVG,nextNode,lifecycle){var flags=vNode.flags|=16384/* InUse */;if(flags&481/* Element */){mountElement$1(vNode,parentDOM,context,isSVG,nextNode,lifecycle);}else if(flags&4/* ComponentClass */){mountClassComponent$1(vNode,parentDOM,context,isSVG,nextNode,lifecycle);}else if(flags&8/* ComponentFunction */){mountFunctionalComponent$1(vNode,parentDOM,context,isSVG,nextNode,lifecycle);mountFunctionalComponentCallbacks$1(vNode,lifecycle);}else if(flags&512/* Void */||flags&16/* Text */){mountText$1(vNode,parentDOM,nextNode);}else if(flags&8192/* Fragment */){mountFragment$1(vNode,context,parentDOM,isSVG,nextNode,lifecycle);}else if(flags&1024/* Portal */){mountPortal$1(vNode,context,parentDOM,nextNode,lifecycle);}}function mountPortal$1(vNode,context,parentDOM,nextNode,lifecycle){mount$1(vNode.children,vNode.ref,context,false,null,lifecycle);var placeHolderVNode=createVoidVNode$2();mountText$1(placeHolderVNode,parentDOM,nextNode);vNode.dom=placeHolderVNode.dom;}function mountFragment$1(vNode,context,parentDOM,isSVG,nextNode,lifecycle){var children=vNode.children;var childFlags=vNode.childFlags;// When fragment is optimized for multiple children, check if there is no children and change flag to invalid
// This is the only normalization always done, to keep optimization flags API same for fragments and regular elements
if(childFlags&12/* MultipleChildren */&&children.length===0){childFlags=vNode.childFlags=2/* HasVNodeChildren */;children=vNode.children=createVoidVNode$2();}if(childFlags===2/* HasVNodeChildren */){mount$1(children,parentDOM,nextNode,isSVG,nextNode,lifecycle);}else{mountArrayChildren$1(children,parentDOM,context,isSVG,nextNode,lifecycle);}}function mountText$1(vNode,parentDOM,nextNode){var dom=vNode.dom=document.createTextNode(vNode.children);if(!isNull$2(parentDOM)){insertOrAppend$1(parentDOM,dom,nextNode);}}function mountElement$1(vNode,parentDOM,context,isSVG,nextNode,lifecycle){var flags=vNode.flags;var props=vNode.props;var className=vNode.className;var children=vNode.children;var childFlags=vNode.childFlags;var dom=vNode.dom=documentCreateElement$1(vNode.type,isSVG=isSVG||(flags&32/* SvgElement */)>0);if(!isNullOrUndef$3(className)&&className!==''){if(isSVG){dom.setAttribute('class',className);}else{dom.className=className;}}if(childFlags===16/* HasTextChildren */){setTextContent$1(dom,children);}else if(childFlags!==1/* HasInvalidChildren */){var childrenIsSVG=isSVG&&vNode.type!=='foreignObject';if(childFlags===2/* HasVNodeChildren */){if(children.flags&16384/* InUse */){vNode.children=children=directClone$2(children);}mount$1(children,dom,context,childrenIsSVG,null,lifecycle);}else if(childFlags===8/* HasKeyedChildren */||childFlags===4/* HasNonKeyedChildren */){mountArrayChildren$1(children,dom,context,childrenIsSVG,null,lifecycle);}}if(!isNull$2(parentDOM)){insertOrAppend$1(parentDOM,dom,nextNode);}if(!isNull$2(props)){mountProps$1(vNode,flags,props,dom,isSVG);}mountRef$1(vNode.ref,dom,lifecycle);}function mountArrayChildren$1(children,dom,context,isSVG,nextNode,lifecycle){for(var i=0;i<children.length;++i){var child=children[i];if(child.flags&16384/* InUse */){children[i]=child=directClone$2(child);}mount$1(child,dom,context,isSVG,nextNode,lifecycle);}}function mountClassComponent$1(vNode,parentDOM,context,isSVG,nextNode,lifecycle){var instance=createClassComponentInstance$1(vNode,vNode.type,vNode.props||EMPTY_OBJ$2,context,isSVG,lifecycle);mount$1(instance.$LI,parentDOM,instance.$CX,isSVG,nextNode,lifecycle);mountClassComponentCallbacks$1(vNode.ref,instance,lifecycle);}function renderFunctionalComponent$1(vNode,context){return vNode.flags&32768/* ForwardRef */?vNode.type.render(vNode.props||EMPTY_OBJ$2,vNode.ref,context):vNode.type(vNode.props||EMPTY_OBJ$2,context);}function mountFunctionalComponent$1(vNode,parentDOM,context,isSVG,nextNode,lifecycle){mount$1(vNode.children=normalizeRoot$1(renderFunctionalComponent$1(vNode,context)),parentDOM,context,isSVG,nextNode,lifecycle);}function createClassMountCallback$1(instance){return function(){instance.componentDidMount();};}function mountClassComponentCallbacks$1(ref,instance,lifecycle){mountRef$1(ref,instance,lifecycle);if(isFunction$4(instance.componentDidMount)){lifecycle.push(createClassMountCallback$1(instance));}}function createOnMountCallback$1(ref,vNode){return function(){ref.onComponentDidMount(findDOMfromVNode$1(vNode,true),vNode.props||EMPTY_OBJ$2);};}function mountFunctionalComponentCallbacks$1(vNode,lifecycle){var ref=vNode.ref;if(!isNullOrUndef$3(ref)){safeCall1$1(ref.onComponentWillMount,vNode.props||EMPTY_OBJ$2);if(isFunction$4(ref.onComponentDidMount)){lifecycle.push(createOnMountCallback$1(ref,vNode));}}}function replaceWithNewNode$1(lastVNode,nextVNode,parentDOM,context,isSVG,lifecycle){unmount$1(lastVNode);if((nextVNode.flags&lastVNode.flags&2033/* DOMRef */)!==0){mount$1(nextVNode,null,context,isSVG,null,lifecycle);// Single DOM operation, when we have dom references available
replaceChild$1(parentDOM,nextVNode.dom,lastVNode.dom);}else{mount$1(nextVNode,parentDOM,context,isSVG,findDOMfromVNode$1(lastVNode,true),lifecycle);removeVNodeDOM$1(lastVNode,parentDOM);}}function patch$1(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle){var nextFlags=nextVNode.flags|=16384/* InUse */;if(lastVNode.flags!==nextFlags||lastVNode.type!==nextVNode.type||lastVNode.key!==nextVNode.key||nextFlags&2048/* ReCreate */){if(lastVNode.flags&16384/* InUse */){replaceWithNewNode$1(lastVNode,nextVNode,parentDOM,context,isSVG,lifecycle);}else{// Last vNode is not in use, it has crashed at application level. Just mount nextVNode and ignore last one
mount$1(nextVNode,parentDOM,context,isSVG,nextNode,lifecycle);}}else if(nextFlags&481/* Element */){patchElement$1(lastVNode,nextVNode,context,isSVG,nextFlags,lifecycle);}else if(nextFlags&4/* ComponentClass */){patchClassComponent$1(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle);}else if(nextFlags&8/* ComponentFunction */){patchFunctionalComponent$1(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle);}else if(nextFlags&16/* Text */){patchText$1(lastVNode,nextVNode);}else if(nextFlags&512/* Void */){nextVNode.dom=lastVNode.dom;}else if(nextFlags&8192/* Fragment */){patchFragment$1(lastVNode,nextVNode,parentDOM,context,isSVG,lifecycle);}else{patchPortal$1(lastVNode,nextVNode,context,lifecycle);}}function patchSingleTextChild$1(lastChildren,nextChildren,parentDOM){if(lastChildren!==nextChildren){if(lastChildren!==''){parentDOM.firstChild.nodeValue=nextChildren;}else{setTextContent$1(parentDOM,nextChildren);}}}function patchContentEditableChildren$1(dom,nextChildren){if(dom.textContent!==nextChildren){dom.textContent=nextChildren;}}function patchFragment$1(lastVNode,nextVNode,parentDOM,context,isSVG,lifecycle){var lastChildren=lastVNode.children;var nextChildren=nextVNode.children;var lastChildFlags=lastVNode.childFlags;var nextChildFlags=nextVNode.childFlags;var nextNode=null;// When fragment is optimized for multiple children, check if there is no children and change flag to invalid
// This is the only normalization always done, to keep optimization flags API same for fragments and regular elements
if(nextChildFlags&12/* MultipleChildren */&&nextChildren.length===0){nextChildFlags=nextVNode.childFlags=2/* HasVNodeChildren */;nextChildren=nextVNode.children=createVoidVNode$2();}var nextIsSingle=(nextChildFlags&2/* HasVNodeChildren */)!==0;if(lastChildFlags&12/* MultipleChildren */){var lastLen=lastChildren.length;// We need to know Fragment's edge node when
if(// It uses keyed algorithm
lastChildFlags&8/* HasKeyedChildren */&&nextChildFlags&8/* HasKeyedChildren */||// It transforms from many to single
nextIsSingle||// It will append more nodes
!nextIsSingle&&nextChildren.length>lastLen){// When fragment has multiple children there is always at least one vNode
nextNode=findDOMfromVNode$1(lastChildren[lastLen-1],false).nextSibling;}}patchChildren$1(lastChildFlags,nextChildFlags,lastChildren,nextChildren,parentDOM,context,isSVG,nextNode,lastVNode,lifecycle);}function patchPortal$1(lastVNode,nextVNode,context,lifecycle){var lastContainer=lastVNode.ref;var nextContainer=nextVNode.ref;var nextChildren=nextVNode.children;patchChildren$1(lastVNode.childFlags,nextVNode.childFlags,lastVNode.children,nextChildren,lastContainer,context,false,null,lastVNode,lifecycle);nextVNode.dom=lastVNode.dom;if(lastContainer!==nextContainer&&!isInvalid$2(nextChildren)){var node=nextChildren.dom;removeChild$1(lastContainer,node);appendChild$1(nextContainer,node);}}function patchElement$1(lastVNode,nextVNode,context,isSVG,nextFlags,lifecycle){var dom=nextVNode.dom=lastVNode.dom;var lastProps=lastVNode.props;var nextProps=nextVNode.props;var isFormElement=false;var hasControlledValue=false;var nextPropsOrEmpty;isSVG=isSVG||(nextFlags&32/* SvgElement */)>0;// inlined patchProps  -- starts --
if(lastProps!==nextProps){var lastPropsOrEmpty=lastProps||EMPTY_OBJ$2;nextPropsOrEmpty=nextProps||EMPTY_OBJ$2;if(nextPropsOrEmpty!==EMPTY_OBJ$2){isFormElement=(nextFlags&448/* FormElement */)>0;if(isFormElement){hasControlledValue=isControlledFormElement$1(nextPropsOrEmpty);}for(var prop in nextPropsOrEmpty){var lastValue=lastPropsOrEmpty[prop];var nextValue=nextPropsOrEmpty[prop];if(lastValue!==nextValue){patchProp$1(prop,lastValue,nextValue,dom,isSVG,hasControlledValue,lastVNode);}}}if(lastPropsOrEmpty!==EMPTY_OBJ$2){for(var prop$1 in lastPropsOrEmpty){if(isNullOrUndef$3(nextPropsOrEmpty[prop$1])&&!isNullOrUndef$3(lastPropsOrEmpty[prop$1])){patchProp$1(prop$1,lastPropsOrEmpty[prop$1],null,dom,isSVG,hasControlledValue,lastVNode);}}}}var nextChildren=nextVNode.children;var nextClassName=nextVNode.className;// inlined patchProps  -- ends --
if(lastVNode.className!==nextClassName){if(isNullOrUndef$3(nextClassName)){dom.removeAttribute('class');}else if(isSVG){dom.setAttribute('class',nextClassName);}else{dom.className=nextClassName;}}if(nextFlags&4096/* ContentEditable */){patchContentEditableChildren$1(dom,nextChildren);}else{patchChildren$1(lastVNode.childFlags,nextVNode.childFlags,lastVNode.children,nextChildren,dom,context,isSVG&&nextVNode.type!=='foreignObject',null,lastVNode,lifecycle);}if(isFormElement){processElement$1(nextFlags,nextVNode,dom,nextPropsOrEmpty,false,hasControlledValue);}var nextRef=nextVNode.ref;var lastRef=lastVNode.ref;if(lastRef!==nextRef){unmountRef$1(lastRef);mountRef$1(nextRef,dom,lifecycle);}}function replaceOneVNodeWithMultipleVNodes$1(lastChildren,nextChildren,parentDOM,context,isSVG,lifecycle){unmount$1(lastChildren);mountArrayChildren$1(nextChildren,parentDOM,context,isSVG,findDOMfromVNode$1(lastChildren,true),lifecycle);removeVNodeDOM$1(lastChildren,parentDOM);}function patchChildren$1(lastChildFlags,nextChildFlags,lastChildren,nextChildren,parentDOM,context,isSVG,nextNode,parentVNode,lifecycle){switch(lastChildFlags){case 2/* HasVNodeChildren */:switch(nextChildFlags){case 2/* HasVNodeChildren */:patch$1(lastChildren,nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;case 1/* HasInvalidChildren */:remove$1(lastChildren,parentDOM);break;case 16/* HasTextChildren */:unmount$1(lastChildren);setTextContent$1(parentDOM,nextChildren);break;default:replaceOneVNodeWithMultipleVNodes$1(lastChildren,nextChildren,parentDOM,context,isSVG,lifecycle);break;}break;case 1/* HasInvalidChildren */:switch(nextChildFlags){case 2/* HasVNodeChildren */:mount$1(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;case 1/* HasInvalidChildren */:break;case 16/* HasTextChildren */:setTextContent$1(parentDOM,nextChildren);break;default:mountArrayChildren$1(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;}break;case 16/* HasTextChildren */:switch(nextChildFlags){case 16/* HasTextChildren */:patchSingleTextChild$1(lastChildren,nextChildren,parentDOM);break;case 2/* HasVNodeChildren */:clearDOM$1(parentDOM);mount$1(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;case 1/* HasInvalidChildren */:clearDOM$1(parentDOM);break;default:clearDOM$1(parentDOM);mountArrayChildren$1(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;}break;default:switch(nextChildFlags){case 16/* HasTextChildren */:unmountAllChildren$1(lastChildren);setTextContent$1(parentDOM,nextChildren);break;case 2/* HasVNodeChildren */:removeAllChildren$1(parentDOM,parentVNode,lastChildren);mount$1(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);break;case 1/* HasInvalidChildren */:removeAllChildren$1(parentDOM,parentVNode,lastChildren);break;default:var lastLength=lastChildren.length|0;var nextLength=nextChildren.length|0;// Fast path's for both algorithms
if(lastLength===0){if(nextLength>0){mountArrayChildren$1(nextChildren,parentDOM,context,isSVG,nextNode,lifecycle);}}else if(nextLength===0){removeAllChildren$1(parentDOM,parentVNode,lastChildren);}else if(nextChildFlags===8/* HasKeyedChildren */&&lastChildFlags===8/* HasKeyedChildren */){patchKeyedChildren$1(lastChildren,nextChildren,parentDOM,context,isSVG,lastLength,nextLength,nextNode,parentVNode,lifecycle);}else{patchNonKeyedChildren$1(lastChildren,nextChildren,parentDOM,context,isSVG,lastLength,nextLength,nextNode,lifecycle);}break;}break;}}function createDidUpdate$1(instance,lastProps,lastState,snapshot,lifecycle){lifecycle.push(function(){instance.componentDidUpdate(lastProps,lastState,snapshot);});}function updateClassComponent$1(instance,nextState,nextProps,parentDOM,context,isSVG,force,nextNode,lifecycle){var lastState=instance.state;var lastProps=instance.props;var usesNewAPI=Boolean(instance.$N);var hasSCU=isFunction$4(instance.shouldComponentUpdate);if(usesNewAPI){nextState=createDerivedState$1(instance,nextProps,nextState!==lastState?combineFrom$2(lastState,nextState):nextState);}if(force||!hasSCU||hasSCU&&instance.shouldComponentUpdate(nextProps,nextState,context)){if(!usesNewAPI&&isFunction$4(instance.componentWillUpdate)){instance.componentWillUpdate(nextProps,nextState,context);}instance.props=nextProps;instance.state=nextState;instance.context=context;var snapshot=null;var nextInput=renderNewInput$1(instance,nextProps,context);if(usesNewAPI&&isFunction$4(instance.getSnapshotBeforeUpdate)){snapshot=instance.getSnapshotBeforeUpdate(lastProps,lastState);}patch$1(instance.$LI,nextInput,parentDOM,instance.$CX,isSVG,nextNode,lifecycle);// Dont update Last input, until patch has been succesfully executed
instance.$LI=nextInput;if(isFunction$4(instance.componentDidUpdate)){createDidUpdate$1(instance,lastProps,lastState,snapshot,lifecycle);}}else{instance.props=nextProps;instance.state=nextState;instance.context=context;}}function patchClassComponent$1(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle){var instance=nextVNode.children=lastVNode.children;// If Component has crashed, ignore it to stay functional
if(isNull$2(instance)){return;}instance.$L=lifecycle;var nextProps=nextVNode.props||EMPTY_OBJ$2;var nextRef=nextVNode.ref;var lastRef=lastVNode.ref;var nextState=instance.state;if(!instance.$N){if(isFunction$4(instance.componentWillReceiveProps)){instance.$BR=true;instance.componentWillReceiveProps(nextProps,context);// If instance component was removed during its own update do nothing.
if(instance.$UN){return;}instance.$BR=false;}if(!isNull$2(instance.$PS)){nextState=combineFrom$2(nextState,instance.$PS);instance.$PS=null;}}updateClassComponent$1(instance,nextState,nextProps,parentDOM,context,isSVG,false,nextNode,lifecycle);if(lastRef!==nextRef){unmountRef$1(lastRef);mountRef$1(nextRef,instance,lifecycle);}}function patchFunctionalComponent$1(lastVNode,nextVNode,parentDOM,context,isSVG,nextNode,lifecycle){var shouldUpdate=true;var nextProps=nextVNode.props||EMPTY_OBJ$2;var nextRef=nextVNode.ref;var lastProps=lastVNode.props;var nextHooksDefined=!isNullOrUndef$3(nextRef);var lastInput=lastVNode.children;if(nextHooksDefined&&isFunction$4(nextRef.onComponentShouldUpdate)){shouldUpdate=nextRef.onComponentShouldUpdate(lastProps,nextProps);}if(shouldUpdate!==false){if(nextHooksDefined&&isFunction$4(nextRef.onComponentWillUpdate)){nextRef.onComponentWillUpdate(lastProps,nextProps);}var type=nextVNode.type;var nextInput=normalizeRoot$1(nextVNode.flags&32768/* ForwardRef */?type.render(nextProps,nextRef,context):type(nextProps,context));patch$1(lastInput,nextInput,parentDOM,context,isSVG,nextNode,lifecycle);nextVNode.children=nextInput;if(nextHooksDefined&&isFunction$4(nextRef.onComponentDidUpdate)){nextRef.onComponentDidUpdate(lastProps,nextProps);}}else{nextVNode.children=lastInput;}}function patchText$1(lastVNode,nextVNode){var nextText=nextVNode.children;var dom=nextVNode.dom=lastVNode.dom;if(nextText!==lastVNode.children){dom.nodeValue=nextText;}}function patchNonKeyedChildren$1(lastChildren,nextChildren,dom,context,isSVG,lastChildrenLength,nextChildrenLength,nextNode,lifecycle){var commonLength=lastChildrenLength>nextChildrenLength?nextChildrenLength:lastChildrenLength;var i=0;var nextChild;var lastChild;for(;i<commonLength;++i){nextChild=nextChildren[i];lastChild=lastChildren[i];if(nextChild.flags&16384/* InUse */){nextChild=nextChildren[i]=directClone$2(nextChild);}patch$1(lastChild,nextChild,dom,context,isSVG,nextNode,lifecycle);lastChildren[i]=nextChild;}if(lastChildrenLength<nextChildrenLength){for(i=commonLength;i<nextChildrenLength;++i){nextChild=nextChildren[i];if(nextChild.flags&16384/* InUse */){nextChild=nextChildren[i]=directClone$2(nextChild);}mount$1(nextChild,dom,context,isSVG,nextNode,lifecycle);}}else if(lastChildrenLength>nextChildrenLength){for(i=commonLength;i<lastChildrenLength;++i){remove$1(lastChildren[i],dom);}}}function patchKeyedChildren$1(a,b,dom,context,isSVG,aLength,bLength,outerEdge,parentVNode,lifecycle){var aEnd=aLength-1;var bEnd=bLength-1;var j=0;var aNode=a[j];var bNode=b[j];var nextPos;var nextNode;// Step 1
// tslint:disable-next-line
outer:{// Sync nodes with the same key at the beginning.
while(aNode.key===bNode.key){if(bNode.flags&16384/* InUse */){b[j]=bNode=directClone$2(bNode);}patch$1(aNode,bNode,dom,context,isSVG,outerEdge,lifecycle);a[j]=bNode;++j;if(j>aEnd||j>bEnd){break outer;}aNode=a[j];bNode=b[j];}aNode=a[aEnd];bNode=b[bEnd];// Sync nodes with the same key at the end.
while(aNode.key===bNode.key){if(bNode.flags&16384/* InUse */){b[bEnd]=bNode=directClone$2(bNode);}patch$1(aNode,bNode,dom,context,isSVG,outerEdge,lifecycle);a[aEnd]=bNode;aEnd--;bEnd--;if(j>aEnd||j>bEnd){break outer;}aNode=a[aEnd];bNode=b[bEnd];}}if(j>aEnd){if(j<=bEnd){nextPos=bEnd+1;nextNode=nextPos<bLength?findDOMfromVNode$1(b[nextPos],true):outerEdge;while(j<=bEnd){bNode=b[j];if(bNode.flags&16384/* InUse */){b[j]=bNode=directClone$2(bNode);}++j;mount$1(bNode,dom,context,isSVG,nextNode,lifecycle);}}}else if(j>bEnd){while(j<=aEnd){remove$1(a[j++],dom);}}else{patchKeyedChildrenComplex$1(a,b,context,aLength,bLength,aEnd,bEnd,j,dom,isSVG,outerEdge,parentVNode,lifecycle);}}function patchKeyedChildrenComplex$1(a,b,context,aLength,bLength,aEnd,bEnd,j,dom,isSVG,outerEdge,parentVNode,lifecycle){var aNode;var bNode;var nextPos;var i=0;var aStart=j;var bStart=j;var aLeft=aEnd-j+1;var bLeft=bEnd-j+1;var sources=new Int32Array(bLeft+1);// Keep track if its possible to remove whole DOM using textContent = '';
var canRemoveWholeContent=aLeft===aLength;var moved=false;var pos=0;var patched=0;// When sizes are small, just loop them through
if(bLength<4||(aLeft|bLeft)<32){for(i=aStart;i<=aEnd;++i){aNode=a[i];if(patched<bLeft){for(j=bStart;j<=bEnd;j++){bNode=b[j];if(aNode.key===bNode.key){sources[j-bStart]=i+1;if(canRemoveWholeContent){canRemoveWholeContent=false;while(aStart<i){remove$1(a[aStart++],dom);}}if(pos>j){moved=true;}else{pos=j;}if(bNode.flags&16384/* InUse */){b[j]=bNode=directClone$2(bNode);}patch$1(aNode,bNode,dom,context,isSVG,outerEdge,lifecycle);++patched;break;}}if(!canRemoveWholeContent&&j>bEnd){remove$1(aNode,dom);}}else if(!canRemoveWholeContent){remove$1(aNode,dom);}}}else{var keyIndex={};// Map keys by their index
for(i=bStart;i<=bEnd;++i){keyIndex[b[i].key]=i;}// Try to patch same keys
for(i=aStart;i<=aEnd;++i){aNode=a[i];if(patched<bLeft){j=keyIndex[aNode.key];if(j!==void 0){if(canRemoveWholeContent){canRemoveWholeContent=false;while(i>aStart){remove$1(a[aStart++],dom);}}sources[j-bStart]=i+1;if(pos>j){moved=true;}else{pos=j;}bNode=b[j];if(bNode.flags&16384/* InUse */){b[j]=bNode=directClone$2(bNode);}patch$1(aNode,bNode,dom,context,isSVG,outerEdge,lifecycle);++patched;}else if(!canRemoveWholeContent){remove$1(aNode,dom);}}else if(!canRemoveWholeContent){remove$1(aNode,dom);}}}// fast-path: if nothing patched remove all old and add all new
if(canRemoveWholeContent){removeAllChildren$1(dom,parentVNode,a);mountArrayChildren$1(b,dom,context,isSVG,outerEdge,lifecycle);}else if(moved){var seq=lis_algorithm$1(sources);j=seq.length-1;for(i=bLeft-1;i>=0;i--){if(sources[i]===0){pos=i+bStart;bNode=b[pos];if(bNode.flags&16384/* InUse */){b[pos]=bNode=directClone$2(bNode);}nextPos=pos+1;mount$1(bNode,dom,context,isSVG,nextPos<bLength?findDOMfromVNode$1(b[nextPos],true):outerEdge,lifecycle);}else if(j<0||i!==seq[j]){pos=i+bStart;bNode=b[pos];nextPos=pos+1;moveVNodeDOM$1(bNode,dom,nextPos<bLength?findDOMfromVNode$1(b[nextPos],true):outerEdge);}else{j--;}}}else if(patched!==bLeft){// when patched count doesn't match b length we need to insert those new ones
// loop backwards so we can use insertBefore
for(i=bLeft-1;i>=0;i--){if(sources[i]===0){pos=i+bStart;bNode=b[pos];if(bNode.flags&16384/* InUse */){b[pos]=bNode=directClone$2(bNode);}nextPos=pos+1;mount$1(bNode,dom,context,isSVG,nextPos<bLength?findDOMfromVNode$1(b[nextPos],true):outerEdge,lifecycle);}}}}var result$2;var p$2;var maxLen$1=0;// https://en.wikipedia.org/wiki/Longest_increasing_subsequence
function lis_algorithm$1(arr){var arrI=0;var i=0;var j=0;var k=0;var u=0;var v=0;var c=0;var len=arr.length;if(len>maxLen$1){maxLen$1=len;result$2=new Int32Array(len);p$2=new Int32Array(len);}for(;i<len;++i){arrI=arr[i];if(arrI!==0){j=result$2[k];if(arr[j]<arrI){p$2[i]=j;result$2[++k]=i;continue;}u=0;v=k;while(u<v){c=u+v>>1;if(arr[result$2[c]]<arrI){u=c+1;}else{v=c;}}if(arrI<arr[result$2[u]]){if(u>0){p$2[i]=result$2[u-1];}result$2[u]=i;}}}u=k+1;var seq=new Int32Array(u);v=result$2[u-1];while(u-->0){seq[u]=v;v=p$2[v];result$2[u]=0;}return seq;}var hasDocumentAvailable$2=typeof document!=='undefined';if(hasDocumentAvailable$2){/*
     * Defining $EV and $V properties on Node.prototype
     * fixes v8 "wrong map" de-optimization
     */if(window.Node){Node.prototype.$EV=null;Node.prototype.$V=null;}}var QUEUE=[];var nextTick$2=typeof Promise!=='undefined'?Promise.resolve().then.bind(Promise.resolve()):function(a){window.setTimeout(a,0);};var microTaskPending=false;function queueStateChanges(component,newState,callback,force){var pending=component.$PS;if(isFunction$4(newState)){newState=newState(pending?combineFrom$2(component.state,pending):component.state,component.props,component.context);}if(isNullOrUndef$3(pending)){component.$PS=newState;}else{for(var stateKey in newState){pending[stateKey]=newState[stateKey];}}if(!component.$BR){if(!renderCheck.v){if(QUEUE.length===0){applyState(component,force);if(isFunction$4(callback)){callback.call(component);}return;}}if(QUEUE.indexOf(component)===-1){QUEUE.push(component);}if(!microTaskPending){microTaskPending=true;nextTick$2(rerender);}if(isFunction$4(callback)){var QU=component.$QU;if(!QU){QU=component.$QU=[];}QU.push(callback);}}else if(isFunction$4(callback)){component.$L.push(callback.bind(component));}}function callSetStateCallbacks(component){var queue=component.$QU;for(var i=0;i<queue.length;++i){queue[i].call(component);}component.$QU=null;}function rerender(){var component;microTaskPending=false;while(component=QUEUE.shift()){if(!component.$UN){applyState(component,false);if(component.$QU){callSetStateCallbacks(component);}}}}function applyState(component,force){if(force||!component.$BR){var pendingState=component.$PS;component.$PS=null;var lifecycle=[];renderCheck.v=true;updateClassComponent$1(component,combineFrom$2(component.state,pendingState),component.props,findDOMfromVNode$1(component.$LI,true).parentNode,component.context,component.$SVG,force,null,lifecycle);callAll$1(lifecycle);renderCheck.v=false;}else{component.state=component.$PS;component.$PS=null;}}var Component=function Component(props,context){// Public
this.state=null;// Internal properties
this.$BR=false;// BLOCK RENDER
this.$BS=true;// BLOCK STATE
this.$PS=null;// PENDING STATE (PARTIAL or FULL)
this.$LI=null;// LAST INPUT
this.$UN=false;// UNMOUNTED
this.$CX=null;// CHILDCONTEXT
this.$QU=null;// QUEUE
this.$N=false;// Uses new lifecycle API Flag
this.$L=null;// Current lifecycle of this component
this.$SVG=false;// Flag to keep track if component is inside SVG tree
this.props=props||EMPTY_OBJ$2;this.context=context||EMPTY_OBJ$2;// context should not be mutable
};Component.prototype.forceUpdate=function forceUpdate(callback){if(this.$UN){return;}// Do not allow double render during force update
queueStateChanges(this,{},callback,true);};Component.prototype.setState=function setState(newState,callback){if(this.$UN){return;}if(!this.$BS){queueStateChanges(this,newState,callback,false);}};Component.prototype.render=function render(_nextProps,_nextState,_nextContext){return null;};if(true){console.warn('You are running production build of Inferno in development mode. Use dev:module entry point.');}var CLEARED=null;// tslint:disable-next-line:no-empty
var nullSubscriptionHandler=function nullSubscriptionHandler(){};var nullListenerCollection={// tslint:disable-next-line:no-empty
clear:function clear(){},// tslint:disable-next-line:no-empty
notify:function notify(){},subscribe:function subscribe(_){return nullSubscriptionHandler;}};var createListenerCollection=function createListenerCollection(){// the current/next pattern is copied from redux's createStore code.
var current=[];var next=[];return{clear:function clear(){next=CLEARED;current=CLEARED;},notify:function notify(){var listeners=current=next;for(var i=0;i<listeners.length;++i){listeners[i]();}},subscribe:function subscribe(listener){var isSubscribed=true;if(next===current){next=current.slice();}next.push(listener);return function(){if(!isSubscribed||current===null){return;}isSubscribed=false;if(next===current){next=current.slice();}next.splice(next.indexOf(listener),1);};}};};var Subscription$1=function Subscription(store,parentSub,onStateChange){this.store=store;this.parentSub=parentSub;this.onStateChange=onStateChange;this.unsubscribe=null;this.listeners=nullListenerCollection;};Subscription$1.prototype.addNestedSub=function addNestedSub(listener){this.trySubscribe();return this.listeners.subscribe(listener);};Subscription$1.prototype.notifyNestedSubs=function notifyNestedSubs(){this.listeners.notify();};Subscription$1.prototype.isSubscribed=function isSubscribed(){return Boolean(this.unsubscribe);};Subscription$1.prototype.trySubscribe=function trySubscribe(){if(!this.unsubscribe){this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.onStateChange):this.store.subscribe(this.onStateChange);this.listeners=createListenerCollection();}};Subscription$1.prototype.tryUnsubscribe=function tryUnsubscribe(){if(this.unsubscribe){this.unsubscribe();this.unsubscribe=null;this.listeners.clear();this.listeners=nullListenerCollection;}};function combineFrom$3(first,second){var out={};if(first){for(var key in first){out[key]=first[key];}}if(second){for(var key$1 in second){out[key$1]=second[key$1];}}return out;}function objectWithoutProperties(obj,exclude){var target={};for(var k in obj){if(Object.prototype.hasOwnProperty.call(obj,k)&&exclude.indexOf(k)===-1)target[k]=obj[k];}return target;}var hotReloadingVersion=0;var dummyState={};// tslint:disable-next-line:no-empty
var noop$1=function noop$1(){};var makeSelectorStateful=function makeSelectorStateful(sourceSelector,store){// wrap the selector in an object that tracks its results between runs.
var selector={error:null,props:{},run:function runComponentSelector(props){try{var nextProps=sourceSelector(store.getState(),props);if(nextProps!==selector.props||selector.error){selector.shouldComponentUpdate=true;selector.props=nextProps;selector.error=null;}}catch(e){selector.shouldComponentUpdate=true;selector.error=e;}},shouldComponentUpdate:false};return selector;};// TODO: Move
var invariant=function invariant(test,error){if(!test){throw new Error(error);}};function getDefaultName(name){return"ConnectAdvanced("+name+")";}function connectAdvanced(selectorFactory,ref){var getDisplayName=ref.getDisplayName;if(getDisplayName===void 0)getDisplayName=getDefaultName;var methodName=ref.methodName;if(methodName===void 0)methodName='connectAdvanced';var renderCountProp=ref.renderCountProp;if(renderCountProp===void 0)renderCountProp=null;var shouldHandleStateChanges=ref.shouldHandleStateChanges;if(shouldHandleStateChanges===void 0)shouldHandleStateChanges=true;var storeKey=ref.storeKey;if(storeKey===void 0)storeKey='store';var withRef=ref.withRef;if(withRef===void 0)withRef=false;var rest=objectWithoutProperties(ref,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef"]);var connectOptions=rest;var subscriptionKey=storeKey+'Subscription';var version=hotReloadingVersion++;var wrapWithConnect=function wrapWithConnect(WrappedComponent){invariant(typeof WrappedComponent==='function',"You must pass a component to the function returned by "+"connect. Instead received "+WrappedComponent);var wrappedComponentName=WrappedComponent.displayName||WrappedComponent.name||'Component';var displayName=getDisplayName(wrappedComponentName);var selectorFactoryOptions=combineFrom$3(connectOptions,{WrappedComponent:WrappedComponent,displayName:displayName,getDisplayName:getDisplayName,methodName:methodName,renderCountProp:renderCountProp,shouldHandleStateChanges:shouldHandleStateChanges,storeKey:storeKey,withRef:withRef,wrappedComponentName:wrappedComponentName});var Connect=/*@__PURE__*/function(Component){function Connect(props,context){Component.call(this,props,context);this.version=version;this.state={};this.renderCount=0;this.store=this.props[storeKey]||this.context[storeKey];this.propsMode=Boolean(props[storeKey]);this.setWrappedInstance=this.setWrappedInstance.bind(this);invariant(!!this.store,"Could not find \""+storeKey+"\" in either the context or "+"props of \""+displayName+"\". "+"Either wrap the root component in a <Provider>, "+"or explicitly pass \""+storeKey+"\" as a prop to \""+displayName+"\".");this.initSelector();this.initSubscription();}if(Component)Connect.__proto__=Component;Connect.prototype=Object.create(Component&&Component.prototype);Connect.prototype.constructor=Connect;Connect.prototype.getChildContext=function getChildContext(){var obj;// If this component received store from props, its subscription should be transparent
// to any descendants receiving store+subscription from context; it passes along
// subscription passed to it. Otherwise, it shadows the parent subscription, which allows
// Connect to control ordering of notifications to flow top-down.
var subscription=this.propsMode?null:this.subscription;return obj={},obj[subscriptionKey]=subscription||this.context[subscriptionKey],obj;};Connect.prototype.componentWillMount=function componentWillMount(){if(!shouldHandleStateChanges||this.$SSR){return;}this.subscription.trySubscribe();this.selector.run(this.props);};Connect.prototype.componentWillReceiveProps=function componentWillReceiveProps(nextProps){this.selector.run(nextProps);};Connect.prototype.shouldComponentUpdate=function shouldComponentUpdate(){return this.selector.shouldComponentUpdate;};Connect.prototype.componentWillUnmount=function componentWillUnmount(){if(this.subscription){this.subscription.tryUnsubscribe();}// these are just to guard against extra memory leakage if a parent element doesn't
// dereference this instance properly, such as an async callback that never finishes
this.subscription=null;this.notifyNestedSubs=noop$1;this.store=null;this.selector.run=noop$1;this.selector.shouldComponentUpdate=false;};Connect.prototype.getWrappedInstance=function getWrappedInstance(){invariant(withRef,"To access the wrapped instance, you need to specify "+"{ withRef: true } in the options argument of the "+methodName+"() call.");return this.wrappedInstance;};Connect.prototype.setWrappedInstance=function setWrappedInstance(ref){this.wrappedInstance=ref;};Connect.prototype.initSelector=function initSelector(){var sourceSelector=selectorFactory(this.store.dispatch,selectorFactoryOptions);this.selector=makeSelectorStateful(sourceSelector,this.store);this.selector.run(this.props);};Connect.prototype.initSubscription=function initSubscription(){if(!shouldHandleStateChanges){return;}// parentSub's source should match where store came from: props vs. context. A component
// connected to the store via props shouldn't use subscription from context, or vice versa.
var parentSub=(this.propsMode?this.props:this.context)[subscriptionKey];this.subscription=new Subscription$1(this.store,parentSub,this.onStateChange.bind(this));// `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
// the middle of the notification loop, where `this.subscription` will then be null. An
// extra null check every change can be avoided by copying the method onto `this` and then
// replacing it with a no-op on unmount. This can probably be avoided if Subscription's
// listeners logic is changed to not call listeners that have been unsubscribed in the
// middle of the notification loop.
this.notifyNestedSubs=this.subscription.notifyNestedSubs.bind(this.subscription);};Connect.prototype.onStateChange=function onStateChange(){this.selector.run(this.props);if(!this.selector.shouldComponentUpdate){this.notifyNestedSubs();}else{this.componentDidUpdate=this.notifyNestedSubsOnComponentDidUpdate;this.setState(dummyState);}};Connect.prototype.notifyNestedSubsOnComponentDidUpdate=function notifyNestedSubsOnComponentDidUpdate(){// `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
// needs to notify nested subs. Once called, it unimplements itself until further state
// changes occur. Doing it this way vs having a permanent `componentDidMount` that does
// a boolean check every time avoids an extra method call most of the time, resulting
// in some perf boost.
this.componentDidUpdate=undefined;this.notifyNestedSubs();};Connect.prototype.isSubscribed=function isSubscribed(){return Boolean(this.subscription&&this.subscription.isSubscribed());};Connect.prototype.addExtraProps=function addExtraProps(props){if(!renderCountProp){return props;}// make a shallow copy so that fields added don't leak to the original selector.
// this is especially important for 'ref' since that's a reference back to the component
// instance. a singleton memoized selector would then be holding a reference to the
// instance, preventing the instance from being garbage collected, and that would be bad
var withExtras=combineFrom$3(props,null);if(renderCountProp){withExtras[renderCountProp]=this.renderCount++;}if(this.propsMode&&this.subscription){withExtras[subscriptionKey]=this.subscription;}return withExtras;};Connect.prototype.render=function render(){var selector=this.selector;selector.shouldComponentUpdate=false;if(selector.error){throw selector.error;}else{return normalizeProps(createComponentVNode$1(2/* ComponentUnknown */,WrappedComponent,this.addExtraProps(selector.props),null,withRef?this.setWrappedInstance:null));}};return Connect;}(Component);Connect.displayName=displayName;Connect.WrappedComponent=WrappedComponent;return hoistNonInfernoStatics(Connect,WrappedComponent);};return wrapWithConnect;}var Provider=/*@__PURE__*/function(Component){function Provider(props,context){Component.call(this,props,context);this.store=props.store;}if(Component)Provider.__proto__=Component;Provider.prototype=Object.create(Component&&Component.prototype);Provider.prototype.constructor=Provider;Provider.prototype.getChildContext=function getChildContext(){return{store:this.store,storeSubscription:null};};// Don't infer the return type. It may be expanded and cause reference errors
// in the output.
Provider.prototype.render=function render(){return this.props.children;};return Provider;}(Component);Provider.displayName='Provider';var hasOwn=Object.prototype.hasOwnProperty;var shallowEqual=function shallowEqual(a,b){if(a===b){return true;}var countA=0;var countB=0;for(var key in a){if(hasOwn.call(a,key)&&a[key]!==b[key]){return false;}countA++;}for(var key$1 in b){if(hasOwn.call(b,key$1)){countB++;}}return countA===countB;};// TODO: Type
var wrapMapToPropsConstant=function wrapMapToPropsConstant(getConstant){return function(dispatch,options){var constant=getConstant(dispatch,options);var constantSelector=function constantSelector(){return constant;};constantSelector.dependsOnOwnProps=false;return constantSelector;};};// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
//
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..
var getDependsOnOwnProps=function getDependsOnOwnProps(mapToProps){return mapToProps.dependsOnOwnProps!==null&&mapToProps.dependsOnOwnProps!==undefined?!!mapToProps.dependsOnOwnProps:mapToProps.length!==1;};// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
//
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//
var wrapMapToPropsFunc=function wrapMapToPropsFunc(mapToProps,methodName){return function(_dispatch,ref){var displayName=ref.displayName;var proxy=function proxy(stateOrDispatch,ownProps){return proxy.dependsOnOwnProps?proxy.mapToProps(stateOrDispatch,ownProps):proxy.mapToProps(stateOrDispatch);};proxy.dependsOnOwnProps=getDependsOnOwnProps(mapToProps);proxy.mapToProps=function(stateOrDispatch,ownProps){proxy.mapToProps=mapToProps;var props=proxy(stateOrDispatch,ownProps);if(typeof props==='function'){proxy.mapToProps=props;proxy.dependsOnOwnProps=getDependsOnOwnProps(props);props=proxy(stateOrDispatch,ownProps);}return props;};return proxy;};};var whenMapDispatchToPropsIsFunction=function whenMapDispatchToPropsIsFunction(mapDispatchToProps){return typeof mapDispatchToProps==='function'?wrapMapToPropsFunc(mapDispatchToProps):undefined;};var whenMapDispatchToPropsIsMissing=function whenMapDispatchToPropsIsMissing(mapDispatchToProps){return!mapDispatchToProps?wrapMapToPropsConstant(function(dispatch){return{dispatch:dispatch};}):undefined;};var whenMapDispatchToPropsIsObject=function whenMapDispatchToPropsIsObject(mapDispatchToProps){return mapDispatchToProps&&_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(mapDispatchToProps)==='object'?wrapMapToPropsConstant(function(dispatch){return bindActionCreators(mapDispatchToProps,dispatch);}):undefined;};var defaultMapDispatchToPropsFactories=[whenMapDispatchToPropsIsFunction,whenMapDispatchToPropsIsMissing,whenMapDispatchToPropsIsObject];var whenMapStateToPropsIsFunction=function whenMapStateToPropsIsFunction(mapStateToProps){return typeof mapStateToProps==='function'?wrapMapToPropsFunc(mapStateToProps):undefined;};var whenMapStateToPropsIsMissing=function whenMapStateToPropsIsMissing(mapStateToProps){return!mapStateToProps?wrapMapToPropsConstant(function(){return{};}):undefined;};var defaultMapStateToPropsFactories=[whenMapStateToPropsIsFunction,whenMapStateToPropsIsMissing];var defaultMergeProps=function defaultMergeProps(stateProps,dispatchProps,ownProps){var merged=combineFrom$3(ownProps,stateProps);if(dispatchProps){for(var key in dispatchProps){merged[key]=dispatchProps[key];}}return merged;};var wrapMergePropsFunc=function wrapMergePropsFunc(mergeProps){return function(_dispatch,ref){var displayName=ref.displayName;var pure=ref.pure;var areMergedPropsEqual=ref.areMergedPropsEqual;var hasRunOnce=false;var mergedProps;return function(stateProps,dispatchProps,ownProps){var nextMergedProps=mergeProps(stateProps,dispatchProps,ownProps);if(hasRunOnce){if(!pure||!areMergedPropsEqual(nextMergedProps,mergedProps)){mergedProps=nextMergedProps;}}else{hasRunOnce=true;mergedProps=nextMergedProps;}return mergedProps;};};};var whenMergePropsIsFunction=function whenMergePropsIsFunction(mergeProps){return typeof mergeProps==='function'?wrapMergePropsFunc(mergeProps):undefined;};var whenMergePropsIsOmitted=function whenMergePropsIsOmitted(mergeProps){return!mergeProps?function(){return defaultMergeProps;}:undefined;};var defaultMergePropsFactories=[whenMergePropsIsFunction,whenMergePropsIsOmitted];function objectWithoutProperties$1(obj,exclude){var target={};for(var k in obj){if(Object.prototype.hasOwnProperty.call(obj,k)&&exclude.indexOf(k)===-1)target[k]=obj[k];}return target;}var impureFinalPropsSelectorFactory=function impureFinalPropsSelectorFactory(mapStateToProps,mapDispatchToProps,mergeProps,dispatch){return function(state,ownProps){return mergeProps(mapStateToProps(state,ownProps),mapDispatchToProps(dispatch,ownProps),ownProps);};};var pureFinalPropsSelectorFactory=function pureFinalPropsSelectorFactory(mapStateToProps,mapDispatchToProps,mergeProps,dispatch,ref){var areStatesEqual=ref.areStatesEqual;var areOwnPropsEqual=ref.areOwnPropsEqual;var areStatePropsEqual=ref.areStatePropsEqual;var hasRunAtLeastOnce=false;var state;var ownProps;var stateProps;var dispatchProps;var mergedProps;var handleFirstCall=function handleFirstCall(firstState,firstOwnProps){state=firstState;ownProps=firstOwnProps;stateProps=mapStateToProps(state,ownProps);dispatchProps=mapDispatchToProps(dispatch,ownProps);mergedProps=mergeProps(stateProps,dispatchProps,ownProps);hasRunAtLeastOnce=true;return mergedProps;};var handleNewPropsAndNewState=function handleNewPropsAndNewState(){stateProps=mapStateToProps(state,ownProps);if(mapDispatchToProps.dependsOnOwnProps){dispatchProps=mapDispatchToProps(dispatch,ownProps);}mergedProps=mergeProps(stateProps,dispatchProps,ownProps);return mergedProps;};var handleNewProps=function handleNewProps(){if(mapStateToProps.dependsOnOwnProps){stateProps=mapStateToProps(state,ownProps);}if(mapDispatchToProps.dependsOnOwnProps){dispatchProps=mapDispatchToProps(dispatch,ownProps);}mergedProps=mergeProps(stateProps,dispatchProps,ownProps);return mergedProps;};var handleNewState=function handleNewState(){var nextStateProps=mapStateToProps(state,ownProps);var statePropsChanged=!areStatePropsEqual(nextStateProps,stateProps);stateProps=nextStateProps;if(statePropsChanged){mergedProps=mergeProps(stateProps,dispatchProps,ownProps);}return mergedProps;};var handleSubsequentCalls=function handleSubsequentCalls(nextState,nextOwnProps){var propsChanged=!areOwnPropsEqual(nextOwnProps,ownProps);var stateChanged=!areStatesEqual(nextState,state);state=nextState;ownProps=nextOwnProps;if(propsChanged&&stateChanged){return handleNewPropsAndNewState();}if(propsChanged){return handleNewProps();}if(stateChanged){return handleNewState();}return mergedProps;};var pureFinalPropsSelector=function pureFinalPropsSelector(nextState,nextOwnProps){return hasRunAtLeastOnce?handleSubsequentCalls(nextState,nextOwnProps):handleFirstCall(nextState,nextOwnProps);};return pureFinalPropsSelector;};// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.
var defaultSelectorFactory=function defaultSelectorFactory(dispatch,ref){var initMapStateToProps=ref.initMapStateToProps;var initMapDispatchToProps=ref.initMapDispatchToProps;var initMergeProps=ref.initMergeProps;var rest=objectWithoutProperties$1(ref,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]);var opts=rest;var options=opts;// trick typescript
var mapStateToProps=initMapStateToProps(dispatch,options);var mapDispatchToProps=initMapDispatchToProps(dispatch,options);var mergeProps=initMergeProps(dispatch,options);var selectorFactory=options.pure?pureFinalPropsSelectorFactory:impureFinalPropsSelectorFactory;return selectorFactory(mapStateToProps,mapDispatchToProps,mergeProps,dispatch,options);};function objectWithoutProperties$2(obj,exclude){var target={};for(var k in obj){if(Object.prototype.hasOwnProperty.call(obj,k)&&exclude.indexOf(k)===-1)target[k]=obj[k];}return target;}var match=function match(arg,factories,name){for(var i=factories.length-1;i>=0;i--){var result=factories[i](arg);if(result){return result;}}return function(_dispatch,options){throw new Error("Invalid value of type "+_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_6___default()(arg)+" for "+name+" argument when connecting component "+options.wrappedComponentName+".");};};var strictEqual=function strictEqual(a,b){return a===b;};// createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios
var createConnect=function createConnect(ref){if(ref===void 0)ref={};var connectHOC=ref.connectHOC;if(connectHOC===void 0)connectHOC=connectAdvanced;var mapStateToPropsFactories=ref.mapStateToPropsFactories;if(mapStateToPropsFactories===void 0)mapStateToPropsFactories=defaultMapStateToPropsFactories;var mapDispatchToPropsFactories=ref.mapDispatchToPropsFactories;if(mapDispatchToPropsFactories===void 0)mapDispatchToPropsFactories=defaultMapDispatchToPropsFactories;var mergePropsFactories=ref.mergePropsFactories;if(mergePropsFactories===void 0)mergePropsFactories=defaultMergePropsFactories;var selectorFactory=ref.selectorFactory;if(selectorFactory===void 0)selectorFactory=defaultSelectorFactory;return function(mapStateToProps,mapDispatchToProps,mergeProps,ref){if(ref===void 0)ref={};var pure=ref.pure;if(pure===void 0)pure=true;var areStatesEqual=ref.areStatesEqual;if(areStatesEqual===void 0)areStatesEqual=strictEqual;var areOwnPropsEqual=ref.areOwnPropsEqual;if(areOwnPropsEqual===void 0)areOwnPropsEqual=shallowEqual;var areStatePropsEqual=ref.areStatePropsEqual;if(areStatePropsEqual===void 0)areStatePropsEqual=shallowEqual;var areMergedPropsEqual=ref.areMergedPropsEqual;if(areMergedPropsEqual===void 0)areMergedPropsEqual=shallowEqual;var rest=objectWithoutProperties$2(ref,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]);var extraOptions=rest;var initMapStateToProps=match(mapStateToProps,mapStateToPropsFactories,'mapStateToProps');var initMapDispatchToProps=match(mapDispatchToProps,mapDispatchToPropsFactories,'mapDispatchToProps');var initMergeProps=match(mergeProps,mergePropsFactories,'mergeProps');return connectHOC(selectorFactory,combineFrom$3({// used in error messages
methodName:'connect',// used to compute Connect's displayName from the wrapped component's displayName.
// tslint:disable-next-line:object-literal-sort-keys
getDisplayName:function getDisplayName(name){return"Connect("+name+")";},// if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
shouldHandleStateChanges:!!mapStateToProps,// passed through to selectorFactory
areMergedPropsEqual:areMergedPropsEqual,areOwnPropsEqual:areOwnPropsEqual,areStatePropsEqual:areStatePropsEqual,areStatesEqual:areStatesEqual,initMapDispatchToProps:initMapDispatchToProps,initMapStateToProps:initMapStateToProps,initMergeProps:initMergeProps,pure:pure},extraOptions/* any extra options args can override defaults of connect or connectAdvanced */));};};var connect=createConnect();var BaseUI=function BaseUI(){return null;};var showLoadingScreen=function showLoadingScreen(){return{type:UI_LOADING_SCREEN,loadingScreenVisible:true};};var hideLoadingScreen=function hideLoadingScreen(){return{type:UI_LOADING_SCREEN,loadingScreenVisible:false};};var ROOT_ID='#ui';var createProps=function createProps(){return{level:Router$1.getCurrentLevel()};};var getUIContainer=function getUIContainer(){var rootElement=document.querySelector(ROOT_ID);if(!rootElement){rootElement=createElementFromSelector(ROOT_ID);document.body.appendChild(rootElement);}return rootElement;};var requestLoadingScreen=function requestLoadingScreen(){dispatch$1(showLoadingScreen());};var removeLoadingScreen=function removeLoadingScreen(){dispatch$1(hideLoadingScreen());};var mount$2=function mount(){var _Config$ui=Config$2.ui(),_Config$ui$root=_Config$ui.root,root=_Config$ui$root===void 0?BaseUI:_Config$ui$root;var store=getStore();var uiElement=createElement(root,createProps());if(store){render(createElement(Provider,{store:getStore(),children:uiElement}),getUIContainer());}else{render(uiElement,getUIContainer());}};var unmount$2=function unmount(){// Rendering null will trigger unmount lifecycle hooks for whole vDOM tree and remove global event listeners.
// https://github.com/infernojs/inferno#tear-down
render(null,document.querySelector(ROOT_ID));};var hasLocation=function hasLocation(){return window&&window.location;};var getLocationSearch=function getLocationSearch(){return hasLocation()?location.search:EMPTY;};var getLocationHash=function getLocationHash(){return hasLocation()?location.hash:HASH;};var setLocationHash=function setLocationHash(hash){if(hasLocation()){location.hash=hash;}};var Router=/*#__PURE__*/function(){function Router(){var _this=this;_classCallCheck(this,Router);_defineProperty(this,"setCurrentLevel",function(hash){_this.currentLevel=hash;Assets$1.setCurrentLevel(_this.currentLevel);});_defineProperty(this,"getCurrentLevel",function(){return _this.currentLevel;});_defineProperty(this,"isValidRoute",function(route){return _this.routes.includes(route);});_defineProperty(this,"handleHashChange",function(){requestLoadingScreen();_this.startLevel();});_defineProperty(this,"stop",function(){_this.removeGlobaWindowEventsListeners();unmount$2();});_defineProperty(this,"startLevel",function(){var hash=Router.extractLocationHash();var query=Router.extractQuery();if(_this.isValidRoute(hash)){_this.setCurrentLevel(hash);return Assets$1.load(hash).then(function(){return GameRunner$1.start(hash,query);}).then(removeLoadingScreen);}else{_this.goTo(ROOT,query,hash);}});_defineProperty(this,"handleStartError",function(e){if(e instanceof Array){var features=e.map(function(_ref){var name=_ref.name;return name;});console.error(FEATURE_NOT_SUPPORTED.concat(features));}else{console.error(e);}});this.routes=[];this.currentLevel=ROOT;}_createClass(Router,[{key:"on",value:function on(route,classname){if(GameRunner$1.register(route,classname)){this.routes.push(route);}}},{key:"goTo",value:function goTo(path){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var origin=arguments.length>2&&arguments[2]!==undefined?arguments[2]:this.getCurrentLevel();if(!Router.areRoutesIdentical(origin,path)){if(options){setLocationHash(toQueryString(options));}setLocationHash(path);}}},{key:"setGlobalWindowEventsListeners",value:function setGlobalWindowEventsListeners(){listenToNetworkChanges();window.addEventListener(HASH_CHANGE,this.handleHashChange,false);window.addEventListener(BEFORE_UNLOAD,this.stop);}},{key:"removeGlobaWindowEventsListeners",value:function removeGlobaWindowEventsListeners(){stopListeningToNetworkChanges();window.removeEventListener(HASH_CHANGE,this.handleHashChange);removeEventListener(BEFORE_UNLOAD,this.stop);}},{key:"start",value:function start(config,assets){var _config$selector=config.selector,selector=_config$selector===void 0?DEFAULT_SELECTOR:_config$selector;setLocationHash(ROOT);this.setGlobalWindowEventsListeners();Config$2.setConfig(config);Config$2.setContainer(selector);requestLoadingScreen();mount$2();Features$1.setUpPolyfills();Assets$1.setAssets(assets);Features$1.checkSupportedFeatures().then(Assets$1.load).then(this.startLevel).catch(this.handleStartError);}}],[{key:"extractLocationHash",value:function extractLocationHash(){return Router.cleanRoute(getLocationHash());}},{key:"extractQuery",value:function extractQuery(){return parseQuery(getLocationSearch());}},{key:"cleanRoute",value:function cleanRoute(){var route=arguments.length>0&&arguments[0]!==undefined?arguments[0]:HASH;if(!route.length){return ROOT;}return route.split(HASH)[1];}}]);return Router;}();_defineProperty(Router,"areRoutesIdentical",function(routeA,routeB){return routeA===routeB;});var Router$1=new Router();function _createSuper2$N(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DEFAULT_NEAR$2=0.1;var DEFAULT_FAR$2=100;var DEFAULT_POSITION$4={x:0,y:0,z:0};var DEFAULT_TARGET_POSITION$1={x:0,y:0,z:0};var DEFAULT_INTENSITY$3=0.5;var DEFAULT_MAP_SIZE$2=2048;var DEFAULT_BIAS$2=-0.0001;var WHITE$3=0xffffff;var GREEN$1=0x2ecc71;var SpotLight$1=/*#__PURE__*/function(_Light){_inherits(SpotLight$1,_Light);var _super=_createSuper2$N(SpotLight$1);function SpotLight$1(options){var _this;_classCallCheck(this,SpotLight$1);var _options$color=options.color,color=_options$color===void 0?WHITE$3:_options$color,_options$intensity=options.intensity,intensity=_options$intensity===void 0?DEFAULT_INTENSITY$3:_options$intensity,name=options.name;_this=_super.call(this,{color:color,intensity:intensity,name:name});_this.options=options;_this.setLight({color:color,intensity:intensity});return _this;}_createClass(SpotLight$1,[{key:"getTargetMesh",value:function getTargetMesh(initialPosition){var geometry=new SphereGeometry(3,6,6);var material=new MeshBasicMaterial({color:0xeeeeee,wireframe:true});var target=new Element(geometry,material);target.position(initialPosition);return target;}},{key:"setLight",value:function setLight(_ref){var light=_ref.light,_ref$color=_ref.color,color=_ref$color===void 0?WHITE$3:_ref$color,_ref$intensity=_ref.intensity,intensity=_ref$intensity===void 0?DEFAULT_INTENSITY$3:_ref$intensity;if(light){this.light=light;}else{this.light=new SpotLight(color,intensity);}if(this.hasLight()){this.postLightCreation();}}},{key:"postLightCreation",value:function postLightCreation(){var _this$options=this.options,_this$options$positio=_this$options.position,position=_this$options$positio===void 0?DEFAULT_POSITION$4:_this$options$positio,_this$options$target=_this$options.target,target=_this$options$target===void 0?DEFAULT_TARGET_POSITION$1:_this$options$target;this.setPosition(position);this.setTargetPosition(target);this.setLightShadows();this.addToScene();}},{key:"setLightShadows",value:function setLightShadows(){var _this$options2=this.options,_this$options2$near=_this$options2.near,near=_this$options2$near===void 0?DEFAULT_NEAR$2:_this$options2$near,_this$options2$far=_this$options2.far,far=_this$options2$far===void 0?DEFAULT_FAR$2:_this$options2$far,_this$options2$mapSiz=_this$options2.mapSize,mapSize=_this$options2$mapSiz===void 0?DEFAULT_MAP_SIZE$2:_this$options2$mapSiz,_this$options2$bias=_this$options2.bias,bias=_this$options2$bias===void 0?DEFAULT_BIAS$2:_this$options2$bias;if(Config$2.lights().shadows){this.light.castShadow=true;var d=far/2;this.light.shadow.mapSize.height=mapSize;this.light.shadow.mapSize.width=mapSize;this.light.shadow.camera.left=-d;this.light.shadow.camera.right=d;this.light.shadow.camera.top=d;this.light.shadow.camera.bottom=-d;this.light.shadow.camera.near=near;this.light.shadow.camera.far=far;this.light.shadow.bias=bias;}}},{key:"setTargetPosition",value:function setTargetPosition(){var position=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.target=_objectSpread2({},this.target,{},position);var _this$target=this.target,_this$target$x=_this$target.x,x=_this$target$x===void 0?0:_this$target$x,_this$target$y=_this$target.y,y=_this$target$y===void 0?0:_this$target$y,_this$target$z=_this$target.z,z=_this$target$z===void 0?0:_this$target$z;this.light.target.position.set(x,y,z);}},{key:"getTargetPosition",value:function getTargetPosition(){return this.target;}},{key:"addHelper",value:function addHelper(){this.helper=new SpotLightHelper(this.light,GREEN$1);this.shadowHelper=new CameraHelper(this.light.shadow.camera);Scene$2.add(this.helper,null,false);Scene$2.add(this.shadowHelper,null,false);this.addHolder();}},{key:"hasTarget",value:function hasTarget(){return!!this.target;}},{key:"update",value:function update(dt){_get(_getPrototypeOf(SpotLight$1.prototype),"update",this).call(this,dt);if(this.hasHelper()){this.helper.update();this.shadowHelper.update();}if(this.hasHolder()){this.setPosition(this.holder.getPosition(),{updateHolder:false});}}},{key:"toJSON",value:function toJSON(){return _objectSpread2({},_get(_getPrototypeOf(SpotLight$1.prototype),"toJSON",this).call(this),{type:SPOTLIGHT});}}]);return SpotLight$1;}(Light$1);function _createSuper2$O(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var DEFAULT_INTENSITY$4=0.5;var DEFAULT_SKY_COLOR=0xffffff;var DEFAULT_GROUND_COLOR=0x555555;var GREEN$2=0x2ecc71;var HemisphereLight$1=/*#__PURE__*/function(_Light){_inherits(HemisphereLight$1,_Light);var _super=_createSuper2$O(HemisphereLight$1);function HemisphereLight$1(options){var _this;_classCallCheck(this,HemisphereLight$1);var _options$color=options.color,color=_options$color===void 0?{sky:DEFAULT_SKY_COLOR,ground:DEFAULT_GROUND_COLOR}:_options$color,_options$intensity=options.intensity,intensity=_options$intensity===void 0?DEFAULT_INTENSITY$4:_options$intensity,name=options.name;_this=_super.call(this,{color:color,intensity:intensity,name:name});_this.options=options;_this.setLight({color:color,intensity:intensity});return _this;}_createClass(HemisphereLight$1,[{key:"setLight",value:function setLight(_ref){var light=_ref.light,_ref$color=_ref.color,color=_ref$color===void 0?{sky:DEFAULT_SKY_COLOR,ground:DEFAULT_GROUND_COLOR}:_ref$color,_ref$intensity=_ref.intensity,intensity=_ref$intensity===void 0?DEFAULT_INTENSITY$4:_ref$intensity;if(light){this.light=light;}else{var _color$sky=color.sky,sky=_color$sky===void 0?DEFAULT_SKY_COLOR:_color$sky,_color$ground=color.ground,ground=_color$ground===void 0?DEFAULT_GROUND_COLOR:_color$ground;this.light=new HemisphereLight(sky,ground,intensity);}if(this.hasLight()){this.addToScene();}}},{key:"addHelper",value:function addHelper(){this.helper=new HemisphereLightHelper(this.light,2,GREEN$2);Scene$2.add(this.helper,null,false);}},{key:"toJSON",value:function toJSON(){return _objectSpread2({},_get(_getPrototypeOf(HemisphereLight$1.prototype),"toJSON",this).call(this),{type:HEMISPHERELIGHT});}}]);return HemisphereLight$1;}(Light$1);var Atmosphere=/*#__PURE__*/function(){function Atmosphere(){_classCallCheck(this,Atmosphere);this.options={side:FrontSide,blending:AdditiveBlending,transparent:true,depthWrite:false};this.attributes={};}_createClass(Atmosphere,null,[{key:"vertex",value:function vertex(){return['varying vec3 vNormal;','void main(){','	// compute intensity','	vNormal		= normalize( normalMatrix * normal );','	// set gl_Position','	gl_Position	= projectionMatrix * modelViewMatrix * vec4( position, 1.0 );','}'].join('\n');}},{key:"fragment",value:function fragment(){return['uniform float coeficient;','uniform float power;','uniform vec3  glowColor;','varying vec3  vNormal;','void main(){','	float intensity	= pow( coeficient - dot(vNormal, vec3(0.0, 0.0, 1.0)), power );','	gl_FragColor	= vec4( glowColor * intensity, 1.0 );','}'].join('\n');}},{key:"uniforms",value:function uniforms(){return{coeficient:{type:"f",value:1.0},power:{type:"f",value:2},glowColor:{type:"c",value:new Color('pink')}};}}]);return Atmosphere;}();function _createSuper2$P(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var Mirror=/*#__PURE__*/function(_Object3D){_inherits(Mirror,_Object3D);var _super=_createSuper2$P(Mirror);_createClass(Mirror,[{key:"mirroruniforms",value:function mirroruniforms(){return{"mirrorColor":{type:"c",value:new Color(0x7F7F7F)},"mirrorSampler":{type:"t",value:null},"textureMatrix":{type:"m4",value:new Matrix4()}};}},{key:"mirrorvertex",value:function mirrorvertex(){return["uniform mat4 textureMatrix;","varying vec4 mirrorCoord;","void main() {","vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);","vec4 worldPosition = modelMatrix * vec4(position, 1.0);","mirrorCoord = textureMatrix * worldPosition;","gl_Position = projectionMatrix * mvPosition;","}"].join("\n");}},{key:"mirrorfragment",value:function mirrorfragment(){return["uniform vec3 mirrorColor;","uniform sampler2D mirrorSampler;","varying vec4 mirrorCoord;","float blendOverlay(float base, float blend) {","return(base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)));","}","void main() {","vec4 color = texture2DProj(mirrorSampler, mirrorCoord);","color = vec4(blendOverlay(mirrorColor.r, color.r), blendOverlay(mirrorColor.g, color.g), blendOverlay(mirrorColor.b, color.b), 1.0);","gl_FragColor = color;","}"].join("\n");}}]);function Mirror(renderer,camera,scene,options){var _this;_classCallCheck(this,Mirror);_this=_super.call(this);_this.name='mirror_'+_this.id;options=options||{};_this.matrixNeedsUpdate=true;var width=options.textureWidth!==undefined?options.textureWidth:512;var height=options.textureHeight!==undefined?options.textureHeight:512;_this.clipBias=options.clipBias!==undefined?options.clipBias:0.0;var mirrorColor=options.color!==undefined?new Color(options.color):new Color(0x7F7F7F);_this.renderer=renderer;_this.mirrorPlane=new Plane();_this.normal=new Vector3$1(0,0,1);_this.mirrorWorldPosition=new Vector3$1();_this.cameraWorldPosition=new Vector3$1();_this.rotationMatrix=new Matrix4();_this.lookAtPosition=new Vector3$1(0,0,-1);_this.clipPlane=new Vector4();// For debug only, show the normal and plane of the mirror
var debugMode=options.debugMode!==undefined?options.debugMode:false;if(debugMode){var arrow=new ArrowHelper(new Vector3$1(0,0,1),new Vector3$1(0,0,0),10,0xffff80);var planeGeometry=new Geometry();planeGeometry.vertices.push(new Vector3$1(-10,-10,0));planeGeometry.vertices.push(new Vector3$1(10,-10,0));planeGeometry.vertices.push(new Vector3$1(10,10,0));planeGeometry.vertices.push(new Vector3$1(-10,10,0));planeGeometry.vertices.push(planeGeometry.vertices[0]);var plane=new Line(planeGeometry,new LineBasicMaterial({color:0xffff80}));_this.add(arrow);_this.add(plane);}if(camera instanceof PerspectiveCamera){_this.camera=camera;}else{_this.camera=new PerspectiveCamera();}_this.textureMatrix=new Matrix4();_this.mirrorCamera=_this.camera.clone();_this.mirrorCamera.matrixAutoUpdate=true;var parameters={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBFormat,stencilBuffer:false};_this.renderTarget=new WebGLRenderTarget(width,height,parameters);_this.renderTarget2=new WebGLRenderTarget(width,height,parameters);_this.material=new ShaderMaterial({fragmentShader:_this.mirrorfragment(),vertexShader:_this.mirrorvertex(),uniforms:UniformsUtils.clone(_this.mirroruniforms())});_this.material.uniforms.mirrorSampler.value=_this.renderTarget.texture;_this.material.uniforms.mirrorColor.value=mirrorColor;_this.material.uniforms.textureMatrix.value=_this.textureMatrix;if(!MathUtils.isPowerOfTwo(width)||!MathUtils.isPowerOfTwo(height)){_this.renderTarget.texture.generateMipmaps=false;_this.renderTarget2.texture.generateMipmaps=false;}_this.updateTextureMatrix();_this.render();return _this;}_createClass(Mirror,[{key:"renderWithMirror",value:function renderWithMirror(otherMirror){// update the mirror matrix to mirror the current view
this.updateTextureMatrix();this.matrixNeedsUpdate=false;// set the camera of the other mirror so the mirrored view is the reference view
var tempCamera=otherMirror.camera;otherMirror.camera=this.mirrorCamera;// render the other mirror in temp texture
otherMirror.renderTemp();otherMirror.material.uniforms.mirrorSampler.value=otherMirror.renderTarget2.texture;// render the current mirror
this.render();this.matrixNeedsUpdate=true;// restore material and camera of other mirror
otherMirror.material.uniforms.mirrorSampler.value=otherMirror.renderTarget.texture;otherMirror.camera=tempCamera;// restore texture matrix of other mirror
otherMirror.updateTextureMatrix();}},{key:"renderWithMirror",value:function renderWithMirror(otherMirror){// update the mirror matrix to mirror the current view
this.updateTextureMatrix();this.matrixNeedsUpdate=false;// set the camera of the other mirror so the mirrored view is the reference view
var tempCamera=otherMirror.camera;otherMirror.camera=this.mirrorCamera;// render the other mirror in temp texture
otherMirror.renderTemp();otherMirror.material.uniforms.mirrorSampler.value=otherMirror.renderTarget2.texture;// render the current mirror
this.render();this.matrixNeedsUpdate=true;// restore material and camera of other mirror
otherMirror.material.uniforms.mirrorSampler.value=otherMirror.renderTarget.texture;otherMirror.camera=tempCamera;// restore texture matrix of other mirror
otherMirror.updateTextureMatrix();}},{key:"updateTextureMatrix",value:function updateTextureMatrix(){this.updateMatrixWorld();this.camera.updateMatrixWorld();this.mirrorWorldPosition.setFromMatrixPosition(this.matrixWorld);this.cameraWorldPosition.setFromMatrixPosition(this.camera.matrixWorld);this.rotationMatrix.extractRotation(this.matrixWorld);this.normal.set(0,0,1);this.normal.applyMatrix4(this.rotationMatrix);var view=this.mirrorWorldPosition.clone().sub(this.cameraWorldPosition);view.reflect(this.normal).negate();view.add(this.mirrorWorldPosition);this.rotationMatrix.extractRotation(this.camera.matrixWorld);this.lookAtPosition.set(0,0,-1);this.lookAtPosition.applyMatrix4(this.rotationMatrix);this.lookAtPosition.add(this.cameraWorldPosition);var target=this.mirrorWorldPosition.clone().sub(this.lookAtPosition);target.reflect(this.normal).negate();target.add(this.mirrorWorldPosition);this.up.set(0,-1,0);this.up.applyMatrix4(this.rotationMatrix);this.up.reflect(this.normal).negate();this.mirrorCamera.position.copy(view);this.mirrorCamera.up=this.up;this.mirrorCamera.lookAt(target);this.mirrorCamera.updateProjectionMatrix();this.mirrorCamera.updateMatrixWorld();this.mirrorCamera.matrixWorldInverse.getInverse(this.mirrorCamera.matrixWorld);// Update the texture matrix
this.textureMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);this.textureMatrix.multiply(this.mirrorCamera.projectionMatrix);this.textureMatrix.multiply(this.mirrorCamera.matrixWorldInverse);// Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html
// Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf
this.mirrorPlane.setFromNormalAndCoplanarPoint(this.normal,this.mirrorWorldPosition);this.mirrorPlane.applyMatrix4(this.mirrorCamera.matrixWorldInverse);this.clipPlane.set(this.mirrorPlane.normal.x,this.mirrorPlane.normal.y,this.mirrorPlane.normal.z,this.mirrorPlane.constant);var q=new Vector4();var projectionMatrix=this.mirrorCamera.projectionMatrix;q.x=(window.Math.sign(this.clipPlane.x)+projectionMatrix.elements[8])/projectionMatrix.elements[0];q.y=(window.Math.sign(this.clipPlane.y)+projectionMatrix.elements[9])/projectionMatrix.elements[5];q.z=-1.0;q.w=(1.0+projectionMatrix.elements[10])/projectionMatrix.elements[14];// Calculate the scaled plane vector
var c=new Vector4();c=this.clipPlane.multiplyScalar(2.0/this.clipPlane.dot(q));// Replacing the third row of the projection matrix
projectionMatrix.elements[2]=c.x;projectionMatrix.elements[6]=c.y;projectionMatrix.elements[10]=c.z+1.0-this.clipBias;projectionMatrix.elements[14]=c.w;}},{key:"render",value:function render(){if(this.matrixNeedsUpdate)this.updateTextureMatrix();this.matrixNeedsUpdate=true;// Render the mirrored view of the current scene into the target texture
var scene=this;while(scene.parent!==null){scene=scene.parent;}if(scene!==undefined&&scene instanceof Scene){// We can't render ourself to ourself
var visible=this.material.visible;this.material.visible=false;this.renderer.render(scene,this.mirrorCamera,this.renderTarget,true);this.material.visible=visible;}}}]);return Mirror;}(Object3D);var OceanMain=/*#__PURE__*/function(){function OceanMain(){_classCallCheck(this,OceanMain);}_createClass(OceanMain,null,[{key:"uniforms",value:function uniforms(){return{"u_displacementMap":{type:"t",value:null},"u_normalMap":{type:"t",value:null},"u_geometrySize":{type:"f",value:null},"u_size":{type:"f",value:null},"u_projectionMatrix":{type:"m4",value:null},"u_viewMatrix":{type:"m4",value:null},"u_cameraPosition":{type:"v3",value:null},"u_skyColor":{type:"v3",value:null},"u_oceanColor":{type:"v3",value:null},"u_sunDirection":{type:"v3",value:null},"u_exposure":{type:"f",value:null}};}},{key:"varying",value:function varying(){return{"vPos":{type:"v3"},"vUV":{type:"v2"}};}},{key:"vertex",value:function vertex(){return['precision highp float;','varying vec3 vPos;','varying vec2 vUV;','uniform mat4 u_projectionMatrix;','uniform mat4 u_viewMatrix;','uniform float u_size;','uniform float u_geometrySize;','uniform sampler2D u_displacementMap;','void main (void) {','vec3 newPos = position + texture2D(u_displacementMap, uv).rgb * (u_geometrySize / u_size);','vPos = newPos;','vUV = uv;','gl_Position = u_projectionMatrix * u_viewMatrix * vec4(newPos, 1.0);','}'].join('\n');}},{key:"fragment",value:function fragment(){return['precision highp float;','varying vec3 vPos;','varying vec2 vUV;','uniform sampler2D u_displacementMap;','uniform sampler2D u_normalMap;','uniform vec3 u_cameraPosition;','uniform vec3 u_oceanColor;','uniform vec3 u_skyColor;','uniform vec3 u_sunDirection;','uniform float u_exposure;','vec3 hdr (vec3 color, float exposure) {','return 1.0 - exp(-color * exposure);','}','void main (void) {','vec3 normal = texture2D(u_normalMap, vUV).rgb;','vec3 view = normalize(u_cameraPosition - vPos);','float fresnel = 0.02 + 0.98 * pow(1.0 - dot(normal, view), 5.0);','vec3 sky = fresnel * u_skyColor;','float diffuse = clamp(dot(normal, normalize(u_sunDirection)), 0.0, 1.0);','vec3 water = (1.0 - fresnel) * u_oceanColor * u_skyColor * diffuse;','vec3 color = sky + water;','gl_FragColor = vec4(hdr(color, u_exposure), 1.0);','}'].join('\n');}}]);return OceanMain;}();var OceanNormals=/*#__PURE__*/function(){function OceanNormals(){_classCallCheck(this,OceanNormals);}_createClass(OceanNormals,null,[{key:"uniforms",value:function uniforms(){return{"u_displacementMap":{type:"t",value:null},"u_resolution":{type:"f",value:null},"u_size":{type:"f",value:null}};}},{key:"varying",value:function varying(){return{"vUV":{type:"v2"}};}},{key:"fragment",value:function fragment(){return['precision highp float;','varying vec2 vUV;','uniform sampler2D u_displacementMap;','uniform float u_resolution;','uniform float u_size;','void main (void) {','float texel = 1.0 / u_resolution;','float texelSize = u_size / u_resolution;','vec3 center = texture2D(u_displacementMap, vUV).rgb;','vec3 right = vec3(texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(texel, 0.0)).rgb - center;','vec3 left = vec3(-texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(-texel, 0.0)).rgb - center;','vec3 top = vec3(0.0, 0.0, -texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, -texel)).rgb - center;','vec3 bottom = vec3(0.0, 0.0, texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, texel)).rgb - center;','vec3 topRight = cross(right, top);','vec3 topLeft = cross(top, left);','vec3 bottomLeft = cross(left, bottom);','vec3 bottomRight = cross(bottom, right);','gl_FragColor = vec4(normalize(topRight + topLeft + bottomLeft + bottomRight), 1.0);','}'].join('\n');}}]);return OceanNormals;}();var OceanSpectrum=/*#__PURE__*/function(){function OceanSpectrum(){_classCallCheck(this,OceanSpectrum);}_createClass(OceanSpectrum,null,[{key:"uniforms",value:function uniforms(){return{"u_size":{type:"f",value:null},"u_resolution":{type:"f",value:null},"u_choppiness":{type:"f",value:null},"u_phases":{type:"t",value:null},"u_initialSpectrum":{type:"t",value:null}};}},{key:"varying",value:function varying(){return{"vUV":{type:"v2"}};}},{key:"fragment",value:function fragment(){return['precision highp float;','#include <common>','const float G = 9.81;','const float KM = 370.0;','varying vec2 vUV;','uniform float u_size;','uniform float u_resolution;','uniform float u_choppiness;','uniform sampler2D u_phases;','uniform sampler2D u_initialSpectrum;','vec2 multiplyComplex (vec2 a, vec2 b) {','return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);','}','vec2 multiplyByI (vec2 z) {','return vec2(-z[1], z[0]);','}','float omega (float k) {','return sqrt(G * k * (1.0 + k * k / KM * KM));','}','void main (void) {','vec2 coordinates = gl_FragCoord.xy - 0.5;','float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;','float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;','vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;','float phase = texture2D(u_phases, vUV).r;','vec2 phaseVector = vec2(cos(phase), sin(phase));','vec2 h0 = texture2D(u_initialSpectrum, vUV).rg;','vec2 h0Star = texture2D(u_initialSpectrum, vec2(1.0 - vUV + 1.0 / u_resolution)).rg;','h0Star.y *= -1.0;','vec2 h = multiplyComplex(h0, phaseVector) + multiplyComplex(h0Star, vec2(phaseVector.x, -phaseVector.y));','vec2 hX = -multiplyByI(h * (waveVector.x / length(waveVector))) * u_choppiness;','vec2 hZ = -multiplyByI(h * (waveVector.y / length(waveVector))) * u_choppiness;',//no DC term
'if (waveVector.x == 0.0 && waveVector.y == 0.0) {','h = vec2(0.0);','hX = vec2(0.0);','hZ = vec2(0.0);','}','gl_FragColor = vec4(hX + multiplyByI(h), hZ);','}'].join('\n');}}]);return OceanSpectrum;}();var OceanPhase=/*#__PURE__*/function(){function OceanPhase(){_classCallCheck(this,OceanPhase);}_createClass(OceanPhase,null,[{key:"uniforms",value:function uniforms(){return{"u_phases":{type:"t",value:null},"u_deltaTime":{type:"f",value:null},"u_resolution":{type:"f",value:null},"u_size":{type:"f",value:null}};}},{key:"varying",value:function varying(){return{"vUV":{type:"v2"}};}},{key:"fragment",value:function fragment(){return['precision highp float;','#include <common>','const float G = 9.81;','const float KM = 370.0;','varying vec2 vUV;','uniform sampler2D u_phases;','uniform float u_deltaTime;','uniform float u_resolution;','uniform float u_size;','float omega (float k) {','return sqrt(G * k * (1.0 + k * k / KM * KM));','}','void main (void) {','float deltaTime = 1.0 / 60.0;','vec2 coordinates = gl_FragCoord.xy - 0.5;','float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;','float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;','vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;','float phase = texture2D(u_phases, vUV).r;','float deltaPhase = omega(length(waveVector)) * u_deltaTime;','phase = mod(phase + deltaPhase, 2.0 * PI);','gl_FragColor = vec4(phase, 0.0, 0.0, 0.0);','}'].join('\n');}}]);return OceanPhase;}();var OceanInitialSpectrum=/*#__PURE__*/function(){function OceanInitialSpectrum(){_classCallCheck(this,OceanInitialSpectrum);}_createClass(OceanInitialSpectrum,null,[{key:"uniforms",value:function uniforms(){return{"u_wind":{type:"v2",value:new Vector2(10.0,10.0)},"u_resolution":{type:"f",value:512.0},"u_size":{type:"f",value:250.0}};}},{key:"fragment",value:function fragment(){return['precision highp float;','#include <common>','const float G = 9.81;','const float KM = 370.0;','const float CM = 0.23;','uniform vec2 u_wind;','uniform float u_resolution;','uniform float u_size;','float omega (float k) {','return sqrt(G * k * (1.0 + pow2(k / KM)));','}','float tanh (float x) {','return (1.0 - exp(-2.0 * x)) / (1.0 + exp(-2.0 * x));','}','void main (void) {','vec2 coordinates = gl_FragCoord.xy - 0.5;','float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;','float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;','vec2 K = (2.0 * PI * vec2(n, m)) / u_size;','float k = length(K);','float l_wind = length(u_wind);','float Omega = 0.84;','float kp = G * pow2(Omega / l_wind);','float c = omega(k) / k;','float cp = omega(kp) / kp;','float Lpm = exp(-1.25 * pow2(kp / k));','float gamma = 1.7;','float sigma = 0.08 * (1.0 + 4.0 * pow(Omega, -3.0));','float Gamma = exp(-pow2(sqrt(k / kp) - 1.0) / 2.0 * pow2(sigma));','float Jp = pow(gamma, Gamma);','float Fp = Lpm * Jp * exp(-Omega / sqrt(10.0) * (sqrt(k / kp) - 1.0));','float alphap = 0.006 * sqrt(Omega);','float Bl = 0.5 * alphap * cp / c * Fp;','float z0 = 0.000037 * pow2(l_wind) / G * pow(l_wind / cp, 0.9);','float uStar = 0.41 * l_wind / log(10.0 / z0);','float alpham = 0.01 * ((uStar < CM) ? (1.0 + log(uStar / CM)) : (1.0 + 3.0 * log(uStar / CM)));','float Fm = exp(-0.25 * pow2(k / KM - 1.0));','float Bh = 0.5 * alpham * CM / c * Fm * Lpm;','float a0 = log(2.0) / 4.0;','float am = 0.13 * uStar / CM;','float Delta = tanh(a0 + 4.0 * pow(c / cp, 2.5) + am * pow(CM / c, 2.5));','float cosPhi = dot(normalize(u_wind), normalize(K));','float S = (1.0 / (2.0 * PI)) * pow(k, -4.0) * (Bl + Bh) * (1.0 + Delta * (2.0 * cosPhi * cosPhi - 1.0));','float dk = 2.0 * PI / u_size;','float h = sqrt(S / 2.0) * dk;','if (K.x == 0.0 && K.y == 0.0) {','h = 0.0;',//no DC term
'}','gl_FragColor = vec4(h, 0.0, 0.0, 0.0);','}'].join('\n');}}]);return OceanInitialSpectrum;}();var OceanSubTransform=/*#__PURE__*/function(){function OceanSubTransform(){_classCallCheck(this,OceanSubTransform);}_createClass(OceanSubTransform,null,[{key:"uniforms",value:function uniforms(){return{"u_input":{type:"t",value:null},"u_transformSize":{type:"f",value:512.0},"u_subtransformSize":{type:"f",value:250.0}};}},{key:"varying",value:function varying(){return{"vUV":{type:"v2"}};}},{key:"fragment",value:function fragment(){return[//GPU FFT using a Stockham formulation
'precision highp float;','#include <common>','uniform sampler2D u_input;','uniform float u_transformSize;','uniform float u_subtransformSize;','varying vec2 vUV;','vec2 multiplyComplex (vec2 a, vec2 b) {','return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);','}','void main (void) {','#ifdef HORIZONTAL','float index = vUV.x * u_transformSize - 0.5;','#else','float index = vUV.y * u_transformSize - 0.5;','#endif','float evenIndex = floor(index / u_subtransformSize) * (u_subtransformSize * 0.5) + mod(index, u_subtransformSize * 0.5);',//transform two complex sequences simultaneously
'#ifdef HORIZONTAL','vec4 even = texture2D(u_input, vec2(evenIndex + 0.5, gl_FragCoord.y) / u_transformSize).rgba;','vec4 odd = texture2D(u_input, vec2(evenIndex + u_transformSize * 0.5 + 0.5, gl_FragCoord.y) / u_transformSize).rgba;','#else','vec4 even = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + 0.5) / u_transformSize).rgba;','vec4 odd = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + u_transformSize * 0.5 + 0.5) / u_transformSize).rgba;','#endif','float twiddleArgument = -2.0 * PI * (index / u_subtransformSize);','vec2 twiddle = vec2(cos(twiddleArgument), sin(twiddleArgument));','vec2 outputA = even.xy + multiplyComplex(twiddle, odd.xy);','vec2 outputB = even.zw + multiplyComplex(twiddle, odd.zw);','gl_FragColor = vec4(outputA, outputB);','}'].join('\n');}}]);return OceanSubTransform;}();var OceanSimVertex=/*#__PURE__*/function(){function OceanSimVertex(){_classCallCheck(this,OceanSimVertex);}_createClass(OceanSimVertex,null,[{key:"varying",value:function varying(){return{"vUV":{type:"v2"}};}},{key:"vertex",value:function vertex(){return['varying vec2 vUV;','void main (void) {','vUV = position.xy * 0.5 + 0.5;','gl_Position = vec4(position, 1.0 );','}'].join('\n');}}]);return OceanSimVertex;}();var OceanShaders={};var OceanShader=/*#__PURE__*/function(){function OceanShader(renderer,camera,scene,options){_classCallCheck(this,OceanShader);// flag used to trigger parameter changes
this.changed=true;this.initial=true;// Assign required parameters as object properties
this.oceanCamera=new OrthographicCamera();//camera.clone();
this.oceanCamera.position.z=1;this.renderer=renderer;this.renderer.clearColor(0xffffff);this.scene=new Scene();// Assign optional parameters as variables and object properties
function optionalParameter(value,defaultValue){return value!==undefined?value:defaultValue;}options=options||{};this.clearColor=optionalParameter(options.CLEAR_COLOR,[1.0,1.0,1.0,0.0]);this.geometryOrigin=optionalParameter(options.GEOMETRY_ORIGIN,[-1000.0,-1000.0]);this.sunDirectionX=optionalParameter(options.SUN_DIRECTION[0],-1.0);this.sunDirectionY=optionalParameter(options.SUN_DIRECTION[1],1.0);this.sunDirectionZ=optionalParameter(options.SUN_DIRECTION[2],1.0);this.oceanColor=optionalParameter(options.OCEAN_COLOR,new Vector3(0.004,0.016,0.047));this.skyColor=optionalParameter(options.SKY_COLOR,new Vector3(3.2,9.6,12.8));this.exposure=optionalParameter(options.EXPOSURE,0.35);this.geometryResolution=optionalParameter(options.GEOMETRY_RESOLUTION,32);this.geometrySize=optionalParameter(options.GEOMETRY_SIZE,2000);this.resolution=optionalParameter(options.RESOLUTION,64);this.floatSize=optionalParameter(options.SIZE_OF_FLOAT,4);this.windX=optionalParameter(options.INITIAL_WIND[0],10.0),this.windY=optionalParameter(options.INITIAL_WIND[1],10.0),this.size=optionalParameter(options.INITIAL_SIZE,250.0),this.choppiness=optionalParameter(options.INITIAL_CHOPPINESS,1.5);//
this.matrixNeedsUpdate=false;// Setup framebuffer pipeline
var renderTargetType=optionalParameter(options.USE_HALF_FLOAT,false)?HalfFloatType:THREE.FloatType;var LinearClampParams={minFilter:LinearFilter,magFilter:LinearFilter,wrapS:ClampToEdgeWrapping,wrapT:ClampToEdgeWrapping,format:RGBAFormat,stencilBuffer:false,depthBuffer:false,premultiplyAlpha:false,type:renderTargetType};var NearestClampParams={minFilter:NearestFilter,magFilter:NearestFilter,wrapS:ClampToEdgeWrapping,wrapT:ClampToEdgeWrapping,format:RGBAFormat,stencilBuffer:false,depthBuffer:false,premultiplyAlpha:false,type:renderTargetType};var NearestRepeatParams={minFilter:NearestFilter,magFilter:NearestFilter,wrapS:RepeatWrapping,wrapT:RepeatWrapping,format:RGBAFormat,stencilBuffer:false,depthBuffer:false,premultiplyAlpha:false,type:renderTargetType};this.initialSpectrumFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,NearestRepeatParams);this.spectrumFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,NearestClampParams);this.pingPhaseFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,NearestClampParams);this.pongPhaseFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,NearestClampParams);this.pingTransformFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,NearestClampParams);this.pongTransformFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,NearestClampParams);this.displacementMapFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,LinearClampParams);this.normalMapFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,LinearClampParams);// Define shaders and constant uniforms
////////////////////////////////////////
// 1 - Horizontal wave vertices used for FFT
this.materialOceanHorizontal=new ShaderMaterial({uniforms:UniformsUtils.clone(OceanSubTransform.uniforms()),vertexShader:OceanSimVertex.vertex(),fragmentShader:"#define HORIZONTAL \n"+OceanSubTransform.fragment()});this.materialOceanHorizontal.uniforms.u_transformSize={type:"f",value:this.resolution};this.materialOceanHorizontal.uniforms.u_subtransformSize={type:"f",value:null};this.materialOceanHorizontal.uniforms.u_input={type:"t",value:null};this.materialOceanHorizontal.depthTest=false;// 2 - Vertical wave vertices used for FFT
this.materialOceanVertical=new ShaderMaterial({uniforms:UniformsUtils.clone(OceanSubTransform.uniforms()),vertexShader:OceanSimVertex.vertex(),fragmentShader:OceanSubTransform.fragment()});this.materialOceanVertical.uniforms.u_transformSize={type:"f",value:this.resolution};this.materialOceanVertical.uniforms.u_subtransformSize={type:"f",value:null};this.materialOceanVertical.uniforms.u_input={type:"t",value:null};this.materialOceanVertical.depthTest=false;// 3 - Initial spectrum used to generate height map
this.materialInitialSpectrum=new ShaderMaterial({uniforms:UniformsUtils.clone(OceanInitialSpectrum.uniforms()),vertexShader:OceanSimVertex.vertex(),fragmentShader:OceanInitialSpectrum.fragment()});this.materialInitialSpectrum.uniforms.u_wind={type:"v2",value:new Vector2()};this.materialInitialSpectrum.uniforms.u_resolution={type:"f",value:this.resolution};this.materialInitialSpectrum.depthTest=false;// 4 - Phases used to animate heightmap
this.materialPhase=new ShaderMaterial({uniforms:UniformsUtils.clone(OceanPhase.uniforms()),vertexShader:OceanSimVertex.vertex(),fragmentShader:OceanPhase.fragment()});this.materialPhase.uniforms.u_resolution={type:"f",value:this.resolution};this.materialPhase.depthTest=false;// 5 - Shader used to update spectrum
this.materialSpectrum=new ShaderMaterial({uniforms:UniformsUtils.clone(OceanSpectrum.uniforms()),vertexShader:OceanSimVertex.vertex(),fragmentShader:OceanSpectrum.fragment()});this.materialSpectrum.uniforms.u_initialSpectrum={type:"t",value:null};this.materialSpectrum.uniforms.u_resolution={type:"f",value:this.resolution};this.materialSpectrum.depthTest=false;// 6 - Shader used to update spectrum normals
this.materialNormal=new ShaderMaterial({uniforms:UniformsUtils.clone(OceanNormals.uniforms()),vertexShader:OceanSimVertex.vertex(),fragmentShader:OceanNormals.fragment()});this.materialNormal.uniforms.u_displacementMap={type:"t",value:null};this.materialNormal.uniforms.u_resolution={type:"f",value:this.resolution};this.materialNormal.depthTest=false;// 7 - Shader used to update normals
this.materialOcean=new ShaderMaterial({uniforms:UniformsUtils.clone(OceanMain.uniforms()),vertexShader:OceanMain.vertex(),fragmentShader:OceanMain.fragment()});// this.materialOcean.wireframe = true;
this.materialOcean.uniforms.u_geometrySize={type:"f",value:this.resolution};this.materialOcean.uniforms.u_displacementMap={type:"t",value:this.displacementMapFramebuffer.texture};this.materialOcean.uniforms.u_normalMap={type:"t",value:this.normalMapFramebuffer.texture};this.materialOcean.uniforms.u_oceanColor={type:"v3",value:this.oceanColor};this.materialOcean.uniforms.u_skyColor={type:"v3",value:this.skyColor};this.materialOcean.uniforms.u_sunDirection={type:"v3",value:new Vector3(this.sunDirectionX,this.sunDirectionY,this.sunDirectionZ)};this.materialOcean.uniforms.u_exposure={type:"f",value:this.exposure};// Disable blending to prevent default premultiplied alpha values
this.materialOceanHorizontal.blending=0;this.materialOceanVertical.blending=0;this.materialInitialSpectrum.blending=0;this.materialPhase.blending=0;this.materialSpectrum.blending=0;this.materialNormal.blending=0;this.materialOcean.blending=0;// Create the simulation plane
this.screenQuad=new Mesh(new PlaneBufferGeometry(2,2));this.scene.add(this.screenQuad);// Initialise spectrum data
this.generateSeedPhaseTexture();// Generate the ocean mesh
this.generateMesh();}_createClass(OceanShader,[{key:"generateMesh",value:function generateMesh(){var geometry=new PlaneBufferGeometry(this.geometrySize,this.geometrySize,this.geometryResolution,this.geometryResolution);geometry.rotateX(-Math.PI/2);this.oceanMesh=new Mesh(geometry,this.materialOcean);}},{key:"update",value:function update(){this.scene.overrideMaterial=null;if(this.changed)this.renderInitialSpectrum();this.renderWavePhase();this.renderSpectrum();this.renderSpectrumFFT();this.renderNormalMap();this.scene.overrideMaterial=null;}},{key:"generateSeedPhaseTexture",value:function generateSeedPhaseTexture(){// Setup the seed texture
this.pingPhase=true;var phaseArray=new Float32Array(this.resolution*this.resolution*4);for(var i=0;i<this.resolution;i++){for(var j=0;j<this.resolution;j++){phaseArray[i*this.resolution*4+j*4]=Math.random()*2.0*Math.PI;phaseArray[i*this.resolution*4+j*4+1]=0.0;phaseArray[i*this.resolution*4+j*4+2]=0.0;phaseArray[i*this.resolution*4+j*4+3]=0.0;}}this.pingPhaseTexture=new DataTexture(phaseArray,this.resolution,this.resolution,THREE.RGBAFormat);this.pingPhaseTexture.wrapS=ClampToEdgeWrapping;this.pingPhaseTexture.wrapT=ClampToEdgeWrapping;this.pingPhaseTexture.type=FloatType;this.pingPhaseTexture.needsUpdate=true;}},{key:"renderInitialSpectrum",value:function renderInitialSpectrum(){this.scene.overrideMaterial=this.materialInitialSpectrum;this.materialInitialSpectrum.uniforms.u_wind.value.set(this.windX,this.windY);this.materialInitialSpectrum.uniforms.u_size.value=this.size;this.renderer.render(this.scene,this.oceanCamera,this.initialSpectrumFramebuffer,true);}},{key:"renderWavePhase",value:function renderWavePhase(){this.scene.overrideMaterial=this.materialPhase;this.screenQuad.material=this.materialPhase;if(this.initial){this.materialPhase.uniforms.u_phases.value=this.pingPhaseTexture;this.initial=false;}else{this.materialPhase.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture;}this.materialPhase.uniforms.u_deltaTime.value=this.deltaTime;this.materialPhase.uniforms.u_size.value=this.size;this.renderer.render(this.scene,this.oceanCamera,this.pingPhase?this.pongPhaseFramebuffer:this.pingPhaseFramebuffer);this.pingPhase=!this.pingPhase;}},{key:"renderSpectrum",value:function renderSpectrum(){this.scene.overrideMaterial=this.materialSpectrum;this.materialSpectrum.uniforms.u_initialSpectrum.value=this.initialSpectrumFramebuffer.texture;this.materialSpectrum.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture;this.materialSpectrum.uniforms.u_choppiness.value=this.choppiness;this.materialSpectrum.uniforms.u_size.value=this.size;this.renderer.render(this.scene,this.oceanCamera,this.spectrumFramebuffer);}},{key:"renderSpectrumFFT",value:function renderSpectrumFFT(){// GPU FFT using Stockham formulation
var iterations=Math.log(this.resolution)/Math.log(2);// log2
this.scene.overrideMaterial=this.materialOceanHorizontal;for(var i=0;i<iterations;i++){if(i===0){this.materialOceanHorizontal.uniforms.u_input.value=this.spectrumFramebuffer.texture;this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,i%iterations+1);this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer);}else if(i%2===1){this.materialOceanHorizontal.uniforms.u_input.value=this.pingTransformFramebuffer.texture;this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,i%iterations+1);this.renderer.render(this.scene,this.oceanCamera,this.pongTransformFramebuffer);}else{this.materialOceanHorizontal.uniforms.u_input.value=this.pongTransformFramebuffer.texture;this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,i%iterations+1);this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer);}}this.scene.overrideMaterial=this.materialOceanVertical;for(var i=iterations;i<iterations*2;i++){if(i===iterations*2-1){this.materialOceanVertical.uniforms.u_input.value=iterations%2===0?this.pingTransformFramebuffer.texture:this.pongTransformFramebuffer.texture;this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,i%iterations+1);this.renderer.render(this.scene,this.oceanCamera,this.displacementMapFramebuffer);}else if(i%2===1){this.materialOceanVertical.uniforms.u_input.value=this.pingTransformFramebuffer.texture;this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,i%iterations+1);this.renderer.render(this.scene,this.oceanCamera,this.pongTransformFramebuffer);}else{this.materialOceanVertical.uniforms.u_input.value=this.pongTransformFramebuffer.texture;this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,i%iterations+1);this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer);}}}},{key:"renderNormalMap",value:function renderNormalMap(){this.scene.overrideMaterial=this.materialNormal;if(this.changed)this.materialNormal.uniforms.u_size.value=this.size;this.materialNormal.uniforms.u_displacementMap.value=this.displacementMapFramebuffer.texture;this.renderer.render(this.scene,this.oceanCamera,this.normalMapFramebuffer,true);}}]);return OceanShader;}();var Ocean=/*#__PURE__*/function(){function Ocean(){_classCallCheck(this,Ocean);var gsize=options.geometrySize||512,res=options.resolution||1024,gres=res/2,origx=-gsize/2,origz=-gsize/2;this.ocean=new OceanShader(renderer,camera,scene,{USE_HALF_FLOAT:true,INITIAL_SIZE:options.initial.size||256.0,INITIAL_WIND:options.initial.wind||[10.0,10.0],INITIAL_CHOPPINESS:options.initial.choppiness||1.5,CLEAR_COLOR:options.clearColor||[1.0,1.0,1.0,0.0],GEOMETRY_ORIGIN:[origx,origz],SUN_DIRECTION:options.sunDirection||[-1.0,1.0,1.0],OCEAN_COLOR:options.oceanColor||new Vector3(0.004,0.016,0.047),SKY_COLOR:options.skyColor||new Vector3(3.2,9.6,12.8),EXPOSURE:options.exposure||0.35,GEOMETRY_RESOLUTION:gres,GEOMETRY_SIZE:gsize,RESOLUTION:res});this.ocean.lastTime=new Date().getTime();this.ocean.materialOcean.uniforms.u_projectionMatrix={type:"m4",value:camera.projectionMatrix};this.ocean.materialOcean.uniforms.u_viewMatrix={type:"m4",value:camera.matrixWorldInverse};this.ocean.materialOcean.uniforms.u_cameraPosition={type:"v3",value:camera.position};}_createClass(Ocean,[{key:"render",value:function render(){var currentTime=new Date().getTime();this.ocean.deltaTime=(currentTime-this.ocean.lastTime)/1000||0.0;this.ocean.lastTime=currentTime;this.ocean.update(this.ocean.deltaTime);this.ocean.overrideMaterial=this.ocean.materialOcean;if(this.ocean.changed){this.ocean.materialOcean.uniforms.u_size.value=this.ocean.size;this.ocean.materialOcean.uniforms.u_sunDirection.value.set(this.ocean.sunDirectionX,this.ocean.sunDirectionY,this.ocean.sunDirectionZ);this.ocean.materialOcean.uniforms.u_exposure.value=this.ocean.exposure;this.ocean.changed=false;}this.ocean.materialOcean.uniforms.u_normalMap.value=this.ocean.normalMapFramebuffer.texture;this.ocean.materialOcean.uniforms.u_displacementMap.value=this.ocean.displacementMapFramebuffer.texture;this.ocean.materialOcean.uniforms.u_projectionMatrix.value=camera.projectionMatrix;this.ocean.materialOcean.uniforms.u_viewMatrix.value=camera.matrixWorldInverse;this.ocean.materialOcean.uniforms.u_cameraPosition.value=camera.position;this.ocean.materialOcean.depthTest=true;}}]);return Ocean;}();var Skybox=/*#__PURE__*/function(){_createClass(Skybox,null,[{key:"options",get:function get(){return{textureName:{name:'texture',type:'string',default:'skybox',mandatory:true}};}}]);function Skybox(options){_classCallCheck(this,Skybox);this.cubeMap=new CubeTexture([]);this.cubeMap.format=RGBFormat;if(options.texture){this.buildCube(options.texture);}else{var textureName=options.textureName||'skybox';this.buildCube(Images$1.get(textureName));}var cubeShader=ShaderLib['cube'];cubeShader.uniforms['tCube'].value=this.cubeMap;var skyBoxMaterial=new ShaderMaterial({fragmentShader:cubeShader.fragmentShader,vertexShader:cubeShader.vertexShader,uniforms:cubeShader.uniforms,depthWrite:false,side:BackSide});this.body=new Mesh(new BoxGeometry(1000000,1000000,1000000),skyBoxMaterial);Scene$2.add(this.body,this);}_createClass(Skybox,[{key:"render",value:function render(){}},{key:"buildCube",value:function buildCube(image){this.cubeMap.images[0]=this.getSide(image,2,1);// px
this.cubeMap.images[1]=this.getSide(image,0,1);// nx
this.cubeMap.images[2]=this.getSide(image,1,0);// py
this.cubeMap.images[3]=this.getSide(image,1,2);// ny
this.cubeMap.images[4]=this.getSide(image,1,1);// pz
this.cubeMap.images[5]=this.getSide(image,3,1);// nz
this.cubeMap.needsUpdate=true;}},{key:"getSide",value:function getSide(image,x,y){var size=1024;var canvas=document.createElement('canvas');canvas.width=size;canvas.height=size;var context=canvas.getContext('2d');context.drawImage(image,-x*size,-y*size);return canvas;}}]);return Skybox;}();function _createSuper2$Q(Derived){function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}var mirrorShader={uniforms:UniformsUtils.merge([UniformsLib['fog'],UniformsLib['lights'],{normalSampler:{value:null},mirrorSampler:{value:null},alpha:{value:1.0},time:{value:0.0},size:{value:1.0},distortionScale:{value:20.0},textureMatrix:{value:new Matrix4()},sunColor:{value:new Color(0x7F7F7F)},sunDirection:{value:new Vector3$1(0.70707,0.70707,0)},eye:{value:new Vector3$1()},waterColor:{value:new Color(0x555555)}}]),vertexShader:['uniform mat4 textureMatrix;','uniform float time;','varying vec4 mirrorCoord;','varying vec4 worldPosition;',ShaderChunk['fog_pars_vertex'],ShaderChunk['shadowmap_pars_vertex'],'void main() {','	mirrorCoord = modelMatrix * vec4( position, 1.0 );','	worldPosition = mirrorCoord.xyzw;','	mirrorCoord = textureMatrix * mirrorCoord;','	vec4 mvPosition =  modelViewMatrix * vec4( position, 1.0 );','	gl_Position = projectionMatrix * mvPosition;',ShaderChunk['fog_vertex'],ShaderChunk['shadowmap_vertex'],'}'].join('\n'),fragmentShader:['uniform sampler2D mirrorSampler;','uniform float alpha;','uniform float time;','uniform float size;','uniform float distortionScale;','uniform sampler2D normalSampler;','uniform vec3 sunColor;','uniform vec3 sunDirection;','uniform vec3 eye;','uniform vec3 waterColor;','varying vec4 mirrorCoord;','varying vec4 worldPosition;','vec4 getNoise( vec2 uv ) {','	vec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);','	vec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );','	vec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );','	vec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );','	vec4 noise = texture2D( normalSampler, uv0 ) +','		texture2D( normalSampler, uv1 ) +','		texture2D( normalSampler, uv2 ) +','		texture2D( normalSampler, uv3 );','	return noise * 0.5 - 1.0;','}','void sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {','	vec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );','	float direction = max( 0.0, dot( eyeDirection, reflection ) );','	specularColor += pow( direction, shiny ) * sunColor * spec;','	diffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;','}',ShaderChunk['common'],ShaderChunk['packing'],ShaderChunk['bsdfs'],ShaderChunk['fog_pars_fragment'],ShaderChunk['lights_pars_begin'],ShaderChunk['shadowmap_pars_fragment'],ShaderChunk['shadowmask_pars_fragment'],'void main() {','	vec4 noise = getNoise( worldPosition.xz * size );','	vec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );','	vec3 diffuseLight = vec3(0.0);','	vec3 specularLight = vec3(0.0);','	vec3 worldToEye = eye-worldPosition.xyz;','	vec3 eyeDirection = normalize( worldToEye );','	sunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );','	float distance = length(worldToEye);','	vec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * distortionScale;','	vec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy / mirrorCoord.z + distortion ) );','	float theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );','	float rf0 = 0.3;','	float reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );','	vec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;','	vec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);','	vec3 outgoingLight = albedo;','	gl_FragColor = vec4( outgoingLight, alpha );',ShaderChunk['tonemapping_fragment'],ShaderChunk['fog_fragment'],'}'].join('\n')};var WaterShader=/*#__PURE__*/function(_Mesh){_inherits(WaterShader,_Mesh);var _super=_createSuper2$Q(WaterShader);function WaterShader(geometry,options){var _this;_classCallCheck(this,WaterShader);_this=_super.call(this,geometry);_defineProperty(_assertThisInitialized(_this),"onBeforeRender",function(renderer,scene,camera){_this.mirrorWorldPosition.setFromMatrixPosition(_this.matrixWorld);_this.cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);_this.rotationMatrix.extractRotation(_this.matrixWorld);_this.normal.set(0,0,1);_this.normal.applyMatrix4(_this.rotationMatrix);_this.view.subVectors(_this.mirrorWorldPosition,_this.cameraWorldPosition);// Avoid rendering when mirror is facing away
if(_this.view.dot(_this.normal)>0)return;_this.view.reflect(_this.normal).negate();_this.view.add(_this.mirrorWorldPosition);_this.rotationMatrix.extractRotation(camera.matrixWorld);_this.lookAtPosition.set(0,0,-1);_this.lookAtPosition.applyMatrix4(_this.rotationMatrix);_this.lookAtPosition.add(_this.cameraWorldPosition);_this.target.subVectors(_this.mirrorWorldPosition,_this.lookAtPosition);_this.target.reflect(_this.normal).negate();_this.target.add(_this.mirrorWorldPosition);_this.mirrorCamera.position.copy(_this.view);_this.mirrorCamera.up.set(0,1,0);_this.mirrorCamera.up.applyMatrix4(_this.rotationMatrix);_this.mirrorCamera.up.reflect(_this.normal);_this.mirrorCamera.lookAt(_this.target);_this.mirrorCamera.far=camera.far;// Used in WebGLBackground
_this.mirrorCamera.updateMatrixWorld();_this.mirrorCamera.projectionMatrix.copy(camera.projectionMatrix);// Update the texture matrix
_this.textureMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);_this.textureMatrix.multiply(_this.mirrorCamera.projectionMatrix);_this.textureMatrix.multiply(_this.mirrorCamera.matrixWorldInverse);// Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html
// Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf
_this.mirrorPlane.setFromNormalAndCoplanarPoint(_this.normal,_this.mirrorWorldPosition);_this.mirrorPlane.applyMatrix4(_this.mirrorCamera.matrixWorldInverse);_this.clipPlane.set(_this.mirrorPlane.normal.x,_this.mirrorPlane.normal.y,_this.mirrorPlane.normal.z,_this.mirrorPlane.constant);var projectionMatrix=_this.mirrorCamera.projectionMatrix;_this.q.x=(window.Math.sign(_this.clipPlane.x)+projectionMatrix.elements[8])/projectionMatrix.elements[0];_this.q.y=(window.Math.sign(_this.clipPlane.y)+projectionMatrix.elements[9])/projectionMatrix.elements[5];_this.q.z=-1.0;_this.q.w=(1.0+projectionMatrix.elements[10])/projectionMatrix.elements[14];// Calculate the scaled plane vector
_this.clipPlane.multiplyScalar(2.0/_this.clipPlane.dot(_this.q));// Replacing the third row of the projection matrix
projectionMatrix.elements[2]=_this.clipPlane.x;projectionMatrix.elements[6]=_this.clipPlane.y;projectionMatrix.elements[10]=_this.clipPlane.z+1.0-_this.clipBias;projectionMatrix.elements[14]=_this.clipPlane.w;_this.eye.setFromMatrixPosition(camera.matrixWorld);//
var currentRenderTarget=renderer.getRenderTarget();var currentVrEnabled=renderer.vr.enabled;var currentShadowAutoUpdate=renderer.shadowMap.autoUpdate;_this.visible=false;renderer.vr.enabled=false;// Avoid camera modification and recursion
renderer.shadowMap.autoUpdate=false;// Avoid re-computing shadows
renderer.render(scene,_this.mirrorCamera,_this.renderTarget,true);_this.visible=true;renderer.vr.enabled=currentVrEnabled;renderer.shadowMap.autoUpdate=currentShadowAutoUpdate;renderer.setRenderTarget(currentRenderTarget);});options=options||{};var textureWidth=options.textureWidth!==undefined?options.textureWidth:512;var textureHeight=options.textureHeight!==undefined?options.textureHeight:512;_this.clipBias=options.clipBias!==undefined?options.clipBias:0.0;var alpha=options.alpha!==undefined?options.alpha:1.0;var time=options.time!==undefined?options.time:0.0;var normalSampler=options.waterNormals!==undefined?options.waterNormals:null;var sunDirection=options.sunDirection!==undefined?options.sunDirection:new Vector3$1(0.70707,0.70707,0.0);var sunColor=new Color(options.sunColor!==undefined?options.sunColor:0xffffff);var waterColor=new Color(options.waterColor!==undefined?options.waterColor:0x7F7F7F);_this.eye=options.eye!==undefined?options.eye:new Vector3$1(0,0,0);var distortionScale=options.distortionScale!==undefined?options.distortionScale:20.0;var side=options.side!==undefined?options.side:FrontSide;var fog=options.fog!==undefined?options.fog:false;_this.mirrorPlane=new Plane();_this.normal=new Vector3$1();_this.mirrorWorldPosition=new Vector3$1();_this.cameraWorldPosition=new Vector3$1();_this.rotationMatrix=new Matrix4();_this.lookAtPosition=new Vector3$1(0,0,-1);_this.clipPlane=new Vector4();_this.view=new Vector3$1();_this.target=new Vector3$1();_this.q=new Vector4();_this.textureMatrix=new Matrix4();_this.mirrorCamera=new PerspectiveCamera();var parameters={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBFormat,stencilBuffer:false};_this.renderTarget=new WebGLRenderTarget(textureWidth,textureHeight,parameters);if(!MathUtils.isPowerOfTwo(textureWidth)||!MathUtils.isPowerOfTwo(textureHeight)){_this.renderTarget.texture.generateMipmaps=false;}_this.material=new ShaderMaterial({fragmentShader:mirrorShader.fragmentShader,vertexShader:mirrorShader.vertexShader,uniforms:UniformsUtils.clone(mirrorShader.uniforms),transparent:true,lights:true,side:side,fog:fog});_this.material.uniforms.mirrorSampler.value=_this.renderTarget.texture;_this.material.uniforms.textureMatrix.value=_this.textureMatrix;_this.material.uniforms.alpha.value=alpha;_this.material.uniforms.time.value=time;_this.material.uniforms.normalSampler.value=normalSampler;_this.material.uniforms.sunColor.value=sunColor;_this.material.uniforms.waterColor.value=waterColor;_this.material.uniforms.sunDirection.value=sunDirection;_this.material.uniforms.distortionScale.value=distortionScale;_this.material.uniforms.eye.value=_this.eye;return _this;}return WaterShader;}(Mesh);var Water=function Water(options){var _this2=this;_classCallCheck(this,Water);_defineProperty(this,"render",function(){_this2.water.material.uniforms.time.value+=1.0/60.0;});var waterNormals=options.texture||Images$1.get(options.textureNormalName||'waterNormal');waterNormals.wrapS=waterNormals.wrapT=RepeatWrapping$1;var width=options.width||512,height=options.height||512;var geometry=new PlaneBufferGeometry(width*500,height*500);this.water=new WaterShader(geometry,{textureWidth:options.textureWidth||512,textureHeight:options.textureHeight||512,waterNormals:waterNormals,alpha:options.alpha||1.0,sunDirection:new Vector3$1(-0.5773502691896258,0.5773502691896258,-0.5773502691896258),sunColor:0xffffff,waterColor:0x001e0f,distortionScale:options.distortionScale||50.0,fog:Scene$2.scene.fog!==undefined});this.water.rotation.x=-window.Math.PI/2;Scene$2.add(this.water,this);};var SkyShader=/*#__PURE__*/function(){function SkyShader(){_classCallCheck(this,SkyShader);}_createClass(SkyShader,null,[{key:"uniforms",value:function uniforms(){return{luminance:{value:1},turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:0.005},mieDirectionalG:{value:0.8},sunPosition:{value:new Vector3$1()}};}},{key:"vertexShader",value:function vertexShader(){return['uniform vec3 sunPosition;','uniform float rayleigh;','uniform float turbidity;','uniform float mieCoefficient;','varying vec3 vWorldPosition;','varying vec3 vSunDirection;','varying float vSunfade;','varying vec3 vBetaR;','varying vec3 vBetaM;','varying float vSunE;','const vec3 up = vec3( 0.0, 1.0, 0.0 );',// constants for atmospheric scattering
'const float e = 2.71828182845904523536028747135266249775724709369995957;','const float pi = 3.141592653589793238462643383279502884197169;',// wavelength of used primaries, according to preetham
'const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );',// this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:
// (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))
'const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );',// mie stuff
// K coefficient for the primaries
'const float v = 4.0;','const vec3 K = vec3( 0.686, 0.678, 0.666 );',// MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K
'const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );',// earth shadow hack
// cutoffAngle = pi / 1.95;
'const float cutoffAngle = 1.6110731556870734;','const float steepness = 1.5;','const float EE = 1000.0;','float sunIntensity( float zenithAngleCos ) {','    zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );','    return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );','}','vec3 totalMie( float T ) {','    float c = ( 0.2 * T ) * 10E-18;','    return 0.434 * c * MieConst;','}','void main() {','    vec4 worldPosition = modelMatrix * vec4( position, 1.0 );','    vWorldPosition = worldPosition.xyz;','    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );','    gl_Position.z = gl_Position.w;',// set z to camera.far
'    vSunDirection = normalize( sunPosition );','    vSunE = sunIntensity( dot( vSunDirection, up ) );','    vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );','    float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );',// extinction (absorbtion + out scattering)
// rayleigh coefficients
'    vBetaR = totalRayleigh * rayleighCoefficient;',// mie coefficients
'    vBetaM = totalMie( turbidity ) * mieCoefficient;','}'].join('\n');}},{key:"fragmentShader",value:function fragmentShader(){return['varying vec3 vWorldPosition;','varying vec3 vSunDirection;','varying float vSunfade;','varying vec3 vBetaR;','varying vec3 vBetaM;','varying float vSunE;','uniform float luminance;','uniform float mieDirectionalG;','const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );',// constants for atmospheric scattering
'const float pi = 3.141592653589793238462643383279502884197169;','const float n = 1.0003;',// refractive index of air
'const float N = 2.545E25;',// number of molecules per unit volume for air at
// 288.15K and 1013mb (sea level -45 celsius)
// optical length at zenith for molecules
'const float rayleighZenithLength = 8.4E3;','const float mieZenithLength = 1.25E3;','const vec3 up = vec3( 0.0, 1.0, 0.0 );',// 66 arc seconds -> degrees, and the cosine of that
'const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;',// 3.0 / ( 16.0 * pi )
'const float THREE_OVER_SIXTEENPI = 0.05968310365946075;',// 1.0 / ( 4.0 * pi )
'const float ONE_OVER_FOURPI = 0.07957747154594767;','float rayleighPhase( float cosTheta ) {','    return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );','}','float hgPhase( float cosTheta, float g ) {','    float g2 = pow( g, 2.0 );','    float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );','    return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );','}',// Filmic ToneMapping http://filmicgames.com/archives/75
'const float A = 0.15;','const float B = 0.50;','const float C = 0.10;','const float D = 0.20;','const float E = 0.02;','const float F = 0.30;','const float whiteScale = 1.0748724675633854;',// 1.0 / Uncharted2Tonemap(1000.0)
'vec3 Uncharted2Tonemap( vec3 x ) {','    return ( ( x * ( A * x + C * B ) + D * E ) / ( x * ( A * x + B ) + D * F ) ) - E / F;','}','void main() {',// optical length
// cutoff angle at 90 to avoid singularity in next formula.
'    float zenithAngle = acos( max( 0.0, dot( up, normalize( vWorldPosition - cameraPos ) ) ) );','    float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );','    float sR = rayleighZenithLength * inverse;','    float sM = mieZenithLength * inverse;',// combined extinction factor
'    vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );',// in scattering
'    float cosTheta = dot( normalize( vWorldPosition - cameraPos ), vSunDirection );','    float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );','    vec3 betaRTheta = vBetaR * rPhase;','    float mPhase = hgPhase( cosTheta, mieDirectionalG );','    vec3 betaMTheta = vBetaM * mPhase;','    vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );','    Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );',// nightsky
'    vec3 direction = normalize( vWorldPosition - cameraPos );','    float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]','    float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]','    vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );','    vec3 L0 = vec3( 0.1 ) * Fex;',// composition + solar disc
'    float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );','    L0 += ( vSunE * 19000.0 * Fex ) * sundisk;','    vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );','    vec3 curr = Uncharted2Tonemap( ( log2( 2.0 / pow( luminance, 4.0 ) ) ) * texColor );','    vec3 color = curr * whiteScale;','    vec3 retColor = pow( color, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );','    gl_FragColor = vec4( retColor, 1.0 );','}'].join('\n');}}]);return SkyShader;}();var Sky=/*#__PURE__*/function(){function Sky(options){_classCallCheck(this,Sky);var material=new ShaderMaterial({fragmentShader:SkyShader.fragmentShader(),vertexShader:SkyShader.vertexShader(),uniforms:UniformsUtils.clone(SkyShader.uniforms()),side:BackSide});this.position=new Vector3$1(0,0,0);this.body=new Mesh(new BoxBufferGeometry(1,1,1),material);Scene$2.add(this.body,this);}_createClass(Sky,[{key:"turbidity",value:function turbidity(value){this.body.material.uniforms.turbidity.value=value;}},{key:"rayleigh",value:function rayleigh(value){this.body.material.uniforms.rayleigh.value=value;}},{key:"luminance",value:function luminance(value){this.body.material.uniforms.luminance.value=value;}},{key:"mieCoefficient",value:function mieCoefficient(value){this.body.material.uniforms.mieCoefficient.value=value;}},{key:"mieDirectionalG",value:function mieDirectionalG(value){this.body.material.uniforms.mieDirectionalG.value=value;}},{key:"sun",value:function sun(inclination,azimuth,distance){var theta=Math.PI*(inclination-0.5);var phi=2*Math.PI*(azimuth-0.5);var x=distance*Math.cos(phi);var y=distance*Math.sin(phi)*Math.sin(theta);var z=distance*Math.sin(phi)*Math.cos(theta);this.position.set(x,y,z);this.body.material.uniforms.sunPosition.value.copy(this.position);}},{key:"scale",value:function scale(amount){this.body.scale.setScalar(amount);}},{key:"render",value:function render(){}}]);return Sky;}();var Shaders=/*#__PURE__*/function(){function Shaders(){var _this=this;_classCallCheck(this,Shaders);_defineProperty(this,"get",function(id){return _this.map[id]||false;});this.map={Atmosphere:Atmosphere,Mirror:Mirror,Ocean:Ocean,OceanShaders:OceanShaders,Skybox:Skybox,Sky:Sky,Water:Water};this.shaders={};this.numShaders=0;this.shadersLoaded=0;}_createClass(Shaders,[{key:"create",value:function create(name,params){this.map[name]={name:name,vertex:params.vertex||"",fragment:params.fragment||"",options:params.options||{},attributes:params.attributes||{},uniforms:params.uniforms||{},instance:params.instance||false};}},{key:"add",value:function add(name,shader){this.map[name]=shader;}}]);return Shaders;}();var Shaders$1=new Shaders();var Shader=function Shader(name,attributes,uniforms,options){_classCallCheck(this,Shader);this.instance=Shaders$1.get(name);if(!this.instance){this.name=this.shader.name;this.vertex=this.shader.vertex;this.fragment=this.shader.fragment;this.attributes=attributes?attributes:this.shader.attributes;this.uniforms=uniforms?uniforms:this.shader.uniforms;//creating shader options
var object={'attributes':this.attributes,'uniforms':this.uniforms,'vertexShader':this.shader.vertex,'fragmentShader':this.shader.fragment};//storing user options in shader options
var opt=options?options:this.shader.options;for(o in opt){object[o]=opt[o];}//creating the actual material
this.material=new ShaderMaterial(object);}else{this.instance=this.shader.instance;}};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../examples/physics/node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../examples/physics/node_modules/node-libs-browser/node_modules/process/browser.js */ "./node_modules/node-libs-browser/node_modules/process/browser.js"), __webpack_require__(/*! ./../examples/physics/node_modules/webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!*********************************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!**************************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/createClass.js":
/*!***********************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/createClass.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/defineProperty.js":
/*!**************************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!**************************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/inherits.js":
/*!********************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/inherits.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!*************************************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js");

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "../../node_modules/@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!**************************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/typeof.js":
/*!******************************************************************************************!*\
  !*** /Users/marcostagni/dev/personal/Mage/node_modules/@babel/runtime/helpers/typeof.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/process/browser.js":
/*!************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/process/browser.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dist_mage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../dist/mage */ "../../dist/mage.js");
/* harmony import */ var _level__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./level */ "./src/level/index.js");


var config = {
  screen: {
    h: window ? window.innerHeight : 800,
    w: window ? window.innerWidth : 600,
    ratio: window ? window.innerWidth / window.innerHeight : 600 / 800,
    frameRate: 60,
    alpha: true
  },
  lights: {
    shadows: true
  },
  physics: {
    enabled: true,
    path: 'http://localhost:8085/dist/ammo.js'
  },
  tween: {
    enabled: false
  },
  camera: {
    fov: 75,
    near: 0.1,
    far: 3000000
  }
};
window.addEventListener('load', function () {
  _dist_mage__WEBPACK_IMPORTED_MODULE_0__["store"].createStore({}, {}, true);
  _dist_mage__WEBPACK_IMPORTED_MODULE_0__["Router"].on('/', _level__WEBPACK_IMPORTED_MODULE_1__["default"]);
  _dist_mage__WEBPACK_IMPORTED_MODULE_0__["Router"].start(config, {});
});

/***/ }),

/***/ "./src/level/index.js":
/*!****************************!*\
  !*** ./src/level/index.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Intro; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _dist_mage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../dist/mage */ "../../dist/mage.js");






function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var Intro = /*#__PURE__*/function (_Level) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(Intro, _Level);

  var _super = _createSuper(Intro);

  function Intro() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Intro);

    return _super.apply(this, arguments);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Intro, [{
    key: "onCreate",
    value: function onCreate() {
      _dist_mage__WEBPACK_IMPORTED_MODULE_5__["Controls"].setOrbitControl();
      _dist_mage__WEBPACK_IMPORTED_MODULE_5__["Scene"].getCamera().setPosition({
        y: 15,
        z: 45
      });
      var floor = new _dist_mage__WEBPACK_IMPORTED_MODULE_5__["Box"](50, 1, 50, 0xffffff);
      var cube = new _dist_mage__WEBPACK_IMPORTED_MODULE_5__["Cube"](2, 0xff0000);
      var two = new _dist_mage__WEBPACK_IMPORTED_MODULE_5__["Cube"](2, 0x00ff00);
      var three = new _dist_mage__WEBPACK_IMPORTED_MODULE_5__["Cube"](2, 0x0000ff);
      cube.setPosition({
        y: 15
      });
      two.setPosition({
        y: 4,
        x: 1
      });
      three.setPosition({
        y: 5,
        x: 2,
        z: 1
      });
      floor.enablePhysics({
        mass: 0,
        debug: true
      });
      cube.enablePhysics({
        mass: 1,
        debug: true
      });
      two.enablePhysics({
        mass: 1,
        debug: true
      });
      three.enablePhysics({
        mass: 1,
        debug: true
      });
    }
  }]);

  return Intro;
}(_dist_mage__WEBPACK_IMPORTED_MODULE_5__["Level"]);



/***/ })

/******/ });